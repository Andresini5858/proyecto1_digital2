

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 24 13:20:32 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Version 2.40
    70                           ; Generated 17/11/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F887 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0008                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0088                     	;# 
   144     0089                     	;# 
   145     008C                     	;# 
   146     008D                     	;# 
   147     008E                     	;# 
   148     008F                     	;# 
   149     0090                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0093                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0095                     	;# 
   157     0096                     	;# 
   158     0097                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009A                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     0105                     	;# 
   168     0107                     	;# 
   169     0108                     	;# 
   170     0109                     	;# 
   171     010C                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     0185                     	;# 
   177     0187                     	;# 
   178     0188                     	;# 
   179     0189                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182     0000                     	;# 
   183     0001                     	;# 
   184     0002                     	;# 
   185     0003                     	;# 
   186     0004                     	;# 
   187     0005                     	;# 
   188     0006                     	;# 
   189     0007                     	;# 
   190     0008                     	;# 
   191     0009                     	;# 
   192     000A                     	;# 
   193     000B                     	;# 
   194     000C                     	;# 
   195     000D                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0011                     	;# 
   201     0012                     	;# 
   202     0013                     	;# 
   203     0014                     	;# 
   204     0015                     	;# 
   205     0015                     	;# 
   206     0016                     	;# 
   207     0017                     	;# 
   208     0018                     	;# 
   209     0019                     	;# 
   210     001A                     	;# 
   211     001B                     	;# 
   212     001B                     	;# 
   213     001C                     	;# 
   214     001D                     	;# 
   215     001E                     	;# 
   216     001F                     	;# 
   217     0081                     	;# 
   218     0085                     	;# 
   219     0086                     	;# 
   220     0087                     	;# 
   221     0088                     	;# 
   222     0089                     	;# 
   223     008C                     	;# 
   224     008D                     	;# 
   225     008E                     	;# 
   226     008F                     	;# 
   227     0090                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0093                     	;# 
   232     0093                     	;# 
   233     0094                     	;# 
   234     0095                     	;# 
   235     0096                     	;# 
   236     0097                     	;# 
   237     0098                     	;# 
   238     0099                     	;# 
   239     009A                     	;# 
   240     009B                     	;# 
   241     009C                     	;# 
   242     009D                     	;# 
   243     009E                     	;# 
   244     009F                     	;# 
   245     0105                     	;# 
   246     0107                     	;# 
   247     0108                     	;# 
   248     0109                     	;# 
   249     010C                     	;# 
   250     010C                     	;# 
   251     010D                     	;# 
   252     010E                     	;# 
   253     010F                     	;# 
   254     0185                     	;# 
   255     0187                     	;# 
   256     0188                     	;# 
   257     0189                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     000E                     	;# 
   276     000F                     	;# 
   277     0010                     	;# 
   278     0011                     	;# 
   279     0012                     	;# 
   280     0013                     	;# 
   281     0014                     	;# 
   282     0015                     	;# 
   283     0015                     	;# 
   284     0016                     	;# 
   285     0017                     	;# 
   286     0018                     	;# 
   287     0019                     	;# 
   288     001A                     	;# 
   289     001B                     	;# 
   290     001B                     	;# 
   291     001C                     	;# 
   292     001D                     	;# 
   293     001E                     	;# 
   294     001F                     	;# 
   295     0081                     	;# 
   296     0085                     	;# 
   297     0086                     	;# 
   298     0087                     	;# 
   299     0088                     	;# 
   300     0089                     	;# 
   301     008C                     	;# 
   302     008D                     	;# 
   303     008E                     	;# 
   304     008F                     	;# 
   305     0090                     	;# 
   306     0091                     	;# 
   307     0092                     	;# 
   308     0093                     	;# 
   309     0093                     	;# 
   310     0093                     	;# 
   311     0094                     	;# 
   312     0095                     	;# 
   313     0096                     	;# 
   314     0097                     	;# 
   315     0098                     	;# 
   316     0099                     	;# 
   317     009A                     	;# 
   318     009B                     	;# 
   319     009C                     	;# 
   320     009D                     	;# 
   321     009E                     	;# 
   322     009F                     	;# 
   323     0105                     	;# 
   324     0107                     	;# 
   325     0108                     	;# 
   326     0109                     	;# 
   327     010C                     	;# 
   328     010C                     	;# 
   329     010D                     	;# 
   330     010E                     	;# 
   331     010F                     	;# 
   332     0185                     	;# 
   333     0187                     	;# 
   334     0188                     	;# 
   335     0189                     	;# 
   336     018C                     	;# 
   337     018D                     	;# 
   338     0000                     	;# 
   339     0001                     	;# 
   340     0002                     	;# 
   341     0003                     	;# 
   342     0004                     	;# 
   343     0005                     	;# 
   344     0006                     	;# 
   345     0007                     	;# 
   346     0008                     	;# 
   347     0009                     	;# 
   348     000A                     	;# 
   349     000B                     	;# 
   350     000C                     	;# 
   351     000D                     	;# 
   352     000E                     	;# 
   353     000E                     	;# 
   354     000F                     	;# 
   355     0010                     	;# 
   356     0011                     	;# 
   357     0012                     	;# 
   358     0013                     	;# 
   359     0014                     	;# 
   360     0015                     	;# 
   361     0015                     	;# 
   362     0016                     	;# 
   363     0017                     	;# 
   364     0018                     	;# 
   365     0019                     	;# 
   366     001A                     	;# 
   367     001B                     	;# 
   368     001B                     	;# 
   369     001C                     	;# 
   370     001D                     	;# 
   371     001E                     	;# 
   372     001F                     	;# 
   373     0081                     	;# 
   374     0085                     	;# 
   375     0086                     	;# 
   376     0087                     	;# 
   377     0088                     	;# 
   378     0089                     	;# 
   379     008C                     	;# 
   380     008D                     	;# 
   381     008E                     	;# 
   382     008F                     	;# 
   383     0090                     	;# 
   384     0091                     	;# 
   385     0092                     	;# 
   386     0093                     	;# 
   387     0093                     	;# 
   388     0093                     	;# 
   389     0094                     	;# 
   390     0095                     	;# 
   391     0096                     	;# 
   392     0097                     	;# 
   393     0098                     	;# 
   394     0099                     	;# 
   395     009A                     	;# 
   396     009B                     	;# 
   397     009C                     	;# 
   398     009D                     	;# 
   399     009E                     	;# 
   400     009F                     	;# 
   401     0105                     	;# 
   402     0107                     	;# 
   403     0108                     	;# 
   404     0109                     	;# 
   405     010C                     	;# 
   406     010C                     	;# 
   407     010D                     	;# 
   408     010E                     	;# 
   409     010F                     	;# 
   410     0185                     	;# 
   411     0187                     	;# 
   412     0188                     	;# 
   413     0189                     	;# 
   414     018C                     	;# 
   415     018D                     	;# 
   416                           
   417                           	psect	strings
   418     1000                     __pstrings:
   419     1000                     stringtab:
   420     1000                     __stringtab:
   421                           
   422                           ;	String table - string pointers are 1 byte each
   423     1000  1BFF               	btfsc	btemp+1,7
   424     1001  280A               	ljmp	stringcode
   425     1002  1383               	bcf	3,7
   426     1003  187F               	btfsc	btemp+1,0
   427     1004  1783               	bsf	3,7
   428     1005  0800               	movf	0,w
   429     1006  0A84               	incf	4,f
   430     1007  1903               	skipnz
   431     1008  0AFF               	incf	btemp+1,f
   432     1009  0008               	return
   433     100A                     stringcode:
   434     100A                     stringdir:
   435     100A  3010               	movlw	high stringdir
   436     100B  008A               	movwf	10
   437     100C  0804               	movf	4,w
   438     100D  0A84               	incf	4,f
   439     100E  0782               	addwf	2,f
   440     100F                     __stringbase:
   441     100F  3400               	retlw	0
   442     1010                     __end_of__stringtab:
   443     1010                     _dpowers:
   444     1010  3401               	retlw	1
   445     1011  3400               	retlw	0
   446     1012  340A               	retlw	10
   447     1013  3400               	retlw	0
   448     1014  3464               	retlw	100
   449     1015  3400               	retlw	0
   450     1016  34E8               	retlw	232
   451     1017  3403               	retlw	3
   452     1018  3410               	retlw	16
   453     1019  3427               	retlw	39
   454     101A                     __end_of_dpowers:
   455     0013                     _SSPBUF	set	19
   456     000C                     _PIR1bits	set	12
   457     0014                     _SSPCON	set	20
   458     0008                     _PORTDbits	set	8
   459     0006                     _PORTBbits	set	6
   460     0008                     _PORTD	set	8
   461     0007                     _PORTC	set	7
   462     0006                     _PORTB	set	6
   463     0005                     _PORTA	set	5
   464     0001                     _TMR0	set	1
   465     000B                     _INTCONbits	set	11
   466     0091                     _SSPCON2bits	set	145
   467     0093                     _SSPADD	set	147
   468     0091                     _SSPCON2	set	145
   469     0094                     _SSPSTAT	set	148
   470     0087                     _TRISCbits	set	135
   471     0081                     _OPTION_REGbits	set	129
   472     008F                     _OSCCONbits	set	143
   473     0088                     _TRISD	set	136
   474     0086                     _TRISB	set	134
   475     0189                     _ANSELH	set	393
   476     0188                     _ANSEL	set	392
   477     101A                     STR_2:
   478     101A  3425               	retlw	37	;'%'
   479     101B  3430               	retlw	48	;'0'
   480     101C  3432               	retlw	50	;'2'
   481     101D  3475               	retlw	117	;'u'
   482     101E  343A               	retlw	58	;':'
   483     101F  3425               	retlw	37	;'%'
   484     1020  3430               	retlw	48	;'0'
   485     1021  3432               	retlw	50	;'2'
   486     1022  3475               	retlw	117	;'u'
   487     1023  343A               	retlw	58	;':'
   488     1024  3425               	retlw	37	;'%'
   489     1025  3430               	retlw	48	;'0'
   490     1026  3432               	retlw	50	;'2'
   491     1027  3475               	retlw	117	;'u'
   492     1028  3400               	retlw	0
   493     1029                     STR_1:
   494     1029  3454               	retlw	84	;'T'
   495     102A  343A               	retlw	58	;':'
   496     102B  3400               	retlw	0
   497     1024                     
   498                           	psect	cinit
   499     000F                     start_initialization:	
   500                           ; #config settings
   501                           
   502     000F                     __initialization:
   503                           
   504                           ; Clear objects allocated to COMMON
   505     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   506     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   507     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   508                           
   509                           ; Clear objects allocated to BANK0
   510     0012  1283               	bcf	3,5	;RP0=0, select bank0
   511     0013  1303               	bcf	3,6	;RP1=0, select bank0
   512     0014  01EC               	clrf	__pbssBANK0& (0+127)
   513                           
   514                           ; Clear objects allocated to BANK1
   515     0015  1383               	bcf	3,7	;select IRP bank0
   516     0016  30CB               	movlw	low __pbssBANK1
   517     0017  0084               	movwf	4
   518     0018  30F0               	movlw	low (__pbssBANK1+37)
   519     0019  160A  118A  2088  120A  118A  	fcall	clear_ram0
   520                           
   521                           ; Clear objects allocated to BANK3
   522     001E  1783               	bsf	3,7	;select IRP bank2
   523     001F  3090               	movlw	low __pbssBANK3
   524     0020  0084               	movwf	4
   525     0021  30EE               	movlw	low (__pbssBANK3+94)
   526     0022  160A  118A  2088  120A  118A  	fcall	clear_ram0
   527     0027                     end_of_initialization:	
   528                           ;End of C runtime variable initialization code
   529                           
   530     0027                     __end_of__initialization:
   531     0027  0183               	clrf	3
   532     0028  160A  118A  2EA6   	ljmp	_main	;jump to C main() function
   533                           
   534                           	psect	bssCOMMON
   535     0078                     __pbssCOMMON:
   536     0078                     _contg:
   537     0078                     	ds	1
   538     0079                     _horas:
   539     0079                     	ds	1
   540     007A                     _minutos:
   541     007A                     	ds	1
   542                           
   543                           	psect	bssBANK0
   544     006C                     __pbssBANK0:
   545     006C                     _segundos:
   546     006C                     	ds	1
   547                           
   548                           	psect	bssBANK1
   549     00CB                     __pbssBANK1:
   550     00CB                     _th:
   551     00CB                     	ds	4
   552     00CF                     _hum2:
   553     00CF                     	ds	4
   554     00D3                     _hum1:
   555     00D3                     	ds	4
   556     00D7                     _tmp2:
   557     00D7                     	ds	4
   558     00DB                     _tmp1:
   559     00DB                     	ds	4
   560     00DF                     _temporal:
   561     00DF                     	ds	4
   562     00E3                     _contador:
   563     00E3                     	ds	1
   564     00E4                     _cont:
   565     00E4                     	ds	1
   566     00E5                     _contb:
   567     00E5                     	ds	1
   568     00E6                     _contr:
   569     00E6                     	ds	1
   570     00E7                     _distancia:
   571     00E7                     	ds	1
   572     00E8                     _cent2:
   573     00E8                     	ds	1
   574     00E9                     _deci2:
   575     00E9                     	ds	1
   576     00EA                     _uni2:
   577     00EA                     	ds	1
   578     00EB                     _dec2:
   579     00EB                     	ds	1
   580     00EC                     _estado:
   581     00EC                     	ds	1
   582     00ED                     _ano:
   583     00ED                     	ds	1
   584     00EE                     _mes:
   585     00EE                     	ds	1
   586     00EF                     _dia:
   587     00EF                     	ds	1
   588                           
   589                           	psect	bssBANK3
   590     0190                     __pbssBANK3:
   591     0190                     _humedad:
   592     0190                     	ds	4
   593     0194                     _h:
   594     0194                     	ds	4
   595     0198                     _t:
   596     0198                     	ds	4
   597     019C                     _tmp3:
   598     019C                     	ds	4
   599     01A0                     _buffer2:
   600     01A0                     	ds	48
   601     01D0                     _buffer:
   602     01D0                     	ds	30
   603                           
   604                           	psect	clrtext
   605     1088                     clear_ram0:	
   606                           ;	Called with FSR containing the base address, and
   607                           ;	W with the last address+1
   608                           
   609     1088  0064               	clrwdt	;clear the watchdog before getting into this loop
   610     1089                     clrloop0:
   611     1089  0180               	clrf	0	;clear RAM location pointed to by FSR
   612     108A  0A84               	incf	4,f	;increment pointer
   613     108B  0604               	xorwf	4,w	;XOR with final address
   614     108C  1903               	btfsc	3,2	;have we reached the end yet?
   615     108D  3400               	retlw	0	;all done for this memory range, return
   616     108E  0604               	xorwf	4,w	;XOR again to restore value
   617     108F  2889               	goto	clrloop0	;do the next byte
   618                           
   619                           	psect	cstackBANK2
   620     0110                     __pcstackBANK2:
   621     0110                     ??_main:
   622                           
   623                           ; 1 bytes @ 0x0
   624     0110                     	ds	6
   625                           
   626                           	psect	cstackBANK1
   627     00A0                     __pcstackBANK1:
   628     00A0                     ?_floattostr:
   629     00A0                     floattostr@numero_:	
   630                           ; 1 bytes @ 0x0
   631                           
   632                           
   633                           ; 4 bytes @ 0x0
   634     00A0                     	ds	4
   635     00A4                     floattostr@cadena_:
   636                           
   637                           ; 1 bytes @ 0x4
   638     00A4                     	ds	1
   639     00A5                     floattostr@decimales_:
   640                           
   641                           ; 1 bytes @ 0x5
   642     00A5                     	ds	1
   643     00A6                     floattostr@tempo_int:
   644                           
   645                           ; 2 bytes @ 0x6
   646     00A6                     	ds	2
   647     00A8                     floattostr@tempo_float:
   648                           
   649                           ; 4 bytes @ 0x8
   650     00A8                     	ds	4
   651     00AC                     floattostr@largo_n:
   652                           
   653                           ; 2 bytes @ 0xC
   654     00AC                     	ds	2
   655     00AE                     floattostr@cont_for:
   656                           
   657                           ; 2 bytes @ 0xE
   658     00AE                     	ds	2
   659     00B0                     floattostr@largo_entera:
   660                           
   661                           ; 2 bytes @ 0x10
   662     00B0                     	ds	2
   663     00B2                     ??_AHT10_Read:
   664                           
   665                           ; 1 bytes @ 0x12
   666     00B2                     	ds	14
   667     00C0                     AHT10_Read@data:
   668                           
   669                           ; 7 bytes @ 0x20
   670     00C0                     	ds	7
   671     00C7                     AHT10_Read@temperatura:
   672                           
   673                           ; 4 bytes @ 0x27
   674     00C7                     	ds	4
   675                           
   676                           	psect	cstackCOMMON
   677     0070                     __pcstackCOMMON:
   678     0070                     ?_isdigit:
   679     0070                     ?_setup:	
   680                           ; 1 bit 
   681                           
   682     0070                     ?_Lcd_Init:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_Lcd_Clear:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_AHT10_Soft_Reset:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_AHT10_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_Set_sec:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_Set_min:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ?_Set_hour:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0070                     ?_Set_day:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     ?_Set_month:	
   707                           ; 1 bytes @ 0x0
   708                           
   709     0070                     ?_Set_year:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0070                     ?_AHT10_Read:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?_Slave1_Total:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_I2C_Init_Master:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ?_I2C_Start:	
   722                           ; 1 bytes @ 0x0
   723                           
   724     0070                     ?_I2C_Restart:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     ?_I2C_Read:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ?_I2C_Nack:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ?_I2C_Stop:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_Bcd_to_Dec:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_Dec_to_Bcd:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_I2C_Ack:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_main:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_isr:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ??_isr:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_Read:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Port:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Cmd:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_Lcd_Write_Char:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ?_I2C_Write:	
   767                           ; 1 bytes @ 0x0
   768                           
   769                           
   770                           ; 2 bytes @ 0x0
   771     0070                     	ds	3
   772     0073                     ??_I2C_Init_Master:
   773     0073                     ??_I2C_Start:	
   774                           ; 1 bytes @ 0x3
   775                           
   776     0073                     ??_I2C_Write:	
   777                           ; 1 bytes @ 0x3
   778                           
   779     0073                     ??_I2C_Restart:	
   780                           ; 1 bytes @ 0x3
   781                           
   782     0073                     ??_I2C_Read:	
   783                           ; 1 bytes @ 0x3
   784                           
   785     0073                     ??_I2C_Nack:	
   786                           ; 1 bytes @ 0x3
   787                           
   788     0073                     ??_I2C_Stop:	
   789                           ; 1 bytes @ 0x3
   790                           
   791     0073                     ??_Dec_to_Bcd:	
   792                           ; 1 bytes @ 0x3
   793                           
   794     0073                     ??_I2C_Ack:	
   795                           ; 1 bytes @ 0x3
   796                           
   797     0073                     ??_isdigit:	
   798                           ; 1 bytes @ 0x3
   799                           
   800     0073                     ??_Lcd_Port:	
   801                           ; 1 bytes @ 0x3
   802                           
   803     0073                     ?___bmul:	
   804                           ; 1 bytes @ 0x3
   805                           
   806     0073                     ??___flge:	
   807                           ; 1 bytes @ 0x3
   808                           
   809     0073                     ??___fldiv:	
   810                           ; 1 bytes @ 0x3
   811                           
   812     0073                     ?__Umul8_16:	
   813                           ; 1 bytes @ 0x3
   814                           
   815     0073                     ?___wmul:	
   816                           ; 2 bytes @ 0x3
   817                           
   818     0073                     ?___lwdiv:	
   819                           ; 2 bytes @ 0x3
   820                           
   821     0073                     ?___flneg:	
   822                           ; 2 bytes @ 0x3
   823                           
   824     0073                     ?___fltol:	
   825                           ; 4 bytes @ 0x3
   826                           
   827     0073                     ?___xxtofl:	
   828                           ; 4 bytes @ 0x3
   829                           
   830     0073                     Dec_to_Bcd@dec_number:	
   831                           ; 4 bytes @ 0x3
   832                           
   833     0073                     Lcd_Port@a:	
   834                           ; 1 bytes @ 0x3
   835                           
   836     0073                     I2C_Init_Master@sp_i2c:	
   837                           ; 1 bytes @ 0x3
   838                           
   839     0073                     I2C_Write@data:	
   840                           ; 1 bytes @ 0x3
   841                           
   842     0073                     ___bmul@multiplicand:	
   843                           ; 1 bytes @ 0x3
   844                           
   845     0073                     __Umul8_16@multiplicand:	
   846                           ; 1 bytes @ 0x3
   847                           
   848     0073                     _isdigit$1019:	
   849                           ; 1 bytes @ 0x3
   850                           
   851     0073                     ___wmul@multiplier:	
   852                           ; 1 bytes @ 0x3
   853                           
   854     0073                     ___lwdiv@divisor:	
   855                           ; 2 bytes @ 0x3
   856                           
   857     0073                     ___flneg@f1:	
   858                           ; 2 bytes @ 0x3
   859                           
   860     0073                     ___fltol@f1:	
   861                           ; 4 bytes @ 0x3
   862                           
   863     0073                     ___xxtofl@val:	
   864                           ; 4 bytes @ 0x3
   865                           
   866                           
   867                           ; 4 bytes @ 0x3
   868     0073                     	ds	1
   869     0074                     ??_setup:
   870     0074                     ??_AHT10_Soft_Reset:	
   871                           ; 1 bytes @ 0x4
   872                           
   873     0074                     ??_AHT10_Init:	
   874                           ; 1 bytes @ 0x4
   875                           
   876     0074                     ??_Slave1_Total:	
   877                           ; 1 bytes @ 0x4
   878                           
   879     0074                     ??_Read:	
   880                           ; 1 bytes @ 0x4
   881                           
   882     0074                     ??_Lcd_Cmd:	
   883                           ; 1 bytes @ 0x4
   884                           
   885     0074                     ??_Lcd_Write_Char:	
   886                           ; 1 bytes @ 0x4
   887                           
   888     0074                     ??___bmul:	
   889                           ; 1 bytes @ 0x4
   890                           
   891     0074                     Dec_to_Bcd@bcd_number:	
   892                           ; 1 bytes @ 0x4
   893                           
   894     0074                     isdigit@c:	
   895                           ; 1 bytes @ 0x4
   896                           
   897                           
   898                           ; 1 bytes @ 0x4
   899     0074                     	ds	1
   900     0075                     ??_Set_sec:
   901     0075                     ??_Set_min:	
   902                           ; 1 bytes @ 0x5
   903                           
   904     0075                     ??_Set_hour:	
   905                           ; 1 bytes @ 0x5
   906                           
   907     0075                     ??_Set_day:	
   908                           ; 1 bytes @ 0x5
   909                           
   910     0075                     ??_Set_month:	
   911                           ; 1 bytes @ 0x5
   912                           
   913     0075                     ??_Set_year:	
   914                           ; 1 bytes @ 0x5
   915                           
   916     0075                     ??__Umul8_16:	
   917                           ; 1 bytes @ 0x5
   918                           
   919     0075                     Read@address:	
   920                           ; 1 bytes @ 0x5
   921                           
   922     0075                     Set_sec@sec:	
   923                           ; 1 bytes @ 0x5
   924                           
   925     0075                     Set_min@min:	
   926                           ; 1 bytes @ 0x5
   927                           
   928     0075                     Set_hour@hour:	
   929                           ; 1 bytes @ 0x5
   930                           
   931     0075                     Set_day@day:	
   932                           ; 1 bytes @ 0x5
   933                           
   934     0075                     Set_month@month:	
   935                           ; 1 bytes @ 0x5
   936                           
   937     0075                     Set_year@year:	
   938                           ; 1 bytes @ 0x5
   939                           
   940     0075                     Lcd_Write_Char@temp:	
   941                           ; 1 bytes @ 0x5
   942                           
   943     0075                     ___bmul@product:	
   944                           ; 1 bytes @ 0x5
   945                           
   946     0075                     ___wmul@multiplicand:	
   947                           ; 1 bytes @ 0x5
   948                           
   949     0075                     ___lwdiv@dividend:	
   950                           ; 2 bytes @ 0x5
   951                           
   952                           
   953                           ; 2 bytes @ 0x5
   954     0075                     	ds	1
   955     0076                     Read@dato:
   956     0076                     AHT10_Init@status:	
   957                           ; 1 bytes @ 0x6
   958                           
   959     0076                     Lcd_Cmd@a:	
   960                           ; 1 bytes @ 0x6
   961                           
   962     0076                     Lcd_Write_Char@y:	
   963                           ; 1 bytes @ 0x6
   964                           
   965     0076                     ___bmul@multiplier:	
   966                           ; 1 bytes @ 0x6
   967                           
   968                           
   969                           ; 1 bytes @ 0x6
   970     0076                     	ds	1
   971     0077                     ??_Lcd_Clear:
   972     0077                     ?_Lcd_Set_Cursor:	
   973                           ; 1 bytes @ 0x7
   974                           
   975     0077                     ??_Read_Time:	
   976                           ; 1 bytes @ 0x7
   977                           
   978     0077                     ??_Read_Fecha:	
   979                           ; 1 bytes @ 0x7
   980                           
   981     0077                     ??___wmul:	
   982                           ; 1 bytes @ 0x7
   983                           
   984     0077                     ??___flneg:	
   985                           ; 1 bytes @ 0x7
   986                           
   987     0077                     ??___lwdiv:	
   988                           ; 1 bytes @ 0x7
   989                           
   990     0077                     Read_Time@s:	
   991                           ; 1 bytes @ 0x7
   992                           
   993     0077                     Read_Fecha@d:	
   994                           ; 1 bytes @ 0x7
   995                           
   996     0077                     Lcd_Set_Cursor@b:	
   997                           ; 1 bytes @ 0x7
   998                           
   999     0077                     Lcd_Write_Char@a:	
  1000                           ; 1 bytes @ 0x7
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x7
  1004     0077                     	ds	1
  1005     0078                     ??___flsub:
  1006                           
  1007                           	psect	cstackBANK0
  1008     0020                     __pcstackBANK0:	
  1009                           ; 1 bytes @ 0x8
  1010                           
  1011     0020                     ?___flge:
  1012     0020                     ??_Lcd_Init:	
  1013                           ; 1 bit 
  1014                           
  1015     0020                     ??_Lcd_Set_Cursor:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0020                     ?_Lcd_Write_String:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0020                     ??_Bcd_to_Dec:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     0020                     ??___fltol:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0020                     ??___xxtofl:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0020                     ?___fldiv:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0020                     ___lwdiv@counter:	
  1034                           ; 4 bytes @ 0x0
  1035                           
  1036     0020                     Lcd_Write_String@a:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0020                     ___wmul@product:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042     0020                     __Umul8_16@product:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045     0020                     ___flge@ff1:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048     0020                     ___fldiv@a:	
  1049                           ; 4 bytes @ 0x0
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x0
  1053     0020                     	ds	1
  1054     0021                     Lcd_Set_Cursor@a:
  1055     0021                     ___lwdiv@quotient:	
  1056                           ; 1 bytes @ 0x1
  1057                           
  1058                           
  1059                           ; 2 bytes @ 0x1
  1060     0021                     	ds	1
  1061     0022                     ??_Lcd_Write_String:
  1062     0022                     Bcd_to_Dec@dec:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065     0022                     Lcd_Set_Cursor@z:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068     0022                     __Umul8_16@word_mpld:	
  1069                           ; 1 bytes @ 0x2
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x2
  1073     0022                     	ds	1
  1074     0023                     ?___lwmod:
  1075     0023                     Bcd_to_Dec@bcd:	
  1076                           ; 2 bytes @ 0x3
  1077                           
  1078     0023                     Lcd_Set_Cursor@y:	
  1079                           ; 1 bytes @ 0x3
  1080                           
  1081     0023                     ___lwmod@divisor:	
  1082                           ; 1 bytes @ 0x3
  1083                           
  1084                           
  1085                           ; 2 bytes @ 0x3
  1086     0023                     	ds	1
  1087     0024                     ?_Read_Time:
  1088     0024                     ?_Read_Fecha:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091     0024                     Read_Time@m:	
  1092                           ; 1 bytes @ 0x4
  1093                           
  1094     0024                     Read_Fecha@mo:	
  1095                           ; 1 bytes @ 0x4
  1096                           
  1097     0024                     Lcd_Set_Cursor@temp:	
  1098                           ; 1 bytes @ 0x4
  1099                           
  1100     0024                     ___fltol@sign1:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103     0024                     __Umul8_16@multiplier:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106     0024                     ___xxtofl@sign:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109     0024                     ___flge@ff2:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112     0024                     ___fldiv@b:	
  1113                           ; 4 bytes @ 0x4
  1114                           
  1115                           
  1116                           ; 4 bytes @ 0x4
  1117     0024                     	ds	1
  1118     0025                     Read_Time@h:
  1119     0025                     Read_Fecha@y:	
  1120                           ; 1 bytes @ 0x5
  1121                           
  1122     0025                     ___fltol@exp1:	
  1123                           ; 1 bytes @ 0x5
  1124                           
  1125     0025                     ___xxtofl@exp:	
  1126                           ; 1 bytes @ 0x5
  1127                           
  1128     0025                     Lcd_Write_String@i:	
  1129                           ; 1 bytes @ 0x5
  1130                           
  1131     0025                     ___lwmod@dividend:	
  1132                           ; 2 bytes @ 0x5
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x5
  1136     0025                     	ds	1
  1137     0026                     ___xxtofl@arg:
  1138                           
  1139                           ; 4 bytes @ 0x6
  1140     0026                     	ds	1
  1141     0027                     ??___lwmod:
  1142                           
  1143                           ; 1 bytes @ 0x7
  1144     0027                     	ds	1
  1145     0028                     ___lwmod@counter:
  1146     0028                     ___fldiv@rem:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x8
  1151     0028                     	ds	1
  1152     0029                     ?_sprintf:
  1153     0029                     sprintf@f:	
  1154                           ; 2 bytes @ 0x9
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0x9
  1158     0029                     	ds	3
  1159     002C                     ___fldiv@sign:
  1160                           
  1161                           ; 1 bytes @ 0xC
  1162     002C                     	ds	1
  1163     002D                     ___fldiv@new_exp:
  1164                           
  1165                           ; 2 bytes @ 0xD
  1166     002D                     	ds	2
  1167     002F                     ___fldiv@grs:
  1168                           
  1169                           ; 4 bytes @ 0xF
  1170     002F                     	ds	1
  1171     0030                     ??_sprintf:
  1172                           
  1173                           ; 1 bytes @ 0x10
  1174     0030                     	ds	3
  1175     0033                     sprintf@ap:
  1176     0033                     ___fldiv@bexp:	
  1177                           ; 1 bytes @ 0x13
  1178                           
  1179                           
  1180                           ; 1 bytes @ 0x13
  1181     0033                     	ds	1
  1182     0034                     sprintf@flag:
  1183     0034                     ___fldiv@aexp:	
  1184                           ; 1 bytes @ 0x14
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x14
  1188     0034                     	ds	1
  1189     0035                     ?___flmul:
  1190     0035                     sprintf@val:	
  1191                           ; 4 bytes @ 0x15
  1192                           
  1193     0035                     ___flmul@b:	
  1194                           ; 2 bytes @ 0x15
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0x15
  1198     0035                     	ds	2
  1199     0037                     sprintf@prec:
  1200                           
  1201                           ; 1 bytes @ 0x17
  1202     0037                     	ds	1
  1203     0038                     sprintf@width:
  1204                           
  1205                           ; 2 bytes @ 0x18
  1206     0038                     	ds	1
  1207     0039                     ___flmul@a:
  1208                           
  1209                           ; 4 bytes @ 0x19
  1210     0039                     	ds	1
  1211     003A                     sprintf@sp:
  1212                           
  1213                           ; 1 bytes @ 0x1A
  1214     003A                     	ds	1
  1215     003B                     sprintf@c:
  1216                           
  1217                           ; 1 bytes @ 0x1B
  1218     003B                     	ds	2
  1219     003D                     ??___flmul:
  1220                           
  1221                           ; 1 bytes @ 0x1D
  1222     003D                     	ds	5
  1223     0042                     ___flmul@sign:
  1224                           
  1225                           ; 1 bytes @ 0x22
  1226     0042                     	ds	1
  1227     0043                     ___flmul@grs:
  1228                           
  1229                           ; 4 bytes @ 0x23
  1230     0043                     	ds	4
  1231     0047                     ___flmul@aexp:
  1232                           
  1233                           ; 1 bytes @ 0x27
  1234     0047                     	ds	1
  1235     0048                     ___flmul@bexp:
  1236                           
  1237                           ; 1 bytes @ 0x28
  1238     0048                     	ds	1
  1239     0049                     ___flmul@prod:
  1240                           
  1241                           ; 4 bytes @ 0x29
  1242     0049                     	ds	4
  1243     004D                     ___flmul@temp:
  1244                           
  1245                           ; 2 bytes @ 0x2D
  1246     004D                     	ds	2
  1247     004F                     ?___fladd:
  1248     004F                     ___fladd@b:	
  1249                           ; 4 bytes @ 0x2F
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x2F
  1253     004F                     	ds	4
  1254     0053                     ___fladd@a:
  1255                           
  1256                           ; 4 bytes @ 0x33
  1257     0053                     	ds	4
  1258     0057                     ??___fladd:
  1259                           
  1260                           ; 1 bytes @ 0x37
  1261     0057                     	ds	8
  1262     005F                     ___fladd@signs:
  1263                           
  1264                           ; 1 bytes @ 0x3F
  1265     005F                     	ds	1
  1266     0060                     ___fladd@aexp:
  1267                           
  1268                           ; 1 bytes @ 0x40
  1269     0060                     	ds	1
  1270     0061                     ___fladd@bexp:
  1271                           
  1272                           ; 1 bytes @ 0x41
  1273     0061                     	ds	1
  1274     0062                     ___fladd@grs:
  1275                           
  1276                           ; 1 bytes @ 0x42
  1277     0062                     	ds	1
  1278     0063                     ?___flsub:
  1279     0063                     ___flsub@a:	
  1280                           ; 4 bytes @ 0x43
  1281                           
  1282                           
  1283                           ; 4 bytes @ 0x43
  1284     0063                     	ds	4
  1285     0067                     ___flsub@b:
  1286                           
  1287                           ; 4 bytes @ 0x47
  1288     0067                     	ds	4
  1289     006B                     ??_floattostr:
  1290                           
  1291                           ; 1 bytes @ 0x4B
  1292     006B                     	ds	1
  1293                           
  1294                           	psect	maintext
  1295     16A6                     __pmaintext:	
  1296 ;;
  1297 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1298 ;;
  1299 ;; *************** function _main *****************
  1300 ;; Defined at:
  1301 ;;		line 71 in file "main_master.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;		None
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      void 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : B00/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1315 ;;      Params:         0       0       0       0       0
  1316 ;;      Locals:         0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       6
  1318 ;;      Totals:         0       0       0       0       6
  1319 ;;Total ram usage:        6 bytes
  1320 ;; Hardware stack levels required when called: 5
  1321 ;; This function calls:
  1322 ;;		_AHT10_Init
  1323 ;;		_AHT10_Read
  1324 ;;		_AHT10_Soft_Reset
  1325 ;;		_Lcd_Clear
  1326 ;;		_Lcd_Init
  1327 ;;		_Lcd_Set_Cursor
  1328 ;;		_Lcd_Write_String
  1329 ;;		_Read_Fecha
  1330 ;;		_Read_Time
  1331 ;;		_Set_day
  1332 ;;		_Set_hour
  1333 ;;		_Set_min
  1334 ;;		_Set_month
  1335 ;;		_Set_sec
  1336 ;;		_Set_year
  1337 ;;		_Slave1_Total
  1338 ;;		_setup
  1339 ;;		_sprintf
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     16A6                     _main:	
  1346                           ;psect for function _main
  1347                           
  1348     16A6                     l4634:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1351                           
  1352                           
  1353                           ;main_master.c: 72:     setup();
  1354     16A6  160A  118A  229E  160A  118A  	fcall	_setup
  1355                           
  1356                           ;main_master.c: 73:     Lcd_Init();
  1357     16AB  160A  118A  2587  160A  118A  	fcall	_Lcd_Init
  1358                           
  1359                           ;main_master.c: 74:     Lcd_Clear();
  1360     16B0  160A  118A  20DA  160A  118A  	fcall	_Lcd_Clear
  1361                           
  1362                           ;main_master.c: 75:     Lcd_Set_Cursor(1,10);
  1363     16B5  300A               	movlw	10
  1364     16B6  00F7               	movwf	Lcd_Set_Cursor@b
  1365     16B7  3001               	movlw	1
  1366     16B8  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1367     16BD                     l4636:
  1368                           
  1369                           ;main_master.c: 76:     Lcd_Write_String("T:");
  1370     16BD  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1371     16BE  1283               	bcf	3,5	;RP0=0, select bank0
  1372     16BF  1303               	bcf	3,6	;RP1=0, select bank0
  1373     16C0  00A0               	movwf	Lcd_Write_String@a
  1374     16C1  3080               	movlw	128
  1375     16C2  00A1               	movwf	Lcd_Write_String@a+1
  1376     16C3  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1377     16C8                     l4638:
  1378                           
  1379                           ;main_master.c: 77:     AHT10_Soft_Reset();
  1380     16C8  160A  118A  22EE  160A  118A  	fcall	_AHT10_Soft_Reset
  1381     16CD                     l4640:
  1382                           
  1383                           ;main_master.c: 78:     AHT10_Init();
  1384     16CD  160A  118A  2523  160A  118A  	fcall	_AHT10_Init
  1385     16D2                     l4642:
  1386                           
  1387                           ;main_master.c: 79:     Set_sec(0);
  1388     16D2  3000               	movlw	0
  1389     16D3  160A  118A  2258  160A  118A  	fcall	_Set_sec
  1390     16D8                     l4644:
  1391                           
  1392                           ;main_master.c: 80:     Set_min(0);
  1393     16D8  3000               	movlw	0
  1394     16D9  160A  118A  2212  160A  118A  	fcall	_Set_min
  1395     16DE                     l4646:
  1396                           
  1397                           ;main_master.c: 81:     Set_hour(0);
  1398     16DE  3000               	movlw	0
  1399     16DF  160A  118A  21EF  160A  118A  	fcall	_Set_hour
  1400     16E4                     l4648:
  1401                           
  1402                           ;main_master.c: 82:     Set_day(20);
  1403     16E4  3014               	movlw	20
  1404     16E5  160A  118A  21CC  160A  118A  	fcall	_Set_day
  1405     16EA                     l4650:
  1406                           
  1407                           ;main_master.c: 83:     Set_month(2);
  1408     16EA  3002               	movlw	2
  1409     16EB  160A  118A  2235  160A  118A  	fcall	_Set_month
  1410     16F0                     l4652:
  1411                           
  1412                           ;main_master.c: 84:     Set_year(23);
  1413     16F0  3017               	movlw	23
  1414     16F1  160A  118A  227B  160A  118A  	fcall	_Set_year
  1415     16F6                     l4654:
  1416                           
  1417                           ;main_master.c: 86:         Read_Time(&segundos, &minutos, &horas);
  1418     16F6  307A               	movlw	(low (_minutos| 0))& (0+255)
  1419     16F7  1283               	bcf	3,5	;RP0=0, select bank0
  1420     16F8  1303               	bcf	3,6	;RP1=0, select bank0
  1421     16F9  00A4               	movwf	Read_Time@m
  1422     16FA  3079               	movlw	(low (_horas| 0))& (0+255)
  1423     16FB  00A5               	movwf	Read_Time@h
  1424     16FC  306C               	movlw	(low (_segundos| 0))& (0+255)
  1425     16FD  160A  118A  2342  160A  118A  	fcall	_Read_Time
  1426     1702                     l4656:
  1427                           
  1428                           ;main_master.c: 87:         Read_Fecha(&dia, &mes, &ano);
  1429     1702  30EE               	movlw	(low (_mes| 0))& (0+255)
  1430     1703  1283               	bcf	3,5	;RP0=0, select bank0
  1431     1704  1303               	bcf	3,6	;RP1=0, select bank0
  1432     1705  00A4               	movwf	Read_Fecha@mo
  1433     1706  30ED               	movlw	(low (_ano| 0))& (0+255)
  1434     1707  00A5               	movwf	Read_Fecha@y
  1435     1708  30EF               	movlw	(low (_dia| 0))& (0+255)
  1436     1709  160A  118A  2373  160A  118A  	fcall	_Read_Fecha
  1437     170E                     l4658:
  1438                           
  1439                           ;main_master.c: 88:         AHT10_Read();
  1440     170E  120A  158A  2223  160A  118A  	fcall	_AHT10_Read
  1441                           
  1442                           ;main_master.c: 89:         Slave1_Total();
  1443     1713  160A  118A  2122  160A  118A  	fcall	_Slave1_Total
  1444                           
  1445                           ;main_master.c: 103:         Lcd_Set_Cursor(1,1);
  1446     1718  01F7               	clrf	Lcd_Set_Cursor@b
  1447     1719  0AF7               	incf	Lcd_Set_Cursor@b,f
  1448     171A  3001               	movlw	1
  1449     171B  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1450     1720                     l4660:
  1451                           
  1452                           ;main_master.c: 104:         sprintf(buffer, "%02u:%02u:%02u", horas, minutos, segundos)
      +                          ;
  1453     1720  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1454     1721  1283               	bcf	3,5	;RP0=0, select bank0
  1455     1722  1303               	bcf	3,6	;RP1=0, select bank0
  1456     1723  00A9               	movwf	sprintf@f
  1457     1724  0879               	movf	_horas,w
  1458     1725  1283               	bcf	3,5	;RP0=0, select bank2
  1459     1726  1703               	bsf	3,6	;RP1=1, select bank2
  1460     1727  0090               	movwf	??_main^(0+256)
  1461     1728  0191               	clrf	(??_main^(0+256)+1)
  1462     1729  0810               	movf	??_main^(0+256),w
  1463     172A  1283               	bcf	3,5	;RP0=0, select bank0
  1464     172B  1303               	bcf	3,6	;RP1=0, select bank0
  1465     172C  00AA               	movwf	?_sprintf+1
  1466     172D  1283               	bcf	3,5	;RP0=0, select bank2
  1467     172E  1703               	bsf	3,6	;RP1=1, select bank2
  1468     172F  0811               	movf	(??_main+1)^(0+256),w
  1469     1730  1283               	bcf	3,5	;RP0=0, select bank0
  1470     1731  1303               	bcf	3,6	;RP1=0, select bank0
  1471     1732  00AB               	movwf	?_sprintf+2
  1472     1733  087A               	movf	_minutos,w
  1473     1734  1283               	bcf	3,5	;RP0=0, select bank2
  1474     1735  1703               	bsf	3,6	;RP1=1, select bank2
  1475     1736  0092               	movwf	(??_main+2)^(0+256)
  1476     1737  0193               	clrf	((??_main+2)^(0+256)+1)
  1477     1738  0812               	movf	(??_main+2)^(0+256),w
  1478     1739  1283               	bcf	3,5	;RP0=0, select bank0
  1479     173A  1303               	bcf	3,6	;RP1=0, select bank0
  1480     173B  00AC               	movwf	?_sprintf+3
  1481     173C  1283               	bcf	3,5	;RP0=0, select bank2
  1482     173D  1703               	bsf	3,6	;RP1=1, select bank2
  1483     173E  0813               	movf	(??_main+3)^(0+256),w
  1484     173F  1283               	bcf	3,5	;RP0=0, select bank0
  1485     1740  1303               	bcf	3,6	;RP1=0, select bank0
  1486     1741  00AD               	movwf	?_sprintf+4
  1487     1742  086C               	movf	_segundos,w
  1488     1743  1283               	bcf	3,5	;RP0=0, select bank2
  1489     1744  1703               	bsf	3,6	;RP1=1, select bank2
  1490     1745  0094               	movwf	(??_main+4)^(0+256)
  1491     1746  0195               	clrf	((??_main+4)^(0+256)+1)
  1492     1747  0814               	movf	(??_main+4)^(0+256),w
  1493     1748  1283               	bcf	3,5	;RP0=0, select bank0
  1494     1749  1303               	bcf	3,6	;RP1=0, select bank0
  1495     174A  00AE               	movwf	?_sprintf+5
  1496     174B  1283               	bcf	3,5	;RP0=0, select bank2
  1497     174C  1703               	bsf	3,6	;RP1=1, select bank2
  1498     174D  0815               	movf	(??_main+5)^(0+256),w
  1499     174E  1283               	bcf	3,5	;RP0=0, select bank0
  1500     174F  1303               	bcf	3,6	;RP1=0, select bank0
  1501     1750  00AF               	movwf	?_sprintf+6
  1502     1751  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1503     1752  120A  158A  209D  160A  118A  	fcall	_sprintf
  1504     1757                     l4662:
  1505                           
  1506                           ;main_master.c: 105:         Lcd_Write_String(buffer);
  1507     1757  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1508     1758  1283               	bcf	3,5	;RP0=0, select bank0
  1509     1759  1303               	bcf	3,6	;RP1=0, select bank0
  1510     175A  00A0               	movwf	Lcd_Write_String@a
  1511     175B  3001               	movlw	1
  1512     175C  00A1               	movwf	Lcd_Write_String@a+1
  1513     175D  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1514                           
  1515                           ;main_master.c: 111:         Lcd_Set_Cursor(2,1);
  1516     1762  01F7               	clrf	Lcd_Set_Cursor@b
  1517     1763  0AF7               	incf	Lcd_Set_Cursor@b,f
  1518     1764  3002               	movlw	2
  1519     1765  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1520     176A                     l4664:
  1521                           
  1522                           ;main_master.c: 112:         sprintf(buffer, "%02u", cont);
  1523     176A  3015               	movlw	(low (((STR_2+10)-__stringbase)| (0+32768)))& (0+255)
  1524     176B  1283               	bcf	3,5	;RP0=0, select bank0
  1525     176C  1303               	bcf	3,6	;RP1=0, select bank0
  1526     176D  00A9               	movwf	sprintf@f
  1527     176E  3000               	movlw	0
  1528     176F  00AA               	movwf	?_sprintf+1
  1529     1770  00AB               	movwf	?_sprintf+2
  1530     1771  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1531     1772  120A  158A  209D  160A  118A  	fcall	_sprintf
  1532     1777                     l4666:
  1533                           
  1534                           ;main_master.c: 113:         Lcd_Write_String(buffer);
  1535     1777  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1536     1778  1283               	bcf	3,5	;RP0=0, select bank0
  1537     1779  1303               	bcf	3,6	;RP1=0, select bank0
  1538     177A  00A0               	movwf	Lcd_Write_String@a
  1539     177B  3001               	movlw	1
  1540     177C  00A1               	movwf	Lcd_Write_String@a+1
  1541     177D  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1542                           
  1543                           ;main_master.c: 115:         Lcd_Set_Cursor(2,4);
  1544     1782  3004               	movlw	4
  1545     1783  00F7               	movwf	Lcd_Set_Cursor@b
  1546     1784  3002               	movlw	2
  1547     1785  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1548     178A                     l4668:
  1549                           
  1550                           ;main_master.c: 116:         sprintf(buffer, "%02u", contr);
  1551     178A  3015               	movlw	(low (((STR_2+10)-__stringbase)| (0+32768)))& (0+255)
  1552     178B  1283               	bcf	3,5	;RP0=0, select bank0
  1553     178C  1303               	bcf	3,6	;RP1=0, select bank0
  1554     178D  00A9               	movwf	sprintf@f
  1555     178E  3000               	movlw	0
  1556     178F  00AA               	movwf	?_sprintf+1
  1557     1790  00AB               	movwf	?_sprintf+2
  1558     1791  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1559     1792  120A  158A  209D  160A  118A  	fcall	_sprintf
  1560     1797                     l4670:
  1561                           
  1562                           ;main_master.c: 117:         Lcd_Write_String(buffer);
  1563     1797  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1564     1798  1283               	bcf	3,5	;RP0=0, select bank0
  1565     1799  1303               	bcf	3,6	;RP1=0, select bank0
  1566     179A  00A0               	movwf	Lcd_Write_String@a
  1567     179B  3001               	movlw	1
  1568     179C  00A1               	movwf	Lcd_Write_String@a+1
  1569     179D  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1570                           
  1571                           ;main_master.c: 119:         Lcd_Set_Cursor(2,7);
  1572     17A2  3007               	movlw	7
  1573     17A3  00F7               	movwf	Lcd_Set_Cursor@b
  1574     17A4  3002               	movlw	2
  1575     17A5  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1576     17AA                     l4672:
  1577                           
  1578                           ;main_master.c: 120:         sprintf(buffer, "%02u", contg);
  1579     17AA  3015               	movlw	(low (((STR_2+10)-__stringbase)| (0+32768)))& (0+255)
  1580     17AB  1283               	bcf	3,5	;RP0=0, select bank0
  1581     17AC  1303               	bcf	3,6	;RP1=0, select bank0
  1582     17AD  00A9               	movwf	sprintf@f
  1583     17AE  0878               	movf	_contg,w
  1584     17AF  1283               	bcf	3,5	;RP0=0, select bank2
  1585     17B0  1703               	bsf	3,6	;RP1=1, select bank2
  1586     17B1  0090               	movwf	??_main^(0+256)
  1587     17B2  0191               	clrf	(??_main^(0+256)+1)
  1588     17B3  0810               	movf	??_main^(0+256),w
  1589     17B4  1283               	bcf	3,5	;RP0=0, select bank0
  1590     17B5  1303               	bcf	3,6	;RP1=0, select bank0
  1591     17B6  00AA               	movwf	?_sprintf+1
  1592     17B7  1283               	bcf	3,5	;RP0=0, select bank2
  1593     17B8  1703               	bsf	3,6	;RP1=1, select bank2
  1594     17B9  0811               	movf	(??_main+1)^(0+256),w
  1595     17BA  1283               	bcf	3,5	;RP0=0, select bank0
  1596     17BB  1303               	bcf	3,6	;RP1=0, select bank0
  1597     17BC  00AB               	movwf	?_sprintf+2
  1598     17BD  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1599     17BE  120A  158A  209D  160A  118A  	fcall	_sprintf
  1600     17C3                     l4674:
  1601                           
  1602                           ;main_master.c: 121:         Lcd_Write_String(buffer);
  1603     17C3  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1604     17C4  1283               	bcf	3,5	;RP0=0, select bank0
  1605     17C5  1303               	bcf	3,6	;RP1=0, select bank0
  1606     17C6  00A0               	movwf	Lcd_Write_String@a
  1607     17C7  3001               	movlw	1
  1608     17C8  00A1               	movwf	Lcd_Write_String@a+1
  1609     17C9  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1610                           
  1611                           ;main_master.c: 123:         Lcd_Set_Cursor(2,10);
  1612     17CE  300A               	movlw	10
  1613     17CF  00F7               	movwf	Lcd_Set_Cursor@b
  1614     17D0  3002               	movlw	2
  1615     17D1  160A  118A  24D7  160A  118A  	fcall	_Lcd_Set_Cursor
  1616     17D6                     l4676:
  1617                           
  1618                           ;main_master.c: 124:         sprintf(buffer, "%02u", contb);
  1619     17D6  3015               	movlw	(low (((STR_2+10)-__stringbase)| (0+32768)))& (0+255)
  1620     17D7  1283               	bcf	3,5	;RP0=0, select bank0
  1621     17D8  1303               	bcf	3,6	;RP1=0, select bank0
  1622     17D9  00A9               	movwf	sprintf@f
  1623     17DA  1683               	bsf	3,5	;RP0=1, select bank1
  1624     17DB  1303               	bcf	3,6	;RP1=0, select bank1
  1625     17DC  0865               	movf	_contb^(0+128),w
  1626     17DD  1283               	bcf	3,5	;RP0=0, select bank2
  1627     17DE  1703               	bsf	3,6	;RP1=1, select bank2
  1628     17DF  0090               	movwf	??_main^(0+256)
  1629     17E0  0191               	clrf	(??_main^(0+256)+1)
  1630     17E1  0810               	movf	??_main^(0+256),w
  1631     17E2  1283               	bcf	3,5	;RP0=0, select bank0
  1632     17E3  1303               	bcf	3,6	;RP1=0, select bank0
  1633     17E4  00AA               	movwf	?_sprintf+1
  1634     17E5  1283               	bcf	3,5	;RP0=0, select bank2
  1635     17E6  1703               	bsf	3,6	;RP1=1, select bank2
  1636     17E7  0811               	movf	(??_main+1)^(0+256),w
  1637     17E8  1283               	bcf	3,5	;RP0=0, select bank0
  1638     17E9  1303               	bcf	3,6	;RP1=0, select bank0
  1639     17EA  00AB               	movwf	?_sprintf+2
  1640     17EB  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1641     17EC  120A  158A  209D  160A  118A  	fcall	_sprintf
  1642     17F1                     l4678:
  1643                           
  1644                           ;main_master.c: 125:         Lcd_Write_String(buffer);
  1645     17F1  30D0               	movlw	(low (_buffer| (0+256)))& (0+255)
  1646     17F2  1283               	bcf	3,5	;RP0=0, select bank0
  1647     17F3  1303               	bcf	3,6	;RP1=0, select bank0
  1648     17F4  00A0               	movwf	Lcd_Write_String@a
  1649     17F5  3001               	movlw	1
  1650     17F6  00A1               	movwf	Lcd_Write_String@a+1
  1651     17F7  160A  118A  244B  160A  118A  	fcall	_Lcd_Write_String
  1652     17FC  2EF6               	goto	l4654
  1653     17FD  120A  118A  280C   	ljmp	start
  1654     1800                     __end_of_main:
  1655                           
  1656                           	psect	text1
  1657     089D                     __ptext1:	
  1658 ;; *************** function _sprintf *****************
  1659 ;; Defined at:
  1660 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  sp              1    wreg     PTR unsigned char 
  1663 ;;		 -> buffer(30), 
  1664 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1665 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(5), 
  1666 ;;		 -> STR_2(15), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  1669 ;;		 -> buffer(30), 
  1670 ;;  tmpval          4    0        struct .
  1671 ;;  width           2   24[BANK0 ] int 
  1672 ;;  val             2   21[BANK0 ] unsigned int 
  1673 ;;  cp              2    0        PTR const unsigned char 
  1674 ;;  len             2    0        unsigned int 
  1675 ;;  c               1   27[BANK0 ] unsigned char 
  1676 ;;  prec            1   23[BANK0 ] char 
  1677 ;;  flag            1   20[BANK0 ] unsigned char 
  1678 ;;  ap              1   19[BANK0 ] PTR void [1]
  1679 ;;		 -> ?_sprintf(2), 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  2    9[BANK0 ] int 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       7       0       0       0
  1690 ;;      Locals:         0       9       0       0       0
  1691 ;;      Temps:          0       3       0       0       0
  1692 ;;      Totals:         0      19       0       0       0
  1693 ;;Total ram usage:       19 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 2
  1696 ;; This function calls:
  1697 ;;		___lwdiv
  1698 ;;		___lwmod
  1699 ;;		___wmul
  1700 ;;		_isdigit
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     089D                     _sprintf:	
  1707                           ;psect for function _sprintf
  1708                           
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1712                           ;sprintf@sp stored from wreg
  1713     089D  1283               	bcf	3,5	;RP0=0, select bank0
  1714     089E  1303               	bcf	3,6	;RP1=0, select bank0
  1715     089F  00BA               	movwf	sprintf@sp
  1716     08A0                     l4536:
  1717                           
  1718                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1719     08A0  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1720     08A1  00B3               	movwf	sprintf@ap
  1721                           
  1722                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1723     08A2  2A0E               	goto	l4620
  1724     08A3                     l4538:
  1725                           
  1726                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1727     08A3  3025               	movlw	37
  1728     08A4  063B               	xorwf	sprintf@c,w
  1729     08A5  1903               	btfsc	3,2
  1730     08A6  28A8               	goto	u5441
  1731     08A7  28A9               	goto	u5440
  1732     08A8                     u5441:
  1733     08A8  28B3               	goto	l4544
  1734     08A9                     u5440:
  1735     08A9                     l4540:
  1736                           
  1737                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1738     08A9  083A               	movf	sprintf@sp,w
  1739     08AA  0084               	movwf	4
  1740     08AB  083B               	movf	sprintf@c,w
  1741     08AC  1783               	bsf	3,7	;select IRP bank2
  1742     08AD  0080               	movwf	0
  1743     08AE                     l4542:
  1744     08AE  3001               	movlw	1
  1745     08AF  00B0               	movwf	??_sprintf
  1746     08B0  0830               	movf	??_sprintf,w
  1747     08B1  07BA               	addwf	sprintf@sp,f
  1748                           
  1749                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1750     08B2  2A0E               	goto	l4620
  1751     08B3                     l4544:
  1752                           
  1753                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1754     08B3  01B8               	clrf	sprintf@width
  1755     08B4  01B9               	clrf	sprintf@width+1
  1756                           
  1757                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1758     08B5  01B4               	clrf	sprintf@flag
  1759     08B6  28BC               	goto	l4550
  1760     08B7                     l465:	
  1761                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1762                           
  1763                           
  1764                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1765     08B7  1534               	bsf	sprintf@flag,2
  1766     08B8                     l4546:
  1767                           
  1768                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1769     08B8  3001               	movlw	1
  1770     08B9  00B0               	movwf	??_sprintf
  1771     08BA  0830               	movf	??_sprintf,w
  1772     08BB  07A9               	addwf	sprintf@f,f
  1773     08BC                     l4550:	
  1774                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1775                           
  1776     08BC  0829               	movf	sprintf@f,w
  1777     08BD  0084               	movwf	4
  1778     08BE  160A  118A  200A  120A  158A  	fcall	stringdir
  1779     08C3  00B0               	movwf	??_sprintf
  1780     08C4  01B1               	clrf	??_sprintf+1
  1781                           
  1782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1783                           ; Switch size 1, requested type "simple"
  1784                           ; Number of cases is 1, Range of values is 0 to 0
  1785                           ; switch strategies available:
  1786                           ; Name         Instructions Cycles
  1787                           ; simple_byte            4     3 (average)
  1788                           ; direct_byte           11     8 (fixed)
  1789                           ; jumptable            260     6 (fixed)
  1790                           ;	Chosen strategy is simple_byte
  1791     08C5  0831               	movf	??_sprintf+1,w
  1792     08C6  3A00               	xorlw	0	; case 0
  1793     08C7  1903               	skipnz
  1794     08C8  28CA               	goto	l4792
  1795     08C9  28CF               	goto	l4552
  1796     08CA                     l4792:
  1797                           
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 1, Range of values is 48 to 48
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            4     3 (average)
  1803                           ; direct_byte           14    11 (fixed)
  1804                           ; jumptable            263     9 (fixed)
  1805                           ;	Chosen strategy is simple_byte
  1806     08CA  0830               	movf	??_sprintf,w
  1807     08CB  3A30               	xorlw	48	; case 48
  1808     08CC  1903               	skipnz
  1809     08CD  28B7               	goto	l465
  1810     08CE  28CF               	goto	l4552
  1811     08CF                     l4552:
  1812                           
  1813                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1814     08CF  0829               	movf	sprintf@f,w
  1815     08D0  0084               	movwf	4
  1816     08D1  160A  118A  200A  120A  158A  	fcall	stringdir
  1817     08D6  160A  118A  20E7  120A  158A  	fcall	_isdigit
  1818     08DB  1C03               	btfss	3,0
  1819     08DC  28DE               	goto	u5451
  1820     08DD  28DF               	goto	u5450
  1821     08DE                     u5451:
  1822     08DE  2925               	goto	l4568
  1823     08DF                     u5450:
  1824     08DF                     l4554:
  1825                           
  1826                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1827     08DF  1283               	bcf	3,5	;RP0=0, select bank0
  1828     08E0  1303               	bcf	3,6	;RP1=0, select bank0
  1829     08E1  01B8               	clrf	sprintf@width
  1830     08E2  01B9               	clrf	sprintf@width+1
  1831     08E3                     l4556:
  1832                           
  1833                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1834     08E3  300A               	movlw	10
  1835     08E4  00F3               	movwf	___wmul@multiplier
  1836     08E5  3000               	movlw	0
  1837     08E6  00F4               	movwf	___wmul@multiplier+1
  1838     08E7  1283               	bcf	3,5	;RP0=0, select bank0
  1839     08E8  1303               	bcf	3,6	;RP1=0, select bank0
  1840     08E9  0839               	movf	sprintf@width+1,w
  1841     08EA  00F6               	movwf	___wmul@multiplicand+1
  1842     08EB  0838               	movf	sprintf@width,w
  1843     08EC  00F5               	movwf	___wmul@multiplicand
  1844     08ED  160A  118A  2317  120A  158A  	fcall	___wmul
  1845     08F2  0874               	movf	?___wmul+1,w
  1846     08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1847     08F4  1303               	bcf	3,6	;RP1=0, select bank0
  1848     08F5  00B9               	movwf	sprintf@width+1
  1849     08F6  0873               	movf	?___wmul,w
  1850     08F7  00B8               	movwf	sprintf@width
  1851     08F8                     l4558:
  1852                           
  1853                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1854     08F8  0829               	movf	sprintf@f,w
  1855     08F9  0084               	movwf	4
  1856     08FA  160A  118A  200A  120A  158A  	fcall	stringdir
  1857     08FF  3ED0               	addlw	208
  1858     0900  00B0               	movwf	??_sprintf
  1859     0901  30FF               	movlw	255
  1860     0902  1803               	skipnc
  1861     0903  3000               	movlw	0
  1862     0904  00B1               	movwf	??_sprintf+1
  1863     0905  0830               	movf	??_sprintf,w
  1864     0906  07B8               	addwf	sprintf@width,f
  1865     0907  1803               	skipnc
  1866     0908  0AB9               	incf	sprintf@width+1,f
  1867     0909  0831               	movf	??_sprintf+1,w
  1868     090A  07B9               	addwf	sprintf@width+1,f
  1869     090B                     l4560:
  1870     090B  3001               	movlw	1
  1871     090C  00B0               	movwf	??_sprintf
  1872     090D  0830               	movf	??_sprintf,w
  1873     090E  07A9               	addwf	sprintf@f,f
  1874     090F                     l4562:
  1875                           
  1876                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1877     090F  0829               	movf	sprintf@f,w
  1878     0910  0084               	movwf	4
  1879     0911  160A  118A  200A  120A  158A  	fcall	stringdir
  1880     0916  160A  118A  20E7  120A  158A  	fcall	_isdigit
  1881     091B  1803               	btfsc	3,0
  1882     091C  291E               	goto	u5461
  1883     091D  291F               	goto	u5460
  1884     091E                     u5461:
  1885     091E  28E3               	goto	l4556
  1886     091F                     u5460:
  1887     091F  2925               	goto	l4568
  1888     0920                     l4564:
  1889                           
  1890                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1891     0920  30C0               	movlw	192
  1892     0921  00B0               	movwf	??_sprintf
  1893     0922  0830               	movf	??_sprintf,w
  1894     0923  04B4               	iorwf	sprintf@flag,f
  1895                           
  1896                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1897     0924  2941               	goto	l4570
  1898     0925                     l4568:
  1899     0925  3001               	movlw	1
  1900     0926  1283               	bcf	3,5	;RP0=0, select bank0
  1901     0927  1303               	bcf	3,6	;RP1=0, select bank0
  1902     0928  07A9               	addwf	sprintf@f,f
  1903     0929  30FF               	movlw	-1
  1904     092A  0729               	addwf	sprintf@f,w
  1905     092B  0084               	movwf	4
  1906     092C  160A  118A  200A  120A  158A  	fcall	stringdir
  1907     0931  00BB               	movwf	sprintf@c
  1908     0932  00B0               	movwf	??_sprintf
  1909     0933  01B1               	clrf	??_sprintf+1
  1910                           
  1911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 1, Range of values is 0 to 0
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            4     3 (average)
  1917                           ; direct_byte           11     8 (fixed)
  1918                           ; jumptable            260     6 (fixed)
  1919                           ;	Chosen strategy is simple_byte
  1920     0934  0831               	movf	??_sprintf+1,w
  1921     0935  3A00               	xorlw	0	; case 0
  1922     0936  1903               	skipnz
  1923     0937  2939               	goto	l4794
  1924     0938  2A0E               	goto	l4620
  1925     0939                     l4794:
  1926                           
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 2, Range of values is 0 to 117
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte            7     4 (average)
  1932                           ; jumptable            260     6 (fixed)
  1933                           ;	Chosen strategy is simple_byte
  1934     0939  0830               	movf	??_sprintf,w
  1935     093A  3A00               	xorlw	0	; case 0
  1936     093B  1903               	skipnz
  1937     093C  2A1E               	goto	l4622
  1938     093D  3A75               	xorlw	117	; case 117
  1939     093E  1903               	skipnz
  1940     093F  2920               	goto	l4564
  1941     0940  2A0E               	goto	l4620
  1942     0941                     l4570:
  1943                           
  1944                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1945     0941  0833               	movf	sprintf@ap,w
  1946     0942  0084               	movwf	4
  1947     0943  1383               	bcf	3,7	;select IRP bank0
  1948     0944  0800               	movf	0,w
  1949     0945  00B5               	movwf	sprintf@val
  1950     0946  0A84               	incf	4,f
  1951     0947  0800               	movf	0,w
  1952     0948  00B6               	movwf	sprintf@val+1
  1953     0949                     l4572:
  1954     0949  3002               	movlw	2
  1955     094A  00B0               	movwf	??_sprintf
  1956     094B  0830               	movf	??_sprintf,w
  1957     094C  07B3               	addwf	sprintf@ap,f
  1958     094D                     l4574:
  1959                           
  1960                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1961     094D  01BB               	clrf	sprintf@c
  1962     094E  0ABB               	incf	sprintf@c,f
  1963     094F                     l4580:
  1964                           
  1965                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1966     094F  083B               	movf	sprintf@c,w
  1967     0950  00B0               	movwf	??_sprintf
  1968     0951  0730               	addwf	??_sprintf,w
  1969     0952  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1970     0953  0084               	movwf	4
  1971     0954  160A  118A  200A  120A  158A  	fcall	stringdir
  1972     0959  00B1               	movwf	??_sprintf+1
  1973     095A  160A  118A  200A  120A  158A  	fcall	stringdir
  1974     095F  00B2               	movwf	??_sprintf+2
  1975     0960  0832               	movf	??_sprintf+2,w
  1976     0961  0236               	subwf	sprintf@val+1,w
  1977     0962  1D03               	skipz
  1978     0963  2966               	goto	u5475
  1979     0964  0831               	movf	??_sprintf+1,w
  1980     0965  0235               	subwf	sprintf@val,w
  1981     0966                     u5475:
  1982     0966  1803               	skipnc
  1983     0967  2969               	goto	u5471
  1984     0968  296A               	goto	u5470
  1985     0969                     u5471:
  1986     0969  296B               	goto	l4584
  1987     096A                     u5470:
  1988     096A  2975               	goto	l4586
  1989     096B                     l4584:
  1990     096B  3001               	movlw	1
  1991     096C  00B0               	movwf	??_sprintf
  1992     096D  0830               	movf	??_sprintf,w
  1993     096E  07BB               	addwf	sprintf@c,f
  1994     096F  3005               	movlw	5
  1995     0970  063B               	xorwf	sprintf@c,w
  1996     0971  1D03               	btfss	3,2
  1997     0972  2974               	goto	u5481
  1998     0973  2975               	goto	u5480
  1999     0974                     u5481:
  2000     0974  294F               	goto	l4580
  2001     0975                     u5480:
  2002     0975                     l4586:
  2003                           
  2004                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2005     0975  0839               	movf	sprintf@width+1,w
  2006     0976  3A80               	xorlw	128
  2007     0977  3C80               	sublw	128
  2008     0978  1D03               	skipz
  2009     0979  297C               	goto	u5495
  2010     097A  0838               	movf	sprintf@width,w
  2011     097B  023B               	subwf	sprintf@c,w
  2012     097C                     u5495:
  2013     097C  1803               	skipnc
  2014     097D  297F               	goto	u5491
  2015     097E  2980               	goto	u5490
  2016     097F                     u5491:
  2017     097F  298C               	goto	l4590
  2018     0980                     u5490:
  2019     0980                     l4588:
  2020                           
  2021                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2022     0980  1283               	bcf	3,5	;RP0=0, select bank0
  2023     0981  1303               	bcf	3,6	;RP1=0, select bank0
  2024     0982  083B               	movf	sprintf@c,w
  2025     0983  00B0               	movwf	??_sprintf
  2026     0984  01B1               	clrf	??_sprintf+1
  2027     0985  0830               	movf	??_sprintf,w
  2028     0986  02B8               	subwf	sprintf@width,f
  2029     0987  0831               	movf	??_sprintf+1,w
  2030     0988  1C03               	skipc
  2031     0989  03B9               	decf	sprintf@width+1,f
  2032     098A  02B9               	subwf	sprintf@width+1,f
  2033     098B  2990               	goto	l4592
  2034     098C                     l4590:
  2035                           
  2036                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2037     098C  1283               	bcf	3,5	;RP0=0, select bank0
  2038     098D  1303               	bcf	3,6	;RP1=0, select bank0
  2039     098E  01B8               	clrf	sprintf@width
  2040     098F  01B9               	clrf	sprintf@width+1
  2041     0990                     l4592:
  2042                           
  2043                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2044     0990  1D34               	btfss	sprintf@flag,2
  2045     0991  2993               	goto	u5501
  2046     0992  2994               	goto	u5500
  2047     0993                     u5501:
  2048     0993  29B0               	goto	l4602
  2049     0994                     u5500:
  2050     0994                     l4594:
  2051                           
  2052                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2053     0994  0838               	movf	sprintf@width,w
  2054     0995  0439               	iorwf	sprintf@width+1,w
  2055     0996  1903               	btfsc	3,2
  2056     0997  2999               	goto	u5511
  2057     0998  299A               	goto	u5510
  2058     0999                     u5511:
  2059     0999  29CB               	goto	l4610
  2060     099A                     u5510:
  2061     099A                     l4596:
  2062                           
  2063                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2064     099A  083A               	movf	sprintf@sp,w
  2065     099B  0084               	movwf	4
  2066     099C  3030               	movlw	48
  2067     099D  1783               	bsf	3,7	;select IRP bank2
  2068     099E  0080               	movwf	0
  2069     099F                     l4598:
  2070     099F  3001               	movlw	1
  2071     09A0  00B0               	movwf	??_sprintf
  2072     09A1  0830               	movf	??_sprintf,w
  2073     09A2  07BA               	addwf	sprintf@sp,f
  2074     09A3                     l4600:
  2075     09A3  30FF               	movlw	255
  2076     09A4  07B8               	addwf	sprintf@width,f
  2077     09A5  1803               	skipnc
  2078     09A6  0AB9               	incf	sprintf@width+1,f
  2079     09A7  30FF               	movlw	255
  2080     09A8  07B9               	addwf	sprintf@width+1,f
  2081     09A9  0838               	movf	sprintf@width,w
  2082     09AA  0439               	iorwf	sprintf@width+1,w
  2083     09AB  1D03               	btfss	3,2
  2084     09AC  29AE               	goto	u5521
  2085     09AD  29AF               	goto	u5520
  2086     09AE                     u5521:
  2087     09AE  299A               	goto	l4596
  2088     09AF                     u5520:
  2089     09AF  29CB               	goto	l4610
  2090     09B0                     l4602:
  2091                           
  2092                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2093     09B0  0838               	movf	sprintf@width,w
  2094     09B1  0439               	iorwf	sprintf@width+1,w
  2095     09B2  1903               	btfsc	3,2
  2096     09B3  29B5               	goto	u5531
  2097     09B4  29B6               	goto	u5530
  2098     09B5                     u5531:
  2099     09B5  29CB               	goto	l4610
  2100     09B6                     u5530:
  2101     09B6                     l4604:
  2102                           
  2103                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2104     09B6  083A               	movf	sprintf@sp,w
  2105     09B7  0084               	movwf	4
  2106     09B8  3020               	movlw	32
  2107     09B9  1783               	bsf	3,7	;select IRP bank2
  2108     09BA  0080               	movwf	0
  2109     09BB                     l4606:
  2110     09BB  3001               	movlw	1
  2111     09BC  00B0               	movwf	??_sprintf
  2112     09BD  0830               	movf	??_sprintf,w
  2113     09BE  07BA               	addwf	sprintf@sp,f
  2114     09BF                     l4608:
  2115     09BF  30FF               	movlw	255
  2116     09C0  07B8               	addwf	sprintf@width,f
  2117     09C1  1803               	skipnc
  2118     09C2  0AB9               	incf	sprintf@width+1,f
  2119     09C3  30FF               	movlw	255
  2120     09C4  07B9               	addwf	sprintf@width+1,f
  2121     09C5  0838               	movf	sprintf@width,w
  2122     09C6  0439               	iorwf	sprintf@width+1,w
  2123     09C7  1D03               	btfss	3,2
  2124     09C8  29CA               	goto	u5541
  2125     09C9  29CB               	goto	u5540
  2126     09CA                     u5541:
  2127     09CA  29B6               	goto	l4604
  2128     09CB                     u5540:
  2129     09CB                     l4610:
  2130                           
  2131                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2132     09CB  083B               	movf	sprintf@c,w
  2133     09CC  00B7               	movwf	sprintf@prec
  2134                           
  2135                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2136     09CD  2A05               	goto	l4618
  2137     09CE                     l4612:
  2138                           
  2139                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2140     09CE  300A               	movlw	10
  2141     09CF  00A3               	movwf	___lwmod@divisor
  2142     09D0  3000               	movlw	0
  2143     09D1  00A4               	movwf	___lwmod@divisor+1
  2144     09D2  0837               	movf	sprintf@prec,w
  2145     09D3  00B0               	movwf	??_sprintf
  2146     09D4  0730               	addwf	??_sprintf,w
  2147     09D5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2148     09D6  0084               	movwf	4
  2149     09D7  160A  118A  200A  120A  158A  	fcall	stringdir
  2150     09DC  00F3               	movwf	___lwdiv@divisor
  2151     09DD  160A  118A  200A  120A  158A  	fcall	stringdir
  2152     09E2  00F4               	movwf	___lwdiv@divisor+1
  2153     09E3  0836               	movf	sprintf@val+1,w
  2154     09E4  00F6               	movwf	___lwdiv@dividend+1
  2155     09E5  0835               	movf	sprintf@val,w
  2156     09E6  00F5               	movwf	___lwdiv@dividend
  2157     09E7  160A  118A  2491  120A  158A  	fcall	___lwdiv
  2158     09EC  0874               	movf	?___lwdiv+1,w
  2159     09ED  1283               	bcf	3,5	;RP0=0, select bank0
  2160     09EE  1303               	bcf	3,6	;RP1=0, select bank0
  2161     09EF  00A6               	movwf	___lwmod@dividend+1
  2162     09F0  0873               	movf	?___lwdiv,w
  2163     09F1  00A5               	movwf	___lwmod@dividend
  2164     09F2  160A  118A  240F  120A  158A  	fcall	___lwmod
  2165     09F7  1283               	bcf	3,5	;RP0=0, select bank0
  2166     09F8  1303               	bcf	3,6	;RP1=0, select bank0
  2167     09F9  0823               	movf	?___lwmod,w
  2168     09FA  3E30               	addlw	48
  2169     09FB  00BB               	movwf	sprintf@c
  2170     09FC                     l4614:
  2171                           
  2172                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2173     09FC  083A               	movf	sprintf@sp,w
  2174     09FD  0084               	movwf	4
  2175     09FE  083B               	movf	sprintf@c,w
  2176     09FF  1783               	bsf	3,7	;select IRP bank2
  2177     0A00  0080               	movwf	0
  2178     0A01                     l4616:
  2179     0A01  3001               	movlw	1
  2180     0A02  00B0               	movwf	??_sprintf
  2181     0A03  0830               	movf	??_sprintf,w
  2182     0A04  07BA               	addwf	sprintf@sp,f
  2183     0A05                     l4618:
  2184                           
  2185                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2186     0A05  30FF               	movlw	255
  2187     0A06  00B0               	movwf	??_sprintf
  2188     0A07  0830               	movf	??_sprintf,w
  2189     0A08  07B7               	addwf	sprintf@prec,f
  2190     0A09  0A37               	incf	sprintf@prec,w
  2191     0A0A  1D03               	btfss	3,2
  2192     0A0B  2A0D               	goto	u5551
  2193     0A0C  2A0E               	goto	u5550
  2194     0A0D                     u5551:
  2195     0A0D  29CE               	goto	l4612
  2196     0A0E                     u5550:
  2197     0A0E                     l4620:
  2198                           
  2199                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2200     0A0E  3001               	movlw	1
  2201     0A0F  07A9               	addwf	sprintf@f,f
  2202     0A10  30FF               	movlw	-1
  2203     0A11  0729               	addwf	sprintf@f,w
  2204     0A12  0084               	movwf	4
  2205     0A13  160A  118A  200A  120A  158A  	fcall	stringdir
  2206     0A18  00BB               	movwf	sprintf@c
  2207     0A19  083B               	movf	sprintf@c,w
  2208     0A1A  1D03               	btfss	3,2
  2209     0A1B  2A1D               	goto	u5561
  2210     0A1C  2A1E               	goto	u5560
  2211     0A1D                     u5561:
  2212     0A1D  28A3               	goto	l4538
  2213     0A1E                     u5560:
  2214     0A1E                     l4622:
  2215                           
  2216                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2217     0A1E  083A               	movf	sprintf@sp,w
  2218     0A1F  0084               	movwf	4
  2219     0A20  1783               	bsf	3,7	;select IRP bank2
  2220     0A21  0180               	clrf	0
  2221     0A22                     l495:
  2222     0A22  0008               	return
  2223     0A23                     __end_of_sprintf:
  2224                           
  2225                           	psect	text2
  2226     10E7                     __ptext2:	
  2227 ;; *************** function _isdigit *****************
  2228 ;; Defined at:
  2229 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  c               1    wreg     unsigned char 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  c               1    4[COMMON] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       0       0
  2244 ;;      Locals:         2       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         2       0       0       0       0
  2247 ;;Total ram usage:        2 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_sprintf
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257     10E7                     _isdigit:	
  2258                           ;psect for function _isdigit
  2259                           
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2263                           ;isdigit@c stored from wreg
  2264     10E7  00F4               	movwf	isdigit@c
  2265     10E8                     l3304:
  2266     10E8  01F3               	clrf	_isdigit$1019
  2267     10E9                     l3306:
  2268     10E9  303A               	movlw	58
  2269     10EA  0274               	subwf	isdigit@c,w
  2270     10EB  1803               	skipnc
  2271     10EC  28EE               	goto	u4061
  2272     10ED  28EF               	goto	u4060
  2273     10EE                     u4061:
  2274     10EE  28F7               	goto	l3312
  2275     10EF                     u4060:
  2276     10EF                     l3308:
  2277     10EF  3030               	movlw	48
  2278     10F0  0274               	subwf	isdigit@c,w
  2279     10F1  1C03               	skipc
  2280     10F2  28F4               	goto	u4071
  2281     10F3  28F5               	goto	u4070
  2282     10F4                     u4071:
  2283     10F4  28F7               	goto	l3312
  2284     10F5                     u4070:
  2285     10F5                     l3310:
  2286     10F5  01F3               	clrf	_isdigit$1019
  2287     10F6  0AF3               	incf	_isdigit$1019,f
  2288     10F7                     l3312:
  2289     10F7  0C73               	rrf	_isdigit$1019,w
  2290     10F8                     l952:
  2291     10F8  0008               	return
  2292     10F9                     __end_of_isdigit:
  2293                           
  2294                           	psect	text3
  2295     1317                     __ptext3:	
  2296 ;; *************** function ___wmul *****************
  2297 ;; Defined at:
  2298 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  multiplier      2    3[COMMON] unsigned int 
  2301 ;;  multiplicand    2    5[COMMON] unsigned int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  product         2    0[BANK0 ] unsigned int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    3[COMMON] unsigned int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         4       0       0       0       0
  2314 ;;      Locals:         0       2       0       0       0
  2315 ;;      Temps:          0       0       0       0       0
  2316 ;;      Totals:         4       2       0       0       0
  2317 ;;Total ram usage:        6 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 1
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_sprintf
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327     1317                     ___wmul:	
  2328                           ;psect for function ___wmul
  2329                           
  2330     1317                     l4302:	
  2331                           ;incstack = 0
  2332                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2333                           
  2334     1317  1283               	bcf	3,5	;RP0=0, select bank0
  2335     1318  1303               	bcf	3,6	;RP1=0, select bank0
  2336     1319  01A0               	clrf	___wmul@product
  2337     131A  01A1               	clrf	___wmul@product+1
  2338     131B                     l4304:
  2339     131B  1C73               	btfss	___wmul@multiplier,0
  2340     131C  2B1E               	goto	u5301
  2341     131D  2B1F               	goto	u5300
  2342     131E                     u5301:
  2343     131E  2B27               	goto	l499
  2344     131F                     u5300:
  2345     131F                     l4306:
  2346     131F  0875               	movf	___wmul@multiplicand,w
  2347     1320  1283               	bcf	3,5	;RP0=0, select bank0
  2348     1321  1303               	bcf	3,6	;RP1=0, select bank0
  2349     1322  07A0               	addwf	___wmul@product,f
  2350     1323  1803               	skipnc
  2351     1324  0AA1               	incf	___wmul@product+1,f
  2352     1325  0876               	movf	___wmul@multiplicand+1,w
  2353     1326  07A1               	addwf	___wmul@product+1,f
  2354     1327                     l499:
  2355     1327  3001               	movlw	1
  2356     1328                     u5315:
  2357     1328  1003               	clrc
  2358     1329  0DF5               	rlf	___wmul@multiplicand,f
  2359     132A  0DF6               	rlf	___wmul@multiplicand+1,f
  2360     132B  3EFF               	addlw	-1
  2361     132C  1D03               	skipz
  2362     132D  2B28               	goto	u5315
  2363     132E                     l4308:
  2364     132E  3001               	movlw	1
  2365     132F                     u5325:
  2366     132F  1003               	clrc
  2367     1330  0CF4               	rrf	___wmul@multiplier+1,f
  2368     1331  0CF3               	rrf	___wmul@multiplier,f
  2369     1332  3EFF               	addlw	-1
  2370     1333  1D03               	skipz
  2371     1334  2B2F               	goto	u5325
  2372     1335                     l4310:
  2373     1335  0873               	movf	___wmul@multiplier,w
  2374     1336  0474               	iorwf	___wmul@multiplier+1,w
  2375     1337  1D03               	btfss	3,2
  2376     1338  2B3A               	goto	u5331
  2377     1339  2B3B               	goto	u5330
  2378     133A                     u5331:
  2379     133A  2B1B               	goto	l4304
  2380     133B                     u5330:
  2381     133B                     l4312:
  2382     133B  1283               	bcf	3,5	;RP0=0, select bank0
  2383     133C  1303               	bcf	3,6	;RP1=0, select bank0
  2384     133D  0821               	movf	___wmul@product+1,w
  2385     133E  00F4               	movwf	?___wmul+1
  2386     133F  0820               	movf	___wmul@product,w
  2387     1340  00F3               	movwf	?___wmul
  2388     1341                     l501:
  2389     1341  0008               	return
  2390     1342                     __end_of___wmul:
  2391                           
  2392                           	psect	text4
  2393     140F                     __ptext4:	
  2394 ;; *************** function ___lwmod *****************
  2395 ;; Defined at:
  2396 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  divisor         2    3[BANK0 ] unsigned int 
  2399 ;;  dividend        2    5[BANK0 ] unsigned int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  counter         1    8[BANK0 ] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2    3[BANK0 ] unsigned int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       4       0       0       0
  2412 ;;      Locals:         0       1       0       0       0
  2413 ;;      Temps:          0       1       0       0       0
  2414 ;;      Totals:         0       6       0       0       0
  2415 ;;Total ram usage:        6 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; Hardware stack levels required when called: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_sprintf
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425     140F                     ___lwmod:	
  2426                           ;psect for function ___lwmod
  2427                           
  2428     140F                     l3356:	
  2429                           ;incstack = 0
  2430                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2431                           
  2432     140F  1283               	bcf	3,5	;RP0=0, select bank0
  2433     1410  1303               	bcf	3,6	;RP1=0, select bank0
  2434     1411  0823               	movf	___lwmod@divisor,w
  2435     1412  0424               	iorwf	___lwmod@divisor+1,w
  2436     1413  1903               	btfsc	3,2
  2437     1414  2C16               	goto	u4191
  2438     1415  2C17               	goto	u4190
  2439     1416                     u4191:
  2440     1416  2C46               	goto	l3374
  2441     1417                     u4190:
  2442     1417                     l3358:
  2443     1417  01A8               	clrf	___lwmod@counter
  2444     1418  0AA8               	incf	___lwmod@counter,f
  2445     1419  2C25               	goto	l3364
  2446     141A                     l3360:
  2447     141A  3001               	movlw	1
  2448     141B                     u4205:
  2449     141B  1003               	clrc
  2450     141C  0DA3               	rlf	___lwmod@divisor,f
  2451     141D  0DA4               	rlf	___lwmod@divisor+1,f
  2452     141E  3EFF               	addlw	-1
  2453     141F  1D03               	skipz
  2454     1420  2C1B               	goto	u4205
  2455     1421                     l3362:
  2456     1421  3001               	movlw	1
  2457     1422  00A7               	movwf	??___lwmod
  2458     1423  0827               	movf	??___lwmod,w
  2459     1424  07A8               	addwf	___lwmod@counter,f
  2460     1425                     l3364:
  2461     1425  1FA4               	btfss	___lwmod@divisor+1,7
  2462     1426  2C28               	goto	u4211
  2463     1427  2C29               	goto	u4210
  2464     1428                     u4211:
  2465     1428  2C1A               	goto	l3360
  2466     1429                     u4210:
  2467     1429                     l3366:
  2468     1429  0824               	movf	___lwmod@divisor+1,w
  2469     142A  0226               	subwf	___lwmod@dividend+1,w
  2470     142B  1D03               	skipz
  2471     142C  2C2F               	goto	u4225
  2472     142D  0823               	movf	___lwmod@divisor,w
  2473     142E  0225               	subwf	___lwmod@dividend,w
  2474     142F                     u4225:
  2475     142F  1C03               	skipc
  2476     1430  2C32               	goto	u4221
  2477     1431  2C33               	goto	u4220
  2478     1432                     u4221:
  2479     1432  2C39               	goto	l3370
  2480     1433                     u4220:
  2481     1433                     l3368:
  2482     1433  0823               	movf	___lwmod@divisor,w
  2483     1434  02A5               	subwf	___lwmod@dividend,f
  2484     1435  0824               	movf	___lwmod@divisor+1,w
  2485     1436  1C03               	skipc
  2486     1437  03A6               	decf	___lwmod@dividend+1,f
  2487     1438  02A6               	subwf	___lwmod@dividend+1,f
  2488     1439                     l3370:
  2489     1439  3001               	movlw	1
  2490     143A                     u4235:
  2491     143A  1003               	clrc
  2492     143B  0CA4               	rrf	___lwmod@divisor+1,f
  2493     143C  0CA3               	rrf	___lwmod@divisor,f
  2494     143D  3EFF               	addlw	-1
  2495     143E  1D03               	skipz
  2496     143F  2C3A               	goto	u4235
  2497     1440                     l3372:
  2498     1440  3001               	movlw	1
  2499     1441  02A8               	subwf	___lwmod@counter,f
  2500     1442  1D03               	btfss	3,2
  2501     1443  2C45               	goto	u4241
  2502     1444  2C46               	goto	u4240
  2503     1445                     u4241:
  2504     1445  2C29               	goto	l3366
  2505     1446                     u4240:
  2506     1446                     l3374:
  2507     1446  0826               	movf	___lwmod@dividend+1,w
  2508     1447  00A4               	movwf	?___lwmod+1
  2509     1448  0825               	movf	___lwmod@dividend,w
  2510     1449  00A3               	movwf	?___lwmod
  2511     144A                     l781:
  2512     144A  0008               	return
  2513     144B                     __end_of___lwmod:
  2514                           
  2515                           	psect	text5
  2516     1491                     __ptext5:	
  2517 ;; *************** function ___lwdiv *****************
  2518 ;; Defined at:
  2519 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  divisor         2    3[COMMON] unsigned int 
  2522 ;;  dividend        2    5[COMMON] unsigned int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  quotient        2    1[BANK0 ] unsigned int 
  2525 ;;  counter         1    0[BANK0 ] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  2    3[COMMON] unsigned int 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         4       0       0       0       0
  2536 ;;      Locals:         0       3       0       0       0
  2537 ;;      Temps:          1       0       0       0       0
  2538 ;;      Totals:         5       3       0       0       0
  2539 ;;Total ram usage:        8 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_sprintf
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549     1491                     ___lwdiv:	
  2550                           ;psect for function ___lwdiv
  2551                           
  2552     1491                     l4316:	
  2553                           ;incstack = 0
  2554                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2555                           
  2556     1491  1283               	bcf	3,5	;RP0=0, select bank0
  2557     1492  1303               	bcf	3,6	;RP1=0, select bank0
  2558     1493  01A1               	clrf	___lwdiv@quotient
  2559     1494  01A2               	clrf	___lwdiv@quotient+1
  2560     1495                     l4318:
  2561     1495  0873               	movf	___lwdiv@divisor,w
  2562     1496  0474               	iorwf	___lwdiv@divisor+1,w
  2563     1497  1903               	btfsc	3,2
  2564     1498  2C9A               	goto	u5341
  2565     1499  2C9B               	goto	u5340
  2566     149A                     u5341:
  2567     149A  2CD2               	goto	l4338
  2568     149B                     u5340:
  2569     149B                     l4320:
  2570     149B  01A0               	clrf	___lwdiv@counter
  2571     149C  0AA0               	incf	___lwdiv@counter,f
  2572     149D  2CA9               	goto	l4326
  2573     149E                     l4322:
  2574     149E  3001               	movlw	1
  2575     149F                     u5355:
  2576     149F  1003               	clrc
  2577     14A0  0DF3               	rlf	___lwdiv@divisor,f
  2578     14A1  0DF4               	rlf	___lwdiv@divisor+1,f
  2579     14A2  3EFF               	addlw	-1
  2580     14A3  1D03               	skipz
  2581     14A4  2C9F               	goto	u5355
  2582     14A5                     l4324:
  2583     14A5  3001               	movlw	1
  2584     14A6  00F7               	movwf	??___lwdiv
  2585     14A7  0877               	movf	??___lwdiv,w
  2586     14A8  07A0               	addwf	___lwdiv@counter,f
  2587     14A9                     l4326:
  2588     14A9  1FF4               	btfss	___lwdiv@divisor+1,7
  2589     14AA  2CAC               	goto	u5361
  2590     14AB  2CAD               	goto	u5360
  2591     14AC                     u5361:
  2592     14AC  2C9E               	goto	l4322
  2593     14AD                     u5360:
  2594     14AD                     l4328:
  2595     14AD  3001               	movlw	1
  2596     14AE                     u5375:
  2597     14AE  1003               	clrc
  2598     14AF  0DA1               	rlf	___lwdiv@quotient,f
  2599     14B0  0DA2               	rlf	___lwdiv@quotient+1,f
  2600     14B1  3EFF               	addlw	-1
  2601     14B2  1D03               	skipz
  2602     14B3  2CAE               	goto	u5375
  2603     14B4  0874               	movf	___lwdiv@divisor+1,w
  2604     14B5  0276               	subwf	___lwdiv@dividend+1,w
  2605     14B6  1D03               	skipz
  2606     14B7  2CBA               	goto	u5385
  2607     14B8  0873               	movf	___lwdiv@divisor,w
  2608     14B9  0275               	subwf	___lwdiv@dividend,w
  2609     14BA                     u5385:
  2610     14BA  1C03               	skipc
  2611     14BB  2CBD               	goto	u5381
  2612     14BC  2CBE               	goto	u5380
  2613     14BD                     u5381:
  2614     14BD  2CC5               	goto	l4334
  2615     14BE                     u5380:
  2616     14BE                     l4330:
  2617     14BE  0873               	movf	___lwdiv@divisor,w
  2618     14BF  02F5               	subwf	___lwdiv@dividend,f
  2619     14C0  0874               	movf	___lwdiv@divisor+1,w
  2620     14C1  1C03               	skipc
  2621     14C2  03F6               	decf	___lwdiv@dividend+1,f
  2622     14C3  02F6               	subwf	___lwdiv@dividend+1,f
  2623     14C4                     l4332:
  2624     14C4  1421               	bsf	___lwdiv@quotient,0
  2625     14C5                     l4334:
  2626     14C5  3001               	movlw	1
  2627     14C6                     u5395:
  2628     14C6  1003               	clrc
  2629     14C7  0CF4               	rrf	___lwdiv@divisor+1,f
  2630     14C8  0CF3               	rrf	___lwdiv@divisor,f
  2631     14C9  3EFF               	addlw	-1
  2632     14CA  1D03               	skipz
  2633     14CB  2CC6               	goto	u5395
  2634     14CC                     l4336:
  2635     14CC  3001               	movlw	1
  2636     14CD  02A0               	subwf	___lwdiv@counter,f
  2637     14CE  1D03               	btfss	3,2
  2638     14CF  2CD1               	goto	u5401
  2639     14D0  2CD2               	goto	u5400
  2640     14D1                     u5401:
  2641     14D1  2CAD               	goto	l4328
  2642     14D2                     u5400:
  2643     14D2                     l4338:
  2644     14D2  0822               	movf	___lwdiv@quotient+1,w
  2645     14D3  00F4               	movwf	?___lwdiv+1
  2646     14D4  0821               	movf	___lwdiv@quotient,w
  2647     14D5  00F3               	movwf	?___lwdiv
  2648     14D6                     l771:
  2649     14D6  0008               	return
  2650     14D7                     __end_of___lwdiv:
  2651                           
  2652                           	psect	text6
  2653     129E                     __ptext6:	
  2654 ;; *************** function _setup *****************
  2655 ;; Defined at:
  2656 ;;		line 141 in file "main_master.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 2
  2677 ;; This function calls:
  2678 ;;		_I2C_Init_Master
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684     129E                     _setup:	
  2685                           ;psect for function _setup
  2686                           
  2687     129E                     l3378:	
  2688                           ;incstack = 0
  2689                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2690                           
  2691                           
  2692                           ;main_master.c: 142:     ANSEL = 0;
  2693     129E  1683               	bsf	3,5	;RP0=1, select bank3
  2694     129F  1703               	bsf	3,6	;RP1=1, select bank3
  2695     12A0  0188               	clrf	8	;volatile
  2696                           
  2697                           ;main_master.c: 143:     ANSELH = 0;
  2698     12A1  0189               	clrf	9	;volatile
  2699                           
  2700                           ;main_master.c: 145:     TRISB = 0;
  2701     12A2  1683               	bsf	3,5	;RP0=1, select bank1
  2702     12A3  1303               	bcf	3,6	;RP1=0, select bank1
  2703     12A4  0186               	clrf	6	;volatile
  2704                           
  2705                           ;main_master.c: 146:     TRISD = 0;
  2706     12A5  0188               	clrf	8	;volatile
  2707                           
  2708                           ;main_master.c: 148:     PORTA = 0;
  2709     12A6  1283               	bcf	3,5	;RP0=0, select bank0
  2710     12A7  1303               	bcf	3,6	;RP1=0, select bank0
  2711     12A8  0185               	clrf	5	;volatile
  2712                           
  2713                           ;main_master.c: 149:     PORTB = 0;
  2714     12A9  0186               	clrf	6	;volatile
  2715                           
  2716                           ;main_master.c: 150:     PORTC = 0;
  2717     12AA  0187               	clrf	7	;volatile
  2718                           
  2719                           ;main_master.c: 151:     PORTD = 0;
  2720     12AB  0188               	clrf	8	;volatile
  2721     12AC                     l3380:
  2722                           
  2723                           ;main_master.c: 153:     OSCCONbits.IRCF2 = 1;
  2724     12AC  1683               	bsf	3,5	;RP0=1, select bank1
  2725     12AD  1303               	bcf	3,6	;RP1=0, select bank1
  2726     12AE  170F               	bsf	15,6	;volatile
  2727     12AF                     l3382:
  2728                           
  2729                           ;main_master.c: 154:     OSCCONbits.IRCF1 = 1;
  2730     12AF  168F               	bsf	15,5	;volatile
  2731     12B0                     l3384:
  2732                           
  2733                           ;main_master.c: 155:     OSCCONbits.IRCF0 = 1;
  2734     12B0  160F               	bsf	15,4	;volatile
  2735     12B1                     l3386:
  2736                           
  2737                           ;main_master.c: 156:     OSCCONbits.SCS = 1;
  2738     12B1  140F               	bsf	15,0	;volatile
  2739     12B2                     l3388:
  2740                           
  2741                           ;main_master.c: 158:     OPTION_REGbits.T0CS = 0;
  2742     12B2  1281               	bcf	1,5	;volatile
  2743     12B3                     l3390:
  2744                           
  2745                           ;main_master.c: 159:     OPTION_REGbits.PSA = 0;
  2746     12B3  1181               	bcf	1,3	;volatile
  2747     12B4                     l3392:
  2748                           
  2749                           ;main_master.c: 160:     OPTION_REGbits.PS2 = 1;
  2750     12B4  1501               	bsf	1,2	;volatile
  2751     12B5                     l3394:
  2752                           
  2753                           ;main_master.c: 161:     OPTION_REGbits.PS1 = 1;
  2754     12B5  1481               	bsf	1,1	;volatile
  2755     12B6                     l3396:
  2756                           
  2757                           ;main_master.c: 162:     OPTION_REGbits.PS0 = 1;
  2758     12B6  1401               	bsf	1,0	;volatile
  2759     12B7                     l3398:
  2760                           
  2761                           ;main_master.c: 164:     INTCONbits.GIE = 1;
  2762     12B7  178B               	bsf	11,7	;volatile
  2763     12B8                     l3400:
  2764                           
  2765                           ;main_master.c: 165:     INTCONbits.T0IE = 1;
  2766     12B8  168B               	bsf	11,5	;volatile
  2767     12B9                     l3402:
  2768                           
  2769                           ;main_master.c: 166:     INTCONbits.T0IF = 0;
  2770     12B9  110B               	bcf	11,2	;volatile
  2771     12BA                     l3404:
  2772                           
  2773                           ;main_master.c: 168:     TMR0 = 100;
  2774     12BA  3064               	movlw	100
  2775     12BB  1283               	bcf	3,5	;RP0=0, select bank0
  2776     12BC  1303               	bcf	3,6	;RP1=0, select bank0
  2777     12BD  0081               	movwf	1	;volatile
  2778     12BE                     l3406:
  2779                           
  2780                           ;main_master.c: 170:     I2C_Init_Master(0x80);
  2781     12BE  3080               	movlw	128
  2782     12BF  160A  118A  218B  160A  118A  	fcall	_I2C_Init_Master
  2783     12C4                     l182:
  2784     12C4  0008               	return
  2785     12C5                     __end_of_setup:
  2786                           
  2787                           	psect	text7
  2788     118B                     __ptext7:	
  2789 ;; *************** function _I2C_Init_Master *****************
  2790 ;; Defined at:
  2791 ;;		line 12 in file "i2c.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  sp_i2c          1    wreg     unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  sp_i2c          1    3[COMMON] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       0       0       0       0
  2806 ;;      Locals:         1       0       0       0       0
  2807 ;;      Temps:          0       0       0       0       0
  2808 ;;      Totals:         1       0       0       0       0
  2809 ;;Total ram usage:        1 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; Hardware stack levels required when called: 1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_setup
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819     118B                     _I2C_Init_Master:	
  2820                           ;psect for function _I2C_Init_Master
  2821                           
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  2825                           ;I2C_Init_Master@sp_i2c stored from wreg
  2826     118B  00F3               	movwf	I2C_Init_Master@sp_i2c
  2827     118C                     l3246:
  2828                           
  2829                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  2830     118C  1683               	bsf	3,5	;RP0=1, select bank1
  2831     118D  1303               	bcf	3,6	;RP1=0, select bank1
  2832     118E  1587               	bsf	7,3	;volatile
  2833                           
  2834                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  2835     118F  1607               	bsf	7,4	;volatile
  2836     1190                     l3248:
  2837                           
  2838                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  2839     1190  0873               	movf	I2C_Init_Master@sp_i2c,w
  2840     1191  0094               	movwf	20	;volatile
  2841                           
  2842                           ;i2c.c: 17:  SSPCON = 0X28;
  2843     1192  3028               	movlw	40
  2844     1193  1283               	bcf	3,5	;RP0=0, select bank0
  2845     1194  1303               	bcf	3,6	;RP1=0, select bank0
  2846     1195  0094               	movwf	20	;volatile
  2847     1196                     l3250:
  2848                           
  2849                           ;i2c.c: 18:     SSPCON2 = 0;
  2850     1196  1683               	bsf	3,5	;RP0=1, select bank1
  2851     1197  1303               	bcf	3,6	;RP1=0, select bank1
  2852     1198  0191               	clrf	17	;volatile
  2853     1199                     l3252:
  2854                           
  2855                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  2856     1199  3080               	movlw	128
  2857     119A  0673               	xorwf	I2C_Init_Master@sp_i2c,w
  2858     119B  1D03               	btfss	3,2
  2859     119C  299E               	goto	u4011
  2860     119D  299F               	goto	u4010
  2861     119E                     u4011:
  2862     119E  29A2               	goto	l3256
  2863     119F                     u4010:
  2864     119F                     l3254:
  2865                           
  2866                           ;i2c.c: 20:         SSPADD = 19;
  2867     119F  3013               	movlw	19
  2868     11A0  0093               	movwf	19	;volatile
  2869                           
  2870                           ;i2c.c: 21:     }
  2871     11A1  29A9               	goto	l325
  2872     11A2                     l3256:
  2873     11A2  0873               	movf	I2C_Init_Master@sp_i2c,w
  2874     11A3  1D03               	btfss	3,2
  2875     11A4  29A6               	goto	u4021
  2876     11A5  29A7               	goto	u4020
  2877     11A6                     u4021:
  2878     11A6  29A9               	goto	l325
  2879     11A7                     u4020:
  2880     11A7                     l3258:
  2881                           
  2882                           ;i2c.c: 23:         SSPADD = 29;
  2883     11A7  301D               	movlw	29
  2884     11A8  0093               	movwf	19	;volatile
  2885     11A9                     l325:
  2886     11A9  0008               	return
  2887     11AA                     __end_of_I2C_Init_Master:
  2888                           
  2889                           	psect	text8
  2890     1122                     __ptext8:	
  2891 ;; *************** function _Slave1_Total *****************
  2892 ;; Defined at:
  2893 ;;		line 370 in file "main_master.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0
  2909 ;;      Temps:          1       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 2
  2914 ;; This function calls:
  2915 ;;		_I2C_Start
  2916 ;;		_I2C_Stop
  2917 ;;		_I2C_Write
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923     1122                     _Slave1_Total:	
  2924                           ;psect for function _Slave1_Total
  2925                           
  2926     1122                     l4528:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _Slave1_Total: [wreg+status,2+status,0+pclath+cstack]
  2929                           
  2930                           
  2931                           ;main_master.c: 371:     I2C_Start();
  2932     1122  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  2933     1127                     l4530:
  2934                           
  2935                           ;main_master.c: 372:     I2C_Write(0x50);
  2936     1127  3050               	movlw	80
  2937     1128  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  2938     112D                     l4532:
  2939                           
  2940                           ;main_master.c: 376:     I2C_Stop();
  2941     112D  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  2942     1132                     l4534:
  2943                           
  2944                           ;main_master.c: 377:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2945     1132  3042               	movlw	66
  2946     1133  00F4               	movwf	??_Slave1_Total
  2947     1134                     u5577:
  2948     1134  0BF4               	decfsz	??_Slave1_Total,f
  2949     1135  2934               	goto	u5577
  2950     1136  0000               	nop
  2951     1137                     l238:
  2952     1137  0008               	return
  2953     1138                     __end_of_Slave1_Total:
  2954                           
  2955                           	psect	text9
  2956     127B                     __ptext9:	
  2957 ;; *************** function _Set_year *****************
  2958 ;; Defined at:
  2959 ;;		line 247 in file "main_master.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  year            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  year            1    5[COMMON] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         1       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         1       0       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 2
  2980 ;; This function calls:
  2981 ;;		_Dec_to_Bcd
  2982 ;;		_I2C_Start
  2983 ;;		_I2C_Stop
  2984 ;;		_I2C_Write
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990     127B                     _Set_year:	
  2991                           ;psect for function _Set_year
  2992                           
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  2996                           ;Set_year@year stored from wreg
  2997     127B  00F5               	movwf	Set_year@year
  2998     127C                     l4440:
  2999                           
  3000                           ;main_master.c: 248:     I2C_Start();
  3001     127C  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3002     1281                     l4442:
  3003                           
  3004                           ;main_master.c: 249:     I2C_Write(0xD0);
  3005     1281  30D0               	movlw	208
  3006     1282  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3007     1287                     l4444:
  3008                           
  3009                           ;main_master.c: 250:     I2C_Write(0x06);
  3010     1287  3006               	movlw	6
  3011     1288  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3012     128D                     l4446:
  3013                           
  3014                           ;main_master.c: 251:     I2C_Write(Dec_to_Bcd(year));
  3015     128D  0875               	movf	Set_year@year,w
  3016     128E  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3017     1293  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3018     1298                     l4448:
  3019                           
  3020                           ;main_master.c: 252:     I2C_Stop();
  3021     1298  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3022     129D                     l212:
  3023     129D  0008               	return
  3024     129E                     __end_of_Set_year:
  3025                           
  3026                           	psect	text10
  3027     1258                     __ptext10:	
  3028 ;; *************** function _Set_sec *****************
  3029 ;; Defined at:
  3030 ;;		line 199 in file "main_master.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  sec             1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  sec             1    5[COMMON] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         1       0       0       0       0
  3048 ;;Total ram usage:        1 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 2
  3051 ;; This function calls:
  3052 ;;		_Dec_to_Bcd
  3053 ;;		_I2C_Start
  3054 ;;		_I2C_Stop
  3055 ;;		_I2C_Write
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061     1258                     _Set_sec:	
  3062                           ;psect for function _Set_sec
  3063                           
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  3067                           ;Set_sec@sec stored from wreg
  3068     1258  00F5               	movwf	Set_sec@sec
  3069     1259                     l4390:
  3070                           
  3071                           ;main_master.c: 200:     I2C_Start();
  3072     1259  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3073     125E                     l4392:
  3074                           
  3075                           ;main_master.c: 201:     I2C_Write(0xD0);
  3076     125E  30D0               	movlw	208
  3077     125F  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3078     1264                     l4394:
  3079                           
  3080                           ;main_master.c: 202:     I2C_Write(0x00);
  3081     1264  3000               	movlw	0
  3082     1265  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3083     126A                     l4396:
  3084                           
  3085                           ;main_master.c: 203:     I2C_Write(Dec_to_Bcd(sec));
  3086     126A  0875               	movf	Set_sec@sec,w
  3087     126B  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3088     1270  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3089     1275                     l4398:
  3090                           
  3091                           ;main_master.c: 204:     I2C_Stop();
  3092     1275  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3093     127A                     l194:
  3094     127A  0008               	return
  3095     127B                     __end_of_Set_sec:
  3096                           
  3097                           	psect	text11
  3098     1235                     __ptext11:	
  3099 ;; *************** function _Set_month *****************
  3100 ;; Defined at:
  3101 ;;		line 239 in file "main_master.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  month           1    wreg     unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  month           1    5[COMMON] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       0       0       0       0
  3116 ;;      Locals:         1       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0
  3118 ;;      Totals:         1       0       0       0       0
  3119 ;;Total ram usage:        1 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 2
  3122 ;; This function calls:
  3123 ;;		_Dec_to_Bcd
  3124 ;;		_I2C_Start
  3125 ;;		_I2C_Stop
  3126 ;;		_I2C_Write
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132     1235                     _Set_month:	
  3133                           ;psect for function _Set_month
  3134                           
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  3138                           ;Set_month@month stored from wreg
  3139     1235  00F5               	movwf	Set_month@month
  3140     1236                     l4430:
  3141                           
  3142                           ;main_master.c: 240:     I2C_Start();
  3143     1236  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3144     123B                     l4432:
  3145                           
  3146                           ;main_master.c: 241:     I2C_Write(0xD0);
  3147     123B  30D0               	movlw	208
  3148     123C  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3149     1241                     l4434:
  3150                           
  3151                           ;main_master.c: 242:     I2C_Write(0x05);
  3152     1241  3005               	movlw	5
  3153     1242  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3154     1247                     l4436:
  3155                           
  3156                           ;main_master.c: 243:     I2C_Write(Dec_to_Bcd(month));
  3157     1247  0875               	movf	Set_month@month,w
  3158     1248  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3159     124D  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3160     1252                     l4438:
  3161                           
  3162                           ;main_master.c: 244:     I2C_Stop();
  3163     1252  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3164     1257                     l209:
  3165     1257  0008               	return
  3166     1258                     __end_of_Set_month:
  3167                           
  3168                           	psect	text12
  3169     1212                     __ptext12:	
  3170 ;; *************** function _Set_min *****************
  3171 ;; Defined at:
  3172 ;;		line 207 in file "main_master.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  min             1    wreg     unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  min             1    5[COMMON] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         1       0       0       0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 2
  3193 ;; This function calls:
  3194 ;;		_Dec_to_Bcd
  3195 ;;		_I2C_Start
  3196 ;;		_I2C_Stop
  3197 ;;		_I2C_Write
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203     1212                     _Set_min:	
  3204                           ;psect for function _Set_min
  3205                           
  3206                           
  3207                           ;incstack = 0
  3208                           ; Regs used in _Set_min: [wreg+status,2+status,0+pclath+cstack]
  3209                           ;Set_min@min stored from wreg
  3210     1212  00F5               	movwf	Set_min@min
  3211     1213                     l4400:
  3212                           
  3213                           ;main_master.c: 208:     I2C_Start();
  3214     1213  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3215     1218                     l4402:
  3216                           
  3217                           ;main_master.c: 209:     I2C_Write(0xD0);
  3218     1218  30D0               	movlw	208
  3219     1219  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3220     121E                     l4404:
  3221                           
  3222                           ;main_master.c: 210:     I2C_Write(0x01);
  3223     121E  3001               	movlw	1
  3224     121F  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3225     1224                     l4406:
  3226                           
  3227                           ;main_master.c: 211:     I2C_Write(Dec_to_Bcd(min));
  3228     1224  0875               	movf	Set_min@min,w
  3229     1225  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3230     122A  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3231     122F                     l4408:
  3232                           
  3233                           ;main_master.c: 212:     I2C_Stop();
  3234     122F  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3235     1234                     l197:
  3236     1234  0008               	return
  3237     1235                     __end_of_Set_min:
  3238                           
  3239                           	psect	text13
  3240     11EF                     __ptext13:	
  3241 ;; *************** function _Set_hour *****************
  3242 ;; Defined at:
  3243 ;;		line 215 in file "main_master.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  hour            1    wreg     unsigned char 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  hour            1    5[COMMON] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, pclath, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0       0       0       0       0
  3258 ;;      Locals:         1       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0
  3260 ;;      Totals:         1       0       0       0       0
  3261 ;;Total ram usage:        1 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 2
  3264 ;; This function calls:
  3265 ;;		_Dec_to_Bcd
  3266 ;;		_I2C_Start
  3267 ;;		_I2C_Stop
  3268 ;;		_I2C_Write
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274     11EF                     _Set_hour:	
  3275                           ;psect for function _Set_hour
  3276                           
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  3280                           ;Set_hour@hour stored from wreg
  3281     11EF  00F5               	movwf	Set_hour@hour
  3282     11F0                     l4410:
  3283                           
  3284                           ;main_master.c: 216:     I2C_Start();
  3285     11F0  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3286     11F5                     l4412:
  3287                           
  3288                           ;main_master.c: 217:     I2C_Write(0xD0);
  3289     11F5  30D0               	movlw	208
  3290     11F6  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3291     11FB                     l4414:
  3292                           
  3293                           ;main_master.c: 218:     I2C_Write(0x02);
  3294     11FB  3002               	movlw	2
  3295     11FC  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3296     1201                     l4416:
  3297                           
  3298                           ;main_master.c: 219:     I2C_Write(Dec_to_Bcd(hour));
  3299     1201  0875               	movf	Set_hour@hour,w
  3300     1202  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3301     1207  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3302     120C                     l4418:
  3303                           
  3304                           ;main_master.c: 220:     I2C_Stop();
  3305     120C  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3306     1211                     l200:
  3307     1211  0008               	return
  3308     1212                     __end_of_Set_hour:
  3309                           
  3310                           	psect	text14
  3311     11CC                     __ptext14:	
  3312 ;; *************** function _Set_day *****************
  3313 ;; Defined at:
  3314 ;;		line 231 in file "main_master.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  day             1    wreg     unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  day             1    5[COMMON] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       0       0       0       0
  3329 ;;      Locals:         1       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0
  3331 ;;      Totals:         1       0       0       0       0
  3332 ;;Total ram usage:        1 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 2
  3335 ;; This function calls:
  3336 ;;		_Dec_to_Bcd
  3337 ;;		_I2C_Start
  3338 ;;		_I2C_Stop
  3339 ;;		_I2C_Write
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345     11CC                     _Set_day:	
  3346                           ;psect for function _Set_day
  3347                           
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  3351                           ;Set_day@day stored from wreg
  3352     11CC  00F5               	movwf	Set_day@day
  3353     11CD                     l4420:
  3354                           
  3355                           ;main_master.c: 232:     I2C_Start();
  3356     11CD  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3357     11D2                     l4422:
  3358                           
  3359                           ;main_master.c: 233:     I2C_Write(0xD0);
  3360     11D2  30D0               	movlw	208
  3361     11D3  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3362     11D8                     l4424:
  3363                           
  3364                           ;main_master.c: 234:     I2C_Write(0x04);
  3365     11D8  3004               	movlw	4
  3366     11D9  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3367     11DE                     l4426:
  3368                           
  3369                           ;main_master.c: 235:     I2C_Write(Dec_to_Bcd(day));
  3370     11DE  0875               	movf	Set_day@day,w
  3371     11DF  160A  118A  20F9  160A  118A  	fcall	_Dec_to_Bcd
  3372     11E4  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3373     11E9                     l4428:
  3374                           
  3375                           ;main_master.c: 236:     I2C_Stop();
  3376     11E9  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3377     11EE                     l206:
  3378     11EE  0008               	return
  3379     11EF                     __end_of_Set_day:
  3380                           
  3381                           	psect	text15
  3382     10F9                     __ptext15:	
  3383 ;; *************** function _Dec_to_Bcd *****************
  3384 ;; Defined at:
  3385 ;;		line 255 in file "main_master.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  dec_number      1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  dec_number      1    3[COMMON] unsigned char 
  3390 ;;  bcd_number      1    4[COMMON] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      unsigned char 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         2       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         2       0       0       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_Set_sec
  3411 ;;		_Set_min
  3412 ;;		_Set_hour
  3413 ;;		_Set_day
  3414 ;;		_Set_month
  3415 ;;		_Set_year
  3416 ;;		_Set_day_week
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420     10F9                     _Dec_to_Bcd:	
  3421                           ;psect for function _Dec_to_Bcd
  3422                           
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  3426                           ;Dec_to_Bcd@dec_number stored from wreg
  3427     10F9  00F3               	movwf	Dec_to_Bcd@dec_number
  3428     10FA                     l3290:
  3429                           
  3430                           ;main_master.c: 256:     uint8_t bcd_number;;main_master.c: 257:     bcd_number = 0;
  3431     10FA  01F4               	clrf	Dec_to_Bcd@bcd_number
  3432     10FB                     l3292:
  3433                           
  3434                           ;main_master.c: 259:         if (dec_number >= 10){
  3435     10FB  300A               	movlw	10
  3436     10FC  0273               	subwf	Dec_to_Bcd@dec_number,w
  3437     10FD  1C03               	skipc
  3438     10FE  2900               	goto	u4041
  3439     10FF  2901               	goto	u4040
  3440     1100                     u4041:
  3441     1100  2908               	goto	l3296
  3442     1101                     u4040:
  3443     1101                     l3294:
  3444                           
  3445                           ;main_master.c: 260:             dec_number = dec_number - 10;
  3446     1101  0873               	movf	Dec_to_Bcd@dec_number,w
  3447     1102  3EF6               	addlw	246
  3448     1103  00F3               	movwf	Dec_to_Bcd@dec_number
  3449                           
  3450                           ;main_master.c: 261:             bcd_number = bcd_number + 0b00010000;
  3451     1104  0874               	movf	Dec_to_Bcd@bcd_number,w
  3452     1105  3E10               	addlw	16
  3453     1106  00F4               	movwf	Dec_to_Bcd@bcd_number
  3454                           
  3455                           ;main_master.c: 262:         }
  3456     1107  28FB               	goto	l3292
  3457     1108                     l3296:
  3458                           
  3459                           ;main_master.c: 264:             bcd_number = bcd_number + dec_number;
  3460     1108  0873               	movf	Dec_to_Bcd@dec_number,w
  3461     1109  0774               	addwf	Dec_to_Bcd@bcd_number,w
  3462     110A  00F4               	movwf	Dec_to_Bcd@bcd_number
  3463     110B                     l3298:	
  3464                           ;main_master.c: 265:             break;
  3465                           
  3466                           
  3467                           ;main_master.c: 268:     return bcd_number;
  3468     110B  0874               	movf	Dec_to_Bcd@bcd_number,w
  3469     110C                     l220:
  3470     110C  0008               	return
  3471     110D                     __end_of_Dec_to_Bcd:
  3472                           
  3473                           	psect	text16
  3474     1342                     __ptext16:	
  3475 ;; *************** function _Read_Time *****************
  3476 ;; Defined at:
  3477 ;;		line 187 in file "main_master.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  s               1    wreg     PTR unsigned char 
  3480 ;;		 -> segundos(1), 
  3481 ;;  m               1    4[BANK0 ] PTR unsigned char 
  3482 ;;		 -> minutos(1), 
  3483 ;;  h               1    5[BANK0 ] PTR unsigned char 
  3484 ;;		 -> horas(1), 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  s               1    7[COMMON] PTR unsigned char 
  3487 ;;		 -> segundos(1), 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         0       2       0       0       0
  3498 ;;      Locals:         1       0       0       0       0
  3499 ;;      Temps:          0       0       0       0       0
  3500 ;;      Totals:         1       2       0       0       0
  3501 ;;Total ram usage:        3 bytes
  3502 ;; Hardware stack levels used: 1
  3503 ;; Hardware stack levels required when called: 3
  3504 ;; This function calls:
  3505 ;;		_Bcd_to_Dec
  3506 ;;		_Read
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512     1342                     _Read_Time:	
  3513                           ;psect for function _Read_Time
  3514                           
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3518                           ;Read_Time@s stored from wreg
  3519     1342  00F7               	movwf	Read_Time@s
  3520     1343                     l4450:
  3521                           
  3522                           ;main_master.c: 188:     *s = Bcd_to_Dec(Read(0x00));
  3523     1343  0877               	movf	Read_Time@s,w
  3524     1344  0084               	movwf	4
  3525     1345  3000               	movlw	0
  3526     1346  160A  118A  23A6  160A  118A  	fcall	_Read
  3527     134B  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3528     1350  1383               	bcf	3,7	;select IRP bank0
  3529     1351  0080               	movwf	0
  3530                           
  3531                           ;main_master.c: 189:     *m = Bcd_to_Dec(Read(0x01));
  3532     1352  1283               	bcf	3,5	;RP0=0, select bank0
  3533     1353  1303               	bcf	3,6	;RP1=0, select bank0
  3534     1354  0824               	movf	Read_Time@m,w
  3535     1355  0084               	movwf	4
  3536     1356  3001               	movlw	1
  3537     1357  160A  118A  23A6  160A  118A  	fcall	_Read
  3538     135C  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3539     1361  0080               	movwf	0
  3540                           
  3541                           ;main_master.c: 190:     *h = Bcd_to_Dec(Read(0x02));
  3542     1362  1283               	bcf	3,5	;RP0=0, select bank0
  3543     1363  1303               	bcf	3,6	;RP1=0, select bank0
  3544     1364  0825               	movf	Read_Time@h,w
  3545     1365  0084               	movwf	4
  3546     1366  3002               	movlw	2
  3547     1367  160A  118A  23A6  160A  118A  	fcall	_Read
  3548     136C  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3549     1371  0080               	movwf	0
  3550     1372                     l188:
  3551     1372  0008               	return
  3552     1373                     __end_of_Read_Time:
  3553                           
  3554                           	psect	text17
  3555     1373                     __ptext17:	
  3556 ;; *************** function _Read_Fecha *****************
  3557 ;; Defined at:
  3558 ;;		line 193 in file "main_master.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  d               1    wreg     PTR unsigned char 
  3561 ;;		 -> dia(1), 
  3562 ;;  mo              1    4[BANK0 ] PTR unsigned char 
  3563 ;;		 -> mes(1), 
  3564 ;;  y               1    5[BANK0 ] PTR unsigned char 
  3565 ;;		 -> ano(1), 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  d               1    7[COMMON] PTR unsigned char 
  3568 ;;		 -> dia(1), 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       2       0       0       0
  3579 ;;      Locals:         1       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         1       2       0       0       0
  3582 ;;Total ram usage:        3 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		_Bcd_to_Dec
  3587 ;;		_Read
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593     1373                     _Read_Fecha:	
  3594                           ;psect for function _Read_Fecha
  3595                           
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _Read_Fecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3599                           ;Read_Fecha@d stored from wreg
  3600     1373  00F7               	movwf	Read_Fecha@d
  3601     1374                     l4452:
  3602                           
  3603                           ;main_master.c: 194:     *d = Bcd_to_Dec(Read(0x04));
  3604     1374  0877               	movf	Read_Fecha@d,w
  3605     1375  0084               	movwf	4
  3606     1376  3004               	movlw	4
  3607     1377  160A  118A  23A6  160A  118A  	fcall	_Read
  3608     137C  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3609     1381  1383               	bcf	3,7	;select IRP bank0
  3610     1382  0080               	movwf	0
  3611                           
  3612                           ;main_master.c: 195:     *mo = Bcd_to_Dec(Read(0x05));
  3613     1383  1283               	bcf	3,5	;RP0=0, select bank0
  3614     1384  1303               	bcf	3,6	;RP1=0, select bank0
  3615     1385  0824               	movf	Read_Fecha@mo,w
  3616     1386  0084               	movwf	4
  3617     1387  3005               	movlw	5
  3618     1388  160A  118A  23A6  160A  118A  	fcall	_Read
  3619     138D  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3620     1392  1383               	bcf	3,7	;select IRP bank0
  3621     1393  0080               	movwf	0
  3622                           
  3623                           ;main_master.c: 196:     *y = Bcd_to_Dec(Read(0x06));
  3624     1394  1283               	bcf	3,5	;RP0=0, select bank0
  3625     1395  1303               	bcf	3,6	;RP1=0, select bank0
  3626     1396  0825               	movf	Read_Fecha@y,w
  3627     1397  0084               	movwf	4
  3628     1398  3006               	movlw	6
  3629     1399  160A  118A  23A6  160A  118A  	fcall	_Read
  3630     139E  160A  118A  2152  160A  118A  	fcall	_Bcd_to_Dec
  3631     13A3  1383               	bcf	3,7	;select IRP bank0
  3632     13A4  0080               	movwf	0
  3633     13A5                     l191:
  3634     13A5  0008               	return
  3635     13A6                     __end_of_Read_Fecha:
  3636                           
  3637                           	psect	text18
  3638     13A6                     __ptext18:	
  3639 ;; *************** function _Read *****************
  3640 ;; Defined at:
  3641 ;;		line 173 in file "main_master.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  address         1    wreg     unsigned char 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  address         1    5[COMMON] unsigned char 
  3646 ;;  dato            1    6[COMMON] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      unsigned char 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3656 ;;      Params:         0       0       0       0       0
  3657 ;;      Locals:         2       0       0       0       0
  3658 ;;      Temps:          1       0       0       0       0
  3659 ;;      Totals:         3       0       0       0       0
  3660 ;;Total ram usage:        3 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 2
  3663 ;; This function calls:
  3664 ;;		_I2C_Nack
  3665 ;;		_I2C_Read
  3666 ;;		_I2C_Restart
  3667 ;;		_I2C_Start
  3668 ;;		_I2C_Stop
  3669 ;;		_I2C_Write
  3670 ;; This function is called by:
  3671 ;;		_Read_Time
  3672 ;;		_Read_Fecha
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676     13A6                     _Read:	
  3677                           ;psect for function _Read
  3678                           
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  3682                           ;Read@address stored from wreg
  3683     13A6  00F5               	movwf	Read@address
  3684     13A7                     l4272:
  3685     13A7                     l4274:
  3686                           
  3687                           ;main_master.c: 175:     I2C_Start();
  3688     13A7  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  3689     13AC                     l4276:
  3690                           
  3691                           ;main_master.c: 176:     I2C_Write(0xD0);
  3692     13AC  30D0               	movlw	208
  3693     13AD  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3694     13B2                     l4278:
  3695                           
  3696                           ;main_master.c: 177:     I2C_Write(address);
  3697     13B2  0875               	movf	Read@address,w
  3698     13B3  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3699     13B8                     l4280:
  3700                           
  3701                           ;main_master.c: 178:     I2C_Restart();
  3702     13B8  160A  118A  2090  160A  118A  	fcall	_I2C_Restart
  3703     13BD                     l4282:
  3704                           
  3705                           ;main_master.c: 179:     I2C_Write(0xD1);
  3706     13BD  30D1               	movlw	209
  3707     13BE  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  3708     13C3                     l4284:
  3709                           
  3710                           ;main_master.c: 180:     dato = I2C_Read();
  3711     13C3  160A  118A  20B9  160A  118A  	fcall	_I2C_Read
  3712     13C8  00F6               	movwf	Read@dato
  3713     13C9                     l4286:
  3714                           
  3715                           ;main_master.c: 181:     I2C_Nack();
  3716     13C9  160A  118A  20AE  160A  118A  	fcall	_I2C_Nack
  3717     13CE                     l4288:
  3718                           
  3719                           ;main_master.c: 182:     I2C_Stop();
  3720     13CE  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  3721     13D3                     l4290:
  3722                           
  3723                           ;main_master.c: 183:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3724     13D3  3006               	movlw	6
  3725     13D4  00F4               	movwf	??_Read
  3726     13D5                     u5587:
  3727     13D5  0BF4               	decfsz	??_Read,f
  3728     13D6  2BD5               	goto	u5587
  3729     13D7  0000               	nop
  3730     13D8                     l4292:
  3731                           
  3732                           ;main_master.c: 184:     return dato;
  3733     13D8  0876               	movf	Read@dato,w
  3734     13D9                     l185:
  3735     13D9  0008               	return
  3736     13DA                     __end_of_Read:
  3737                           
  3738                           	psect	text19
  3739     1152                     __ptext19:	
  3740 ;; *************** function _Bcd_to_Dec *****************
  3741 ;; Defined at:
  3742 ;;		line 271 in file "main_master.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  bcd             1    wreg     unsigned char 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  bcd             1    3[BANK0 ] unsigned char 
  3747 ;;  dec             1    2[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      unsigned char 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         0       2       0       0       0
  3759 ;;      Temps:          0       2       0       0       0
  3760 ;;      Totals:         0       4       0       0       0
  3761 ;;Total ram usage:        4 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 2
  3764 ;; This function calls:
  3765 ;;		___bmul
  3766 ;; This function is called by:
  3767 ;;		_Read_Time
  3768 ;;		_Read_Fecha
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772     1152                     _Bcd_to_Dec:	
  3773                           ;psect for function _Bcd_to_Dec
  3774                           
  3775                           
  3776                           ;incstack = 0
  3777                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  3778                           ;Bcd_to_Dec@bcd stored from wreg
  3779     1152  1283               	bcf	3,5	;RP0=0, select bank0
  3780     1153  1303               	bcf	3,6	;RP1=0, select bank0
  3781     1154  00A3               	movwf	Bcd_to_Dec@bcd
  3782     1155                     l4296:
  3783                           
  3784                           ;main_master.c: 272:     uint8_t dec;;main_master.c: 273:     dec = ((bcd>>4)*10)+(bcd &
      +                           0b00001111);
  3785     1155  300F               	movlw	15
  3786     1156  0523               	andwf	Bcd_to_Dec@bcd,w
  3787     1157  00A0               	movwf	??_Bcd_to_Dec
  3788     1158  300A               	movlw	10
  3789     1159  00F3               	movwf	___bmul@multiplicand
  3790     115A  0823               	movf	Bcd_to_Dec@bcd,w
  3791     115B  00A1               	movwf	??_Bcd_to_Dec+1
  3792     115C  3004               	movlw	4
  3793     115D                     u5295:
  3794     115D  1003               	clrc
  3795     115E  0CA1               	rrf	??_Bcd_to_Dec+1,f
  3796     115F  3EFF               	addlw	-1
  3797     1160  1D03               	skipz
  3798     1161  295D               	goto	u5295
  3799     1162  0821               	movf	??_Bcd_to_Dec+1,w
  3800     1163  160A  118A  210D  160A  118A  	fcall	___bmul
  3801     1168  1283               	bcf	3,5	;RP0=0, select bank0
  3802     1169  1303               	bcf	3,6	;RP1=0, select bank0
  3803     116A  0720               	addwf	??_Bcd_to_Dec,w
  3804     116B  00A2               	movwf	Bcd_to_Dec@dec
  3805     116C                     l4298:
  3806                           
  3807                           ;main_master.c: 274:     return dec;
  3808     116C  0822               	movf	Bcd_to_Dec@dec,w
  3809     116D                     l223:
  3810     116D  0008               	return
  3811     116E                     __end_of_Bcd_to_Dec:
  3812                           
  3813                           	psect	text20
  3814     110D                     __ptext20:	
  3815 ;; *************** function ___bmul *****************
  3816 ;; Defined at:
  3817 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  multiplier      1    wreg     unsigned char 
  3820 ;;  multiplicand    1    3[COMMON] unsigned char 
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  multiplier      1    6[COMMON] unsigned char 
  3823 ;;  product         1    5[COMMON] unsigned char 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      unsigned char 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         1       0       0       0       0
  3834 ;;      Locals:         2       0       0       0       0
  3835 ;;      Temps:          1       0       0       0       0
  3836 ;;      Totals:         4       0       0       0       0
  3837 ;;Total ram usage:        4 bytes
  3838 ;; Hardware stack levels used: 1
  3839 ;; Hardware stack levels required when called: 1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_Bcd_to_Dec
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847     110D                     ___bmul:	
  3848                           ;psect for function ___bmul
  3849                           
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3853                           ;___bmul@multiplier stored from wreg
  3854     110D  00F6               	movwf	___bmul@multiplier
  3855     110E                     l3898:
  3856     110E  01F5               	clrf	___bmul@product
  3857     110F                     l3900:
  3858     110F  1C76               	btfss	___bmul@multiplier,0
  3859     1110  2912               	goto	u4491
  3860     1111  2913               	goto	u4490
  3861     1112                     u4491:
  3862     1112  2917               	goto	l3904
  3863     1113                     u4490:
  3864     1113                     l3902:
  3865     1113  0873               	movf	___bmul@multiplicand,w
  3866     1114  00F4               	movwf	??___bmul
  3867     1115  0874               	movf	??___bmul,w
  3868     1116  07F5               	addwf	___bmul@product,f
  3869     1117                     l3904:
  3870     1117  1003               	clrc
  3871     1118  0DF3               	rlf	___bmul@multiplicand,f
  3872     1119                     l3906:
  3873     1119  1003               	clrc
  3874     111A  0CF6               	rrf	___bmul@multiplier,f
  3875     111B  0876               	movf	___bmul@multiplier,w
  3876     111C  1D03               	btfss	3,2
  3877     111D  291F               	goto	u4501
  3878     111E  2920               	goto	u4500
  3879     111F                     u4501:
  3880     111F  290F               	goto	l3900
  3881     1120                     u4500:
  3882     1120                     l3908:
  3883     1120  0875               	movf	___bmul@product,w
  3884     1121                     l525:
  3885     1121  0008               	return
  3886     1122                     __end_of___bmul:
  3887                           
  3888                           	psect	text21
  3889     1587                     __ptext21:	
  3890 ;; *************** function _Lcd_Init *****************
  3891 ;; Defined at:
  3892 ;;		line 65 in file "LCD.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0
  3908 ;;      Temps:          0       2       0       0       0
  3909 ;;      Totals:         0       2       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 3
  3913 ;; This function calls:
  3914 ;;		_Lcd_Cmd
  3915 ;;		_Lcd_Port
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921     1587                     _Lcd_Init:	
  3922                           ;psect for function _Lcd_Init
  3923                           
  3924     1587                     l4342:	
  3925                           ;incstack = 0
  3926                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3927                           
  3928                           
  3929                           ;LCD.c: 66:     Lcd_Port(0x00);
  3930     1587  3000               	movlw	0
  3931     1588  160A  118A  21AA  160A  118A  	fcall	_Lcd_Port
  3932     158D                     l4344:
  3933                           
  3934                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3935     158D  3034               	movlw	52
  3936     158E  1283               	bcf	3,5	;RP0=0, select bank0
  3937     158F  1303               	bcf	3,6	;RP1=0, select bank0
  3938     1590  00A1               	movwf	??_Lcd_Init+1
  3939     1591  30F1               	movlw	241
  3940     1592  00A0               	movwf	??_Lcd_Init
  3941     1593                     u5597:
  3942     1593  0BA0               	decfsz	??_Lcd_Init,f
  3943     1594  2D93               	goto	u5597
  3944     1595  0BA1               	decfsz	??_Lcd_Init+1,f
  3945     1596  2D93               	goto	u5597
  3946     1597                     l4346:
  3947                           
  3948                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3949     1597  3003               	movlw	3
  3950     1598  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3951                           
  3952                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3953     159D  300D               	movlw	13
  3954     159E  1283               	bcf	3,5	;RP0=0, select bank0
  3955     159F  1303               	bcf	3,6	;RP1=0, select bank0
  3956     15A0  00A1               	movwf	??_Lcd_Init+1
  3957     15A1  30FB               	movlw	251
  3958     15A2  00A0               	movwf	??_Lcd_Init
  3959     15A3                     u5607:
  3960     15A3  0BA0               	decfsz	??_Lcd_Init,f
  3961     15A4  2DA3               	goto	u5607
  3962     15A5  0BA1               	decfsz	??_Lcd_Init+1,f
  3963     15A6  2DA3               	goto	u5607
  3964     15A7                     l4348:
  3965                           
  3966                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3967     15A7  3003               	movlw	3
  3968     15A8  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3969     15AD                     l4350:
  3970                           
  3971                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3972     15AD  3084               	movlw	132
  3973     15AE  1283               	bcf	3,5	;RP0=0, select bank0
  3974     15AF  1303               	bcf	3,6	;RP1=0, select bank0
  3975     15B0  00A0               	movwf	??_Lcd_Init
  3976     15B1                     u5617:
  3977     15B1  0BA0               	decfsz	??_Lcd_Init,f
  3978     15B2  2DB1               	goto	u5617
  3979     15B3  0000               	nop
  3980                           
  3981                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3982     15B4  3003               	movlw	3
  3983     15B5  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3984                           
  3985                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  3986     15BA  3002               	movlw	2
  3987     15BB  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3988                           
  3989                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3990     15C0  3002               	movlw	2
  3991     15C1  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3992                           
  3993                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  3994     15C6  3008               	movlw	8
  3995     15C7  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  3996                           
  3997                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  3998     15CC  3000               	movlw	0
  3999     15CD  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4000                           
  4001                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  4002     15D2  300C               	movlw	12
  4003     15D3  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4004                           
  4005                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  4006     15D8  3000               	movlw	0
  4007     15D9  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4008                           
  4009                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  4010     15DE  3006               	movlw	6
  4011     15DF  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4012     15E4                     l4352:
  4013                           
  4014                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  4015     15E4  3041               	movlw	65
  4016     15E5  1283               	bcf	3,5	;RP0=0, select bank0
  4017     15E6  1303               	bcf	3,6	;RP1=0, select bank0
  4018     15E7  00A0               	movwf	??_Lcd_Init
  4019     15E8                     u5627:
  4020     15E8  0BA0               	decfsz	??_Lcd_Init,f
  4021     15E9  2DE8               	goto	u5627
  4022     15EA  2DEB               	nop2
  4023     15EB                     l288:
  4024     15EB  0008               	return
  4025     15EC                     __end_of_Lcd_Init:
  4026                           
  4027                           	psect	text22
  4028     10DA                     __ptext22:	
  4029 ;; *************** function _Lcd_Clear *****************
  4030 ;; Defined at:
  4031 ;;		line 43 in file "LCD.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0
  4048 ;;      Totals:         0       0       0       0       0
  4049 ;;Total ram usage:        0 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 3
  4052 ;; This function calls:
  4053 ;;		_Lcd_Cmd
  4054 ;; This function is called by:
  4055 ;;		_main
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059     10DA                     _Lcd_Clear:	
  4060                           ;psect for function _Lcd_Clear
  4061                           
  4062     10DA                     l3420:	
  4063                           ;incstack = 0
  4064                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4065                           
  4066                           
  4067                           ;LCD.c: 44:     Lcd_Cmd(0);
  4068     10DA  3000               	movlw	0
  4069     10DB  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4070                           
  4071                           ;LCD.c: 45:     Lcd_Cmd(1);
  4072     10E0  3001               	movlw	1
  4073     10E1  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  4074     10E6                     l279:
  4075     10E6  0008               	return
  4076     10E7                     __end_of_Lcd_Clear:
  4077                           
  4078                           	psect	text23
  4079     12EE                     __ptext23:	
  4080 ;; *************** function _AHT10_Soft_Reset *****************
  4081 ;; Defined at:
  4082 ;;		line 361 in file "main_master.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0
  4098 ;;      Temps:          2       0       0       0       0
  4099 ;;      Totals:         2       0       0       0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 2
  4103 ;; This function calls:
  4104 ;;		_I2C_Start
  4105 ;;		_I2C_Stop
  4106 ;;		_I2C_Write
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     12EE                     _AHT10_Soft_Reset:	
  4113                           ;psect for function _AHT10_Soft_Reset
  4114                           
  4115     12EE                     l4354:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _AHT10_Soft_Reset: [wreg+status,2+status,0+pclath+cstack]
  4118                           
  4119                           
  4120                           ;main_master.c: 362:     _delay((unsigned long)((40)*(8000000/4000.0)));
  4121     12EE  3068               	movlw	104
  4122     12EF  00F5               	movwf	??_AHT10_Soft_Reset+1
  4123     12F0  30E4               	movlw	228
  4124     12F1  00F4               	movwf	??_AHT10_Soft_Reset
  4125     12F2                     u5637:
  4126     12F2  0BF4               	decfsz	??_AHT10_Soft_Reset,f
  4127     12F3  2AF2               	goto	u5637
  4128     12F4  0BF5               	decfsz	??_AHT10_Soft_Reset+1,f
  4129     12F5  2AF2               	goto	u5637
  4130     12F6  0000               	nop
  4131     12F7                     l4356:
  4132                           
  4133                           ;main_master.c: 363:     I2C_Start();
  4134     12F7  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  4135                           
  4136                           ;main_master.c: 364:     I2C_Write(0x70);
  4137     12FC  3070               	movlw	112
  4138     12FD  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  4139                           
  4140                           ;main_master.c: 365:     I2C_Write(0xBA);
  4141     1302  30BA               	movlw	186
  4142     1303  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  4143     1308                     l4358:
  4144                           
  4145                           ;main_master.c: 366:     I2C_Stop();
  4146     1308  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  4147                           
  4148                           ;main_master.c: 367:     _delay((unsigned long)((25)*(8000000/4000.0)));
  4149     130D  3041               	movlw	65
  4150     130E  00F5               	movwf	??_AHT10_Soft_Reset+1
  4151     130F  30EE               	movlw	238
  4152     1310  00F4               	movwf	??_AHT10_Soft_Reset
  4153     1311                     u5647:
  4154     1311  0BF4               	decfsz	??_AHT10_Soft_Reset,f
  4155     1312  2B11               	goto	u5647
  4156     1313  0BF5               	decfsz	??_AHT10_Soft_Reset+1,f
  4157     1314  2B11               	goto	u5647
  4158     1315  0000               	nop
  4159     1316                     l235:
  4160     1316  0008               	return
  4161     1317                     __end_of_AHT10_Soft_Reset:
  4162                           
  4163                           	psect	text24
  4164     0A23                     __ptext24:	
  4165 ;; *************** function _AHT10_Read *****************
  4166 ;; Defined at:
  4167 ;;		line 303 in file "main_master.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  data            7   32[BANK1 ] unsigned char [7]
  4172 ;;  temperatura     4   39[BANK1 ] float 
  4173 ;;  r               1    0        unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4183 ;;      Params:         0       0       0       0       0
  4184 ;;      Locals:         0       0      11       0       0
  4185 ;;      Temps:          0       0      14       0       0
  4186 ;;      Totals:         0       0      25       0       0
  4187 ;;Total ram usage:       25 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 4
  4190 ;; This function calls:
  4191 ;;		_I2C_Ack
  4192 ;;		_I2C_Nack
  4193 ;;		_I2C_Read
  4194 ;;		_I2C_Restart
  4195 ;;		_I2C_Start
  4196 ;;		_I2C_Stop
  4197 ;;		_I2C_Write
  4198 ;;		_Lcd_Set_Cursor
  4199 ;;		_Lcd_Write_String
  4200 ;;		___fladd
  4201 ;;		___fldiv
  4202 ;;		___flmul
  4203 ;;		___xxtofl
  4204 ;;		_floattostr
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     0A23                     _AHT10_Read:	
  4211                           ;psect for function _AHT10_Read
  4212                           
  4213     0A23                     l4454:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _AHT10_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4216                           
  4217                           
  4218                           ;main_master.c: 304:     uint8_t data[7];;main_master.c: 305:     float temperatura;;mai
      +                          n_master.c: 307:     uint8_t r;;main_master.c: 308:     I2C_Start();
  4219     0A23  160A  118A  209A  120A  158A  	fcall	_I2C_Start
  4220     0A28                     l4456:
  4221                           
  4222                           ;main_master.c: 309:     I2C_Write(0x70);
  4223     0A28  3070               	movlw	112
  4224     0A29  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4225     0A2E                     l4458:
  4226                           
  4227                           ;main_master.c: 310:     I2C_Write(0xAC);
  4228     0A2E  30AC               	movlw	172
  4229     0A2F  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4230     0A34                     l4460:
  4231                           
  4232                           ;main_master.c: 311:     I2C_Write(0x33);
  4233     0A34  3033               	movlw	51
  4234     0A35  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4235     0A3A                     l4462:
  4236                           
  4237                           ;main_master.c: 312:     I2C_Write(0x00);
  4238     0A3A  3000               	movlw	0
  4239     0A3B  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4240                           
  4241                           ;main_master.c: 313:     I2C_Stop();
  4242     0A40  160A  118A  20A4  120A  158A  	fcall	_I2C_Stop
  4243     0A45                     l4464:
  4244                           
  4245                           ;main_master.c: 314:     _delay((unsigned long)((80)*(8000000/4000.0)));
  4246     0A45  30D0               	movlw	208
  4247     0A46  1683               	bsf	3,5	;RP0=1, select bank1
  4248     0A47  1303               	bcf	3,6	;RP1=0, select bank1
  4249     0A48  00B3               	movwf	(??_AHT10_Read^(0+128)+1)
  4250     0A49  30C9               	movlw	201
  4251     0A4A  00B2               	movwf	??_AHT10_Read^(0+128)
  4252     0A4B                     u5657:
  4253     0A4B  0BB2               	decfsz	??_AHT10_Read^(0+128),f
  4254     0A4C  2A4B               	goto	u5657
  4255     0A4D  0BB3               	decfsz	(??_AHT10_Read^(0+128)+1),f
  4256     0A4E  2A4B               	goto	u5657
  4257     0A4F                     l4466:
  4258                           
  4259                           ;main_master.c: 316:     I2C_Start();
  4260     0A4F  160A  118A  209A  120A  158A  	fcall	_I2C_Start
  4261     0A54                     l4468:
  4262                           
  4263                           ;main_master.c: 317:     I2C_Write(0x70);
  4264     0A54  3070               	movlw	112
  4265     0A55  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4266     0A5A                     l4470:
  4267                           
  4268                           ;main_master.c: 318:     I2C_Write(0x71);
  4269     0A5A  3071               	movlw	113
  4270     0A5B  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4271     0A60                     l4472:
  4272                           
  4273                           ;main_master.c: 319:     I2C_Restart();
  4274     0A60  160A  118A  2090  120A  158A  	fcall	_I2C_Restart
  4275                           
  4276                           ;main_master.c: 320:     I2C_Write(0x71);
  4277     0A65  3071               	movlw	113
  4278     0A66  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4279     0A6B                     l4474:
  4280     0A6B  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4281     0A70                     l4476:
  4282                           
  4283                           ;main_master.c: 322:     I2C_Nack();
  4284     0A70  160A  118A  20AE  120A  158A  	fcall	_I2C_Nack
  4285     0A75                     l4478:
  4286                           
  4287                           ;main_master.c: 323:     I2C_Stop();
  4288     0A75  160A  118A  20A4  120A  158A  	fcall	_I2C_Stop
  4289     0A7A                     l4480:
  4290     0A7A                     l4482:	
  4291                           ;main_master.c: 326:     while (r != 0b00000000);
  4292                           
  4293     0A7A                     l4484:
  4294                           
  4295                           ;main_master.c: 328:     I2C_Start();
  4296     0A7A  160A  118A  209A  120A  158A  	fcall	_I2C_Start
  4297     0A7F                     l4486:
  4298                           
  4299                           ;main_master.c: 329:     I2C_Write(0x71);
  4300     0A7F  3071               	movlw	113
  4301     0A80  120A  118A  27F2  120A  158A  	fcall	_I2C_Write
  4302     0A85                     l4488:
  4303                           
  4304                           ;main_master.c: 335:     data[0] = I2C_Read();
  4305     0A85  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4306     0A8A  1683               	bsf	3,5	;RP0=1, select bank1
  4307     0A8B  1303               	bcf	3,6	;RP1=0, select bank1
  4308     0A8C  00C0               	movwf	AHT10_Read@data^(0+128)
  4309     0A8D                     l4490:
  4310                           
  4311                           ;main_master.c: 336:     I2C_Ack();
  4312     0A8D  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4313     0A92                     l4492:
  4314                           
  4315                           ;main_master.c: 337:     data[1] = I2C_Read();
  4316     0A92  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4317     0A97  1683               	bsf	3,5	;RP0=1, select bank1
  4318     0A98  1303               	bcf	3,6	;RP1=0, select bank1
  4319     0A99  00C1               	movwf	(AHT10_Read@data^(0+128)+1)
  4320     0A9A                     l4494:
  4321                           
  4322                           ;main_master.c: 338:     I2C_Ack();
  4323     0A9A  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4324     0A9F                     l4496:
  4325                           
  4326                           ;main_master.c: 339:     data[2] = I2C_Read();
  4327     0A9F  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4328     0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  4329     0AA5  1303               	bcf	3,6	;RP1=0, select bank1
  4330     0AA6  00C2               	movwf	(AHT10_Read@data^(0+128)+2)
  4331     0AA7                     l4498:
  4332                           
  4333                           ;main_master.c: 340:     I2C_Ack();
  4334     0AA7  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4335     0AAC                     l4500:
  4336                           
  4337                           ;main_master.c: 341:     data[3] = I2C_Read();
  4338     0AAC  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4339     0AB1  1683               	bsf	3,5	;RP0=1, select bank1
  4340     0AB2  1303               	bcf	3,6	;RP1=0, select bank1
  4341     0AB3  00C3               	movwf	(AHT10_Read@data^(0+128)+3)
  4342     0AB4                     l4502:
  4343                           
  4344                           ;main_master.c: 342:     I2C_Ack();
  4345     0AB4  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4346     0AB9                     l4504:
  4347                           
  4348                           ;main_master.c: 343:     data[4] = I2C_Read();
  4349     0AB9  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4350     0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  4351     0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  4352     0AC0  00C4               	movwf	(AHT10_Read@data^(0+128)+4)
  4353     0AC1                     l4506:
  4354                           
  4355                           ;main_master.c: 344:     I2C_Ack();
  4356     0AC1  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4357     0AC6                     l4508:
  4358                           
  4359                           ;main_master.c: 345:     data[5] = I2C_Read();
  4360     0AC6  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4361     0ACB  1683               	bsf	3,5	;RP0=1, select bank1
  4362     0ACC  1303               	bcf	3,6	;RP1=0, select bank1
  4363     0ACD  00C5               	movwf	(AHT10_Read@data^(0+128)+5)
  4364     0ACE                     l4510:
  4365                           
  4366                           ;main_master.c: 346:     I2C_Ack();
  4367     0ACE  160A  118A  20C4  120A  158A  	fcall	_I2C_Ack
  4368     0AD3                     l4512:
  4369                           
  4370                           ;main_master.c: 347:     data[6] = I2C_Read();
  4371     0AD3  160A  118A  20B9  120A  158A  	fcall	_I2C_Read
  4372     0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  4373     0AD9  1303               	bcf	3,6	;RP1=0, select bank1
  4374     0ADA  00C6               	movwf	(AHT10_Read@data^(0+128)+6)
  4375     0ADB                     l4514:
  4376                           
  4377                           ;main_master.c: 348:     I2C_Nack();
  4378     0ADB  160A  118A  20AE  120A  158A  	fcall	_I2C_Nack
  4379     0AE0                     l4516:
  4380                           
  4381                           ;main_master.c: 349:     I2C_Stop();
  4382     0AE0  160A  118A  20A4  120A  158A  	fcall	_I2C_Stop
  4383     0AE5                     l4518:
  4384                           
  4385                           ;main_master.c: 354:  temperatura = (((uint32_t)data[3] & 0x0F) << 16) + ((uint16_t)data
      +                          [4] << 8) + data[5];
  4386     0AE5  1683               	bsf	3,5	;RP0=1, select bank1
  4387     0AE6  1303               	bcf	3,6	;RP1=0, select bank1
  4388     0AE7  0845               	movf	(AHT10_Read@data^(0+128)+5),w
  4389     0AE8  00B2               	movwf	??_AHT10_Read^(0+128)
  4390     0AE9  01B3               	clrf	(??_AHT10_Read^(0+128)+1)
  4391     0AEA  01B4               	clrf	(??_AHT10_Read^(0+128)+2)
  4392     0AEB  01B5               	clrf	(??_AHT10_Read^(0+128)+3)
  4393     0AEC  0844               	movf	(AHT10_Read@data^(0+128)+4),w
  4394     0AED  00B6               	movwf	(??_AHT10_Read+4)^(0+128)
  4395     0AEE  01B7               	clrf	((??_AHT10_Read+4)^(0+128)+1)
  4396     0AEF  0836               	movf	(??_AHT10_Read+4)^(0+128),w
  4397     0AF0  00B7               	movwf	((??_AHT10_Read+4)^(0+128)+1)
  4398     0AF1  01B6               	clrf	(??_AHT10_Read+4)^(0+128)
  4399     0AF2  0836               	movf	(??_AHT10_Read+4)^(0+128),w
  4400     0AF3  00B8               	movwf	(??_AHT10_Read+6)^(0+128)
  4401     0AF4  0837               	movf	(??_AHT10_Read+5)^(0+128),w
  4402     0AF5  00B9               	movwf	((??_AHT10_Read+6)^(0+128)+1)
  4403     0AF6  01BA               	clrf	((??_AHT10_Read+6)^(0+128)+2)
  4404     0AF7  01BB               	clrf	((??_AHT10_Read+6)^(0+128)+3)
  4405     0AF8  0843               	movf	(AHT10_Read@data^(0+128)+3),w
  4406     0AF9  390F               	andlw	15
  4407     0AFA  00BC               	movwf	(??_AHT10_Read+10)^(0+128)
  4408     0AFB  01BD               	clrf	((??_AHT10_Read+10)^(0+128)+1)
  4409     0AFC  01BE               	clrf	((??_AHT10_Read+10)^(0+128)+2)
  4410     0AFD  01BF               	clrf	((??_AHT10_Read+10)^(0+128)+3)
  4411     0AFE  3010               	movlw	16
  4412     0AFF                     u5415:
  4413     0AFF  1003               	clrc
  4414     0B00  0DBC               	rlf	(??_AHT10_Read+10)^(0+128),f
  4415     0B01  0DBD               	rlf	((??_AHT10_Read+10)^(0+128)+1),f
  4416     0B02  0DBE               	rlf	((??_AHT10_Read+10)^(0+128)+2),f
  4417     0B03  0DBF               	rlf	((??_AHT10_Read+10)^(0+128)+3),f
  4418     0B04                     u5410:
  4419     0B04  3EFF               	addlw	-1
  4420     0B05  1D03               	skipz
  4421     0B06  2AFF               	goto	u5415
  4422     0B07  083C               	movf	(??_AHT10_Read+10)^(0+128),w
  4423     0B08  07B8               	addwf	(??_AHT10_Read+6)^(0+128),f
  4424     0B09  083D               	movf	(??_AHT10_Read+11)^(0+128),w
  4425     0B0A  1803               	skipnc
  4426     0B0B  0F3D               	incfsz	(??_AHT10_Read+11)^(0+128),w
  4427     0B0C  2B0E               	goto	u5420
  4428     0B0D  2B0F               	goto	u5421
  4429     0B0E                     u5420:
  4430     0B0E  07B9               	addwf	((??_AHT10_Read+6)^(0+128)+1),f
  4431     0B0F                     u5421:
  4432     0B0F  083E               	movf	(??_AHT10_Read+12)^(0+128),w
  4433     0B10  1803               	skipnc
  4434     0B11  0F3E               	incfsz	(??_AHT10_Read+12)^(0+128),w
  4435     0B12  2B14               	goto	u5422
  4436     0B13  2B15               	goto	u5423
  4437     0B14                     u5422:
  4438     0B14  07BA               	addwf	((??_AHT10_Read+6)^(0+128)+2),f
  4439     0B15                     u5423:
  4440     0B15  083F               	movf	(??_AHT10_Read+13)^(0+128),w
  4441     0B16  1803               	skipnc
  4442     0B17  0A3F               	incf	(??_AHT10_Read+13)^(0+128),w
  4443     0B18  07BB               	addwf	((??_AHT10_Read+6)^(0+128)+3),f
  4444     0B19  0838               	movf	(??_AHT10_Read+6)^(0+128),w
  4445     0B1A  07B2               	addwf	??_AHT10_Read^(0+128),f
  4446     0B1B  0839               	movf	(??_AHT10_Read+7)^(0+128),w
  4447     0B1C  1803               	skipnc
  4448     0B1D  0F39               	incfsz	(??_AHT10_Read+7)^(0+128),w
  4449     0B1E  2B20               	goto	u5430
  4450     0B1F  2B21               	goto	u5431
  4451     0B20                     u5430:
  4452     0B20  07B3               	addwf	(??_AHT10_Read^(0+128)+1),f
  4453     0B21                     u5431:
  4454     0B21  083A               	movf	(??_AHT10_Read+8)^(0+128),w
  4455     0B22  1803               	skipnc
  4456     0B23  0F3A               	incfsz	(??_AHT10_Read+8)^(0+128),w
  4457     0B24  2B26               	goto	u5432
  4458     0B25  2B27               	goto	u5433
  4459     0B26                     u5432:
  4460     0B26  07B4               	addwf	(??_AHT10_Read^(0+128)+2),f
  4461     0B27                     u5433:
  4462     0B27  083B               	movf	(??_AHT10_Read+9)^(0+128),w
  4463     0B28  1803               	skipnc
  4464     0B29  0A3B               	incf	(??_AHT10_Read+9)^(0+128),w
  4465     0B2A  07B5               	addwf	(??_AHT10_Read^(0+128)+3),f
  4466     0B2B  0835               	movf	(??_AHT10_Read+3)^(0+128),w
  4467     0B2C  00F6               	movwf	___xxtofl@val+3
  4468     0B2D  0834               	movf	(??_AHT10_Read+2)^(0+128),w
  4469     0B2E  00F5               	movwf	___xxtofl@val+2
  4470     0B2F  0833               	movf	(??_AHT10_Read+1)^(0+128),w
  4471     0B30  00F4               	movwf	___xxtofl@val+1
  4472     0B31  0832               	movf	??_AHT10_Read^(0+128),w
  4473     0B32  00F3               	movwf	___xxtofl@val
  4474     0B33  3000               	movlw	0
  4475     0B34  160A  118A  25EC  120A  158A  	fcall	___xxtofl
  4476     0B39  0876               	movf	?___xxtofl+3,w
  4477     0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  4478     0B3B  1303               	bcf	3,6	;RP1=0, select bank1
  4479     0B3C  00CA               	movwf	(AHT10_Read@temperatura+3)^(0+128)
  4480     0B3D  0875               	movf	?___xxtofl+2,w
  4481     0B3E  00C9               	movwf	(AHT10_Read@temperatura+2)^(0+128)
  4482     0B3F  0874               	movf	?___xxtofl+1,w
  4483     0B40  00C8               	movwf	(AHT10_Read@temperatura+1)^(0+128)
  4484     0B41  0873               	movf	?___xxtofl,w
  4485     0B42  00C7               	movwf	AHT10_Read@temperatura^(0+128)
  4486     0B43                     l4520:
  4487                           
  4488                           ;main_master.c: 355:     temperatura = ((temperatura/1048576)*200-50);
  4489     0B43  30C2               	movlw	194
  4490     0B44  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0B45  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0B46  00D2               	movwf	___fladd@b+3
  4493     0B47  3048               	movlw	72
  4494     0B48  00D1               	movwf	___fladd@b+2
  4495     0B49  3000               	movlw	0
  4496     0B4A  00D0               	movwf	___fladd@b+1
  4497     0B4B  3000               	movlw	0
  4498     0B4C  00CF               	movwf	___fladd@b
  4499     0B4D  3043               	movlw	67
  4500     0B4E  00B8               	movwf	___flmul@b+3
  4501     0B4F  3048               	movlw	72
  4502     0B50  00B7               	movwf	___flmul@b+2
  4503     0B51  3000               	movlw	0
  4504     0B52  00B6               	movwf	___flmul@b+1
  4505     0B53  3000               	movlw	0
  4506     0B54  00B5               	movwf	___flmul@b
  4507     0B55  3049               	movlw	73
  4508     0B56  00A3               	movwf	___fldiv@a+3
  4509     0B57  3080               	movlw	128
  4510     0B58  00A2               	movwf	___fldiv@a+2
  4511     0B59  3000               	movlw	0
  4512     0B5A  00A1               	movwf	___fldiv@a+1
  4513     0B5B  3000               	movlw	0
  4514     0B5C  00A0               	movwf	___fldiv@a
  4515     0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  4516     0B5E  1303               	bcf	3,6	;RP1=0, select bank1
  4517     0B5F  084A               	movf	(AHT10_Read@temperatura+3)^(0+128),w
  4518     0B60  1283               	bcf	3,5	;RP0=0, select bank0
  4519     0B61  1303               	bcf	3,6	;RP1=0, select bank0
  4520     0B62  00A7               	movwf	___fldiv@b+3
  4521     0B63  1683               	bsf	3,5	;RP0=1, select bank1
  4522     0B64  1303               	bcf	3,6	;RP1=0, select bank1
  4523     0B65  0849               	movf	(AHT10_Read@temperatura+2)^(0+128),w
  4524     0B66  1283               	bcf	3,5	;RP0=0, select bank0
  4525     0B67  1303               	bcf	3,6	;RP1=0, select bank0
  4526     0B68  00A6               	movwf	___fldiv@b+2
  4527     0B69  1683               	bsf	3,5	;RP0=1, select bank1
  4528     0B6A  1303               	bcf	3,6	;RP1=0, select bank1
  4529     0B6B  0848               	movf	(AHT10_Read@temperatura+1)^(0+128),w
  4530     0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  4531     0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  4532     0B6E  00A5               	movwf	___fldiv@b+1
  4533     0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  4534     0B70  1303               	bcf	3,6	;RP1=0, select bank1
  4535     0B71  0847               	movf	AHT10_Read@temperatura^(0+128),w
  4536     0B72  1283               	bcf	3,5	;RP0=0, select bank0
  4537     0B73  1303               	bcf	3,6	;RP1=0, select bank0
  4538     0B74  00A4               	movwf	___fldiv@b
  4539     0B75  120A  158A  23D5  120A  158A  	fcall	___fldiv
  4540     0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  4541     0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  4542     0B7C  0823               	movf	?___fldiv+3,w
  4543     0B7D  00BC               	movwf	___flmul@a+3
  4544     0B7E  0822               	movf	?___fldiv+2,w
  4545     0B7F  00BB               	movwf	___flmul@a+2
  4546     0B80  0821               	movf	?___fldiv+1,w
  4547     0B81  00BA               	movwf	___flmul@a+1
  4548     0B82  0820               	movf	?___fldiv,w
  4549     0B83  00B9               	movwf	___flmul@a
  4550     0B84  120A  118A  2409  120A  158A  	fcall	___flmul
  4551     0B89  1283               	bcf	3,5	;RP0=0, select bank0
  4552     0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  4553     0B8B  0838               	movf	?___flmul+3,w
  4554     0B8C  00D6               	movwf	___fladd@a+3
  4555     0B8D  0837               	movf	?___flmul+2,w
  4556     0B8E  00D5               	movwf	___fladd@a+2
  4557     0B8F  0836               	movf	?___flmul+1,w
  4558     0B90  00D4               	movwf	___fladd@a+1
  4559     0B91  0835               	movf	?___flmul,w
  4560     0B92  00D3               	movwf	___fladd@a
  4561     0B93  120A  158A  25A8  120A  158A  	fcall	___fladd
  4562     0B98  1283               	bcf	3,5	;RP0=0, select bank0
  4563     0B99  1303               	bcf	3,6	;RP1=0, select bank0
  4564     0B9A  0852               	movf	?___fladd+3,w
  4565     0B9B  1683               	bsf	3,5	;RP0=1, select bank1
  4566     0B9C  1303               	bcf	3,6	;RP1=0, select bank1
  4567     0B9D  00CA               	movwf	(AHT10_Read@temperatura+3)^(0+128)
  4568     0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4569     0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4570     0BA0  0851               	movf	?___fladd+2,w
  4571     0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  4572     0BA2  1303               	bcf	3,6	;RP1=0, select bank1
  4573     0BA3  00C9               	movwf	(AHT10_Read@temperatura+2)^(0+128)
  4574     0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4575     0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4576     0BA6  0850               	movf	?___fladd+1,w
  4577     0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  4578     0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  4579     0BA9  00C8               	movwf	(AHT10_Read@temperatura+1)^(0+128)
  4580     0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  4581     0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  4582     0BAC  084F               	movf	?___fladd,w
  4583     0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  4584     0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  4585     0BAF  00C7               	movwf	AHT10_Read@temperatura^(0+128)
  4586     0BB0                     l4522:
  4587                           
  4588                           ;main_master.c: 356:     floattostr(temperatura, buffer2, 2);
  4589     0BB0  084A               	movf	(AHT10_Read@temperatura+3)^(0+128),w
  4590     0BB1  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4591     0BB2  0849               	movf	(AHT10_Read@temperatura+2)^(0+128),w
  4592     0BB3  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4593     0BB4  0848               	movf	(AHT10_Read@temperatura+1)^(0+128),w
  4594     0BB5  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4595     0BB6  0847               	movf	AHT10_Read@temperatura^(0+128),w
  4596     0BB7  00A0               	movwf	floattostr@numero_^(0+128)
  4597     0BB8  30A0               	movlw	(low (_buffer2| (0+256)))& (0+255)
  4598     0BB9  00A4               	movwf	floattostr@cadena_^(0+128)
  4599     0BBA  3002               	movlw	2
  4600     0BBB  00A5               	movwf	floattostr@decimales_^(0+128)
  4601     0BBC  120A  118A  202B  120A  158A  	fcall	_floattostr
  4602     0BC1                     l4524:
  4603                           
  4604                           ;main_master.c: 357:     Lcd_Set_Cursor(1,12);
  4605     0BC1  300C               	movlw	12
  4606     0BC2  00F7               	movwf	Lcd_Set_Cursor@b
  4607     0BC3  3001               	movlw	1
  4608     0BC4  160A  118A  24D7  120A  158A  	fcall	_Lcd_Set_Cursor
  4609     0BC9                     l4526:
  4610                           
  4611                           ;main_master.c: 358:     Lcd_Write_String(buffer2);
  4612     0BC9  30A0               	movlw	(low (_buffer2| (0+256)))& (0+255)
  4613     0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  4614     0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  4615     0BCC  00A0               	movwf	Lcd_Write_String@a
  4616     0BCD  3001               	movlw	1
  4617     0BCE  00A1               	movwf	Lcd_Write_String@a+1
  4618     0BCF  160A  118A  244B  120A  158A  	fcall	_Lcd_Write_String
  4619     0BD4                     l232:
  4620     0BD4  0008               	return
  4621     0BD5                     __end_of_AHT10_Read:
  4622                           
  4623                           	psect	text25
  4624     002B                     __ptext25:	
  4625 ;; *************** function _floattostr *****************
  4626 ;; Defined at:
  4627 ;;		line 11 in file "./float_str.h"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  numero_         4    0[BANK1 ] float 
  4630 ;;  cadena_         1    4[BANK1 ] PTR unsigned char 
  4631 ;;		 -> buffer2(48), 
  4632 ;;  decimales_      1    5[BANK1 ] unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  tempo_float     4    8[BANK1 ] unsigned char 
  4635 ;;  largo_entera    2   16[BANK1 ] int 
  4636 ;;  cont_for        2   14[BANK1 ] int 
  4637 ;;  largo_n         2   12[BANK1 ] int 
  4638 ;;  tempo_int       2    6[BANK1 ] int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4648 ;;      Params:         0       0       6       0       0
  4649 ;;      Locals:         0       0      12       0       0
  4650 ;;      Temps:          0       1       0       0       0
  4651 ;;      Totals:         0       1      18       0       0
  4652 ;;Total ram usage:       19 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 3
  4655 ;; This function calls:
  4656 ;;		___fladd
  4657 ;;		___fldiv
  4658 ;;		___flge
  4659 ;;		___flmul
  4660 ;;		___flneg
  4661 ;;		___flsub
  4662 ;;		___fltol
  4663 ;;		___xxtofl
  4664 ;; This function is called by:
  4665 ;;		_AHT10_Read
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669     002B                     _floattostr:	
  4670                           ;psect for function _floattostr
  4671                           
  4672     002B                     l4154:	
  4673                           ;incstack = 0
  4674                           ; Regs used in _floattostr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4675                           
  4676                           
  4677                           ;./float_str.h: 11: void floattostr(float numero_, unsigned char *cadena_,char decimales
      +                          _);./float_str.h: 12: {;./float_str.h: 13:     int largo_entera,largo_n,cont_for,tempo_i
      +                          nt;;./float_str.h: 14:     double tempo_float;;./float_str.h: 15:     largo_n = decimale
      +                          s_+1;
  4678     002B  1683               	bsf	3,5	;RP0=1, select bank1
  4679     002C  1303               	bcf	3,6	;RP1=0, select bank1
  4680     002D  0825               	movf	floattostr@decimales_^(0+128),w
  4681     002E  3E01               	addlw	1
  4682     002F  00AC               	movwf	floattostr@largo_n^(0+128)
  4683     0030  3000               	movlw	0
  4684     0031  1803               	skipnc
  4685     0032  3001               	movlw	1
  4686     0033  00AD               	movwf	(floattostr@largo_n^(0+128)+1)
  4687     0034                     l4156:
  4688                           
  4689                           ;./float_str.h: 16:     largo_entera = 0;
  4690     0034  01B0               	clrf	floattostr@largo_entera^(0+128)
  4691     0035  01B1               	clrf	(floattostr@largo_entera+1)^(0+128)
  4692     0036                     l4158:
  4693                           
  4694                           ;./float_str.h: 18:     if(numero_ < 0)
  4695     0036  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4696     0037  1283               	bcf	3,5	;RP0=0, select bank0
  4697     0038  1303               	bcf	3,6	;RP1=0, select bank0
  4698     0039  00A3               	movwf	___flge@ff1+3
  4699     003A  1683               	bsf	3,5	;RP0=1, select bank1
  4700     003B  1303               	bcf	3,6	;RP1=0, select bank1
  4701     003C  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4702     003D  1283               	bcf	3,5	;RP0=0, select bank0
  4703     003E  1303               	bcf	3,6	;RP1=0, select bank0
  4704     003F  00A2               	movwf	___flge@ff1+2
  4705     0040  1683               	bsf	3,5	;RP0=1, select bank1
  4706     0041  1303               	bcf	3,6	;RP1=0, select bank1
  4707     0042  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4708     0043  1283               	bcf	3,5	;RP0=0, select bank0
  4709     0044  1303               	bcf	3,6	;RP1=0, select bank0
  4710     0045  00A1               	movwf	___flge@ff1+1
  4711     0046  1683               	bsf	3,5	;RP0=1, select bank1
  4712     0047  1303               	bcf	3,6	;RP1=0, select bank1
  4713     0048  0820               	movf	floattostr@numero_^(0+128),w
  4714     0049  1283               	bcf	3,5	;RP0=0, select bank0
  4715     004A  1303               	bcf	3,6	;RP1=0, select bank0
  4716     004B  00A0               	movwf	___flge@ff1
  4717     004C  3000               	movlw	0
  4718     004D  00A7               	movwf	___flge@ff2+3
  4719     004E  3000               	movlw	0
  4720     004F  00A6               	movwf	___flge@ff2+2
  4721     0050  3000               	movlw	0
  4722     0051  00A5               	movwf	___flge@ff2+1
  4723     0052  3000               	movlw	0
  4724     0053  00A4               	movwf	___flge@ff2
  4725     0054  120A  118A  274E  120A  118A  	fcall	___flge
  4726     0059  1803               	btfsc	3,0
  4727     005A  285C               	goto	u5111
  4728     005B  285D               	goto	u5110
  4729     005C                     u5111:
  4730     005C  2883               	goto	l4166
  4731     005D                     u5110:
  4732     005D                     l4160:
  4733                           
  4734                           ;./float_str.h: 19:     {;./float_str.h: 20:         *cadena_++ = '-';
  4735     005D  1683               	bsf	3,5	;RP0=1, select bank1
  4736     005E  1303               	bcf	3,6	;RP1=0, select bank1
  4737     005F  0824               	movf	floattostr@cadena_^(0+128),w
  4738     0060  0084               	movwf	4
  4739     0061  302D               	movlw	45
  4740     0062  1783               	bsf	3,7	;select IRP bank2
  4741     0063  0080               	movwf	0
  4742     0064                     l4162:
  4743     0064  3001               	movlw	1
  4744     0065  1283               	bcf	3,5	;RP0=0, select bank0
  4745     0066  1303               	bcf	3,6	;RP1=0, select bank0
  4746     0067  00EB               	movwf	??_floattostr
  4747     0068  086B               	movf	??_floattostr,w
  4748     0069  1683               	bsf	3,5	;RP0=1, select bank1
  4749     006A  1303               	bcf	3,6	;RP1=0, select bank1
  4750     006B  07A4               	addwf	floattostr@cadena_^(0+128),f
  4751     006C                     l4164:
  4752                           
  4753                           ;./float_str.h: 21:         numero_ = -numero_;
  4754     006C  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4755     006D  00F6               	movwf	___flneg@f1+3
  4756     006E  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4757     006F  00F5               	movwf	___flneg@f1+2
  4758     0070  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4759     0071  00F4               	movwf	___flneg@f1+1
  4760     0072  0820               	movf	floattostr@numero_^(0+128),w
  4761     0073  00F3               	movwf	___flneg@f1
  4762     0074  160A  118A  20CF  120A  118A  	fcall	___flneg
  4763     0079  0876               	movf	?___flneg+3,w
  4764     007A  1683               	bsf	3,5	;RP0=1, select bank1
  4765     007B  1303               	bcf	3,6	;RP1=0, select bank1
  4766     007C  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4767     007D  0875               	movf	?___flneg+2,w
  4768     007E  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4769     007F  0874               	movf	?___flneg+1,w
  4770     0080  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4771     0081  0873               	movf	?___flneg,w
  4772     0082  00A0               	movwf	floattostr@numero_^(0+128)
  4773     0083                     l4166:
  4774                           
  4775                           ;./float_str.h: 23:     if(numero_ > 0.0) while (numero_ < 1.0)
  4776     0083  3000               	movlw	0
  4777     0084  1283               	bcf	3,5	;RP0=0, select bank0
  4778     0085  1303               	bcf	3,6	;RP1=0, select bank0
  4779     0086  00A3               	movwf	___flge@ff1+3
  4780     0087  3000               	movlw	0
  4781     0088  00A2               	movwf	___flge@ff1+2
  4782     0089  3000               	movlw	0
  4783     008A  00A1               	movwf	___flge@ff1+1
  4784     008B  3000               	movlw	0
  4785     008C  00A0               	movwf	___flge@ff1
  4786     008D  1683               	bsf	3,5	;RP0=1, select bank1
  4787     008E  1303               	bcf	3,6	;RP1=0, select bank1
  4788     008F  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4789     0090  1283               	bcf	3,5	;RP0=0, select bank0
  4790     0091  1303               	bcf	3,6	;RP1=0, select bank0
  4791     0092  00A7               	movwf	___flge@ff2+3
  4792     0093  1683               	bsf	3,5	;RP0=1, select bank1
  4793     0094  1303               	bcf	3,6	;RP1=0, select bank1
  4794     0095  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4795     0096  1283               	bcf	3,5	;RP0=0, select bank0
  4796     0097  1303               	bcf	3,6	;RP1=0, select bank0
  4797     0098  00A6               	movwf	___flge@ff2+2
  4798     0099  1683               	bsf	3,5	;RP0=1, select bank1
  4799     009A  1303               	bcf	3,6	;RP1=0, select bank1
  4800     009B  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4801     009C  1283               	bcf	3,5	;RP0=0, select bank0
  4802     009D  1303               	bcf	3,6	;RP1=0, select bank0
  4803     009E  00A5               	movwf	___flge@ff2+1
  4804     009F  1683               	bsf	3,5	;RP0=1, select bank1
  4805     00A0  1303               	bcf	3,6	;RP1=0, select bank1
  4806     00A1  0820               	movf	floattostr@numero_^(0+128),w
  4807     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  4808     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  4809     00A4  00A4               	movwf	___flge@ff2
  4810     00A5  120A  118A  274E  120A  118A  	fcall	___flge
  4811     00AA  1803               	btfsc	3,0
  4812     00AB  28AD               	goto	u5121
  4813     00AC  28AE               	goto	u5120
  4814     00AD                     u5121:
  4815     00AD  2963               	goto	l4180
  4816     00AE                     u5120:
  4817     00AE  28F4               	goto	l4174
  4818     00AF                     l4170:
  4819                           
  4820                           ;./float_str.h: 24:     {;./float_str.h: 25:         numero_ =numero_* 10.0;
  4821     00AF  3041               	movlw	65
  4822     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  4823     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  4824     00B2  00B8               	movwf	___flmul@b+3
  4825     00B3  3020               	movlw	32
  4826     00B4  00B7               	movwf	___flmul@b+2
  4827     00B5  3000               	movlw	0
  4828     00B6  00B6               	movwf	___flmul@b+1
  4829     00B7  3000               	movlw	0
  4830     00B8  00B5               	movwf	___flmul@b
  4831     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  4832     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  4833     00BB  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4834     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4835     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4836     00BE  00BC               	movwf	___flmul@a+3
  4837     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  4838     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  4839     00C1  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4840     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4841     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4842     00C4  00BB               	movwf	___flmul@a+2
  4843     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  4844     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  4845     00C7  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4846     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  4847     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  4848     00CA  00BA               	movwf	___flmul@a+1
  4849     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  4850     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  4851     00CD  0820               	movf	floattostr@numero_^(0+128),w
  4852     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  4853     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  4854     00D0  00B9               	movwf	___flmul@a
  4855     00D1  120A  118A  2409  120A  118A  	fcall	___flmul
  4856     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4857     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4858     00D8  0838               	movf	?___flmul+3,w
  4859     00D9  1683               	bsf	3,5	;RP0=1, select bank1
  4860     00DA  1303               	bcf	3,6	;RP1=0, select bank1
  4861     00DB  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4862     00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4863     00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4864     00DE  0837               	movf	?___flmul+2,w
  4865     00DF  1683               	bsf	3,5	;RP0=1, select bank1
  4866     00E0  1303               	bcf	3,6	;RP1=0, select bank1
  4867     00E1  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4868     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4869     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4870     00E4  0836               	movf	?___flmul+1,w
  4871     00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4872     00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4873     00E7  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4874     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  4875     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  4876     00EA  0835               	movf	?___flmul,w
  4877     00EB  1683               	bsf	3,5	;RP0=1, select bank1
  4878     00EC  1303               	bcf	3,6	;RP1=0, select bank1
  4879     00ED  00A0               	movwf	floattostr@numero_^(0+128)
  4880     00EE                     l4172:
  4881                           
  4882                           ;./float_str.h: 26:         largo_entera--;
  4883     00EE  30FF               	movlw	255
  4884     00EF  07B0               	addwf	floattostr@largo_entera^(0+128),f
  4885     00F0  1803               	skipnc
  4886     00F1  0AB1               	incf	(floattostr@largo_entera+1)^(0+128),f
  4887     00F2  30FF               	movlw	255
  4888     00F3  07B1               	addwf	(floattostr@largo_entera+1)^(0+128),f
  4889     00F4                     l4174:
  4890                           
  4891                           ;./float_str.h: 23:     if(numero_ > 0.0) while (numero_ < 1.0)
  4892     00F4  1683               	bsf	3,5	;RP0=1, select bank1
  4893     00F5  1303               	bcf	3,6	;RP1=0, select bank1
  4894     00F6  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4895     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  4896     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  4897     00F9  00A3               	movwf	___flge@ff1+3
  4898     00FA  1683               	bsf	3,5	;RP0=1, select bank1
  4899     00FB  1303               	bcf	3,6	;RP1=0, select bank1
  4900     00FC  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4901     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  4902     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  4903     00FF  00A2               	movwf	___flge@ff1+2
  4904     0100  1683               	bsf	3,5	;RP0=1, select bank1
  4905     0101  1303               	bcf	3,6	;RP1=0, select bank1
  4906     0102  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4907     0103  1283               	bcf	3,5	;RP0=0, select bank0
  4908     0104  1303               	bcf	3,6	;RP1=0, select bank0
  4909     0105  00A1               	movwf	___flge@ff1+1
  4910     0106  1683               	bsf	3,5	;RP0=1, select bank1
  4911     0107  1303               	bcf	3,6	;RP1=0, select bank1
  4912     0108  0820               	movf	floattostr@numero_^(0+128),w
  4913     0109  1283               	bcf	3,5	;RP0=0, select bank0
  4914     010A  1303               	bcf	3,6	;RP1=0, select bank0
  4915     010B  00A0               	movwf	___flge@ff1
  4916     010C  303F               	movlw	63
  4917     010D  00A7               	movwf	___flge@ff2+3
  4918     010E  3080               	movlw	128
  4919     010F  00A6               	movwf	___flge@ff2+2
  4920     0110  3000               	movlw	0
  4921     0111  00A5               	movwf	___flge@ff2+1
  4922     0112  3000               	movlw	0
  4923     0113  00A4               	movwf	___flge@ff2
  4924     0114  120A  118A  274E  120A  118A  	fcall	___flge
  4925     0119  1C03               	btfss	3,0
  4926     011A  291C               	goto	u5131
  4927     011B  291D               	goto	u5130
  4928     011C                     u5131:
  4929     011C  28AF               	goto	l4170
  4930     011D                     u5130:
  4931     011D  2963               	goto	l4180
  4932     011E                     l4176:
  4933                           
  4934                           ;./float_str.h: 29:     {;./float_str.h: 30:         numero_ = numero_/10.0;
  4935     011E  3041               	movlw	65
  4936     011F  1283               	bcf	3,5	;RP0=0, select bank0
  4937     0120  1303               	bcf	3,6	;RP1=0, select bank0
  4938     0121  00A3               	movwf	___fldiv@a+3
  4939     0122  3020               	movlw	32
  4940     0123  00A2               	movwf	___fldiv@a+2
  4941     0124  3000               	movlw	0
  4942     0125  00A1               	movwf	___fldiv@a+1
  4943     0126  3000               	movlw	0
  4944     0127  00A0               	movwf	___fldiv@a
  4945     0128  1683               	bsf	3,5	;RP0=1, select bank1
  4946     0129  1303               	bcf	3,6	;RP1=0, select bank1
  4947     012A  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4948     012B  1283               	bcf	3,5	;RP0=0, select bank0
  4949     012C  1303               	bcf	3,6	;RP1=0, select bank0
  4950     012D  00A7               	movwf	___fldiv@b+3
  4951     012E  1683               	bsf	3,5	;RP0=1, select bank1
  4952     012F  1303               	bcf	3,6	;RP1=0, select bank1
  4953     0130  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4954     0131  1283               	bcf	3,5	;RP0=0, select bank0
  4955     0132  1303               	bcf	3,6	;RP1=0, select bank0
  4956     0133  00A6               	movwf	___fldiv@b+2
  4957     0134  1683               	bsf	3,5	;RP0=1, select bank1
  4958     0135  1303               	bcf	3,6	;RP1=0, select bank1
  4959     0136  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4960     0137  1283               	bcf	3,5	;RP0=0, select bank0
  4961     0138  1303               	bcf	3,6	;RP1=0, select bank0
  4962     0139  00A5               	movwf	___fldiv@b+1
  4963     013A  1683               	bsf	3,5	;RP0=1, select bank1
  4964     013B  1303               	bcf	3,6	;RP1=0, select bank1
  4965     013C  0820               	movf	floattostr@numero_^(0+128),w
  4966     013D  1283               	bcf	3,5	;RP0=0, select bank0
  4967     013E  1303               	bcf	3,6	;RP1=0, select bank0
  4968     013F  00A4               	movwf	___fldiv@b
  4969     0140  120A  158A  23D5  120A  118A  	fcall	___fldiv
  4970     0145  1283               	bcf	3,5	;RP0=0, select bank0
  4971     0146  1303               	bcf	3,6	;RP1=0, select bank0
  4972     0147  0823               	movf	?___fldiv+3,w
  4973     0148  1683               	bsf	3,5	;RP0=1, select bank1
  4974     0149  1303               	bcf	3,6	;RP1=0, select bank1
  4975     014A  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4976     014B  1283               	bcf	3,5	;RP0=0, select bank0
  4977     014C  1303               	bcf	3,6	;RP1=0, select bank0
  4978     014D  0822               	movf	?___fldiv+2,w
  4979     014E  1683               	bsf	3,5	;RP0=1, select bank1
  4980     014F  1303               	bcf	3,6	;RP1=0, select bank1
  4981     0150  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4982     0151  1283               	bcf	3,5	;RP0=0, select bank0
  4983     0152  1303               	bcf	3,6	;RP1=0, select bank0
  4984     0153  0821               	movf	?___fldiv+1,w
  4985     0154  1683               	bsf	3,5	;RP0=1, select bank1
  4986     0155  1303               	bcf	3,6	;RP1=0, select bank1
  4987     0156  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4988     0157  1283               	bcf	3,5	;RP0=0, select bank0
  4989     0158  1303               	bcf	3,6	;RP1=0, select bank0
  4990     0159  0820               	movf	?___fldiv,w
  4991     015A  1683               	bsf	3,5	;RP0=1, select bank1
  4992     015B  1303               	bcf	3,6	;RP1=0, select bank1
  4993     015C  00A0               	movwf	floattostr@numero_^(0+128)
  4994     015D                     l4178:
  4995                           
  4996                           ;./float_str.h: 31:         largo_entera++;
  4997     015D  3001               	movlw	1
  4998     015E  07B0               	addwf	floattostr@largo_entera^(0+128),f
  4999     015F  1803               	skipnc
  5000     0160  0AB1               	incf	(floattostr@largo_entera+1)^(0+128),f
  5001     0161  3000               	movlw	0
  5002     0162  07B1               	addwf	(floattostr@largo_entera+1)^(0+128),f
  5003     0163                     l4180:
  5004                           
  5005                           ;./float_str.h: 28:     while(numero_ >= 10.0)
  5006     0163  1683               	bsf	3,5	;RP0=1, select bank1
  5007     0164  1303               	bcf	3,6	;RP1=0, select bank1
  5008     0165  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5009     0166  1283               	bcf	3,5	;RP0=0, select bank0
  5010     0167  1303               	bcf	3,6	;RP1=0, select bank0
  5011     0168  00A3               	movwf	___flge@ff1+3
  5012     0169  1683               	bsf	3,5	;RP0=1, select bank1
  5013     016A  1303               	bcf	3,6	;RP1=0, select bank1
  5014     016B  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5015     016C  1283               	bcf	3,5	;RP0=0, select bank0
  5016     016D  1303               	bcf	3,6	;RP1=0, select bank0
  5017     016E  00A2               	movwf	___flge@ff1+2
  5018     016F  1683               	bsf	3,5	;RP0=1, select bank1
  5019     0170  1303               	bcf	3,6	;RP1=0, select bank1
  5020     0171  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5021     0172  1283               	bcf	3,5	;RP0=0, select bank0
  5022     0173  1303               	bcf	3,6	;RP1=0, select bank0
  5023     0174  00A1               	movwf	___flge@ff1+1
  5024     0175  1683               	bsf	3,5	;RP0=1, select bank1
  5025     0176  1303               	bcf	3,6	;RP1=0, select bank1
  5026     0177  0820               	movf	floattostr@numero_^(0+128),w
  5027     0178  1283               	bcf	3,5	;RP0=0, select bank0
  5028     0179  1303               	bcf	3,6	;RP1=0, select bank0
  5029     017A  00A0               	movwf	___flge@ff1
  5030     017B  3041               	movlw	65
  5031     017C  00A7               	movwf	___flge@ff2+3
  5032     017D  3020               	movlw	32
  5033     017E  00A6               	movwf	___flge@ff2+2
  5034     017F  3000               	movlw	0
  5035     0180  00A5               	movwf	___flge@ff2+1
  5036     0181  3000               	movlw	0
  5037     0182  00A4               	movwf	___flge@ff2
  5038     0183  120A  118A  274E  120A  118A  	fcall	___flge
  5039     0188  1803               	btfsc	3,0
  5040     0189  298B               	goto	u5141
  5041     018A  298C               	goto	u5140
  5042     018B                     u5141:
  5043     018B  291E               	goto	l4176
  5044     018C                     u5140:
  5045     018C                     l4182:
  5046                           
  5047                           ;./float_str.h: 33:     largo_n = largo_n+largo_entera;
  5048     018C  1683               	bsf	3,5	;RP0=1, select bank1
  5049     018D  1303               	bcf	3,6	;RP1=0, select bank1
  5050     018E  0830               	movf	floattostr@largo_entera^(0+128),w
  5051     018F  072C               	addwf	floattostr@largo_n^(0+128),w
  5052     0190  00AC               	movwf	floattostr@largo_n^(0+128)
  5053     0191  0831               	movf	(floattostr@largo_entera+1)^(0+128),w
  5054     0192  1803               	skipnc
  5055     0193  0A31               	incf	(floattostr@largo_entera+1)^(0+128),w
  5056     0194  072D               	addwf	(floattostr@largo_n+1)^(0+128),w
  5057     0195  00AD               	movwf	(floattostr@largo_n+1)^(0+128)
  5058     0196                     l4184:
  5059                           
  5060                           ;./float_str.h: 35:     for(tempo_float = cont_for = 1; cont_for < largo_n; cont_for++)
  5061     0196  3001               	movlw	1
  5062     0197  00AE               	movwf	floattostr@cont_for^(0+128)
  5063     0198  3000               	movlw	0
  5064     0199  00AF               	movwf	(floattostr@cont_for^(0+128)+1)
  5065     019A  082E               	movf	floattostr@cont_for^(0+128),w
  5066     019B  00F3               	movwf	___xxtofl@val
  5067     019C  082F               	movf	(floattostr@cont_for+1)^(0+128),w
  5068     019D  00F4               	movwf	___xxtofl@val+1
  5069     019E  3000               	movlw	0
  5070     019F  1BF4               	btfsc	___xxtofl@val+1,7
  5071     01A0  30FF               	movlw	255
  5072     01A1  00F5               	movwf	___xxtofl@val+2
  5073     01A2  00F6               	movwf	___xxtofl@val+3
  5074     01A3  3001               	movlw	1
  5075     01A4  160A  118A  25EC  120A  118A  	fcall	___xxtofl
  5076     01A9  0876               	movf	?___xxtofl+3,w
  5077     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  5078     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  5079     01AC  00AB               	movwf	(floattostr@tempo_float+3)^(0+128)
  5080     01AD  0875               	movf	?___xxtofl+2,w
  5081     01AE  00AA               	movwf	(floattostr@tempo_float+2)^(0+128)
  5082     01AF  0874               	movf	?___xxtofl+1,w
  5083     01B0  00A9               	movwf	(floattostr@tempo_float+1)^(0+128)
  5084     01B1  0873               	movf	?___xxtofl,w
  5085     01B2  00A8               	movwf	floattostr@tempo_float^(0+128)
  5086     01B3  29F9               	goto	l4190
  5087     01B4                     l4186:
  5088                           
  5089                           ;./float_str.h: 36:         tempo_float = tempo_float/10.0;
  5090     01B4  3041               	movlw	65
  5091     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  5092     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  5093     01B7  00A3               	movwf	___fldiv@a+3
  5094     01B8  3020               	movlw	32
  5095     01B9  00A2               	movwf	___fldiv@a+2
  5096     01BA  3000               	movlw	0
  5097     01BB  00A1               	movwf	___fldiv@a+1
  5098     01BC  3000               	movlw	0
  5099     01BD  00A0               	movwf	___fldiv@a
  5100     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  5101     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  5102     01C0  082B               	movf	(floattostr@tempo_float+3)^(0+128),w
  5103     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  5104     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  5105     01C3  00A7               	movwf	___fldiv@b+3
  5106     01C4  1683               	bsf	3,5	;RP0=1, select bank1
  5107     01C5  1303               	bcf	3,6	;RP1=0, select bank1
  5108     01C6  082A               	movf	(floattostr@tempo_float+2)^(0+128),w
  5109     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  5110     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  5111     01C9  00A6               	movwf	___fldiv@b+2
  5112     01CA  1683               	bsf	3,5	;RP0=1, select bank1
  5113     01CB  1303               	bcf	3,6	;RP1=0, select bank1
  5114     01CC  0829               	movf	(floattostr@tempo_float+1)^(0+128),w
  5115     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  5116     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  5117     01CF  00A5               	movwf	___fldiv@b+1
  5118     01D0  1683               	bsf	3,5	;RP0=1, select bank1
  5119     01D1  1303               	bcf	3,6	;RP1=0, select bank1
  5120     01D2  0828               	movf	floattostr@tempo_float^(0+128),w
  5121     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  5122     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  5123     01D5  00A4               	movwf	___fldiv@b
  5124     01D6  120A  158A  23D5  120A  118A  	fcall	___fldiv
  5125     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5126     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5127     01DD  0823               	movf	?___fldiv+3,w
  5128     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  5129     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  5130     01E0  00AB               	movwf	(floattostr@tempo_float+3)^(0+128)
  5131     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  5132     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  5133     01E3  0822               	movf	?___fldiv+2,w
  5134     01E4  1683               	bsf	3,5	;RP0=1, select bank1
  5135     01E5  1303               	bcf	3,6	;RP1=0, select bank1
  5136     01E6  00AA               	movwf	(floattostr@tempo_float+2)^(0+128)
  5137     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  5138     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  5139     01E9  0821               	movf	?___fldiv+1,w
  5140     01EA  1683               	bsf	3,5	;RP0=1, select bank1
  5141     01EB  1303               	bcf	3,6	;RP1=0, select bank1
  5142     01EC  00A9               	movwf	(floattostr@tempo_float+1)^(0+128)
  5143     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5144     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  5145     01EF  0820               	movf	?___fldiv,w
  5146     01F0  1683               	bsf	3,5	;RP0=1, select bank1
  5147     01F1  1303               	bcf	3,6	;RP1=0, select bank1
  5148     01F2  00A8               	movwf	floattostr@tempo_float^(0+128)
  5149     01F3                     l4188:
  5150     01F3  3001               	movlw	1
  5151     01F4  07AE               	addwf	floattostr@cont_for^(0+128),f
  5152     01F5  1803               	skipnc
  5153     01F6  0AAF               	incf	(floattostr@cont_for+1)^(0+128),f
  5154     01F7  3000               	movlw	0
  5155     01F8  07AF               	addwf	(floattostr@cont_for+1)^(0+128),f
  5156     01F9                     l4190:
  5157     01F9  082F               	movf	(floattostr@cont_for+1)^(0+128),w
  5158     01FA  3A80               	xorlw	128
  5159     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  5160     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  5161     01FD  00EB               	movwf	??_floattostr
  5162     01FE  1683               	bsf	3,5	;RP0=1, select bank1
  5163     01FF  1303               	bcf	3,6	;RP1=0, select bank1
  5164     0200  082D               	movf	(floattostr@largo_n+1)^(0+128),w
  5165     0201  3A80               	xorlw	128
  5166     0202  1283               	bcf	3,5	;RP0=0, select bank0
  5167     0203  1303               	bcf	3,6	;RP1=0, select bank0
  5168     0204  026B               	subwf	??_floattostr,w
  5169     0205  1D03               	skipz
  5170     0206  2A0B               	goto	u5155
  5171     0207  1683               	bsf	3,5	;RP0=1, select bank1
  5172     0208  1303               	bcf	3,6	;RP1=0, select bank1
  5173     0209  082C               	movf	floattostr@largo_n^(0+128),w
  5174     020A  022E               	subwf	floattostr@cont_for^(0+128),w
  5175     020B                     u5155:
  5176     020B  1C03               	skipc
  5177     020C  2A0E               	goto	u5151
  5178     020D  2A0F               	goto	u5150
  5179     020E                     u5151:
  5180     020E  29B4               	goto	l4186
  5181     020F                     u5150:
  5182     020F                     l4192:
  5183                           
  5184                           ;./float_str.h: 37:     numero_ += tempo_float/2.0;
  5185     020F  1683               	bsf	3,5	;RP0=1, select bank1
  5186     0210  1303               	bcf	3,6	;RP1=0, select bank1
  5187     0211  082B               	movf	(floattostr@tempo_float+3)^(0+128),w
  5188     0212  1283               	bcf	3,5	;RP0=0, select bank0
  5189     0213  1303               	bcf	3,6	;RP1=0, select bank0
  5190     0214  00A7               	movwf	___fldiv@b+3
  5191     0215  1683               	bsf	3,5	;RP0=1, select bank1
  5192     0216  1303               	bcf	3,6	;RP1=0, select bank1
  5193     0217  082A               	movf	(floattostr@tempo_float+2)^(0+128),w
  5194     0218  1283               	bcf	3,5	;RP0=0, select bank0
  5195     0219  1303               	bcf	3,6	;RP1=0, select bank0
  5196     021A  00A6               	movwf	___fldiv@b+2
  5197     021B  1683               	bsf	3,5	;RP0=1, select bank1
  5198     021C  1303               	bcf	3,6	;RP1=0, select bank1
  5199     021D  0829               	movf	(floattostr@tempo_float+1)^(0+128),w
  5200     021E  1283               	bcf	3,5	;RP0=0, select bank0
  5201     021F  1303               	bcf	3,6	;RP1=0, select bank0
  5202     0220  00A5               	movwf	___fldiv@b+1
  5203     0221  1683               	bsf	3,5	;RP0=1, select bank1
  5204     0222  1303               	bcf	3,6	;RP1=0, select bank1
  5205     0223  0828               	movf	floattostr@tempo_float^(0+128),w
  5206     0224  1283               	bcf	3,5	;RP0=0, select bank0
  5207     0225  1303               	bcf	3,6	;RP1=0, select bank0
  5208     0226  00A4               	movwf	___fldiv@b
  5209     0227  3040               	movlw	64
  5210     0228  00A3               	movwf	___fldiv@a+3
  5211     0229  3000               	movlw	0
  5212     022A  00A2               	movwf	___fldiv@a+2
  5213     022B  3000               	movlw	0
  5214     022C  00A1               	movwf	___fldiv@a+1
  5215     022D  3000               	movlw	0
  5216     022E  00A0               	movwf	___fldiv@a
  5217     022F  120A  158A  23D5  120A  118A  	fcall	___fldiv
  5218     0234  1283               	bcf	3,5	;RP0=0, select bank0
  5219     0235  1303               	bcf	3,6	;RP1=0, select bank0
  5220     0236  0823               	movf	?___fldiv+3,w
  5221     0237  00D2               	movwf	___fladd@b+3
  5222     0238  0822               	movf	?___fldiv+2,w
  5223     0239  00D1               	movwf	___fladd@b+2
  5224     023A  0821               	movf	?___fldiv+1,w
  5225     023B  00D0               	movwf	___fladd@b+1
  5226     023C  0820               	movf	?___fldiv,w
  5227     023D  00CF               	movwf	___fladd@b
  5228     023E  1683               	bsf	3,5	;RP0=1, select bank1
  5229     023F  1303               	bcf	3,6	;RP1=0, select bank1
  5230     0240  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5231     0241  1283               	bcf	3,5	;RP0=0, select bank0
  5232     0242  1303               	bcf	3,6	;RP1=0, select bank0
  5233     0243  00D6               	movwf	___fladd@a+3
  5234     0244  1683               	bsf	3,5	;RP0=1, select bank1
  5235     0245  1303               	bcf	3,6	;RP1=0, select bank1
  5236     0246  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5237     0247  1283               	bcf	3,5	;RP0=0, select bank0
  5238     0248  1303               	bcf	3,6	;RP1=0, select bank0
  5239     0249  00D5               	movwf	___fladd@a+2
  5240     024A  1683               	bsf	3,5	;RP0=1, select bank1
  5241     024B  1303               	bcf	3,6	;RP1=0, select bank1
  5242     024C  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5243     024D  1283               	bcf	3,5	;RP0=0, select bank0
  5244     024E  1303               	bcf	3,6	;RP1=0, select bank0
  5245     024F  00D4               	movwf	___fladd@a+1
  5246     0250  1683               	bsf	3,5	;RP0=1, select bank1
  5247     0251  1303               	bcf	3,6	;RP1=0, select bank1
  5248     0252  0820               	movf	floattostr@numero_^(0+128),w
  5249     0253  1283               	bcf	3,5	;RP0=0, select bank0
  5250     0254  1303               	bcf	3,6	;RP1=0, select bank0
  5251     0255  00D3               	movwf	___fladd@a
  5252     0256  120A  158A  25A8  120A  118A  	fcall	___fladd
  5253     025B  1283               	bcf	3,5	;RP0=0, select bank0
  5254     025C  1303               	bcf	3,6	;RP1=0, select bank0
  5255     025D  0852               	movf	?___fladd+3,w
  5256     025E  1683               	bsf	3,5	;RP0=1, select bank1
  5257     025F  1303               	bcf	3,6	;RP1=0, select bank1
  5258     0260  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5259     0261  1283               	bcf	3,5	;RP0=0, select bank0
  5260     0262  1303               	bcf	3,6	;RP1=0, select bank0
  5261     0263  0851               	movf	?___fladd+2,w
  5262     0264  1683               	bsf	3,5	;RP0=1, select bank1
  5263     0265  1303               	bcf	3,6	;RP1=0, select bank1
  5264     0266  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5265     0267  1283               	bcf	3,5	;RP0=0, select bank0
  5266     0268  1303               	bcf	3,6	;RP1=0, select bank0
  5267     0269  0850               	movf	?___fladd+1,w
  5268     026A  1683               	bsf	3,5	;RP0=1, select bank1
  5269     026B  1303               	bcf	3,6	;RP1=0, select bank1
  5270     026C  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5271     026D  1283               	bcf	3,5	;RP0=0, select bank0
  5272     026E  1303               	bcf	3,6	;RP1=0, select bank0
  5273     026F  084F               	movf	?___fladd,w
  5274     0270  1683               	bsf	3,5	;RP0=1, select bank1
  5275     0271  1303               	bcf	3,6	;RP1=0, select bank1
  5276     0272  00A0               	movwf	floattostr@numero_^(0+128)
  5277     0273                     l4194:
  5278                           
  5279                           ;./float_str.h: 38:     if(numero_ >= 10.0)
  5280     0273  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5281     0274  1283               	bcf	3,5	;RP0=0, select bank0
  5282     0275  1303               	bcf	3,6	;RP1=0, select bank0
  5283     0276  00A3               	movwf	___flge@ff1+3
  5284     0277  1683               	bsf	3,5	;RP0=1, select bank1
  5285     0278  1303               	bcf	3,6	;RP1=0, select bank1
  5286     0279  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5287     027A  1283               	bcf	3,5	;RP0=0, select bank0
  5288     027B  1303               	bcf	3,6	;RP1=0, select bank0
  5289     027C  00A2               	movwf	___flge@ff1+2
  5290     027D  1683               	bsf	3,5	;RP0=1, select bank1
  5291     027E  1303               	bcf	3,6	;RP1=0, select bank1
  5292     027F  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5293     0280  1283               	bcf	3,5	;RP0=0, select bank0
  5294     0281  1303               	bcf	3,6	;RP1=0, select bank0
  5295     0282  00A1               	movwf	___flge@ff1+1
  5296     0283  1683               	bsf	3,5	;RP0=1, select bank1
  5297     0284  1303               	bcf	3,6	;RP1=0, select bank1
  5298     0285  0820               	movf	floattostr@numero_^(0+128),w
  5299     0286  1283               	bcf	3,5	;RP0=0, select bank0
  5300     0287  1303               	bcf	3,6	;RP1=0, select bank0
  5301     0288  00A0               	movwf	___flge@ff1
  5302     0289  3041               	movlw	65
  5303     028A  00A7               	movwf	___flge@ff2+3
  5304     028B  3020               	movlw	32
  5305     028C  00A6               	movwf	___flge@ff2+2
  5306     028D  3000               	movlw	0
  5307     028E  00A5               	movwf	___flge@ff2+1
  5308     028F  3000               	movlw	0
  5309     0290  00A4               	movwf	___flge@ff2
  5310     0291  120A  118A  274E  120A  118A  	fcall	___flge
  5311     0296  1C03               	btfss	3,0
  5312     0297  2A99               	goto	u5161
  5313     0298  2A9A               	goto	u5160
  5314     0299                     u5161:
  5315     0299  2AAA               	goto	l4198
  5316     029A                     u5160:
  5317     029A                     l4196:
  5318                           
  5319                           ;./float_str.h: 39:     {;./float_str.h: 40:         numero_ = 1.0; largo_entera++;
  5320     029A  303F               	movlw	63
  5321     029B  1683               	bsf	3,5	;RP0=1, select bank1
  5322     029C  1303               	bcf	3,6	;RP1=0, select bank1
  5323     029D  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5324     029E  3080               	movlw	128
  5325     029F  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5326     02A0  3000               	movlw	0
  5327     02A1  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5328     02A2  3000               	movlw	0
  5329     02A3  00A0               	movwf	floattostr@numero_^(0+128)
  5330     02A4  3001               	movlw	1
  5331     02A5  07B0               	addwf	floattostr@largo_entera^(0+128),f
  5332     02A6  1803               	skipnc
  5333     02A7  0AB1               	incf	(floattostr@largo_entera+1)^(0+128),f
  5334     02A8  3000               	movlw	0
  5335     02A9  07B1               	addwf	(floattostr@largo_entera+1)^(0+128),f
  5336     02AA                     l4198:
  5337                           
  5338                           ;./float_str.h: 42:     if(largo_entera<0)
  5339     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  5340     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  5341     02AC  1FB1               	btfss	(floattostr@largo_entera+1)^(0+128),7
  5342     02AD  2AAF               	goto	u5171
  5343     02AE  2AB0               	goto	u5170
  5344     02AF                     u5171:
  5345     02AF  2B05               	goto	l4220
  5346     02B0                     u5170:
  5347     02B0                     l4200:
  5348                           
  5349                           ;./float_str.h: 43:     {;./float_str.h: 44:         *cadena_++ = '0'; *cadena_++ = '.';
  5350     02B0  0824               	movf	floattostr@cadena_^(0+128),w
  5351     02B1  0084               	movwf	4
  5352     02B2  3030               	movlw	48
  5353     02B3  1783               	bsf	3,7	;select IRP bank2
  5354     02B4  0080               	movwf	0
  5355     02B5                     l4202:
  5356     02B5  3001               	movlw	1
  5357     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  5358     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  5359     02B8  00EB               	movwf	??_floattostr
  5360     02B9  086B               	movf	??_floattostr,w
  5361     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  5362     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  5363     02BC  07A4               	addwf	floattostr@cadena_^(0+128),f
  5364     02BD                     l4204:
  5365     02BD  0824               	movf	floattostr@cadena_^(0+128),w
  5366     02BE  0084               	movwf	4
  5367     02BF  302E               	movlw	46
  5368     02C0  0080               	movwf	0
  5369     02C1  3001               	movlw	1
  5370     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  5371     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  5372     02C4  00EB               	movwf	??_floattostr
  5373     02C5  086B               	movf	??_floattostr,w
  5374     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  5375     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  5376     02C8  07A4               	addwf	floattostr@cadena_^(0+128),f
  5377     02C9                     l4206:
  5378                           
  5379                           ;./float_str.h: 45:         if(largo_n < 0) largo_entera = largo_entera-largo_n;
  5380     02C9  1FAD               	btfss	(floattostr@largo_n+1)^(0+128),7
  5381     02CA  2ACC               	goto	u5181
  5382     02CB  2ACD               	goto	u5180
  5383     02CC                     u5181:
  5384     02CC  2AD5               	goto	l4210
  5385     02CD                     u5180:
  5386     02CD                     l4208:
  5387     02CD  082C               	movf	floattostr@largo_n^(0+128),w
  5388     02CE  0230               	subwf	floattostr@largo_entera^(0+128),w
  5389     02CF  00B0               	movwf	floattostr@largo_entera^(0+128)
  5390     02D0  082D               	movf	(floattostr@largo_n+1)^(0+128),w
  5391     02D1  1C03               	skipc
  5392     02D2  0A2D               	incf	(floattostr@largo_n+1)^(0+128),w
  5393     02D3  0231               	subwf	(floattostr@largo_entera+1)^(0+128),w
  5394     02D4  00B1               	movwf	(floattostr@largo_entera+1)^(0+128)
  5395     02D5                     l4210:
  5396                           
  5397                           ;./float_str.h: 46:         for(cont_for = -1; cont_for > largo_entera; cont_for--) *cad
      +                          ena_++ = '0';
  5398     02D5  30FF               	movlw	255
  5399     02D6  00AE               	movwf	floattostr@cont_for^(0+128)
  5400     02D7  30FF               	movlw	255
  5401     02D8  00AF               	movwf	(floattostr@cont_for^(0+128)+1)
  5402     02D9  2AEF               	goto	l4218
  5403     02DA                     l4212:
  5404     02DA  1683               	bsf	3,5	;RP0=1, select bank1
  5405     02DB  1303               	bcf	3,6	;RP1=0, select bank1
  5406     02DC  0824               	movf	floattostr@cadena_^(0+128),w
  5407     02DD  0084               	movwf	4
  5408     02DE  3030               	movlw	48
  5409     02DF  1783               	bsf	3,7	;select IRP bank2
  5410     02E0  0080               	movwf	0
  5411     02E1                     l4214:
  5412     02E1  3001               	movlw	1
  5413     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  5414     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  5415     02E4  00EB               	movwf	??_floattostr
  5416     02E5  086B               	movf	??_floattostr,w
  5417     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  5418     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  5419     02E8  07A4               	addwf	floattostr@cadena_^(0+128),f
  5420     02E9                     l4216:
  5421     02E9  30FF               	movlw	255
  5422     02EA  07AE               	addwf	floattostr@cont_for^(0+128),f
  5423     02EB  1803               	skipnc
  5424     02EC  0AAF               	incf	(floattostr@cont_for+1)^(0+128),f
  5425     02ED  30FF               	movlw	255
  5426     02EE  07AF               	addwf	(floattostr@cont_for+1)^(0+128),f
  5427     02EF                     l4218:
  5428     02EF  0831               	movf	(floattostr@largo_entera+1)^(0+128),w
  5429     02F0  3A80               	xorlw	128
  5430     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  5431     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  5432     02F3  00EB               	movwf	??_floattostr
  5433     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  5434     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  5435     02F6  082F               	movf	(floattostr@cont_for+1)^(0+128),w
  5436     02F7  3A80               	xorlw	128
  5437     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  5438     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  5439     02FA  026B               	subwf	??_floattostr,w
  5440     02FB  1D03               	skipz
  5441     02FC  2B01               	goto	u5195
  5442     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  5443     02FE  1303               	bcf	3,6	;RP1=0, select bank1
  5444     02FF  082E               	movf	floattostr@cont_for^(0+128),w
  5445     0300  0230               	subwf	floattostr@largo_entera^(0+128),w
  5446     0301                     u5195:
  5447     0301  1C03               	skipc
  5448     0302  2B04               	goto	u5191
  5449     0303  2B05               	goto	u5190
  5450     0304                     u5191:
  5451     0304  2ADA               	goto	l4212
  5452     0305                     u5190:
  5453     0305                     l4220:
  5454                           
  5455                           ;./float_str.h: 48:     for(cont_for=0; cont_for < largo_n; cont_for++)
  5456     0305  1683               	bsf	3,5	;RP0=1, select bank1
  5457     0306  1303               	bcf	3,6	;RP1=0, select bank1
  5458     0307  01AE               	clrf	floattostr@cont_for^(0+128)
  5459     0308  01AF               	clrf	(floattostr@cont_for+1)^(0+128)
  5460     0309  2BEC               	goto	l4240
  5461     030A                     l4222:
  5462                           
  5463                           ;./float_str.h: 49:     {;./float_str.h: 50:         tempo_int = numero_;
  5464     030A  1683               	bsf	3,5	;RP0=1, select bank1
  5465     030B  1303               	bcf	3,6	;RP1=0, select bank1
  5466     030C  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5467     030D  00F6               	movwf	___fltol@f1+3
  5468     030E  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5469     030F  00F5               	movwf	___fltol@f1+2
  5470     0310  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5471     0311  00F4               	movwf	___fltol@f1+1
  5472     0312  0820               	movf	floattostr@numero_^(0+128),w
  5473     0313  00F3               	movwf	___fltol@f1
  5474     0314  120A  158A  2025  120A  118A  	fcall	___fltol
  5475     0319  0874               	movf	?___fltol+1,w
  5476     031A  1683               	bsf	3,5	;RP0=1, select bank1
  5477     031B  1303               	bcf	3,6	;RP1=0, select bank1
  5478     031C  00A7               	movwf	(floattostr@tempo_int+1)^(0+128)
  5479     031D  0873               	movf	?___fltol,w
  5480     031E  00A6               	movwf	floattostr@tempo_int^(0+128)
  5481     031F                     l4224:
  5482                           
  5483                           ;./float_str.h: 51:         *cadena_++ = tempo_int + 48;
  5484     031F  0824               	movf	floattostr@cadena_^(0+128),w
  5485     0320  0084               	movwf	4
  5486     0321  0826               	movf	floattostr@tempo_int^(0+128),w
  5487     0322  3E30               	addlw	48
  5488     0323  1783               	bsf	3,7	;select IRP bank2
  5489     0324  0080               	movwf	0
  5490     0325                     l4226:
  5491     0325  3001               	movlw	1
  5492     0326  1283               	bcf	3,5	;RP0=0, select bank0
  5493     0327  1303               	bcf	3,6	;RP1=0, select bank0
  5494     0328  00EB               	movwf	??_floattostr
  5495     0329  086B               	movf	??_floattostr,w
  5496     032A  1683               	bsf	3,5	;RP0=1, select bank1
  5497     032B  1303               	bcf	3,6	;RP1=0, select bank1
  5498     032C  07A4               	addwf	floattostr@cadena_^(0+128),f
  5499     032D                     l4228:
  5500                           
  5501                           ;./float_str.h: 52:         if (cont_for == largo_entera ) *cadena_++ = '.';
  5502     032D  0831               	movf	(floattostr@largo_entera+1)^(0+128),w
  5503     032E  062F               	xorwf	(floattostr@cont_for+1)^(0+128),w
  5504     032F  1D03               	skipz
  5505     0330  2B33               	goto	u5205
  5506     0331  0830               	movf	floattostr@largo_entera^(0+128),w
  5507     0332  062E               	xorwf	floattostr@cont_for^(0+128),w
  5508     0333                     u5205:
  5509     0333  1D03               	skipz
  5510     0334  2B36               	goto	u5201
  5511     0335  2B37               	goto	u5200
  5512     0336                     u5201:
  5513     0336  2B43               	goto	l4234
  5514     0337                     u5200:
  5515     0337                     l4230:
  5516     0337  0824               	movf	floattostr@cadena_^(0+128),w
  5517     0338  0084               	movwf	4
  5518     0339  302E               	movlw	46
  5519     033A  0080               	movwf	0
  5520     033B                     l4232:
  5521     033B  3001               	movlw	1
  5522     033C  1283               	bcf	3,5	;RP0=0, select bank0
  5523     033D  1303               	bcf	3,6	;RP1=0, select bank0
  5524     033E  00EB               	movwf	??_floattostr
  5525     033F  086B               	movf	??_floattostr,w
  5526     0340  1683               	bsf	3,5	;RP0=1, select bank1
  5527     0341  1303               	bcf	3,6	;RP1=0, select bank1
  5528     0342  07A4               	addwf	floattostr@cadena_^(0+128),f
  5529     0343                     l4234:
  5530                           
  5531                           ;./float_str.h: 53:         numero_ -= (tempo_float=tempo_int);
  5532     0343  0826               	movf	floattostr@tempo_int^(0+128),w
  5533     0344  00F3               	movwf	___xxtofl@val
  5534     0345  0827               	movf	(floattostr@tempo_int+1)^(0+128),w
  5535     0346  00F4               	movwf	___xxtofl@val+1
  5536     0347  3000               	movlw	0
  5537     0348  1BF4               	btfsc	___xxtofl@val+1,7
  5538     0349  30FF               	movlw	255
  5539     034A  00F5               	movwf	___xxtofl@val+2
  5540     034B  00F6               	movwf	___xxtofl@val+3
  5541     034C  3001               	movlw	1
  5542     034D  160A  118A  25EC  120A  118A  	fcall	___xxtofl
  5543     0352  0876               	movf	?___xxtofl+3,w
  5544     0353  1683               	bsf	3,5	;RP0=1, select bank1
  5545     0354  1303               	bcf	3,6	;RP1=0, select bank1
  5546     0355  00AB               	movwf	(floattostr@tempo_float+3)^(0+128)
  5547     0356  0875               	movf	?___xxtofl+2,w
  5548     0357  00AA               	movwf	(floattostr@tempo_float+2)^(0+128)
  5549     0358  0874               	movf	?___xxtofl+1,w
  5550     0359  00A9               	movwf	(floattostr@tempo_float+1)^(0+128)
  5551     035A  0873               	movf	?___xxtofl,w
  5552     035B  00A8               	movwf	floattostr@tempo_float^(0+128)
  5553     035C  082B               	movf	(floattostr@tempo_float+3)^(0+128),w
  5554     035D  1283               	bcf	3,5	;RP0=0, select bank0
  5555     035E  1303               	bcf	3,6	;RP1=0, select bank0
  5556     035F  00E6               	movwf	___flsub@a+3
  5557     0360  1683               	bsf	3,5	;RP0=1, select bank1
  5558     0361  1303               	bcf	3,6	;RP1=0, select bank1
  5559     0362  082A               	movf	(floattostr@tempo_float+2)^(0+128),w
  5560     0363  1283               	bcf	3,5	;RP0=0, select bank0
  5561     0364  1303               	bcf	3,6	;RP1=0, select bank0
  5562     0365  00E5               	movwf	___flsub@a+2
  5563     0366  1683               	bsf	3,5	;RP0=1, select bank1
  5564     0367  1303               	bcf	3,6	;RP1=0, select bank1
  5565     0368  0829               	movf	(floattostr@tempo_float+1)^(0+128),w
  5566     0369  1283               	bcf	3,5	;RP0=0, select bank0
  5567     036A  1303               	bcf	3,6	;RP1=0, select bank0
  5568     036B  00E4               	movwf	___flsub@a+1
  5569     036C  1683               	bsf	3,5	;RP0=1, select bank1
  5570     036D  1303               	bcf	3,6	;RP1=0, select bank1
  5571     036E  0828               	movf	floattostr@tempo_float^(0+128),w
  5572     036F  1283               	bcf	3,5	;RP0=0, select bank0
  5573     0370  1303               	bcf	3,6	;RP1=0, select bank0
  5574     0371  00E3               	movwf	___flsub@a
  5575     0372  1683               	bsf	3,5	;RP0=1, select bank1
  5576     0373  1303               	bcf	3,6	;RP1=0, select bank1
  5577     0374  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5578     0375  1283               	bcf	3,5	;RP0=0, select bank0
  5579     0376  1303               	bcf	3,6	;RP1=0, select bank0
  5580     0377  00EA               	movwf	___flsub@b+3
  5581     0378  1683               	bsf	3,5	;RP0=1, select bank1
  5582     0379  1303               	bcf	3,6	;RP1=0, select bank1
  5583     037A  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5584     037B  1283               	bcf	3,5	;RP0=0, select bank0
  5585     037C  1303               	bcf	3,6	;RP1=0, select bank0
  5586     037D  00E9               	movwf	___flsub@b+2
  5587     037E  1683               	bsf	3,5	;RP0=1, select bank1
  5588     037F  1303               	bcf	3,6	;RP1=0, select bank1
  5589     0380  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5590     0381  1283               	bcf	3,5	;RP0=0, select bank0
  5591     0382  1303               	bcf	3,6	;RP1=0, select bank0
  5592     0383  00E8               	movwf	___flsub@b+1
  5593     0384  1683               	bsf	3,5	;RP0=1, select bank1
  5594     0385  1303               	bcf	3,6	;RP1=0, select bank1
  5595     0386  0820               	movf	floattostr@numero_^(0+128),w
  5596     0387  1283               	bcf	3,5	;RP0=0, select bank0
  5597     0388  1303               	bcf	3,6	;RP1=0, select bank0
  5598     0389  00E7               	movwf	___flsub@b
  5599     038A  120A  158A  2001  120A  118A  	fcall	___flsub
  5600     038F  1283               	bcf	3,5	;RP0=0, select bank0
  5601     0390  1303               	bcf	3,6	;RP1=0, select bank0
  5602     0391  0866               	movf	?___flsub+3,w
  5603     0392  1683               	bsf	3,5	;RP0=1, select bank1
  5604     0393  1303               	bcf	3,6	;RP1=0, select bank1
  5605     0394  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5606     0395  1283               	bcf	3,5	;RP0=0, select bank0
  5607     0396  1303               	bcf	3,6	;RP1=0, select bank0
  5608     0397  0865               	movf	?___flsub+2,w
  5609     0398  1683               	bsf	3,5	;RP0=1, select bank1
  5610     0399  1303               	bcf	3,6	;RP1=0, select bank1
  5611     039A  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5612     039B  1283               	bcf	3,5	;RP0=0, select bank0
  5613     039C  1303               	bcf	3,6	;RP1=0, select bank0
  5614     039D  0864               	movf	?___flsub+1,w
  5615     039E  1683               	bsf	3,5	;RP0=1, select bank1
  5616     039F  1303               	bcf	3,6	;RP1=0, select bank1
  5617     03A0  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5618     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  5619     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  5620     03A3  0863               	movf	?___flsub,w
  5621     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  5622     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  5623     03A6  00A0               	movwf	floattostr@numero_^(0+128)
  5624     03A7                     l4236:
  5625                           
  5626                           ;./float_str.h: 54:         numero_ = numero_*10.0;
  5627     03A7  3041               	movlw	65
  5628     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  5629     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  5630     03AA  00B8               	movwf	___flmul@b+3
  5631     03AB  3020               	movlw	32
  5632     03AC  00B7               	movwf	___flmul@b+2
  5633     03AD  3000               	movlw	0
  5634     03AE  00B6               	movwf	___flmul@b+1
  5635     03AF  3000               	movlw	0
  5636     03B0  00B5               	movwf	___flmul@b
  5637     03B1  1683               	bsf	3,5	;RP0=1, select bank1
  5638     03B2  1303               	bcf	3,6	;RP1=0, select bank1
  5639     03B3  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5640     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  5641     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  5642     03B6  00BC               	movwf	___flmul@a+3
  5643     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  5644     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  5645     03B9  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5646     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  5647     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  5648     03BC  00BB               	movwf	___flmul@a+2
  5649     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  5650     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  5651     03BF  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5652     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  5653     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  5654     03C2  00BA               	movwf	___flmul@a+1
  5655     03C3  1683               	bsf	3,5	;RP0=1, select bank1
  5656     03C4  1303               	bcf	3,6	;RP1=0, select bank1
  5657     03C5  0820               	movf	floattostr@numero_^(0+128),w
  5658     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  5659     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  5660     03C8  00B9               	movwf	___flmul@a
  5661     03C9  120A  118A  2409  120A  118A  	fcall	___flmul
  5662     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  5663     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  5664     03D0  0838               	movf	?___flmul+3,w
  5665     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  5666     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  5667     03D3  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5668     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  5669     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  5670     03D6  0837               	movf	?___flmul+2,w
  5671     03D7  1683               	bsf	3,5	;RP0=1, select bank1
  5672     03D8  1303               	bcf	3,6	;RP1=0, select bank1
  5673     03D9  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5674     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  5675     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  5676     03DC  0836               	movf	?___flmul+1,w
  5677     03DD  1683               	bsf	3,5	;RP0=1, select bank1
  5678     03DE  1303               	bcf	3,6	;RP1=0, select bank1
  5679     03DF  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5680     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  5681     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  5682     03E2  0835               	movf	?___flmul,w
  5683     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  5684     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  5685     03E5  00A0               	movwf	floattostr@numero_^(0+128)
  5686     03E6                     l4238:
  5687                           
  5688                           ;./float_str.h: 55:     }
  5689     03E6  3001               	movlw	1
  5690     03E7  07AE               	addwf	floattostr@cont_for^(0+128),f
  5691     03E8  1803               	skipnc
  5692     03E9  0AAF               	incf	(floattostr@cont_for+1)^(0+128),f
  5693     03EA  3000               	movlw	0
  5694     03EB  07AF               	addwf	(floattostr@cont_for+1)^(0+128),f
  5695     03EC                     l4240:
  5696     03EC  082F               	movf	(floattostr@cont_for+1)^(0+128),w
  5697     03ED  3A80               	xorlw	128
  5698     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  5699     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  5700     03F0  00EB               	movwf	??_floattostr
  5701     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  5702     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  5703     03F3  082D               	movf	(floattostr@largo_n+1)^(0+128),w
  5704     03F4  3A80               	xorlw	128
  5705     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  5706     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  5707     03F7  026B               	subwf	??_floattostr,w
  5708     03F8  1D03               	skipz
  5709     03F9  2BFE               	goto	u5215
  5710     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  5711     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  5712     03FC  082C               	movf	floattostr@largo_n^(0+128),w
  5713     03FD  022E               	subwf	floattostr@cont_for^(0+128),w
  5714     03FE                     u5215:
  5715     03FE  1C03               	skipc
  5716     03FF  2C01               	goto	u5211
  5717     0400  2C02               	goto	u5210
  5718     0401                     u5211:
  5719     0401  2B0A               	goto	l4222
  5720     0402                     u5210:
  5721     0402                     l4242:
  5722                           
  5723                           ;./float_str.h: 56:     *cadena_ = 0;
  5724     0402  1683               	bsf	3,5	;RP0=1, select bank1
  5725     0403  1303               	bcf	3,6	;RP1=0, select bank1
  5726     0404  0824               	movf	floattostr@cadena_^(0+128),w
  5727     0405  0084               	movwf	4
  5728     0406  1783               	bsf	3,7	;select IRP bank2
  5729     0407  0180               	clrf	0
  5730     0408                     l106:
  5731     0408  0008               	return
  5732     0409                     __end_of_floattostr:
  5733                           
  5734                           	psect	text26
  5735     15EC                     __ptext26:	
  5736 ;; *************** function ___xxtofl *****************
  5737 ;; Defined at:
  5738 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  sign            1    wreg     unsigned char 
  5741 ;;  val             4    3[COMMON] long 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;  sign            1    4[BANK0 ] unsigned char 
  5744 ;;  arg             4    6[BANK0 ] unsigned long 
  5745 ;;  exp             1    5[BANK0 ] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  4    3[COMMON] unsigned char 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5755 ;;      Params:         4       0       0       0       0
  5756 ;;      Locals:         0       6       0       0       0
  5757 ;;      Temps:          0       4       0       0       0
  5758 ;;      Totals:         4      10       0       0       0
  5759 ;;Total ram usage:       14 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; Hardware stack levels required when called: 1
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		_floattostr
  5766 ;;		_AHT10_Read
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770     15EC                     ___xxtofl:	
  5771                           ;psect for function ___xxtofl
  5772                           
  5773                           
  5774                           ;incstack = 0
  5775                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5776                           ;___xxtofl@sign stored from wreg
  5777     15EC  1283               	bcf	3,5	;RP0=0, select bank0
  5778     15ED  1303               	bcf	3,6	;RP1=0, select bank0
  5779     15EE  00A4               	movwf	___xxtofl@sign
  5780     15EF                     l4110:
  5781     15EF  0824               	movf	___xxtofl@sign,w
  5782     15F0  1903               	btfsc	3,2
  5783     15F1  2DF3               	goto	u4971
  5784     15F2  2DF4               	goto	u4970
  5785     15F3                     u4971:
  5786     15F3  2E08               	goto	l4116
  5787     15F4                     u4970:
  5788     15F4                     l4112:
  5789     15F4  1FF6               	btfss	___xxtofl@val+3,7
  5790     15F5  2DF7               	goto	u4981
  5791     15F6  2DF8               	goto	u4980
  5792     15F7                     u4981:
  5793     15F7  2E08               	goto	l4116
  5794     15F8                     u4980:
  5795     15F8                     l4114:
  5796     15F8  0973               	comf	___xxtofl@val,w
  5797     15F9  00A6               	movwf	___xxtofl@arg
  5798     15FA  0974               	comf	___xxtofl@val+1,w
  5799     15FB  00A7               	movwf	___xxtofl@arg+1
  5800     15FC  0975               	comf	___xxtofl@val+2,w
  5801     15FD  00A8               	movwf	___xxtofl@arg+2
  5802     15FE  0976               	comf	___xxtofl@val+3,w
  5803     15FF  00A9               	movwf	___xxtofl@arg+3
  5804     1600  0AA6               	incf	___xxtofl@arg,f
  5805     1601  1903               	skipnz
  5806     1602  0AA7               	incf	___xxtofl@arg+1,f
  5807     1603  1903               	skipnz
  5808     1604  0AA8               	incf	___xxtofl@arg+2,f
  5809     1605  1903               	skipnz
  5810     1606  0AA9               	incf	___xxtofl@arg+3,f
  5811     1607  2E10               	goto	l932
  5812     1608                     l4116:
  5813     1608  0876               	movf	___xxtofl@val+3,w
  5814     1609  00A9               	movwf	___xxtofl@arg+3
  5815     160A  0875               	movf	___xxtofl@val+2,w
  5816     160B  00A8               	movwf	___xxtofl@arg+2
  5817     160C  0874               	movf	___xxtofl@val+1,w
  5818     160D  00A7               	movwf	___xxtofl@arg+1
  5819     160E  0873               	movf	___xxtofl@val,w
  5820     160F  00A6               	movwf	___xxtofl@arg
  5821     1610                     l932:
  5822     1610  0876               	movf	___xxtofl@val+3,w
  5823     1611  0475               	iorwf	___xxtofl@val+2,w
  5824     1612  0474               	iorwf	___xxtofl@val+1,w
  5825     1613  0473               	iorwf	___xxtofl@val,w
  5826     1614  1D03               	skipz
  5827     1615  2E17               	goto	u4991
  5828     1616  2E18               	goto	u4990
  5829     1617                     u4991:
  5830     1617  2E21               	goto	l4122
  5831     1618                     u4990:
  5832     1618                     l4118:
  5833     1618  3000               	movlw	0
  5834     1619  00F6               	movwf	?___xxtofl+3
  5835     161A  3000               	movlw	0
  5836     161B  00F5               	movwf	?___xxtofl+2
  5837     161C  3000               	movlw	0
  5838     161D  00F4               	movwf	?___xxtofl+1
  5839     161E  3000               	movlw	0
  5840     161F  00F3               	movwf	?___xxtofl
  5841     1620  2EA5               	goto	l934
  5842     1621                     l4122:
  5843     1621  3096               	movlw	150
  5844     1622  00A5               	movwf	___xxtofl@exp
  5845     1623  2E31               	goto	l4126
  5846     1624                     l4124:
  5847     1624  3001               	movlw	1
  5848     1625  00A0               	movwf	??___xxtofl
  5849     1626  0820               	movf	??___xxtofl,w
  5850     1627  07A5               	addwf	___xxtofl@exp,f
  5851     1628  3001               	movlw	1
  5852     1629                     u5005:
  5853     1629  1003               	clrc
  5854     162A  0CA9               	rrf	___xxtofl@arg+3,f
  5855     162B  0CA8               	rrf	___xxtofl@arg+2,f
  5856     162C  0CA7               	rrf	___xxtofl@arg+1,f
  5857     162D  0CA6               	rrf	___xxtofl@arg,f
  5858     162E  3EFF               	addlw	-1
  5859     162F  1D03               	skipz
  5860     1630  2E29               	goto	u5005
  5861     1631                     l4126:
  5862     1631  30FE               	movlw	254
  5863     1632  0529               	andwf	___xxtofl@arg+3,w
  5864     1633  1D03               	btfss	3,2
  5865     1634  2E36               	goto	u5011
  5866     1635  2E37               	goto	u5010
  5867     1636                     u5011:
  5868     1636  2E24               	goto	l4124
  5869     1637                     u5010:
  5870     1637  2E53               	goto	l938
  5871     1638                     l4128:
  5872     1638  3001               	movlw	1
  5873     1639  00A0               	movwf	??___xxtofl
  5874     163A  0820               	movf	??___xxtofl,w
  5875     163B  07A5               	addwf	___xxtofl@exp,f
  5876     163C                     l4130:
  5877     163C  3001               	movlw	1
  5878     163D  07A6               	addwf	___xxtofl@arg,f
  5879     163E  3000               	movlw	0
  5880     163F  1803               	skipnc
  5881     1640  3001               	movlw	1
  5882     1641  07A7               	addwf	___xxtofl@arg+1,f
  5883     1642  3000               	movlw	0
  5884     1643  1803               	skipnc
  5885     1644  3001               	movlw	1
  5886     1645  07A8               	addwf	___xxtofl@arg+2,f
  5887     1646  3000               	movlw	0
  5888     1647  1803               	skipnc
  5889     1648  3001               	movlw	1
  5890     1649  07A9               	addwf	___xxtofl@arg+3,f
  5891     164A                     l4132:
  5892     164A  3001               	movlw	1
  5893     164B                     u5025:
  5894     164B  1003               	clrc
  5895     164C  0CA9               	rrf	___xxtofl@arg+3,f
  5896     164D  0CA8               	rrf	___xxtofl@arg+2,f
  5897     164E  0CA7               	rrf	___xxtofl@arg+1,f
  5898     164F  0CA6               	rrf	___xxtofl@arg,f
  5899     1650  3EFF               	addlw	-1
  5900     1651  1D03               	skipz
  5901     1652  2E4B               	goto	u5025
  5902     1653                     l938:
  5903     1653  30FF               	movlw	255
  5904     1654  0529               	andwf	___xxtofl@arg+3,w
  5905     1655  1D03               	btfss	3,2
  5906     1656  2E58               	goto	u5031
  5907     1657  2E59               	goto	u5030
  5908     1658                     u5031:
  5909     1658  2E38               	goto	l4128
  5910     1659                     u5030:
  5911     1659  2E65               	goto	l4136
  5912     165A                     l4134:
  5913     165A  3001               	movlw	1
  5914     165B  02A5               	subwf	___xxtofl@exp,f
  5915     165C  3001               	movlw	1
  5916     165D  00A0               	movwf	??___xxtofl
  5917     165E                     u5045:
  5918     165E  1003               	clrc
  5919     165F  0DA6               	rlf	___xxtofl@arg,f
  5920     1660  0DA7               	rlf	___xxtofl@arg+1,f
  5921     1661  0DA8               	rlf	___xxtofl@arg+2,f
  5922     1662  0DA9               	rlf	___xxtofl@arg+3,f
  5923     1663  0BA0               	decfsz	??___xxtofl,f
  5924     1664  2E5E               	goto	u5045
  5925     1665                     l4136:
  5926     1665  1BA8               	btfsc	___xxtofl@arg+2,7
  5927     1666  2E68               	goto	u5051
  5928     1667  2E69               	goto	u5050
  5929     1668                     u5051:
  5930     1668  2E6F               	goto	l945
  5931     1669                     u5050:
  5932     1669                     l4138:
  5933     1669  3002               	movlw	2
  5934     166A  0225               	subwf	___xxtofl@exp,w
  5935     166B  1803               	skipnc
  5936     166C  2E6E               	goto	u5061
  5937     166D  2E6F               	goto	u5060
  5938     166E                     u5061:
  5939     166E  2E5A               	goto	l4134
  5940     166F                     u5060:
  5941     166F                     l945:
  5942     166F  1825               	btfsc	___xxtofl@exp,0
  5943     1670  2E72               	goto	u5071
  5944     1671  2E73               	goto	u5070
  5945     1672                     u5071:
  5946     1672  2E7B               	goto	l946
  5947     1673                     u5070:
  5948     1673                     l4140:
  5949     1673  30FF               	movlw	255
  5950     1674  05A6               	andwf	___xxtofl@arg,f
  5951     1675  30FF               	movlw	255
  5952     1676  05A7               	andwf	___xxtofl@arg+1,f
  5953     1677  307F               	movlw	127
  5954     1678  05A8               	andwf	___xxtofl@arg+2,f
  5955     1679  30FF               	movlw	255
  5956     167A  05A9               	andwf	___xxtofl@arg+3,f
  5957     167B                     l946:
  5958     167B  1003               	clrc
  5959     167C  0CA5               	rrf	___xxtofl@exp,f
  5960     167D                     l4142:
  5961     167D  0825               	movf	___xxtofl@exp,w
  5962     167E  00A0               	movwf	??___xxtofl
  5963     167F  01A1               	clrf	??___xxtofl+1
  5964     1680  01A2               	clrf	??___xxtofl+2
  5965     1681  01A3               	clrf	??___xxtofl+3
  5966     1682  3018               	movlw	24
  5967     1683                     u5085:
  5968     1683  1003               	clrc
  5969     1684  0DA0               	rlf	??___xxtofl,f
  5970     1685  0DA1               	rlf	??___xxtofl+1,f
  5971     1686  0DA2               	rlf	??___xxtofl+2,f
  5972     1687  0DA3               	rlf	??___xxtofl+3,f
  5973     1688                     u5080:
  5974     1688  3EFF               	addlw	-1
  5975     1689  1D03               	skipz
  5976     168A  2E83               	goto	u5085
  5977     168B  0820               	movf	??___xxtofl,w
  5978     168C  04A6               	iorwf	___xxtofl@arg,f
  5979     168D  0821               	movf	??___xxtofl+1,w
  5980     168E  04A7               	iorwf	___xxtofl@arg+1,f
  5981     168F  0822               	movf	??___xxtofl+2,w
  5982     1690  04A8               	iorwf	___xxtofl@arg+2,f
  5983     1691  0823               	movf	??___xxtofl+3,w
  5984     1692  04A9               	iorwf	___xxtofl@arg+3,f
  5985     1693                     l4144:
  5986     1693  0824               	movf	___xxtofl@sign,w
  5987     1694  1903               	btfsc	3,2
  5988     1695  2E97               	goto	u5091
  5989     1696  2E98               	goto	u5090
  5990     1697                     u5091:
  5991     1697  2E9D               	goto	l4150
  5992     1698                     u5090:
  5993     1698                     l4146:
  5994     1698  1FF6               	btfss	___xxtofl@val+3,7
  5995     1699  2E9B               	goto	u5101
  5996     169A  2E9C               	goto	u5100
  5997     169B                     u5101:
  5998     169B  2E9D               	goto	l4150
  5999     169C                     u5100:
  6000     169C                     l4148:
  6001     169C  17A9               	bsf	___xxtofl@arg+3,7
  6002     169D                     l4150:
  6003     169D  0829               	movf	___xxtofl@arg+3,w
  6004     169E  00F6               	movwf	?___xxtofl+3
  6005     169F  0828               	movf	___xxtofl@arg+2,w
  6006     16A0  00F5               	movwf	?___xxtofl+2
  6007     16A1  0827               	movf	___xxtofl@arg+1,w
  6008     16A2  00F4               	movwf	?___xxtofl+1
  6009     16A3  0826               	movf	___xxtofl@arg,w
  6010     16A4  00F3               	movwf	?___xxtofl
  6011     16A5                     l934:
  6012     16A5  0008               	return
  6013     16A6                     __end_of___xxtofl:
  6014                           
  6015                           	psect	text27
  6016     0825                     __ptext27:	
  6017 ;; *************** function ___fltol *****************
  6018 ;; Defined at:
  6019 ;;		line 43 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  f1              4    3[COMMON] unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  exp1            1    5[BANK0 ] unsigned char 
  6024 ;;  sign1           1    4[BANK0 ] unsigned char 
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  4    3[COMMON] long 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6034 ;;      Params:         4       0       0       0       0
  6035 ;;      Locals:         0       2       0       0       0
  6036 ;;      Temps:          0       4       0       0       0
  6037 ;;      Totals:         4       6       0       0       0
  6038 ;;Total ram usage:       10 bytes
  6039 ;; Hardware stack levels used: 1
  6040 ;; Hardware stack levels required when called: 1
  6041 ;; This function calls:
  6042 ;;		Nothing
  6043 ;; This function is called by:
  6044 ;;		_floattostr
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048     0825                     ___fltol:	
  6049                           ;psect for function ___fltol
  6050                           
  6051     0825                     l3932:	
  6052                           ;incstack = 0
  6053                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6054                           
  6055     0825  1003               	clrc
  6056     0826  0D75               	rlf	___fltol@f1+2,w
  6057     0827  0D76               	rlf	___fltol@f1+3,w
  6058     0828  1283               	bcf	3,5	;RP0=0, select bank0
  6059     0829  1303               	bcf	3,6	;RP1=0, select bank0
  6060     082A  00A5               	movwf	___fltol@exp1
  6061     082B  0825               	movf	___fltol@exp1,w
  6062     082C  1D03               	btfss	3,2
  6063     082D  282F               	goto	u4581
  6064     082E  2830               	goto	u4580
  6065     082F                     u4581:
  6066     082F  2839               	goto	l3938
  6067     0830                     u4580:
  6068     0830                     l3934:
  6069     0830  3000               	movlw	0
  6070     0831  00F6               	movwf	?___fltol+3
  6071     0832  3000               	movlw	0
  6072     0833  00F5               	movwf	?___fltol+2
  6073     0834  3000               	movlw	0
  6074     0835  00F4               	movwf	?___fltol+1
  6075     0836  3000               	movlw	0
  6076     0837  00F3               	movwf	?___fltol
  6077     0838  289C               	goto	l685
  6078     0839                     l3938:
  6079     0839  0873               	movf	___fltol@f1,w
  6080     083A  00A0               	movwf	??___fltol
  6081     083B  0874               	movf	___fltol@f1+1,w
  6082     083C  00A1               	movwf	??___fltol+1
  6083     083D  0875               	movf	___fltol@f1+2,w
  6084     083E  00A2               	movwf	??___fltol+2
  6085     083F  0876               	movf	___fltol@f1+3,w
  6086     0840  00A3               	movwf	??___fltol+3
  6087     0841  301F               	movlw	31
  6088     0842                     u4595:
  6089     0842  1003               	clrc
  6090     0843  0CA3               	rrf	??___fltol+3,f
  6091     0844  0CA2               	rrf	??___fltol+2,f
  6092     0845  0CA1               	rrf	??___fltol+1,f
  6093     0846  0CA0               	rrf	??___fltol,f
  6094     0847                     u4590:
  6095     0847  3EFF               	addlw	-1
  6096     0848  1D03               	skipz
  6097     0849  2842               	goto	u4595
  6098     084A  0820               	movf	??___fltol,w
  6099     084B  00A4               	movwf	___fltol@sign1
  6100     084C                     l3940:
  6101     084C  17F5               	bsf	___fltol@f1+2,7
  6102     084D                     l3942:
  6103     084D  30FF               	movlw	255
  6104     084E  05F3               	andwf	___fltol@f1,f
  6105     084F  30FF               	movlw	255
  6106     0850  05F4               	andwf	___fltol@f1+1,f
  6107     0851  30FF               	movlw	255
  6108     0852  05F5               	andwf	___fltol@f1+2,f
  6109     0853  3000               	movlw	0
  6110     0854  05F6               	andwf	___fltol@f1+3,f
  6111     0855                     l3944:
  6112     0855  3096               	movlw	150
  6113     0856  02A5               	subwf	___fltol@exp1,f
  6114     0857                     l3946:
  6115     0857  1FA5               	btfss	___fltol@exp1,7
  6116     0858  285A               	goto	u4601
  6117     0859  285B               	goto	u4600
  6118     085A                     u4601:
  6119     085A  2875               	goto	l3956
  6120     085B                     u4600:
  6121     085B                     l3948:
  6122     085B  0825               	movf	___fltol@exp1,w
  6123     085C  3A80               	xorlw	128
  6124     085D  3E97               	addlw	151
  6125     085E  1803               	skipnc
  6126     085F  2861               	goto	u4611
  6127     0860  2862               	goto	u4610
  6128     0861                     u4611:
  6129     0861  2863               	goto	l3954
  6130     0862                     u4610:
  6131     0862  2830               	goto	l3934
  6132     0863                     l3954:
  6133     0863  3001               	movlw	1
  6134     0864                     u4625:
  6135     0864  1003               	clrc
  6136     0865  0CF6               	rrf	___fltol@f1+3,f
  6137     0866  0CF5               	rrf	___fltol@f1+2,f
  6138     0867  0CF4               	rrf	___fltol@f1+1,f
  6139     0868  0CF3               	rrf	___fltol@f1,f
  6140     0869  3EFF               	addlw	-1
  6141     086A  1D03               	skipz
  6142     086B  2864               	goto	u4625
  6143     086C  3001               	movlw	1
  6144     086D  00A0               	movwf	??___fltol
  6145     086E  0820               	movf	??___fltol,w
  6146     086F  07A5               	addwf	___fltol@exp1,f
  6147     0870  1D03               	btfss	3,2
  6148     0871  2873               	goto	u4631
  6149     0872  2874               	goto	u4630
  6150     0873                     u4631:
  6151     0873  2863               	goto	l3954
  6152     0874                     u4630:
  6153     0874  288C               	goto	l3964
  6154     0875                     l3956:
  6155     0875  3020               	movlw	32
  6156     0876  0225               	subwf	___fltol@exp1,w
  6157     0877  1C03               	skipc
  6158     0878  287A               	goto	u4641
  6159     0879  287B               	goto	u4640
  6160     087A                     u4641:
  6161     087A  2887               	goto	l692
  6162     087B                     u4640:
  6163     087B  2830               	goto	l3934
  6164     087C                     l3962:
  6165     087C  3001               	movlw	1
  6166     087D  00A0               	movwf	??___fltol
  6167     087E                     u4655:
  6168     087E  1003               	clrc
  6169     087F  0DF3               	rlf	___fltol@f1,f
  6170     0880  0DF4               	rlf	___fltol@f1+1,f
  6171     0881  0DF5               	rlf	___fltol@f1+2,f
  6172     0882  0DF6               	rlf	___fltol@f1+3,f
  6173     0883  0BA0               	decfsz	??___fltol,f
  6174     0884  287E               	goto	u4655
  6175     0885  3001               	movlw	1
  6176     0886  02A5               	subwf	___fltol@exp1,f
  6177     0887                     l692:
  6178     0887  0825               	movf	___fltol@exp1,w
  6179     0888  1D03               	btfss	3,2
  6180     0889  288B               	goto	u4661
  6181     088A  288C               	goto	u4660
  6182     088B                     u4661:
  6183     088B  287C               	goto	l3962
  6184     088C                     u4660:
  6185     088C                     l3964:
  6186     088C  0824               	movf	___fltol@sign1,w
  6187     088D  1903               	btfsc	3,2
  6188     088E  2890               	goto	u4671
  6189     088F  2891               	goto	u4670
  6190     0890                     u4671:
  6191     0890  289C               	goto	l695
  6192     0891                     u4670:
  6193     0891                     l3966:
  6194     0891  09F3               	comf	___fltol@f1,f
  6195     0892  09F4               	comf	___fltol@f1+1,f
  6196     0893  09F5               	comf	___fltol@f1+2,f
  6197     0894  09F6               	comf	___fltol@f1+3,f
  6198     0895  0AF3               	incf	___fltol@f1,f
  6199     0896  1903               	skipnz
  6200     0897  0AF4               	incf	___fltol@f1+1,f
  6201     0898  1903               	skipnz
  6202     0899  0AF5               	incf	___fltol@f1+2,f
  6203     089A  1903               	skipnz
  6204     089B  0AF6               	incf	___fltol@f1+3,f
  6205     089C                     l695:
  6206     089C                     l685:
  6207     089C  0008               	return
  6208     089D                     __end_of___fltol:
  6209                           
  6210                           	psect	text28
  6211     0801                     __ptext28:	
  6212 ;; *************** function ___flsub *****************
  6213 ;; Defined at:
  6214 ;;		line 242 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  a               4   67[BANK0 ] long 
  6217 ;;  b               4   71[BANK0 ] long 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4   67[BANK0 ] long 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         0       8       0       0       0
  6230 ;;      Locals:         0       0       0       0       0
  6231 ;;      Temps:          0       0       0       0       0
  6232 ;;      Totals:         0       8       0       0       0
  6233 ;;Total ram usage:        8 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 2
  6236 ;; This function calls:
  6237 ;;		___fladd
  6238 ;; This function is called by:
  6239 ;;		_floattostr
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243     0801                     ___flsub:	
  6244                           ;psect for function ___flsub
  6245                           
  6246     0801                     l2796:	
  6247                           ;incstack = 0
  6248                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6249                           
  6250     0801  3080               	movlw	128
  6251     0802  1283               	bcf	3,5	;RP0=0, select bank0
  6252     0803  1303               	bcf	3,6	;RP1=0, select bank0
  6253     0804  06E6               	xorwf	___flsub@a+3,f
  6254     0805                     l2798:
  6255     0805  086A               	movf	___flsub@b+3,w
  6256     0806  00D2               	movwf	___fladd@b+3
  6257     0807  0869               	movf	___flsub@b+2,w
  6258     0808  00D1               	movwf	___fladd@b+2
  6259     0809  0868               	movf	___flsub@b+1,w
  6260     080A  00D0               	movwf	___fladd@b+1
  6261     080B  0867               	movf	___flsub@b,w
  6262     080C  00CF               	movwf	___fladd@b
  6263     080D  0866               	movf	___flsub@a+3,w
  6264     080E  00D6               	movwf	___fladd@a+3
  6265     080F  0865               	movf	___flsub@a+2,w
  6266     0810  00D5               	movwf	___fladd@a+2
  6267     0811  0864               	movf	___flsub@a+1,w
  6268     0812  00D4               	movwf	___fladd@a+1
  6269     0813  0863               	movf	___flsub@a,w
  6270     0814  00D3               	movwf	___fladd@a
  6271     0815  120A  158A  25A8  120A  158A  	fcall	___fladd
  6272     081A  1283               	bcf	3,5	;RP0=0, select bank0
  6273     081B  1303               	bcf	3,6	;RP1=0, select bank0
  6274     081C  0852               	movf	?___fladd+3,w
  6275     081D  00E6               	movwf	?___flsub+3
  6276     081E  0851               	movf	?___fladd+2,w
  6277     081F  00E5               	movwf	?___flsub+2
  6278     0820  0850               	movf	?___fladd+1,w
  6279     0821  00E4               	movwf	?___flsub+1
  6280     0822  084F               	movf	?___fladd,w
  6281     0823  00E3               	movwf	?___flsub
  6282     0824                     l838:
  6283     0824  0008               	return
  6284     0825                     __end_of___flsub:
  6285                           
  6286                           	psect	text29
  6287     0DA8                     __ptext29:	
  6288 ;; *************** function ___fladd *****************
  6289 ;; Defined at:
  6290 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  b               4   47[BANK0 ] long 
  6293 ;;  a               4   51[BANK0 ] long 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  grs             1   66[BANK0 ] unsigned char 
  6296 ;;  bexp            1   65[BANK0 ] unsigned char 
  6297 ;;  aexp            1   64[BANK0 ] unsigned char 
  6298 ;;  signs           1   63[BANK0 ] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  4   47[BANK0 ] unsigned char 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0, btemp+1
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6308 ;;      Params:         0       8       0       0       0
  6309 ;;      Locals:         0       4       0       0       0
  6310 ;;      Temps:          0       8       0       0       0
  6311 ;;      Totals:         0      20       0       0       0
  6312 ;;Total ram usage:       20 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_floattostr
  6319 ;;		_AHT10_Read
  6320 ;;		___flsub
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324     0DA8                     ___fladd:	
  6325                           ;psect for function ___fladd
  6326                           
  6327     0DA8                     l2460:	
  6328                           ;incstack = 0
  6329                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6330                           
  6331     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  6332     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  6333     0DAA  0852               	movf	___fladd@b+3,w
  6334     0DAB  3980               	andlw	128
  6335     0DAC  00DF               	movwf	___fladd@signs
  6336     0DAD                     l2462:
  6337     0DAD  0852               	movf	___fladd@b+3,w
  6338     0DAE  00D7               	movwf	??___fladd
  6339     0DAF  0757               	addwf	??___fladd,w
  6340     0DB0  00E1               	movwf	___fladd@bexp
  6341     0DB1                     l2464:
  6342     0DB1  1FD1               	btfss	___fladd@b+2,7
  6343     0DB2  2DB4               	goto	u2261
  6344     0DB3  2DB5               	goto	u2260
  6345     0DB4                     u2261:
  6346     0DB4  2DB6               	goto	l2468
  6347     0DB5                     u2260:
  6348     0DB5                     l2466:
  6349     0DB5  1461               	bsf	___fladd@bexp,0
  6350     0DB6                     l2468:
  6351     0DB6  0861               	movf	___fladd@bexp,w
  6352     0DB7  1903               	btfsc	3,2
  6353     0DB8  2DBA               	goto	u2271
  6354     0DB9  2DBB               	goto	u2270
  6355     0DBA                     u2271:
  6356     0DBA  2DCB               	goto	l2478
  6357     0DBB                     u2270:
  6358     0DBB                     l2470:
  6359     0DBB  0A61               	incf	___fladd@bexp,w
  6360     0DBC  1D03               	btfss	3,2
  6361     0DBD  2DBF               	goto	u2281
  6362     0DBE  2DC0               	goto	u2280
  6363     0DBF                     u2281:
  6364     0DBF  2DC8               	goto	l2474
  6365     0DC0                     u2280:
  6366     0DC0                     l2472:
  6367     0DC0  3000               	movlw	0
  6368     0DC1  00D2               	movwf	___fladd@b+3
  6369     0DC2  3000               	movlw	0
  6370     0DC3  00D1               	movwf	___fladd@b+2
  6371     0DC4  3000               	movlw	0
  6372     0DC5  00D0               	movwf	___fladd@b+1
  6373     0DC6  3000               	movlw	0
  6374     0DC7  00CF               	movwf	___fladd@b
  6375     0DC8                     l2474:
  6376     0DC8  17D1               	bsf	___fladd@b+2,7
  6377     0DC9                     l2476:
  6378     0DC9  01D2               	clrf	___fladd@b+3
  6379     0DCA  2DD3               	goto	l2480
  6380     0DCB                     l2478:
  6381     0DCB  3000               	movlw	0
  6382     0DCC  00D2               	movwf	___fladd@b+3
  6383     0DCD  3000               	movlw	0
  6384     0DCE  00D1               	movwf	___fladd@b+2
  6385     0DCF  3000               	movlw	0
  6386     0DD0  00D0               	movwf	___fladd@b+1
  6387     0DD1  3000               	movlw	0
  6388     0DD2  00CF               	movwf	___fladd@b
  6389     0DD3                     l2480:
  6390     0DD3  0856               	movf	___fladd@a+3,w
  6391     0DD4  3980               	andlw	128
  6392     0DD5  00E0               	movwf	___fladd@aexp
  6393     0DD6                     l2482:
  6394     0DD6  0860               	movf	___fladd@aexp,w
  6395     0DD7  065F               	xorwf	___fladd@signs,w
  6396     0DD8  1903               	skipnz
  6397     0DD9  2DDB               	goto	u2291
  6398     0DDA  2DDC               	goto	u2290
  6399     0DDB                     u2291:
  6400     0DDB  2DDD               	goto	l2486
  6401     0DDC                     u2290:
  6402     0DDC                     l2484:
  6403     0DDC  175F               	bsf	___fladd@signs,6
  6404     0DDD                     l2486:
  6405     0DDD  0856               	movf	___fladd@a+3,w
  6406     0DDE  00D7               	movwf	??___fladd
  6407     0DDF  0757               	addwf	??___fladd,w
  6408     0DE0  00E0               	movwf	___fladd@aexp
  6409     0DE1                     l2488:
  6410     0DE1  1FD5               	btfss	___fladd@a+2,7
  6411     0DE2  2DE4               	goto	u2301
  6412     0DE3  2DE5               	goto	u2300
  6413     0DE4                     u2301:
  6414     0DE4  2DE6               	goto	l2492
  6415     0DE5                     u2300:
  6416     0DE5                     l2490:
  6417     0DE5  1460               	bsf	___fladd@aexp,0
  6418     0DE6                     l2492:
  6419     0DE6  0860               	movf	___fladd@aexp,w
  6420     0DE7  1903               	btfsc	3,2
  6421     0DE8  2DEA               	goto	u2311
  6422     0DE9  2DEB               	goto	u2310
  6423     0DEA                     u2311:
  6424     0DEA  2DFB               	goto	l2502
  6425     0DEB                     u2310:
  6426     0DEB                     l2494:
  6427     0DEB  0A60               	incf	___fladd@aexp,w
  6428     0DEC  1D03               	btfss	3,2
  6429     0DED  2DEF               	goto	u2321
  6430     0DEE  2DF0               	goto	u2320
  6431     0DEF                     u2321:
  6432     0DEF  2DF8               	goto	l2498
  6433     0DF0                     u2320:
  6434     0DF0                     l2496:
  6435     0DF0  3000               	movlw	0
  6436     0DF1  00D6               	movwf	___fladd@a+3
  6437     0DF2  3000               	movlw	0
  6438     0DF3  00D5               	movwf	___fladd@a+2
  6439     0DF4  3000               	movlw	0
  6440     0DF5  00D4               	movwf	___fladd@a+1
  6441     0DF6  3000               	movlw	0
  6442     0DF7  00D3               	movwf	___fladd@a
  6443     0DF8                     l2498:
  6444     0DF8  17D5               	bsf	___fladd@a+2,7
  6445     0DF9                     l2500:
  6446     0DF9  01D6               	clrf	___fladd@a+3
  6447     0DFA  2E03               	goto	l792
  6448     0DFB                     l2502:
  6449     0DFB  3000               	movlw	0
  6450     0DFC  00D6               	movwf	___fladd@a+3
  6451     0DFD  3000               	movlw	0
  6452     0DFE  00D5               	movwf	___fladd@a+2
  6453     0DFF  3000               	movlw	0
  6454     0E00  00D4               	movwf	___fladd@a+1
  6455     0E01  3000               	movlw	0
  6456     0E02  00D3               	movwf	___fladd@a
  6457     0E03                     l792:
  6458     0E03  0861               	movf	___fladd@bexp,w
  6459     0E04  0260               	subwf	___fladd@aexp,w
  6460     0E05  1803               	skipnc
  6461     0E06  2E08               	goto	u2331
  6462     0E07  2E09               	goto	u2330
  6463     0E08                     u2331:
  6464     0E08  2E2F               	goto	l2538
  6465     0E09                     u2330:
  6466     0E09                     l2504:
  6467     0E09  1F5F               	btfss	___fladd@signs,6
  6468     0E0A  2E0C               	goto	u2341
  6469     0E0B  2E0D               	goto	u2340
  6470     0E0C                     u2341:
  6471     0E0C  2E11               	goto	l2508
  6472     0E0D                     u2340:
  6473     0E0D                     l2506:
  6474     0E0D  3080               	movlw	128
  6475     0E0E  00D7               	movwf	??___fladd
  6476     0E0F  0857               	movf	??___fladd,w
  6477     0E10  06DF               	xorwf	___fladd@signs,f
  6478     0E11                     l2508:
  6479     0E11  0861               	movf	___fladd@bexp,w
  6480     0E12  00E2               	movwf	___fladd@grs
  6481     0E13                     l2510:
  6482     0E13  0860               	movf	___fladd@aexp,w
  6483     0E14  00E1               	movwf	___fladd@bexp
  6484     0E15                     l2512:
  6485     0E15  0862               	movf	___fladd@grs,w
  6486     0E16  00E0               	movwf	___fladd@aexp
  6487     0E17                     l2514:
  6488     0E17  084F               	movf	___fladd@b,w
  6489     0E18  00E2               	movwf	___fladd@grs
  6490     0E19                     l2516:
  6491     0E19  0853               	movf	___fladd@a,w
  6492     0E1A  00CF               	movwf	___fladd@b
  6493     0E1B                     l2518:
  6494     0E1B  0862               	movf	___fladd@grs,w
  6495     0E1C  00D3               	movwf	___fladd@a
  6496     0E1D                     l2520:
  6497     0E1D  0850               	movf	___fladd@b+1,w
  6498     0E1E  00E2               	movwf	___fladd@grs
  6499     0E1F                     l2522:
  6500     0E1F  0854               	movf	___fladd@a+1,w
  6501     0E20  00D0               	movwf	___fladd@b+1
  6502     0E21                     l2524:
  6503     0E21  0862               	movf	___fladd@grs,w
  6504     0E22  00D4               	movwf	___fladd@a+1
  6505     0E23                     l2526:
  6506     0E23  0851               	movf	___fladd@b+2,w
  6507     0E24  00E2               	movwf	___fladd@grs
  6508     0E25                     l2528:
  6509     0E25  0855               	movf	___fladd@a+2,w
  6510     0E26  00D1               	movwf	___fladd@b+2
  6511     0E27                     l2530:
  6512     0E27  0862               	movf	___fladd@grs,w
  6513     0E28  00D5               	movwf	___fladd@a+2
  6514     0E29                     l2532:
  6515     0E29  0852               	movf	___fladd@b+3,w
  6516     0E2A  00E2               	movwf	___fladd@grs
  6517     0E2B                     l2534:
  6518     0E2B  0856               	movf	___fladd@a+3,w
  6519     0E2C  00D2               	movwf	___fladd@b+3
  6520     0E2D                     l2536:
  6521     0E2D  0862               	movf	___fladd@grs,w
  6522     0E2E  00D6               	movwf	___fladd@a+3
  6523     0E2F                     l2538:
  6524     0E2F  01E2               	clrf	___fladd@grs
  6525     0E30                     l2540:
  6526     0E30  0860               	movf	___fladd@aexp,w
  6527     0E31  00D7               	movwf	??___fladd
  6528     0E32  01D8               	clrf	??___fladd+1
  6529     0E33  0858               	movf	??___fladd+1,w
  6530     0E34  00DA               	movwf	??___fladd+3
  6531     0E35  0861               	movf	___fladd@bexp,w
  6532     0E36  0257               	subwf	??___fladd,w
  6533     0E37  00D9               	movwf	??___fladd+2
  6534     0E38  1C03               	skipc
  6535     0E39  03DA               	decf	??___fladd+3,f
  6536     0E3A  085A               	movf	??___fladd+3,w
  6537     0E3B  3A80               	xorlw	128
  6538     0E3C  00FF               	movwf	btemp+1
  6539     0E3D  3080               	movlw	128
  6540     0E3E  027F               	subwf	btemp+1,w
  6541     0E3F  1D03               	skipz
  6542     0E40  2E43               	goto	u2355
  6543     0E41  301A               	movlw	26
  6544     0E42  0259               	subwf	??___fladd+2,w
  6545     0E43                     u2355:
  6546     0E43  1C03               	skipc
  6547     0E44  2E46               	goto	u2351
  6548     0E45  2E47               	goto	u2350
  6549     0E46                     u2351:
  6550     0E46  2E7E               	goto	l2556
  6551     0E47                     u2350:
  6552     0E47                     l2542:
  6553     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  6554     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  6555     0E49  0852               	movf	___fladd@b+3,w
  6556     0E4A  0451               	iorwf	___fladd@b+2,w
  6557     0E4B  0450               	iorwf	___fladd@b+1,w
  6558     0E4C  044F               	iorwf	___fladd@b,w
  6559     0E4D  1D03               	skipz
  6560     0E4E  2E50               	goto	u2361
  6561     0E4F  2E52               	goto	u2360
  6562     0E50                     u2361:
  6563     0E50  3001               	movlw	1
  6564     0E51  2E53               	goto	u2370
  6565     0E52                     u2360:
  6566     0E52  3000               	movlw	0
  6567     0E53                     u2370:
  6568     0E53  00E2               	movwf	___fladd@grs
  6569     0E54  3000               	movlw	0
  6570     0E55  00D2               	movwf	___fladd@b+3
  6571     0E56  3000               	movlw	0
  6572     0E57  00D1               	movwf	___fladd@b+2
  6573     0E58  3000               	movlw	0
  6574     0E59  00D0               	movwf	___fladd@b+1
  6575     0E5A  3000               	movlw	0
  6576     0E5B  00CF               	movwf	___fladd@b
  6577     0E5C  0860               	movf	___fladd@aexp,w
  6578     0E5D  00E1               	movwf	___fladd@bexp
  6579     0E5E  2E86               	goto	l796
  6580     0E5F                     l798:
  6581     0E5F  1C62               	btfss	___fladd@grs,0
  6582     0E60  2E62               	goto	u2381
  6583     0E61  2E63               	goto	u2380
  6584     0E62                     u2381:
  6585     0E62  2E6A               	goto	l2546
  6586     0E63                     u2380:
  6587     0E63                     l2544:
  6588     0E63  0862               	movf	___fladd@grs,w
  6589     0E64  00D7               	movwf	??___fladd
  6590     0E65  1003               	clrc
  6591     0E66  0C57               	rrf	??___fladd,w
  6592     0E67  3801               	iorlw	1
  6593     0E68  00E2               	movwf	___fladd@grs
  6594     0E69  2E6C               	goto	l2548
  6595     0E6A                     l2546:
  6596     0E6A  1003               	clrc
  6597     0E6B  0CE2               	rrf	___fladd@grs,f
  6598     0E6C                     l2548:
  6599     0E6C  1C4F               	btfss	___fladd@b,0
  6600     0E6D  2E6F               	goto	u2391
  6601     0E6E  2E70               	goto	u2390
  6602     0E6F                     u2391:
  6603     0E6F  2E71               	goto	l2552
  6604     0E70                     u2390:
  6605     0E70                     l2550:
  6606     0E70  17E2               	bsf	___fladd@grs,7
  6607     0E71                     l2552:
  6608     0E71  3001               	movlw	1
  6609     0E72  00D7               	movwf	??___fladd
  6610     0E73                     u2405:
  6611     0E73  0D52               	rlf	___fladd@b+3,w
  6612     0E74  0CD2               	rrf	___fladd@b+3,f
  6613     0E75  0CD1               	rrf	___fladd@b+2,f
  6614     0E76  0CD0               	rrf	___fladd@b+1,f
  6615     0E77  0CCF               	rrf	___fladd@b,f
  6616     0E78  0BD7               	decfsz	??___fladd& (0+127),f
  6617     0E79  2E73               	goto	u2405
  6618     0E7A                     l2554:
  6619     0E7A  3001               	movlw	1
  6620     0E7B  00D7               	movwf	??___fladd
  6621     0E7C  0857               	movf	??___fladd,w
  6622     0E7D  07E1               	addwf	___fladd@bexp,f
  6623     0E7E                     l2556:
  6624     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  6625     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  6626     0E80  0860               	movf	___fladd@aexp,w
  6627     0E81  0261               	subwf	___fladd@bexp,w
  6628     0E82  1C03               	skipc
  6629     0E83  2E85               	goto	u2411
  6630     0E84  2E86               	goto	u2410
  6631     0E85                     u2411:
  6632     0E85  2E5F               	goto	l798
  6633     0E86                     u2410:
  6634     0E86                     l796:
  6635     0E86  1B5F               	btfsc	___fladd@signs,6
  6636     0E87  2E89               	goto	u2421
  6637     0E88  2E8A               	goto	u2420
  6638     0E89                     u2421:
  6639     0E89  2ED3               	goto	l2582
  6640     0E8A                     u2420:
  6641     0E8A                     l2558:
  6642     0E8A  0861               	movf	___fladd@bexp,w
  6643     0E8B  1D03               	btfss	3,2
  6644     0E8C  2E8E               	goto	u2431
  6645     0E8D  2E8F               	goto	u2430
  6646     0E8E                     u2431:
  6647     0E8E  2E98               	goto	l2564
  6648     0E8F                     u2430:
  6649     0E8F                     l2560:
  6650     0E8F  3000               	movlw	0
  6651     0E90  00D2               	movwf	?___fladd+3
  6652     0E91  3000               	movlw	0
  6653     0E92  00D1               	movwf	?___fladd+2
  6654     0E93  3000               	movlw	0
  6655     0E94  00D0               	movwf	?___fladd+1
  6656     0E95  3000               	movlw	0
  6657     0E96  00CF               	movwf	?___fladd
  6658     0E97  2FFF               	goto	l805
  6659     0E98                     l2564:
  6660     0E98  0853               	movf	___fladd@a,w
  6661     0E99  07CF               	addwf	___fladd@b,f
  6662     0E9A  0854               	movf	___fladd@a+1,w
  6663     0E9B  1103               	clrz
  6664     0E9C  1803               	skipnc
  6665     0E9D  3E01               	addlw	1
  6666     0E9E  1903               	skipnz
  6667     0E9F  2EA1               	goto	u2441
  6668     0EA0  07D0               	addwf	___fladd@b+1,f
  6669     0EA1                     u2441:
  6670     0EA1  0855               	movf	___fladd@a+2,w
  6671     0EA2  1103               	clrz
  6672     0EA3  1803               	skipnc
  6673     0EA4  3E01               	addlw	1
  6674     0EA5  1903               	skipnz
  6675     0EA6  2EA8               	goto	u2442
  6676     0EA7  07D1               	addwf	___fladd@b+2,f
  6677     0EA8                     u2442:
  6678     0EA8  0856               	movf	___fladd@a+3,w
  6679     0EA9  1103               	clrz
  6680     0EAA  1803               	skipnc
  6681     0EAB  3E01               	addlw	1
  6682     0EAC  1903               	skipnz
  6683     0EAD  2EAF               	goto	u2443
  6684     0EAE  07D2               	addwf	___fladd@b+3,f
  6685     0EAF                     u2443:
  6686     0EAF                     l2566:
  6687     0EAF  1C52               	btfss	___fladd@b+3,0
  6688     0EB0  2EB2               	goto	u2451
  6689     0EB1  2EB3               	goto	u2450
  6690     0EB2                     u2451:
  6691     0EB2  2F87               	goto	l2616
  6692     0EB3                     u2450:
  6693     0EB3                     l2568:
  6694     0EB3  1C62               	btfss	___fladd@grs,0
  6695     0EB4  2EB6               	goto	u2461
  6696     0EB5  2EB7               	goto	u2460
  6697     0EB6                     u2461:
  6698     0EB6  2EBE               	goto	l2572
  6699     0EB7                     u2460:
  6700     0EB7                     l2570:
  6701     0EB7  0862               	movf	___fladd@grs,w
  6702     0EB8  00D7               	movwf	??___fladd
  6703     0EB9  1003               	clrc
  6704     0EBA  0C57               	rrf	??___fladd,w
  6705     0EBB  3801               	iorlw	1
  6706     0EBC  00E2               	movwf	___fladd@grs
  6707     0EBD  2EC0               	goto	l2574
  6708     0EBE                     l2572:
  6709     0EBE  1003               	clrc
  6710     0EBF  0CE2               	rrf	___fladd@grs,f
  6711     0EC0                     l2574:
  6712     0EC0  1C4F               	btfss	___fladd@b,0
  6713     0EC1  2EC3               	goto	u2471
  6714     0EC2  2EC4               	goto	u2470
  6715     0EC3                     u2471:
  6716     0EC3  2EC5               	goto	l2578
  6717     0EC4                     u2470:
  6718     0EC4                     l2576:
  6719     0EC4  17E2               	bsf	___fladd@grs,7
  6720     0EC5                     l2578:
  6721     0EC5  3001               	movlw	1
  6722     0EC6  00D7               	movwf	??___fladd
  6723     0EC7                     u2485:
  6724     0EC7  0D52               	rlf	___fladd@b+3,w
  6725     0EC8  0CD2               	rrf	___fladd@b+3,f
  6726     0EC9  0CD1               	rrf	___fladd@b+2,f
  6727     0ECA  0CD0               	rrf	___fladd@b+1,f
  6728     0ECB  0CCF               	rrf	___fladd@b,f
  6729     0ECC  0BD7               	decfsz	??___fladd& (0+127),f
  6730     0ECD  2EC7               	goto	u2485
  6731     0ECE                     l2580:
  6732     0ECE  3001               	movlw	1
  6733     0ECF  00D7               	movwf	??___fladd
  6734     0ED0  0857               	movf	??___fladd,w
  6735     0ED1  07E1               	addwf	___fladd@bexp,f
  6736     0ED2  2F87               	goto	l2616
  6737     0ED3                     l2582:
  6738     0ED3  0852               	movf	___fladd@b+3,w
  6739     0ED4  3A80               	xorlw	128
  6740     0ED5  00FF               	movwf	btemp+1
  6741     0ED6  0856               	movf	___fladd@a+3,w
  6742     0ED7  3A80               	xorlw	128
  6743     0ED8  027F               	subwf	btemp+1,w
  6744     0ED9  1D03               	skipz
  6745     0EDA  2EE5               	goto	u2493
  6746     0EDB  0855               	movf	___fladd@a+2,w
  6747     0EDC  0251               	subwf	___fladd@b+2,w
  6748     0EDD  1D03               	skipz
  6749     0EDE  2EE5               	goto	u2493
  6750     0EDF  0854               	movf	___fladd@a+1,w
  6751     0EE0  0250               	subwf	___fladd@b+1,w
  6752     0EE1  1D03               	skipz
  6753     0EE2  2EE5               	goto	u2493
  6754     0EE3  0853               	movf	___fladd@a,w
  6755     0EE4  024F               	subwf	___fladd@b,w
  6756     0EE5                     u2493:
  6757     0EE5  1803               	skipnc
  6758     0EE6  2EE8               	goto	u2491
  6759     0EE7  2EE9               	goto	u2490
  6760     0EE8                     u2491:
  6761     0EE8  2F41               	goto	l2592
  6762     0EE9                     u2490:
  6763     0EE9                     l2584:
  6764     0EE9  30FF               	movlw	255
  6765     0EEA  00D7               	movwf	??___fladd
  6766     0EEB  30FF               	movlw	255
  6767     0EEC  00D8               	movwf	??___fladd+1
  6768     0EED  30FF               	movlw	255
  6769     0EEE  00D9               	movwf	??___fladd+2
  6770     0EEF  30FF               	movlw	255
  6771     0EF0  00DA               	movwf	??___fladd+3
  6772     0EF1  0853               	movf	___fladd@a,w
  6773     0EF2  00DB               	movwf	??___fladd+4
  6774     0EF3  0854               	movf	___fladd@a+1,w
  6775     0EF4  00DC               	movwf	??___fladd+5
  6776     0EF5  0855               	movf	___fladd@a+2,w
  6777     0EF6  00DD               	movwf	??___fladd+6
  6778     0EF7  0856               	movf	___fladd@a+3,w
  6779     0EF8  00DE               	movwf	??___fladd+7
  6780     0EF9  084F               	movf	___fladd@b,w
  6781     0EFA  02DB               	subwf	??___fladd+4,f
  6782     0EFB  0850               	movf	___fladd@b+1,w
  6783     0EFC  1C03               	skipc
  6784     0EFD  0F50               	incfsz	___fladd@b+1,w
  6785     0EFE  2F00               	goto	u2501
  6786     0EFF  2F01               	goto	u2502
  6787     0F00                     u2501:
  6788     0F00  02DC               	subwf	??___fladd+5,f
  6789     0F01                     u2502:
  6790     0F01  0851               	movf	___fladd@b+2,w
  6791     0F02  1C03               	skipc
  6792     0F03  0F51               	incfsz	___fladd@b+2,w
  6793     0F04  2F06               	goto	u2503
  6794     0F05  2F07               	goto	u2504
  6795     0F06                     u2503:
  6796     0F06  02DD               	subwf	??___fladd+6,f
  6797     0F07                     u2504:
  6798     0F07  0852               	movf	___fladd@b+3,w
  6799     0F08  1C03               	skipc
  6800     0F09  0F52               	incfsz	___fladd@b+3,w
  6801     0F0A  2F0C               	goto	u2505
  6802     0F0B  2F0D               	goto	u2506
  6803     0F0C                     u2505:
  6804     0F0C  02DE               	subwf	??___fladd+7,f
  6805     0F0D                     u2506:
  6806     0F0D  085B               	movf	??___fladd+4,w
  6807     0F0E  07D7               	addwf	??___fladd,f
  6808     0F0F  085C               	movf	??___fladd+5,w
  6809     0F10  1803               	skipnc
  6810     0F11  0F5C               	incfsz	??___fladd+5,w
  6811     0F12  2F14               	goto	u2510
  6812     0F13  2F15               	goto	u2511
  6813     0F14                     u2510:
  6814     0F14  07D8               	addwf	??___fladd+1,f
  6815     0F15                     u2511:
  6816     0F15  085D               	movf	??___fladd+6,w
  6817     0F16  1803               	skipnc
  6818     0F17  0F5D               	incfsz	??___fladd+6,w
  6819     0F18  2F1A               	goto	u2512
  6820     0F19  2F1B               	goto	u2513
  6821     0F1A                     u2512:
  6822     0F1A  07D9               	addwf	??___fladd+2,f
  6823     0F1B                     u2513:
  6824     0F1B  085E               	movf	??___fladd+7,w
  6825     0F1C  1803               	skipnc
  6826     0F1D  0A5E               	incf	??___fladd+7,w
  6827     0F1E  07DA               	addwf	??___fladd+3,f
  6828     0F1F  085A               	movf	??___fladd+3,w
  6829     0F20  00D2               	movwf	___fladd@b+3
  6830     0F21  0859               	movf	??___fladd+2,w
  6831     0F22  00D1               	movwf	___fladd@b+2
  6832     0F23  0858               	movf	??___fladd+1,w
  6833     0F24  00D0               	movwf	___fladd@b+1
  6834     0F25  0857               	movf	??___fladd,w
  6835     0F26  00CF               	movwf	___fladd@b
  6836     0F27                     l2586:
  6837     0F27  3080               	movlw	128
  6838     0F28  00D7               	movwf	??___fladd
  6839     0F29  0857               	movf	??___fladd,w
  6840     0F2A  06DF               	xorwf	___fladd@signs,f
  6841     0F2B  09E2               	comf	___fladd@grs,f
  6842     0F2C  0AE2               	incf	___fladd@grs,f
  6843     0F2D                     l2588:
  6844     0F2D  0862               	movf	___fladd@grs,w
  6845     0F2E  1D03               	btfss	3,2
  6846     0F2F  2F31               	goto	u2521
  6847     0F30  2F32               	goto	u2520
  6848     0F31                     u2521:
  6849     0F31  2F4F               	goto	l813
  6850     0F32                     u2520:
  6851     0F32                     l2590:
  6852     0F32  3001               	movlw	1
  6853     0F33  07CF               	addwf	___fladd@b,f
  6854     0F34  3000               	movlw	0
  6855     0F35  1803               	skipnc
  6856     0F36  3001               	movlw	1
  6857     0F37  07D0               	addwf	___fladd@b+1,f
  6858     0F38  3000               	movlw	0
  6859     0F39  1803               	skipnc
  6860     0F3A  3001               	movlw	1
  6861     0F3B  07D1               	addwf	___fladd@b+2,f
  6862     0F3C  3000               	movlw	0
  6863     0F3D  1803               	skipnc
  6864     0F3E  3001               	movlw	1
  6865     0F3F  07D2               	addwf	___fladd@b+3,f
  6866     0F40  2F4F               	goto	l813
  6867     0F41                     l2592:
  6868     0F41  0853               	movf	___fladd@a,w
  6869     0F42  02CF               	subwf	___fladd@b,f
  6870     0F43  0854               	movf	___fladd@a+1,w
  6871     0F44  1C03               	skipc
  6872     0F45  0F54               	incfsz	___fladd@a+1,w
  6873     0F46  02D0               	subwf	___fladd@b+1,f
  6874     0F47  0855               	movf	___fladd@a+2,w
  6875     0F48  1C03               	skipc
  6876     0F49  0F55               	incfsz	___fladd@a+2,w
  6877     0F4A  02D1               	subwf	___fladd@b+2,f
  6878     0F4B  0856               	movf	___fladd@a+3,w
  6879     0F4C  1C03               	skipc
  6880     0F4D  0F56               	incfsz	___fladd@a+3,w
  6881     0F4E  02D2               	subwf	___fladd@b+3,f
  6882     0F4F                     l813:
  6883     0F4F  0852               	movf	___fladd@b+3,w
  6884     0F50  0451               	iorwf	___fladd@b+2,w
  6885     0F51  0450               	iorwf	___fladd@b+1,w
  6886     0F52  044F               	iorwf	___fladd@b,w
  6887     0F53  1D03               	skipz
  6888     0F54  2F56               	goto	u2531
  6889     0F55  2F57               	goto	u2530
  6890     0F56                     u2531:
  6891     0F56  2F83               	goto	l2614
  6892     0F57                     u2530:
  6893     0F57                     l2594:
  6894     0F57  0862               	movf	___fladd@grs,w
  6895     0F58  1D03               	btfss	3,2
  6896     0F59  2F5B               	goto	u2541
  6897     0F5A  2F5C               	goto	u2540
  6898     0F5B                     u2541:
  6899     0F5B  2F83               	goto	l2614
  6900     0F5C                     u2540:
  6901     0F5C                     l2596:
  6902     0F5C  3000               	movlw	0
  6903     0F5D  00D2               	movwf	?___fladd+3
  6904     0F5E  3000               	movlw	0
  6905     0F5F  00D1               	movwf	?___fladd+2
  6906     0F60  3000               	movlw	0
  6907     0F61  00D0               	movwf	?___fladd+1
  6908     0F62  3000               	movlw	0
  6909     0F63  00CF               	movwf	?___fladd
  6910     0F64  2FFF               	goto	l805
  6911     0F65                     l2600:
  6912     0F65  3001               	movlw	1
  6913     0F66  00D7               	movwf	??___fladd
  6914     0F67                     u2555:
  6915     0F67  1003               	clrc
  6916     0F68  0DCF               	rlf	___fladd@b,f
  6917     0F69  0DD0               	rlf	___fladd@b+1,f
  6918     0F6A  0DD1               	rlf	___fladd@b+2,f
  6919     0F6B  0DD2               	rlf	___fladd@b+3,f
  6920     0F6C  0BD7               	decfsz	??___fladd,f
  6921     0F6D  2F67               	goto	u2555
  6922     0F6E                     l2602:
  6923     0F6E  1FE2               	btfss	___fladd@grs,7
  6924     0F6F  2F71               	goto	u2561
  6925     0F70  2F72               	goto	u2560
  6926     0F71                     u2561:
  6927     0F71  2F73               	goto	l817
  6928     0F72                     u2560:
  6929     0F72                     l2604:
  6930     0F72  144F               	bsf	___fladd@b,0
  6931     0F73                     l817:
  6932     0F73  1C62               	btfss	___fladd@grs,0
  6933     0F74  2F76               	goto	u2571
  6934     0F75  2F77               	goto	u2570
  6935     0F76                     u2571:
  6936     0F76  2F7A               	goto	l2608
  6937     0F77                     u2570:
  6938     0F77                     l2606:
  6939     0F77  1403               	setc
  6940     0F78  0DE2               	rlf	___fladd@grs,f
  6941     0F79  2F7C               	goto	l2610
  6942     0F7A                     l2608:
  6943     0F7A  1003               	clrc
  6944     0F7B  0DE2               	rlf	___fladd@grs,f
  6945     0F7C                     l2610:
  6946     0F7C  0861               	movf	___fladd@bexp,w
  6947     0F7D  1903               	btfsc	3,2
  6948     0F7E  2F80               	goto	u2581
  6949     0F7F  2F81               	goto	u2580
  6950     0F80                     u2581:
  6951     0F80  2F83               	goto	l2614
  6952     0F81                     u2580:
  6953     0F81                     l2612:
  6954     0F81  3001               	movlw	1
  6955     0F82  02E1               	subwf	___fladd@bexp,f
  6956     0F83                     l2614:
  6957     0F83  1FD1               	btfss	___fladd@b+2,7
  6958     0F84  2F86               	goto	u2591
  6959     0F85  2F87               	goto	u2590
  6960     0F86                     u2591:
  6961     0F86  2F65               	goto	l2600
  6962     0F87                     u2590:
  6963     0F87                     l2616:
  6964     0F87  01E0               	clrf	___fladd@aexp
  6965     0F88                     l2618:
  6966     0F88  1FE2               	btfss	___fladd@grs,7
  6967     0F89  2F8B               	goto	u2601
  6968     0F8A  2F8C               	goto	u2600
  6969     0F8B                     u2601:
  6970     0F8B  2F9A               	goto	l2626
  6971     0F8C                     u2600:
  6972     0F8C                     l2620:
  6973     0F8C  0862               	movf	___fladd@grs,w
  6974     0F8D  397F               	andlw	127
  6975     0F8E  1903               	btfsc	3,2
  6976     0F8F  2F91               	goto	u2611
  6977     0F90  2F92               	goto	u2610
  6978     0F91                     u2611:
  6979     0F91  2F95               	goto	l823
  6980     0F92                     u2610:
  6981     0F92                     l2622:
  6982     0F92  01E0               	clrf	___fladd@aexp
  6983     0F93  0AE0               	incf	___fladd@aexp,f
  6984     0F94  2F9A               	goto	l2626
  6985     0F95                     l823:
  6986     0F95  1C4F               	btfss	___fladd@b,0
  6987     0F96  2F98               	goto	u2621
  6988     0F97  2F99               	goto	u2620
  6989     0F98                     u2621:
  6990     0F98  2F9A               	goto	l2626
  6991     0F99                     u2620:
  6992     0F99  2F92               	goto	l2622
  6993     0F9A                     l2626:
  6994     0F9A  0860               	movf	___fladd@aexp,w
  6995     0F9B  1903               	btfsc	3,2
  6996     0F9C  2F9E               	goto	u2631
  6997     0F9D  2F9F               	goto	u2630
  6998     0F9E                     u2631:
  6999     0F9E  2FD3               	goto	l826
  7000     0F9F                     u2630:
  7001     0F9F                     l2628:
  7002     0F9F  3001               	movlw	1
  7003     0FA0  07CF               	addwf	___fladd@b,f
  7004     0FA1  3000               	movlw	0
  7005     0FA2  1803               	skipnc
  7006     0FA3  3001               	movlw	1
  7007     0FA4  07D0               	addwf	___fladd@b+1,f
  7008     0FA5  3000               	movlw	0
  7009     0FA6  1803               	skipnc
  7010     0FA7  3001               	movlw	1
  7011     0FA8  07D1               	addwf	___fladd@b+2,f
  7012     0FA9  3000               	movlw	0
  7013     0FAA  1803               	skipnc
  7014     0FAB  3001               	movlw	1
  7015     0FAC  07D2               	addwf	___fladd@b+3,f
  7016     0FAD                     l2630:
  7017     0FAD  1C52               	btfss	___fladd@b+3,0
  7018     0FAE  2FB0               	goto	u2641
  7019     0FAF  2FB1               	goto	u2640
  7020     0FB0                     u2641:
  7021     0FB0  2FD3               	goto	l826
  7022     0FB1                     u2640:
  7023     0FB1                     l2632:
  7024     0FB1  084F               	movf	___fladd@b,w
  7025     0FB2  00D7               	movwf	??___fladd
  7026     0FB3  0850               	movf	___fladd@b+1,w
  7027     0FB4  00D8               	movwf	??___fladd+1
  7028     0FB5  0851               	movf	___fladd@b+2,w
  7029     0FB6  00D9               	movwf	??___fladd+2
  7030     0FB7  0852               	movf	___fladd@b+3,w
  7031     0FB8  00DA               	movwf	??___fladd+3
  7032     0FB9  3001               	movlw	1
  7033     0FBA  00DB               	movwf	??___fladd+4
  7034     0FBB                     u2655:
  7035     0FBB  0D5A               	rlf	??___fladd+3,w
  7036     0FBC  0CDA               	rrf	??___fladd+3,f
  7037     0FBD  0CD9               	rrf	??___fladd+2,f
  7038     0FBE  0CD8               	rrf	??___fladd+1,f
  7039     0FBF  0CD7               	rrf	??___fladd,f
  7040     0FC0                     u2650:
  7041     0FC0  0BDB               	decfsz	??___fladd+4,f
  7042     0FC1  2FBB               	goto	u2655
  7043     0FC2  085A               	movf	??___fladd+3,w
  7044     0FC3  00D2               	movwf	___fladd@b+3
  7045     0FC4  0859               	movf	??___fladd+2,w
  7046     0FC5  00D1               	movwf	___fladd@b+2
  7047     0FC6  0858               	movf	??___fladd+1,w
  7048     0FC7  00D0               	movwf	___fladd@b+1
  7049     0FC8  0857               	movf	??___fladd,w
  7050     0FC9  00CF               	movwf	___fladd@b
  7051     0FCA  0A61               	incf	___fladd@bexp,w
  7052     0FCB  1903               	btfsc	3,2
  7053     0FCC  2FCE               	goto	u2661
  7054     0FCD  2FCF               	goto	u2660
  7055     0FCE                     u2661:
  7056     0FCE  2FD3               	goto	l826
  7057     0FCF                     u2660:
  7058     0FCF                     l2634:
  7059     0FCF  3001               	movlw	1
  7060     0FD0  00D7               	movwf	??___fladd
  7061     0FD1  0857               	movf	??___fladd,w
  7062     0FD2  07E1               	addwf	___fladd@bexp,f
  7063     0FD3                     l826:
  7064     0FD3  0A61               	incf	___fladd@bexp,w
  7065     0FD4  1903               	btfsc	3,2
  7066     0FD5  2FD7               	goto	u2671
  7067     0FD6  2FD8               	goto	u2670
  7068     0FD7                     u2671:
  7069     0FD7  2FDD               	goto	l2638
  7070     0FD8                     u2670:
  7071     0FD8                     l2636:
  7072     0FD8  0861               	movf	___fladd@bexp,w
  7073     0FD9  1D03               	btfss	3,2
  7074     0FDA  2FDC               	goto	u2681
  7075     0FDB  2FDD               	goto	u2680
  7076     0FDC                     u2681:
  7077     0FDC  2FEB               	goto	l2644
  7078     0FDD                     u2680:
  7079     0FDD                     l2638:
  7080     0FDD  3000               	movlw	0
  7081     0FDE  00D2               	movwf	___fladd@b+3
  7082     0FDF  3000               	movlw	0
  7083     0FE0  00D1               	movwf	___fladd@b+2
  7084     0FE1  3000               	movlw	0
  7085     0FE2  00D0               	movwf	___fladd@b+1
  7086     0FE3  3000               	movlw	0
  7087     0FE4  00CF               	movwf	___fladd@b
  7088     0FE5                     l2640:
  7089     0FE5  0861               	movf	___fladd@bexp,w
  7090     0FE6  1D03               	btfss	3,2
  7091     0FE7  2FE9               	goto	u2691
  7092     0FE8  2FEA               	goto	u2690
  7093     0FE9                     u2691:
  7094     0FE9  2FEB               	goto	l2644
  7095     0FEA                     u2690:
  7096     0FEA                     l2642:
  7097     0FEA  01DF               	clrf	___fladd@signs
  7098     0FEB                     l2644:
  7099     0FEB  1C61               	btfss	___fladd@bexp,0
  7100     0FEC  2FEE               	goto	u2701
  7101     0FED  2FEF               	goto	u2700
  7102     0FEE                     u2701:
  7103     0FEE  2FF1               	goto	l2648
  7104     0FEF                     u2700:
  7105     0FEF                     l2646:
  7106     0FEF  17D1               	bsf	___fladd@b+2,7
  7107     0FF0  2FF5               	goto	l834
  7108     0FF1                     l2648:
  7109     0FF1  307F               	movlw	127
  7110     0FF2  00D7               	movwf	??___fladd
  7111     0FF3  0857               	movf	??___fladd,w
  7112     0FF4  05D1               	andwf	___fladd@b+2,f
  7113     0FF5                     l834:
  7114     0FF5  0861               	movf	___fladd@bexp,w
  7115     0FF6  00D7               	movwf	??___fladd
  7116     0FF7  1003               	clrc
  7117     0FF8  0C57               	rrf	??___fladd,w
  7118     0FF9  00D2               	movwf	___fladd@b+3
  7119     0FFA                     l2650:
  7120     0FFA  1FDF               	btfss	___fladd@signs,7
  7121     0FFB  2FFD               	goto	u2711
  7122     0FFC  2FFE               	goto	u2710
  7123     0FFD                     u2711:
  7124     0FFD  2FFF               	goto	l835
  7125     0FFE                     u2710:
  7126     0FFE                     l2652:
  7127     0FFE  17D2               	bsf	___fladd@b+3,7
  7128     0FFF                     l835:
  7129     0FFF                     l805:
  7130     0FFF  0008               	return
  7131     1000                     __end_of___fladd:
  7132                           
  7133                           	psect	text30
  7134     10CF                     __ptext30:	
  7135 ;; *************** function ___flneg *****************
  7136 ;; Defined at:
  7137 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;  f1              4    3[COMMON] unsigned char 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  4    3[COMMON] unsigned char 
  7144 ;; Registers used:
  7145 ;;		wreg
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7151 ;;      Params:         4       0       0       0       0
  7152 ;;      Locals:         0       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0
  7154 ;;      Totals:         4       0       0       0       0
  7155 ;;Total ram usage:        4 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_floattostr
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165     10CF                     ___flneg:	
  7166                           ;psect for function ___flneg
  7167                           
  7168     10CF                     l2752:	
  7169                           ;incstack = 0
  7170                           ; Regs used in ___flneg: [wreg]
  7171                           
  7172     10CF  0876               	movf	___flneg@f1+3,w
  7173     10D0  0475               	iorwf	___flneg@f1+2,w
  7174     10D1  0474               	iorwf	___flneg@f1+1,w
  7175     10D2  0473               	iorwf	___flneg@f1,w
  7176     10D3  1903               	skipnz
  7177     10D4  28D6               	goto	u2911
  7178     10D5  28D7               	goto	u2910
  7179     10D6                     u2911:
  7180     10D6  28D9               	goto	l2756
  7181     10D7                     u2910:
  7182     10D7                     l2754:
  7183     10D7  3080               	movlw	128
  7184     10D8  06F6               	xorwf	___flneg@f1+3,f
  7185     10D9                     l2756:
  7186     10D9                     l681:
  7187     10D9  0008               	return
  7188     10DA                     __end_of___flneg:
  7189                           
  7190                           	psect	text31
  7191     0409                     __ptext31:	
  7192 ;; *************** function ___flmul *****************
  7193 ;; Defined at:
  7194 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  b               4   21[BANK0 ] unsigned char 
  7197 ;;  a               4   25[BANK0 ] unsigned char 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  prod            4   41[BANK0 ] struct .
  7200 ;;  grs             4   35[BANK0 ] unsigned long 
  7201 ;;  temp            2   45[BANK0 ] struct .
  7202 ;;  bexp            1   40[BANK0 ] unsigned char 
  7203 ;;  aexp            1   39[BANK0 ] unsigned char 
  7204 ;;  sign            1   34[BANK0 ] unsigned char 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  4   21[BANK0 ] unsigned char 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7214 ;;      Params:         0       8       0       0       0
  7215 ;;      Locals:         0      13       0       0       0
  7216 ;;      Temps:          0       5       0       0       0
  7217 ;;      Totals:         0      26       0       0       0
  7218 ;;Total ram usage:       26 bytes
  7219 ;; Hardware stack levels used: 1
  7220 ;; Hardware stack levels required when called: 2
  7221 ;; This function calls:
  7222 ;;		__Umul8_16
  7223 ;; This function is called by:
  7224 ;;		_floattostr
  7225 ;;		_AHT10_Read
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229     0409                     ___flmul:	
  7230                           ;psect for function ___flmul
  7231                           
  7232     0409                     l2944:	
  7233                           ;incstack = 0
  7234                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7235                           
  7236     0409  1283               	bcf	3,5	;RP0=0, select bank0
  7237     040A  1303               	bcf	3,6	;RP1=0, select bank0
  7238     040B  0838               	movf	___flmul@b+3,w
  7239     040C  3980               	andlw	128
  7240     040D  00C2               	movwf	___flmul@sign
  7241     040E                     l2946:
  7242     040E  0838               	movf	___flmul@b+3,w
  7243     040F  00BD               	movwf	??___flmul
  7244     0410  073D               	addwf	??___flmul,w
  7245     0411  00C8               	movwf	___flmul@bexp
  7246     0412                     l2948:
  7247     0412  1FB7               	btfss	___flmul@b+2,7
  7248     0413  2C15               	goto	u3321
  7249     0414  2C16               	goto	u3320
  7250     0415                     u3321:
  7251     0415  2C17               	goto	l2952
  7252     0416                     u3320:
  7253     0416                     l2950:
  7254     0416  1448               	bsf	___flmul@bexp,0
  7255     0417                     l2952:
  7256     0417  0848               	movf	___flmul@bexp,w
  7257     0418  1903               	btfsc	3,2
  7258     0419  2C1B               	goto	u3331
  7259     041A  2C1C               	goto	u3330
  7260     041B                     u3331:
  7261     041B  2C2B               	goto	l2960
  7262     041C                     u3330:
  7263     041C                     l2954:
  7264     041C  0A48               	incf	___flmul@bexp,w
  7265     041D  1D03               	btfss	3,2
  7266     041E  2C20               	goto	u3341
  7267     041F  2C21               	goto	u3340
  7268     0420                     u3341:
  7269     0420  2C29               	goto	l2958
  7270     0421                     u3340:
  7271     0421                     l2956:
  7272     0421  3000               	movlw	0
  7273     0422  00B8               	movwf	___flmul@b+3
  7274     0423  3000               	movlw	0
  7275     0424  00B7               	movwf	___flmul@b+2
  7276     0425  3000               	movlw	0
  7277     0426  00B6               	movwf	___flmul@b+1
  7278     0427  3000               	movlw	0
  7279     0428  00B5               	movwf	___flmul@b
  7280     0429                     l2958:
  7281     0429  17B7               	bsf	___flmul@b+2,7
  7282     042A  2C33               	goto	l2962
  7283     042B                     l2960:
  7284     042B  3000               	movlw	0
  7285     042C  00B8               	movwf	___flmul@b+3
  7286     042D  3000               	movlw	0
  7287     042E  00B7               	movwf	___flmul@b+2
  7288     042F  3000               	movlw	0
  7289     0430  00B6               	movwf	___flmul@b+1
  7290     0431  3000               	movlw	0
  7291     0432  00B5               	movwf	___flmul@b
  7292     0433                     l2962:
  7293     0433  083C               	movf	___flmul@a+3,w
  7294     0434  3980               	andlw	128
  7295     0435  00BD               	movwf	??___flmul
  7296     0436  083D               	movf	??___flmul,w
  7297     0437  06C2               	xorwf	___flmul@sign,f
  7298     0438                     l2964:
  7299     0438  083C               	movf	___flmul@a+3,w
  7300     0439  00BD               	movwf	??___flmul
  7301     043A  073D               	addwf	??___flmul,w
  7302     043B  00C7               	movwf	___flmul@aexp
  7303     043C                     l2966:
  7304     043C  1FBB               	btfss	___flmul@a+2,7
  7305     043D  2C3F               	goto	u3351
  7306     043E  2C40               	goto	u3350
  7307     043F                     u3351:
  7308     043F  2C41               	goto	l2970
  7309     0440                     u3350:
  7310     0440                     l2968:
  7311     0440  1447               	bsf	___flmul@aexp,0
  7312     0441                     l2970:
  7313     0441  0847               	movf	___flmul@aexp,w
  7314     0442  1903               	btfsc	3,2
  7315     0443  2C45               	goto	u3361
  7316     0444  2C46               	goto	u3360
  7317     0445                     u3361:
  7318     0445  2C55               	goto	l2978
  7319     0446                     u3360:
  7320     0446                     l2972:
  7321     0446  0A47               	incf	___flmul@aexp,w
  7322     0447  1D03               	btfss	3,2
  7323     0448  2C4A               	goto	u3371
  7324     0449  2C4B               	goto	u3370
  7325     044A                     u3371:
  7326     044A  2C53               	goto	l2976
  7327     044B                     u3370:
  7328     044B                     l2974:
  7329     044B  3000               	movlw	0
  7330     044C  00BC               	movwf	___flmul@a+3
  7331     044D  3000               	movlw	0
  7332     044E  00BB               	movwf	___flmul@a+2
  7333     044F  3000               	movlw	0
  7334     0450  00BA               	movwf	___flmul@a+1
  7335     0451  3000               	movlw	0
  7336     0452  00B9               	movwf	___flmul@a
  7337     0453                     l2976:
  7338     0453  17BB               	bsf	___flmul@a+2,7
  7339     0454  2C5D               	goto	l2980
  7340     0455                     l2978:
  7341     0455  3000               	movlw	0
  7342     0456  00BC               	movwf	___flmul@a+3
  7343     0457  3000               	movlw	0
  7344     0458  00BB               	movwf	___flmul@a+2
  7345     0459  3000               	movlw	0
  7346     045A  00BA               	movwf	___flmul@a+1
  7347     045B  3000               	movlw	0
  7348     045C  00B9               	movwf	___flmul@a
  7349     045D                     l2980:
  7350     045D  0847               	movf	___flmul@aexp,w
  7351     045E  1903               	btfsc	3,2
  7352     045F  2C61               	goto	u3381
  7353     0460  2C62               	goto	u3380
  7354     0461                     u3381:
  7355     0461  2C67               	goto	l2984
  7356     0462                     u3380:
  7357     0462                     l2982:
  7358     0462  0848               	movf	___flmul@bexp,w
  7359     0463  1D03               	btfss	3,2
  7360     0464  2C66               	goto	u3391
  7361     0465  2C67               	goto	u3390
  7362     0466                     u3391:
  7363     0466  2C70               	goto	l2988
  7364     0467                     u3390:
  7365     0467                     l2984:
  7366     0467  3000               	movlw	0
  7367     0468  00B8               	movwf	?___flmul+3
  7368     0469  3000               	movlw	0
  7369     046A  00B7               	movwf	?___flmul+2
  7370     046B  3000               	movlw	0
  7371     046C  00B6               	movwf	?___flmul+1
  7372     046D  3000               	movlw	0
  7373     046E  00B5               	movwf	?___flmul
  7374     046F  2F4D               	goto	l888
  7375     0470                     l2988:
  7376     0470  0835               	movf	___flmul@b,w
  7377     0471  00F3               	movwf	__Umul8_16@multiplicand
  7378     0472  083B               	movf	___flmul@a+2,w
  7379     0473  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7380     0478  0874               	movf	?__Umul8_16+1,w
  7381     0479  1283               	bcf	3,5	;RP0=0, select bank0
  7382     047A  1303               	bcf	3,6	;RP1=0, select bank0
  7383     047B  00CE               	movwf	___flmul@temp+1
  7384     047C  0873               	movf	?__Umul8_16,w
  7385     047D  00CD               	movwf	___flmul@temp
  7386     047E                     l2990:
  7387     047E  084D               	movf	___flmul@temp,w
  7388     047F  00BD               	movwf	??___flmul
  7389     0480  01BE               	clrf	??___flmul+1
  7390     0481  01BF               	clrf	??___flmul+2
  7391     0482  01C0               	clrf	??___flmul+3
  7392     0483  0840               	movf	??___flmul+3,w
  7393     0484  00C6               	movwf	___flmul@grs+3
  7394     0485  083F               	movf	??___flmul+2,w
  7395     0486  00C5               	movwf	___flmul@grs+2
  7396     0487  083E               	movf	??___flmul+1,w
  7397     0488  00C4               	movwf	___flmul@grs+1
  7398     0489  083D               	movf	??___flmul,w
  7399     048A  00C3               	movwf	___flmul@grs
  7400     048B                     l2992:
  7401     048B  084E               	movf	___flmul@temp+1,w
  7402     048C  00BD               	movwf	??___flmul
  7403     048D  01BE               	clrf	??___flmul+1
  7404     048E  01BF               	clrf	??___flmul+2
  7405     048F  01C0               	clrf	??___flmul+3
  7406     0490  0840               	movf	??___flmul+3,w
  7407     0491  00CC               	movwf	___flmul@prod+3
  7408     0492  083F               	movf	??___flmul+2,w
  7409     0493  00CB               	movwf	___flmul@prod+2
  7410     0494  083E               	movf	??___flmul+1,w
  7411     0495  00CA               	movwf	___flmul@prod+1
  7412     0496  083D               	movf	??___flmul,w
  7413     0497  00C9               	movwf	___flmul@prod
  7414     0498  0836               	movf	___flmul@b+1,w
  7415     0499  00F3               	movwf	__Umul8_16@multiplicand
  7416     049A  083A               	movf	___flmul@a+1,w
  7417     049B  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7418     04A0  0874               	movf	?__Umul8_16+1,w
  7419     04A1  1283               	bcf	3,5	;RP0=0, select bank0
  7420     04A2  1303               	bcf	3,6	;RP1=0, select bank0
  7421     04A3  00CE               	movwf	___flmul@temp+1
  7422     04A4  0873               	movf	?__Umul8_16,w
  7423     04A5  00CD               	movwf	___flmul@temp
  7424     04A6                     l2994:
  7425     04A6  084D               	movf	___flmul@temp,w
  7426     04A7  00BD               	movwf	??___flmul
  7427     04A8  01BE               	clrf	??___flmul+1
  7428     04A9  01BF               	clrf	??___flmul+2
  7429     04AA  01C0               	clrf	??___flmul+3
  7430     04AB  083D               	movf	??___flmul,w
  7431     04AC  07C3               	addwf	___flmul@grs,f
  7432     04AD  083E               	movf	??___flmul+1,w
  7433     04AE  1103               	clrz
  7434     04AF  1803               	skipnc
  7435     04B0  3E01               	addlw	1
  7436     04B1  1903               	skipnz
  7437     04B2  2CB4               	goto	u3401
  7438     04B3  07C4               	addwf	___flmul@grs+1,f
  7439     04B4                     u3401:
  7440     04B4  083F               	movf	??___flmul+2,w
  7441     04B5  1103               	clrz
  7442     04B6  1803               	skipnc
  7443     04B7  3E01               	addlw	1
  7444     04B8  1903               	skipnz
  7445     04B9  2CBB               	goto	u3402
  7446     04BA  07C5               	addwf	___flmul@grs+2,f
  7447     04BB                     u3402:
  7448     04BB  0840               	movf	??___flmul+3,w
  7449     04BC  1103               	clrz
  7450     04BD  1803               	skipnc
  7451     04BE  3E01               	addlw	1
  7452     04BF  1903               	skipnz
  7453     04C0  2CC2               	goto	u3403
  7454     04C1  07C6               	addwf	___flmul@grs+3,f
  7455     04C2                     u3403:
  7456     04C2                     l2996:
  7457     04C2  084E               	movf	___flmul@temp+1,w
  7458     04C3  00BD               	movwf	??___flmul
  7459     04C4  01BE               	clrf	??___flmul+1
  7460     04C5  01BF               	clrf	??___flmul+2
  7461     04C6  01C0               	clrf	??___flmul+3
  7462     04C7  083D               	movf	??___flmul,w
  7463     04C8  07C9               	addwf	___flmul@prod,f
  7464     04C9  083E               	movf	??___flmul+1,w
  7465     04CA  1103               	clrz
  7466     04CB  1803               	skipnc
  7467     04CC  3E01               	addlw	1
  7468     04CD  1903               	skipnz
  7469     04CE  2CD0               	goto	u3411
  7470     04CF  07CA               	addwf	___flmul@prod+1,f
  7471     04D0                     u3411:
  7472     04D0  083F               	movf	??___flmul+2,w
  7473     04D1  1103               	clrz
  7474     04D2  1803               	skipnc
  7475     04D3  3E01               	addlw	1
  7476     04D4  1903               	skipnz
  7477     04D5  2CD7               	goto	u3412
  7478     04D6  07CB               	addwf	___flmul@prod+2,f
  7479     04D7                     u3412:
  7480     04D7  0840               	movf	??___flmul+3,w
  7481     04D8  1103               	clrz
  7482     04D9  1803               	skipnc
  7483     04DA  3E01               	addlw	1
  7484     04DB  1903               	skipnz
  7485     04DC  2CDE               	goto	u3413
  7486     04DD  07CC               	addwf	___flmul@prod+3,f
  7487     04DE                     u3413:
  7488     04DE  0837               	movf	___flmul@b+2,w
  7489     04DF  00F3               	movwf	__Umul8_16@multiplicand
  7490     04E0  0839               	movf	___flmul@a,w
  7491     04E1  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7492     04E6  0874               	movf	?__Umul8_16+1,w
  7493     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  7494     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  7495     04E9  00CE               	movwf	___flmul@temp+1
  7496     04EA  0873               	movf	?__Umul8_16,w
  7497     04EB  00CD               	movwf	___flmul@temp
  7498     04EC                     l2998:
  7499     04EC  084D               	movf	___flmul@temp,w
  7500     04ED  00BD               	movwf	??___flmul
  7501     04EE  01BE               	clrf	??___flmul+1
  7502     04EF  01BF               	clrf	??___flmul+2
  7503     04F0  01C0               	clrf	??___flmul+3
  7504     04F1  083D               	movf	??___flmul,w
  7505     04F2  07C3               	addwf	___flmul@grs,f
  7506     04F3  083E               	movf	??___flmul+1,w
  7507     04F4  1103               	clrz
  7508     04F5  1803               	skipnc
  7509     04F6  3E01               	addlw	1
  7510     04F7  1903               	skipnz
  7511     04F8  2CFA               	goto	u3421
  7512     04F9  07C4               	addwf	___flmul@grs+1,f
  7513     04FA                     u3421:
  7514     04FA  083F               	movf	??___flmul+2,w
  7515     04FB  1103               	clrz
  7516     04FC  1803               	skipnc
  7517     04FD  3E01               	addlw	1
  7518     04FE  1903               	skipnz
  7519     04FF  2D01               	goto	u3422
  7520     0500  07C5               	addwf	___flmul@grs+2,f
  7521     0501                     u3422:
  7522     0501  0840               	movf	??___flmul+3,w
  7523     0502  1103               	clrz
  7524     0503  1803               	skipnc
  7525     0504  3E01               	addlw	1
  7526     0505  1903               	skipnz
  7527     0506  2D08               	goto	u3423
  7528     0507  07C6               	addwf	___flmul@grs+3,f
  7529     0508                     u3423:
  7530     0508                     l3000:
  7531     0508  084E               	movf	___flmul@temp+1,w
  7532     0509  00BD               	movwf	??___flmul
  7533     050A  01BE               	clrf	??___flmul+1
  7534     050B  01BF               	clrf	??___flmul+2
  7535     050C  01C0               	clrf	??___flmul+3
  7536     050D  083D               	movf	??___flmul,w
  7537     050E  07C9               	addwf	___flmul@prod,f
  7538     050F  083E               	movf	??___flmul+1,w
  7539     0510  1103               	clrz
  7540     0511  1803               	skipnc
  7541     0512  3E01               	addlw	1
  7542     0513  1903               	skipnz
  7543     0514  2D16               	goto	u3431
  7544     0515  07CA               	addwf	___flmul@prod+1,f
  7545     0516                     u3431:
  7546     0516  083F               	movf	??___flmul+2,w
  7547     0517  1103               	clrz
  7548     0518  1803               	skipnc
  7549     0519  3E01               	addlw	1
  7550     051A  1903               	skipnz
  7551     051B  2D1D               	goto	u3432
  7552     051C  07CB               	addwf	___flmul@prod+2,f
  7553     051D                     u3432:
  7554     051D  0840               	movf	??___flmul+3,w
  7555     051E  1103               	clrz
  7556     051F  1803               	skipnc
  7557     0520  3E01               	addlw	1
  7558     0521  1903               	skipnz
  7559     0522  2D24               	goto	u3433
  7560     0523  07CC               	addwf	___flmul@prod+3,f
  7561     0524                     u3433:
  7562     0524                     l3002:
  7563     0524  3008               	movlw	8
  7564     0525  00BD               	movwf	??___flmul
  7565     0526                     u3445:
  7566     0526  1003               	clrc
  7567     0527  0DC3               	rlf	___flmul@grs,f
  7568     0528  0DC4               	rlf	___flmul@grs+1,f
  7569     0529  0DC5               	rlf	___flmul@grs+2,f
  7570     052A  0DC6               	rlf	___flmul@grs+3,f
  7571     052B  0BBD               	decfsz	??___flmul,f
  7572     052C  2D26               	goto	u3445
  7573     052D                     l3004:
  7574     052D  0836               	movf	___flmul@b+1,w
  7575     052E  00F3               	movwf	__Umul8_16@multiplicand
  7576     052F  0839               	movf	___flmul@a,w
  7577     0530  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7578     0535  0874               	movf	?__Umul8_16+1,w
  7579     0536  1283               	bcf	3,5	;RP0=0, select bank0
  7580     0537  1303               	bcf	3,6	;RP1=0, select bank0
  7581     0538  00CE               	movwf	___flmul@temp+1
  7582     0539  0873               	movf	?__Umul8_16,w
  7583     053A  00CD               	movwf	___flmul@temp
  7584     053B                     l3006:
  7585     053B  084D               	movf	___flmul@temp,w
  7586     053C  00BD               	movwf	??___flmul
  7587     053D  084E               	movf	___flmul@temp+1,w
  7588     053E  00BE               	movwf	??___flmul+1
  7589     053F  01BF               	clrf	??___flmul+2
  7590     0540  01C0               	clrf	??___flmul+3
  7591     0541  083D               	movf	??___flmul,w
  7592     0542  07C3               	addwf	___flmul@grs,f
  7593     0543  083E               	movf	??___flmul+1,w
  7594     0544  1103               	clrz
  7595     0545  1803               	skipnc
  7596     0546  3E01               	addlw	1
  7597     0547  1903               	skipnz
  7598     0548  2D4A               	goto	u3451
  7599     0549  07C4               	addwf	___flmul@grs+1,f
  7600     054A                     u3451:
  7601     054A  083F               	movf	??___flmul+2,w
  7602     054B  1103               	clrz
  7603     054C  1803               	skipnc
  7604     054D  3E01               	addlw	1
  7605     054E  1903               	skipnz
  7606     054F  2D51               	goto	u3452
  7607     0550  07C5               	addwf	___flmul@grs+2,f
  7608     0551                     u3452:
  7609     0551  0840               	movf	??___flmul+3,w
  7610     0552  1103               	clrz
  7611     0553  1803               	skipnc
  7612     0554  3E01               	addlw	1
  7613     0555  1903               	skipnz
  7614     0556  2D58               	goto	u3453
  7615     0557  07C6               	addwf	___flmul@grs+3,f
  7616     0558                     u3453:
  7617     0558                     l3008:
  7618     0558  0835               	movf	___flmul@b,w
  7619     0559  00F3               	movwf	__Umul8_16@multiplicand
  7620     055A  083A               	movf	___flmul@a+1,w
  7621     055B  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7622     0560  0874               	movf	?__Umul8_16+1,w
  7623     0561  1283               	bcf	3,5	;RP0=0, select bank0
  7624     0562  1303               	bcf	3,6	;RP1=0, select bank0
  7625     0563  00CE               	movwf	___flmul@temp+1
  7626     0564  0873               	movf	?__Umul8_16,w
  7627     0565  00CD               	movwf	___flmul@temp
  7628     0566                     l3010:
  7629     0566  084D               	movf	___flmul@temp,w
  7630     0567  00BD               	movwf	??___flmul
  7631     0568  084E               	movf	___flmul@temp+1,w
  7632     0569  00BE               	movwf	??___flmul+1
  7633     056A  01BF               	clrf	??___flmul+2
  7634     056B  01C0               	clrf	??___flmul+3
  7635     056C  083D               	movf	??___flmul,w
  7636     056D  07C3               	addwf	___flmul@grs,f
  7637     056E  083E               	movf	??___flmul+1,w
  7638     056F  1103               	clrz
  7639     0570  1803               	skipnc
  7640     0571  3E01               	addlw	1
  7641     0572  1903               	skipnz
  7642     0573  2D75               	goto	u3461
  7643     0574  07C4               	addwf	___flmul@grs+1,f
  7644     0575                     u3461:
  7645     0575  083F               	movf	??___flmul+2,w
  7646     0576  1103               	clrz
  7647     0577  1803               	skipnc
  7648     0578  3E01               	addlw	1
  7649     0579  1903               	skipnz
  7650     057A  2D7C               	goto	u3462
  7651     057B  07C5               	addwf	___flmul@grs+2,f
  7652     057C                     u3462:
  7653     057C  0840               	movf	??___flmul+3,w
  7654     057D  1103               	clrz
  7655     057E  1803               	skipnc
  7656     057F  3E01               	addlw	1
  7657     0580  1903               	skipnz
  7658     0581  2D83               	goto	u3463
  7659     0582  07C6               	addwf	___flmul@grs+3,f
  7660     0583                     u3463:
  7661     0583                     l3012:
  7662     0583  3008               	movlw	8
  7663     0584  00BD               	movwf	??___flmul
  7664     0585                     u3475:
  7665     0585  1003               	clrc
  7666     0586  0DC3               	rlf	___flmul@grs,f
  7667     0587  0DC4               	rlf	___flmul@grs+1,f
  7668     0588  0DC5               	rlf	___flmul@grs+2,f
  7669     0589  0DC6               	rlf	___flmul@grs+3,f
  7670     058A  0BBD               	decfsz	??___flmul,f
  7671     058B  2D85               	goto	u3475
  7672     058C  0835               	movf	___flmul@b,w
  7673     058D  00F3               	movwf	__Umul8_16@multiplicand
  7674     058E  0839               	movf	___flmul@a,w
  7675     058F  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7676     0594  0874               	movf	?__Umul8_16+1,w
  7677     0595  1283               	bcf	3,5	;RP0=0, select bank0
  7678     0596  1303               	bcf	3,6	;RP1=0, select bank0
  7679     0597  00CE               	movwf	___flmul@temp+1
  7680     0598  0873               	movf	?__Umul8_16,w
  7681     0599  00CD               	movwf	___flmul@temp
  7682     059A                     l3014:
  7683     059A  084D               	movf	___flmul@temp,w
  7684     059B  00BD               	movwf	??___flmul
  7685     059C  084E               	movf	___flmul@temp+1,w
  7686     059D  00BE               	movwf	??___flmul+1
  7687     059E  01BF               	clrf	??___flmul+2
  7688     059F  01C0               	clrf	??___flmul+3
  7689     05A0  083D               	movf	??___flmul,w
  7690     05A1  07C3               	addwf	___flmul@grs,f
  7691     05A2  083E               	movf	??___flmul+1,w
  7692     05A3  1103               	clrz
  7693     05A4  1803               	skipnc
  7694     05A5  3E01               	addlw	1
  7695     05A6  1903               	skipnz
  7696     05A7  2DA9               	goto	u3481
  7697     05A8  07C4               	addwf	___flmul@grs+1,f
  7698     05A9                     u3481:
  7699     05A9  083F               	movf	??___flmul+2,w
  7700     05AA  1103               	clrz
  7701     05AB  1803               	skipnc
  7702     05AC  3E01               	addlw	1
  7703     05AD  1903               	skipnz
  7704     05AE  2DB0               	goto	u3482
  7705     05AF  07C5               	addwf	___flmul@grs+2,f
  7706     05B0                     u3482:
  7707     05B0  0840               	movf	??___flmul+3,w
  7708     05B1  1103               	clrz
  7709     05B2  1803               	skipnc
  7710     05B3  3E01               	addlw	1
  7711     05B4  1903               	skipnz
  7712     05B5  2DB7               	goto	u3483
  7713     05B6  07C6               	addwf	___flmul@grs+3,f
  7714     05B7                     u3483:
  7715     05B7                     l3016:
  7716     05B7  0836               	movf	___flmul@b+1,w
  7717     05B8  00F3               	movwf	__Umul8_16@multiplicand
  7718     05B9  083B               	movf	___flmul@a+2,w
  7719     05BA  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7720     05BF  0874               	movf	?__Umul8_16+1,w
  7721     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  7722     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  7723     05C2  00CE               	movwf	___flmul@temp+1
  7724     05C3  0873               	movf	?__Umul8_16,w
  7725     05C4  00CD               	movwf	___flmul@temp
  7726     05C5  084D               	movf	___flmul@temp,w
  7727     05C6  00BD               	movwf	??___flmul
  7728     05C7  084E               	movf	___flmul@temp+1,w
  7729     05C8  00BE               	movwf	??___flmul+1
  7730     05C9  01BF               	clrf	??___flmul+2
  7731     05CA  01C0               	clrf	??___flmul+3
  7732     05CB  083D               	movf	??___flmul,w
  7733     05CC  07C9               	addwf	___flmul@prod,f
  7734     05CD  083E               	movf	??___flmul+1,w
  7735     05CE  1103               	clrz
  7736     05CF  1803               	skipnc
  7737     05D0  3E01               	addlw	1
  7738     05D1  1903               	skipnz
  7739     05D2  2DD4               	goto	u3491
  7740     05D3  07CA               	addwf	___flmul@prod+1,f
  7741     05D4                     u3491:
  7742     05D4  083F               	movf	??___flmul+2,w
  7743     05D5  1103               	clrz
  7744     05D6  1803               	skipnc
  7745     05D7  3E01               	addlw	1
  7746     05D8  1903               	skipnz
  7747     05D9  2DDB               	goto	u3492
  7748     05DA  07CB               	addwf	___flmul@prod+2,f
  7749     05DB                     u3492:
  7750     05DB  0840               	movf	??___flmul+3,w
  7751     05DC  1103               	clrz
  7752     05DD  1803               	skipnc
  7753     05DE  3E01               	addlw	1
  7754     05DF  1903               	skipnz
  7755     05E0  2DE2               	goto	u3493
  7756     05E1  07CC               	addwf	___flmul@prod+3,f
  7757     05E2                     u3493:
  7758     05E2                     l3018:
  7759     05E2  0837               	movf	___flmul@b+2,w
  7760     05E3  00F3               	movwf	__Umul8_16@multiplicand
  7761     05E4  083A               	movf	___flmul@a+1,w
  7762     05E5  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7763     05EA  0874               	movf	?__Umul8_16+1,w
  7764     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  7765     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  7766     05ED  00CE               	movwf	___flmul@temp+1
  7767     05EE  0873               	movf	?__Umul8_16,w
  7768     05EF  00CD               	movwf	___flmul@temp
  7769     05F0                     l3020:
  7770     05F0  084D               	movf	___flmul@temp,w
  7771     05F1  00BD               	movwf	??___flmul
  7772     05F2  084E               	movf	___flmul@temp+1,w
  7773     05F3  00BE               	movwf	??___flmul+1
  7774     05F4  01BF               	clrf	??___flmul+2
  7775     05F5  01C0               	clrf	??___flmul+3
  7776     05F6  083D               	movf	??___flmul,w
  7777     05F7  07C9               	addwf	___flmul@prod,f
  7778     05F8  083E               	movf	??___flmul+1,w
  7779     05F9  1103               	clrz
  7780     05FA  1803               	skipnc
  7781     05FB  3E01               	addlw	1
  7782     05FC  1903               	skipnz
  7783     05FD  2DFF               	goto	u3501
  7784     05FE  07CA               	addwf	___flmul@prod+1,f
  7785     05FF                     u3501:
  7786     05FF  083F               	movf	??___flmul+2,w
  7787     0600  1103               	clrz
  7788     0601  1803               	skipnc
  7789     0602  3E01               	addlw	1
  7790     0603  1903               	skipnz
  7791     0604  2E06               	goto	u3502
  7792     0605  07CB               	addwf	___flmul@prod+2,f
  7793     0606                     u3502:
  7794     0606  0840               	movf	??___flmul+3,w
  7795     0607  1103               	clrz
  7796     0608  1803               	skipnc
  7797     0609  3E01               	addlw	1
  7798     060A  1903               	skipnz
  7799     060B  2E0D               	goto	u3503
  7800     060C  07CC               	addwf	___flmul@prod+3,f
  7801     060D                     u3503:
  7802     060D  0837               	movf	___flmul@b+2,w
  7803     060E  00F3               	movwf	__Umul8_16@multiplicand
  7804     060F  083B               	movf	___flmul@a+2,w
  7805     0610  160A  118A  22C5  120A  118A  	fcall	__Umul8_16
  7806     0615  0874               	movf	?__Umul8_16+1,w
  7807     0616  1283               	bcf	3,5	;RP0=0, select bank0
  7808     0617  1303               	bcf	3,6	;RP1=0, select bank0
  7809     0618  00CE               	movwf	___flmul@temp+1
  7810     0619  0873               	movf	?__Umul8_16,w
  7811     061A  00CD               	movwf	___flmul@temp
  7812     061B                     l3022:
  7813     061B  084D               	movf	___flmul@temp,w
  7814     061C  00BD               	movwf	??___flmul
  7815     061D  084E               	movf	___flmul@temp+1,w
  7816     061E  00BE               	movwf	??___flmul+1
  7817     061F  01BF               	clrf	??___flmul+2
  7818     0620  01C0               	clrf	??___flmul+3
  7819     0621  3008               	movlw	8
  7820     0622                     u3515:
  7821     0622  1003               	clrc
  7822     0623  0DBD               	rlf	??___flmul,f
  7823     0624  0DBE               	rlf	??___flmul+1,f
  7824     0625  0DBF               	rlf	??___flmul+2,f
  7825     0626  0DC0               	rlf	??___flmul+3,f
  7826     0627                     u3510:
  7827     0627  3EFF               	addlw	-1
  7828     0628  1D03               	skipz
  7829     0629  2E22               	goto	u3515
  7830     062A  083D               	movf	??___flmul,w
  7831     062B  07C9               	addwf	___flmul@prod,f
  7832     062C  083E               	movf	??___flmul+1,w
  7833     062D  1103               	clrz
  7834     062E  1803               	skipnc
  7835     062F  3E01               	addlw	1
  7836     0630  1903               	skipnz
  7837     0631  2E33               	goto	u3521
  7838     0632  07CA               	addwf	___flmul@prod+1,f
  7839     0633                     u3521:
  7840     0633  083F               	movf	??___flmul+2,w
  7841     0634  1103               	clrz
  7842     0635  1803               	skipnc
  7843     0636  3E01               	addlw	1
  7844     0637  1903               	skipnz
  7845     0638  2E3A               	goto	u3522
  7846     0639  07CB               	addwf	___flmul@prod+2,f
  7847     063A                     u3522:
  7848     063A  0840               	movf	??___flmul+3,w
  7849     063B  1103               	clrz
  7850     063C  1803               	skipnc
  7851     063D  3E01               	addlw	1
  7852     063E  1903               	skipnz
  7853     063F  2E41               	goto	u3523
  7854     0640  07CC               	addwf	___flmul@prod+3,f
  7855     0641                     u3523:
  7856     0641                     l3024:
  7857     0641  0843               	movf	___flmul@grs,w
  7858     0642  00BD               	movwf	??___flmul
  7859     0643  0844               	movf	___flmul@grs+1,w
  7860     0644  00BE               	movwf	??___flmul+1
  7861     0645  0845               	movf	___flmul@grs+2,w
  7862     0646  00BF               	movwf	??___flmul+2
  7863     0647  0846               	movf	___flmul@grs+3,w
  7864     0648  00C0               	movwf	??___flmul+3
  7865     0649  3018               	movlw	24
  7866     064A                     u3535:
  7867     064A  1003               	clrc
  7868     064B  0CC0               	rrf	??___flmul+3,f
  7869     064C  0CBF               	rrf	??___flmul+2,f
  7870     064D  0CBE               	rrf	??___flmul+1,f
  7871     064E  0CBD               	rrf	??___flmul,f
  7872     064F                     u3530:
  7873     064F  3EFF               	addlw	-1
  7874     0650  1D03               	skipz
  7875     0651  2E4A               	goto	u3535
  7876     0652  083D               	movf	??___flmul,w
  7877     0653  07C9               	addwf	___flmul@prod,f
  7878     0654  083E               	movf	??___flmul+1,w
  7879     0655  1103               	clrz
  7880     0656  1803               	skipnc
  7881     0657  3E01               	addlw	1
  7882     0658  1903               	skipnz
  7883     0659  2E5B               	goto	u3541
  7884     065A  07CA               	addwf	___flmul@prod+1,f
  7885     065B                     u3541:
  7886     065B  083F               	movf	??___flmul+2,w
  7887     065C  1103               	clrz
  7888     065D  1803               	skipnc
  7889     065E  3E01               	addlw	1
  7890     065F  1903               	skipnz
  7891     0660  2E62               	goto	u3542
  7892     0661  07CB               	addwf	___flmul@prod+2,f
  7893     0662                     u3542:
  7894     0662  0840               	movf	??___flmul+3,w
  7895     0663  1103               	clrz
  7896     0664  1803               	skipnc
  7897     0665  3E01               	addlw	1
  7898     0666  1903               	skipnz
  7899     0667  2E69               	goto	u3543
  7900     0668  07CC               	addwf	___flmul@prod+3,f
  7901     0669                     u3543:
  7902     0669                     l3026:
  7903     0669  3008               	movlw	8
  7904     066A  00BD               	movwf	??___flmul
  7905     066B                     u3555:
  7906     066B  1003               	clrc
  7907     066C  0DC3               	rlf	___flmul@grs,f
  7908     066D  0DC4               	rlf	___flmul@grs+1,f
  7909     066E  0DC5               	rlf	___flmul@grs+2,f
  7910     066F  0DC6               	rlf	___flmul@grs+3,f
  7911     0670  0BBD               	decfsz	??___flmul,f
  7912     0671  2E6B               	goto	u3555
  7913     0672                     l3028:
  7914     0672  0848               	movf	___flmul@bexp,w
  7915     0673  0747               	addwf	___flmul@aexp,w
  7916     0674  00BD               	movwf	??___flmul
  7917     0675  01BE               	clrf	??___flmul+1
  7918     0676  0DBE               	rlf	??___flmul+1,f
  7919     0677  083D               	movf	??___flmul,w
  7920     0678  3E82               	addlw	130
  7921     0679  00CD               	movwf	___flmul@temp
  7922     067A  083E               	movf	??___flmul+1,w
  7923     067B  1803               	skipnc
  7924     067C  3E01               	addlw	1
  7925     067D  3EFF               	addlw	255
  7926     067E  00CE               	movwf	___flmul@temp+1
  7927     067F  2E9D               	goto	l3040
  7928     0680                     l3030:
  7929     0680  3001               	movlw	1
  7930     0681  00BD               	movwf	??___flmul
  7931     0682                     u3565:
  7932     0682  1003               	clrc
  7933     0683  0DC9               	rlf	___flmul@prod,f
  7934     0684  0DCA               	rlf	___flmul@prod+1,f
  7935     0685  0DCB               	rlf	___flmul@prod+2,f
  7936     0686  0DCC               	rlf	___flmul@prod+3,f
  7937     0687  0BBD               	decfsz	??___flmul,f
  7938     0688  2E82               	goto	u3565
  7939     0689                     l3032:
  7940     0689  1FC6               	btfss	___flmul@grs+3,7
  7941     068A  2E8C               	goto	u3571
  7942     068B  2E8D               	goto	u3570
  7943     068C                     u3571:
  7944     068C  2E8E               	goto	l3036
  7945     068D                     u3570:
  7946     068D                     l3034:
  7947     068D  1449               	bsf	___flmul@prod,0
  7948     068E                     l3036:
  7949     068E  3001               	movlw	1
  7950     068F  00BD               	movwf	??___flmul
  7951     0690                     u3585:
  7952     0690  1003               	clrc
  7953     0691  0DC3               	rlf	___flmul@grs,f
  7954     0692  0DC4               	rlf	___flmul@grs+1,f
  7955     0693  0DC5               	rlf	___flmul@grs+2,f
  7956     0694  0DC6               	rlf	___flmul@grs+3,f
  7957     0695  0BBD               	decfsz	??___flmul,f
  7958     0696  2E90               	goto	u3585
  7959     0697                     l3038:
  7960     0697  30FF               	movlw	255
  7961     0698  07CD               	addwf	___flmul@temp,f
  7962     0699  1803               	skipnc
  7963     069A  0ACE               	incf	___flmul@temp+1,f
  7964     069B  30FF               	movlw	255
  7965     069C  07CE               	addwf	___flmul@temp+1,f
  7966     069D                     l3040:
  7967     069D  1FCB               	btfss	___flmul@prod+2,7
  7968     069E  2EA0               	goto	u3591
  7969     069F  2EA1               	goto	u3590
  7970     06A0                     u3591:
  7971     06A0  2E80               	goto	l3030
  7972     06A1                     u3590:
  7973     06A1                     l3042:
  7974     06A1  01C7               	clrf	___flmul@aexp
  7975     06A2                     l3044:
  7976     06A2  1FC6               	btfss	___flmul@grs+3,7
  7977     06A3  2EA5               	goto	u3601
  7978     06A4  2EA6               	goto	u3600
  7979     06A5                     u3601:
  7980     06A5  2EC2               	goto	l3052
  7981     06A6                     u3600:
  7982     06A6                     l3046:
  7983     06A6  30FF               	movlw	255
  7984     06A7  0543               	andwf	___flmul@grs,w
  7985     06A8  00BD               	movwf	??___flmul
  7986     06A9  30FF               	movlw	255
  7987     06AA  0544               	andwf	___flmul@grs+1,w
  7988     06AB  00BE               	movwf	??___flmul+1
  7989     06AC  30FF               	movlw	255
  7990     06AD  0545               	andwf	___flmul@grs+2,w
  7991     06AE  00BF               	movwf	??___flmul+2
  7992     06AF  307F               	movlw	127
  7993     06B0  0546               	andwf	___flmul@grs+3,w
  7994     06B1  00C0               	movwf	??___flmul+3
  7995     06B2  0840               	movf	??___flmul+3,w
  7996     06B3  043F               	iorwf	??___flmul+2,w
  7997     06B4  043E               	iorwf	??___flmul+1,w
  7998     06B5  043D               	iorwf	??___flmul,w
  7999     06B6  1903               	skipnz
  8000     06B7  2EB9               	goto	u3611
  8001     06B8  2EBA               	goto	u3610
  8002     06B9                     u3611:
  8003     06B9  2EBD               	goto	l894
  8004     06BA                     u3610:
  8005     06BA                     l3048:
  8006     06BA  01C7               	clrf	___flmul@aexp
  8007     06BB  0AC7               	incf	___flmul@aexp,f
  8008     06BC  2EC2               	goto	l3052
  8009     06BD                     l894:
  8010     06BD  1C49               	btfss	___flmul@prod,0
  8011     06BE  2EC0               	goto	u3621
  8012     06BF  2EC1               	goto	u3620
  8013     06C0                     u3621:
  8014     06C0  2EC2               	goto	l3052
  8015     06C1                     u3620:
  8016     06C1  2EBA               	goto	l3048
  8017     06C2                     l3052:
  8018     06C2  0847               	movf	___flmul@aexp,w
  8019     06C3  1903               	btfsc	3,2
  8020     06C4  2EC6               	goto	u3631
  8021     06C5  2EC7               	goto	u3630
  8022     06C6                     u3631:
  8023     06C6  2EF8               	goto	l3062
  8024     06C7                     u3630:
  8025     06C7                     l3054:
  8026     06C7  3001               	movlw	1
  8027     06C8  07C9               	addwf	___flmul@prod,f
  8028     06C9  3000               	movlw	0
  8029     06CA  1803               	skipnc
  8030     06CB  3001               	movlw	1
  8031     06CC  07CA               	addwf	___flmul@prod+1,f
  8032     06CD  3000               	movlw	0
  8033     06CE  1803               	skipnc
  8034     06CF  3001               	movlw	1
  8035     06D0  07CB               	addwf	___flmul@prod+2,f
  8036     06D1  3000               	movlw	0
  8037     06D2  1803               	skipnc
  8038     06D3  3001               	movlw	1
  8039     06D4  07CC               	addwf	___flmul@prod+3,f
  8040     06D5                     l3056:
  8041     06D5  1C4C               	btfss	___flmul@prod+3,0
  8042     06D6  2ED8               	goto	u3641
  8043     06D7  2ED9               	goto	u3640
  8044     06D8                     u3641:
  8045     06D8  2EF8               	goto	l3062
  8046     06D9                     u3640:
  8047     06D9                     l3058:
  8048     06D9  0849               	movf	___flmul@prod,w
  8049     06DA  00BD               	movwf	??___flmul
  8050     06DB  084A               	movf	___flmul@prod+1,w
  8051     06DC  00BE               	movwf	??___flmul+1
  8052     06DD  084B               	movf	___flmul@prod+2,w
  8053     06DE  00BF               	movwf	??___flmul+2
  8054     06DF  084C               	movf	___flmul@prod+3,w
  8055     06E0  00C0               	movwf	??___flmul+3
  8056     06E1  3001               	movlw	1
  8057     06E2  00C1               	movwf	??___flmul+4
  8058     06E3                     u3655:
  8059     06E3  0D40               	rlf	??___flmul+3,w
  8060     06E4  0CC0               	rrf	??___flmul+3,f
  8061     06E5  0CBF               	rrf	??___flmul+2,f
  8062     06E6  0CBE               	rrf	??___flmul+1,f
  8063     06E7  0CBD               	rrf	??___flmul,f
  8064     06E8                     u3650:
  8065     06E8  0BC1               	decfsz	??___flmul+4,f
  8066     06E9  2EE3               	goto	u3655
  8067     06EA  0840               	movf	??___flmul+3,w
  8068     06EB  00CC               	movwf	___flmul@prod+3
  8069     06EC  083F               	movf	??___flmul+2,w
  8070     06ED  00CB               	movwf	___flmul@prod+2
  8071     06EE  083E               	movf	??___flmul+1,w
  8072     06EF  00CA               	movwf	___flmul@prod+1
  8073     06F0  083D               	movf	??___flmul,w
  8074     06F1  00C9               	movwf	___flmul@prod
  8075     06F2                     l3060:
  8076     06F2  3001               	movlw	1
  8077     06F3  07CD               	addwf	___flmul@temp,f
  8078     06F4  1803               	skipnc
  8079     06F5  0ACE               	incf	___flmul@temp+1,f
  8080     06F6  3000               	movlw	0
  8081     06F7  07CE               	addwf	___flmul@temp+1,f
  8082     06F8                     l3062:
  8083     06F8  084E               	movf	___flmul@temp+1,w
  8084     06F9  3A80               	xorlw	128
  8085     06FA  00FF               	movwf	btemp+1
  8086     06FB  3080               	movlw	128
  8087     06FC  027F               	subwf	btemp+1,w
  8088     06FD  1D03               	skipz
  8089     06FE  2F01               	goto	u3665
  8090     06FF  30FF               	movlw	255
  8091     0700  024D               	subwf	___flmul@temp,w
  8092     0701                     u3665:
  8093     0701  1C03               	skipc
  8094     0702  2F04               	goto	u3661
  8095     0703  2F05               	goto	u3660
  8096     0704                     u3661:
  8097     0704  2F10               	goto	l3066
  8098     0705                     u3660:
  8099     0705                     l3064:
  8100     0705  307F               	movlw	127
  8101     0706  1283               	bcf	3,5	;RP0=0, select bank0
  8102     0707  1303               	bcf	3,6	;RP1=0, select bank0
  8103     0708  00CC               	movwf	___flmul@prod+3
  8104     0709  3080               	movlw	128
  8105     070A  00CB               	movwf	___flmul@prod+2
  8106     070B  3000               	movlw	0
  8107     070C  00CA               	movwf	___flmul@prod+1
  8108     070D  3000               	movlw	0
  8109     070E  00C9               	movwf	___flmul@prod
  8110     070F  2F41               	goto	l900
  8111     0710                     l3066:
  8112     0710  1283               	bcf	3,5	;RP0=0, select bank0
  8113     0711  1303               	bcf	3,6	;RP1=0, select bank0
  8114     0712  084E               	movf	___flmul@temp+1,w
  8115     0713  3A80               	xorlw	128
  8116     0714  00FF               	movwf	btemp+1
  8117     0715  3080               	movlw	128
  8118     0716  027F               	subwf	btemp+1,w
  8119     0717  1D03               	skipz
  8120     0718  2F1B               	goto	u3675
  8121     0719  3001               	movlw	1
  8122     071A  024D               	subwf	___flmul@temp,w
  8123     071B                     u3675:
  8124     071B  1803               	skipnc
  8125     071C  2F1E               	goto	u3671
  8126     071D  2F1F               	goto	u3670
  8127     071E                     u3671:
  8128     071E  2F2B               	goto	l3072
  8129     071F                     u3670:
  8130     071F                     l3068:
  8131     071F  3000               	movlw	0
  8132     0720  1283               	bcf	3,5	;RP0=0, select bank0
  8133     0721  1303               	bcf	3,6	;RP1=0, select bank0
  8134     0722  00CC               	movwf	___flmul@prod+3
  8135     0723  3000               	movlw	0
  8136     0724  00CB               	movwf	___flmul@prod+2
  8137     0725  3000               	movlw	0
  8138     0726  00CA               	movwf	___flmul@prod+1
  8139     0727  3000               	movlw	0
  8140     0728  00C9               	movwf	___flmul@prod
  8141     0729                     l3070:
  8142     0729  01C2               	clrf	___flmul@sign
  8143     072A  2F41               	goto	l900
  8144     072B                     l3072:
  8145     072B  1283               	bcf	3,5	;RP0=0, select bank0
  8146     072C  1303               	bcf	3,6	;RP1=0, select bank0
  8147     072D  084D               	movf	___flmul@temp,w
  8148     072E  00C8               	movwf	___flmul@bexp
  8149     072F  30FF               	movlw	255
  8150     0730  05C9               	andwf	___flmul@prod,f
  8151     0731  30FF               	movlw	255
  8152     0732  05CA               	andwf	___flmul@prod+1,f
  8153     0733  307F               	movlw	127
  8154     0734  05CB               	andwf	___flmul@prod+2,f
  8155     0735  3000               	movlw	0
  8156     0736  05CC               	andwf	___flmul@prod+3,f
  8157     0737                     l3074:
  8158     0737  1C48               	btfss	___flmul@bexp,0
  8159     0738  2F3A               	goto	u3681
  8160     0739  2F3B               	goto	u3680
  8161     073A                     u3681:
  8162     073A  2F3C               	goto	l3078
  8163     073B                     u3680:
  8164     073B                     l3076:
  8165     073B  17CB               	bsf	___flmul@prod+2,7
  8166     073C                     l3078:
  8167     073C  0848               	movf	___flmul@bexp,w
  8168     073D  00BD               	movwf	??___flmul
  8169     073E  1003               	clrc
  8170     073F  0C3D               	rrf	??___flmul,w
  8171     0740  00CC               	movwf	___flmul@prod+3
  8172     0741                     l900:
  8173     0741  0842               	movf	___flmul@sign,w
  8174     0742  00BD               	movwf	??___flmul
  8175     0743  083D               	movf	??___flmul,w
  8176     0744  04CC               	iorwf	___flmul@prod+3,f
  8177     0745                     l3080:
  8178     0745  084C               	movf	___flmul@prod+3,w
  8179     0746  00B8               	movwf	?___flmul+3
  8180     0747  084B               	movf	___flmul@prod+2,w
  8181     0748  00B7               	movwf	?___flmul+2
  8182     0749  084A               	movf	___flmul@prod+1,w
  8183     074A  00B6               	movwf	?___flmul+1
  8184     074B  0849               	movf	___flmul@prod,w
  8185     074C  00B5               	movwf	?___flmul
  8186     074D                     l888:
  8187     074D  0008               	return
  8188     074E                     __end_of___flmul:
  8189                           
  8190                           	psect	text32
  8191     12C5                     __ptext32:	
  8192 ;; *************** function __Umul8_16 *****************
  8193 ;; Defined at:
  8194 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  multiplier      1    wreg     unsigned char 
  8197 ;;  multiplicand    1    3[COMMON] unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8200 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8201 ;;  product         2    0[BANK0 ] unsigned int 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  2    3[COMMON] unsigned int 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8211 ;;      Params:         2       0       0       0       0
  8212 ;;      Locals:         0       5       0       0       0
  8213 ;;      Temps:          2       0       0       0       0
  8214 ;;      Totals:         4       5       0       0       0
  8215 ;;Total ram usage:        9 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		___flmul
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225     12C5                     __Umul8_16:	
  8226                           ;psect for function __Umul8_16
  8227                           
  8228                           
  8229                           ;incstack = 0
  8230                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8231                           ;__Umul8_16@multiplier stored from wreg
  8232     12C5  1283               	bcf	3,5	;RP0=0, select bank0
  8233     12C6  1303               	bcf	3,6	;RP1=0, select bank0
  8234     12C7  00A4               	movwf	__Umul8_16@multiplier
  8235     12C8                     l2654:
  8236     12C8  01A0               	clrf	__Umul8_16@product
  8237     12C9  01A1               	clrf	__Umul8_16@product+1
  8238     12CA                     l2656:
  8239     12CA  0873               	movf	__Umul8_16@multiplicand,w
  8240     12CB  00F5               	movwf	??__Umul8_16
  8241     12CC  01F6               	clrf	??__Umul8_16+1
  8242     12CD  0875               	movf	??__Umul8_16,w
  8243     12CE  00A2               	movwf	__Umul8_16@word_mpld
  8244     12CF  0876               	movf	??__Umul8_16+1,w
  8245     12D0  00A3               	movwf	__Umul8_16@word_mpld+1
  8246     12D1                     l2658:
  8247     12D1  1C24               	btfss	__Umul8_16@multiplier,0
  8248     12D2  2AD4               	goto	u2721
  8249     12D3  2AD5               	goto	u2720
  8250     12D4                     u2721:
  8251     12D4  2ADB               	goto	l907
  8252     12D5                     u2720:
  8253     12D5                     l2660:
  8254     12D5  0822               	movf	__Umul8_16@word_mpld,w
  8255     12D6  07A0               	addwf	__Umul8_16@product,f
  8256     12D7  1803               	skipnc
  8257     12D8  0AA1               	incf	__Umul8_16@product+1,f
  8258     12D9  0823               	movf	__Umul8_16@word_mpld+1,w
  8259     12DA  07A1               	addwf	__Umul8_16@product+1,f
  8260     12DB                     l907:
  8261     12DB  3001               	movlw	1
  8262     12DC                     u2735:
  8263     12DC  1003               	clrc
  8264     12DD  0DA2               	rlf	__Umul8_16@word_mpld,f
  8265     12DE  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  8266     12DF  3EFF               	addlw	-1
  8267     12E0  1D03               	skipz
  8268     12E1  2ADC               	goto	u2735
  8269     12E2  1003               	clrc
  8270     12E3  0CA4               	rrf	__Umul8_16@multiplier,f
  8271     12E4                     l2662:
  8272     12E4  0824               	movf	__Umul8_16@multiplier,w
  8273     12E5  1D03               	btfss	3,2
  8274     12E6  2AE8               	goto	u2741
  8275     12E7  2AE9               	goto	u2740
  8276     12E8                     u2741:
  8277     12E8  2AD1               	goto	l2658
  8278     12E9                     u2740:
  8279     12E9                     l2664:
  8280     12E9  0821               	movf	__Umul8_16@product+1,w
  8281     12EA  00F4               	movwf	?__Umul8_16+1
  8282     12EB  0820               	movf	__Umul8_16@product,w
  8283     12EC  00F3               	movwf	?__Umul8_16
  8284     12ED                     l909:
  8285     12ED  0008               	return
  8286     12EE                     __end_of__Umul8_16:
  8287                           
  8288                           	psect	text33
  8289     074E                     __ptext33:	
  8290 ;; *************** function ___flge *****************
  8291 ;; Defined at:
  8292 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  ff1             4    0[BANK0 ] unsigned int 
  8295 ;;  ff2             4    4[BANK0 ] unsigned int 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;		None
  8298 ;; Return value:  Size  Location     Type
  8299 ;;		None               void
  8300 ;; Registers used:
  8301 ;;		wreg, status,2, status,0
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8307 ;;      Params:         0       8       0       0       0
  8308 ;;      Locals:         0       0       0       0       0
  8309 ;;      Temps:          4       0       0       0       0
  8310 ;;      Totals:         4       8       0       0       0
  8311 ;;Total ram usage:       12 bytes
  8312 ;; Hardware stack levels used: 1
  8313 ;; Hardware stack levels required when called: 1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_floattostr
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321     074E                     ___flge:	
  8322                           ;psect for function ___flge
  8323                           
  8324     074E                     l3912:	
  8325                           ;incstack = 0
  8326                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8327                           
  8328     074E  3000               	movlw	0
  8329     074F  1283               	bcf	3,5	;RP0=0, select bank0
  8330     0750  1303               	bcf	3,6	;RP1=0, select bank0
  8331     0751  0520               	andwf	___flge@ff1,w
  8332     0752  00F3               	movwf	??___flge
  8333     0753  3000               	movlw	0
  8334     0754  0521               	andwf	___flge@ff1+1,w
  8335     0755  00F4               	movwf	??___flge+1
  8336     0756  3080               	movlw	128
  8337     0757  0522               	andwf	___flge@ff1+2,w
  8338     0758  00F5               	movwf	??___flge+2
  8339     0759  307F               	movlw	127
  8340     075A  0523               	andwf	___flge@ff1+3,w
  8341     075B  00F6               	movwf	??___flge+3
  8342     075C  0876               	movf	??___flge+3,w
  8343     075D  0475               	iorwf	??___flge+2,w
  8344     075E  0474               	iorwf	??___flge+1,w
  8345     075F  0473               	iorwf	??___flge,w
  8346     0760  1D03               	skipz
  8347     0761  2F63               	goto	u4511
  8348     0762  2F64               	goto	u4510
  8349     0763                     u4511:
  8350     0763  2F6C               	goto	l673
  8351     0764                     u4510:
  8352     0764                     l3914:
  8353     0764  3000               	movlw	0
  8354     0765  00A3               	movwf	___flge@ff1+3
  8355     0766  3000               	movlw	0
  8356     0767  00A2               	movwf	___flge@ff1+2
  8357     0768  3000               	movlw	0
  8358     0769  00A1               	movwf	___flge@ff1+1
  8359     076A  3000               	movlw	0
  8360     076B  00A0               	movwf	___flge@ff1
  8361     076C                     l673:
  8362     076C  3000               	movlw	0
  8363     076D  0524               	andwf	___flge@ff2,w
  8364     076E  00F3               	movwf	??___flge
  8365     076F  3000               	movlw	0
  8366     0770  0525               	andwf	___flge@ff2+1,w
  8367     0771  00F4               	movwf	??___flge+1
  8368     0772  3080               	movlw	128
  8369     0773  0526               	andwf	___flge@ff2+2,w
  8370     0774  00F5               	movwf	??___flge+2
  8371     0775  307F               	movlw	127
  8372     0776  0527               	andwf	___flge@ff2+3,w
  8373     0777  00F6               	movwf	??___flge+3
  8374     0778  0876               	movf	??___flge+3,w
  8375     0779  0475               	iorwf	??___flge+2,w
  8376     077A  0474               	iorwf	??___flge+1,w
  8377     077B  0473               	iorwf	??___flge,w
  8378     077C  1D03               	skipz
  8379     077D  2F7F               	goto	u4521
  8380     077E  2F80               	goto	u4520
  8381     077F                     u4521:
  8382     077F  2F88               	goto	l3918
  8383     0780                     u4520:
  8384     0780                     l3916:
  8385     0780  3000               	movlw	0
  8386     0781  00A7               	movwf	___flge@ff2+3
  8387     0782  3000               	movlw	0
  8388     0783  00A6               	movwf	___flge@ff2+2
  8389     0784  3000               	movlw	0
  8390     0785  00A5               	movwf	___flge@ff2+1
  8391     0786  3000               	movlw	0
  8392     0787  00A4               	movwf	___flge@ff2
  8393     0788                     l3918:
  8394     0788  1FA3               	btfss	___flge@ff1+3,7
  8395     0789  2F8B               	goto	u4531
  8396     078A  2F8C               	goto	u4530
  8397     078B                     u4531:
  8398     078B  2FB0               	goto	l3922
  8399     078C                     u4530:
  8400     078C                     l3920:
  8401     078C  3000               	movlw	0
  8402     078D  00F3               	movwf	??___flge
  8403     078E  3000               	movlw	0
  8404     078F  00F4               	movwf	??___flge+1
  8405     0790  3000               	movlw	0
  8406     0791  00F5               	movwf	??___flge+2
  8407     0792  3080               	movlw	128
  8408     0793  00F6               	movwf	??___flge+3
  8409     0794  0820               	movf	___flge@ff1,w
  8410     0795  02F3               	subwf	??___flge,f
  8411     0796  0821               	movf	___flge@ff1+1,w
  8412     0797  1C03               	skipc
  8413     0798  0F21               	incfsz	___flge@ff1+1,w
  8414     0799  2F9B               	goto	u4541
  8415     079A  2F9C               	goto	u4542
  8416     079B                     u4541:
  8417     079B  02F4               	subwf	??___flge+1,f
  8418     079C                     u4542:
  8419     079C  0822               	movf	___flge@ff1+2,w
  8420     079D  1C03               	skipc
  8421     079E  0F22               	incfsz	___flge@ff1+2,w
  8422     079F  2FA1               	goto	u4543
  8423     07A0  2FA2               	goto	u4544
  8424     07A1                     u4543:
  8425     07A1  02F5               	subwf	??___flge+2,f
  8426     07A2                     u4544:
  8427     07A2  0823               	movf	___flge@ff1+3,w
  8428     07A3  1C03               	skipc
  8429     07A4  0F23               	incfsz	___flge@ff1+3,w
  8430     07A5  2FA7               	goto	u4545
  8431     07A6  2FA8               	goto	u4546
  8432     07A7                     u4545:
  8433     07A7  02F6               	subwf	??___flge+3,f
  8434     07A8                     u4546:
  8435     07A8  0876               	movf	??___flge+3,w
  8436     07A9  00A3               	movwf	___flge@ff1+3
  8437     07AA  0875               	movf	??___flge+2,w
  8438     07AB  00A2               	movwf	___flge@ff1+2
  8439     07AC  0874               	movf	??___flge+1,w
  8440     07AD  00A1               	movwf	___flge@ff1+1
  8441     07AE  0873               	movf	??___flge,w
  8442     07AF  00A0               	movwf	___flge@ff1
  8443     07B0                     l3922:
  8444     07B0  1FA7               	btfss	___flge@ff2+3,7
  8445     07B1  2FB3               	goto	u4551
  8446     07B2  2FB4               	goto	u4550
  8447     07B3                     u4551:
  8448     07B3  2FD8               	goto	l676
  8449     07B4                     u4550:
  8450     07B4                     l3924:
  8451     07B4  3000               	movlw	0
  8452     07B5  00F3               	movwf	??___flge
  8453     07B6  3000               	movlw	0
  8454     07B7  00F4               	movwf	??___flge+1
  8455     07B8  3000               	movlw	0
  8456     07B9  00F5               	movwf	??___flge+2
  8457     07BA  3080               	movlw	128
  8458     07BB  00F6               	movwf	??___flge+3
  8459     07BC  0824               	movf	___flge@ff2,w
  8460     07BD  02F3               	subwf	??___flge,f
  8461     07BE  0825               	movf	___flge@ff2+1,w
  8462     07BF  1C03               	skipc
  8463     07C0  0F25               	incfsz	___flge@ff2+1,w
  8464     07C1  2FC3               	goto	u4561
  8465     07C2  2FC4               	goto	u4562
  8466     07C3                     u4561:
  8467     07C3  02F4               	subwf	??___flge+1,f
  8468     07C4                     u4562:
  8469     07C4  0826               	movf	___flge@ff2+2,w
  8470     07C5  1C03               	skipc
  8471     07C6  0F26               	incfsz	___flge@ff2+2,w
  8472     07C7  2FC9               	goto	u4563
  8473     07C8  2FCA               	goto	u4564
  8474     07C9                     u4563:
  8475     07C9  02F5               	subwf	??___flge+2,f
  8476     07CA                     u4564:
  8477     07CA  0827               	movf	___flge@ff2+3,w
  8478     07CB  1C03               	skipc
  8479     07CC  0F27               	incfsz	___flge@ff2+3,w
  8480     07CD  2FCF               	goto	u4565
  8481     07CE  2FD0               	goto	u4566
  8482     07CF                     u4565:
  8483     07CF  02F6               	subwf	??___flge+3,f
  8484     07D0                     u4566:
  8485     07D0  0876               	movf	??___flge+3,w
  8486     07D1  00A7               	movwf	___flge@ff2+3
  8487     07D2  0875               	movf	??___flge+2,w
  8488     07D3  00A6               	movwf	___flge@ff2+2
  8489     07D4  0874               	movf	??___flge+1,w
  8490     07D5  00A5               	movwf	___flge@ff2+1
  8491     07D6  0873               	movf	??___flge,w
  8492     07D7  00A4               	movwf	___flge@ff2
  8493     07D8                     l676:
  8494     07D8  3080               	movlw	128
  8495     07D9  06A3               	xorwf	___flge@ff1+3,f
  8496     07DA  3080               	movlw	128
  8497     07DB  06A7               	xorwf	___flge@ff2+3,f
  8498     07DC  0827               	movf	___flge@ff2+3,w
  8499     07DD  0223               	subwf	___flge@ff1+3,w
  8500     07DE  1D03               	skipz
  8501     07DF  2FEA               	goto	u4575
  8502     07E0  0826               	movf	___flge@ff2+2,w
  8503     07E1  0222               	subwf	___flge@ff1+2,w
  8504     07E2  1D03               	skipz
  8505     07E3  2FEA               	goto	u4575
  8506     07E4  0825               	movf	___flge@ff2+1,w
  8507     07E5  0221               	subwf	___flge@ff1+1,w
  8508     07E6  1D03               	skipz
  8509     07E7  2FEA               	goto	u4575
  8510     07E8  0824               	movf	___flge@ff2,w
  8511     07E9  0220               	subwf	___flge@ff1,w
  8512     07EA                     u4575:
  8513     07EA  1803               	skipnc
  8514     07EB  2FED               	goto	u4571
  8515     07EC  2FEE               	goto	u4570
  8516     07ED                     u4571:
  8517     07ED  2FF0               	goto	l3928
  8518     07EE                     u4570:
  8519     07EE                     l3926:
  8520     07EE  1003               	clrc
  8521     07EF  2FF1               	goto	l677
  8522     07F0                     l3928:
  8523     07F0  1403               	setc
  8524     07F1                     l677:
  8525     07F1  0008               	return
  8526     07F2                     __end_of___flge:
  8527                           
  8528                           	psect	text34
  8529     0BD5                     __ptext34:	
  8530 ;; *************** function ___fldiv *****************
  8531 ;; Defined at:
  8532 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;  a               4    0[BANK0 ] unsigned int 
  8535 ;;  b               4    4[BANK0 ] unsigned int 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  grs             4   15[BANK0 ] unsigned long 
  8538 ;;  rem             4    8[BANK0 ] unsigned long 
  8539 ;;  new_exp         2   13[BANK0 ] int 
  8540 ;;  aexp            1   20[BANK0 ] unsigned char 
  8541 ;;  bexp            1   19[BANK0 ] unsigned char 
  8542 ;;  sign            1   12[BANK0 ] unsigned char 
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  4    0[BANK0 ] unsigned char 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0, btemp+1
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8552 ;;      Params:         0       8       0       0       0
  8553 ;;      Locals:         0      13       0       0       0
  8554 ;;      Temps:          5       0       0       0       0
  8555 ;;      Totals:         5      21       0       0       0
  8556 ;;Total ram usage:       26 bytes
  8557 ;; Hardware stack levels used: 1
  8558 ;; Hardware stack levels required when called: 1
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_floattostr
  8563 ;;		_AHT10_Read
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567     0BD5                     ___fldiv:	
  8568                           ;psect for function ___fldiv
  8569                           
  8570     0BD5                     l3968:	
  8571                           ;incstack = 0
  8572                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8573                           
  8574     0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  8575     0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  8576     0BD7  0827               	movf	___fldiv@b+3,w
  8577     0BD8  3980               	andlw	128
  8578     0BD9  00AC               	movwf	___fldiv@sign
  8579     0BDA                     l3970:
  8580     0BDA  0827               	movf	___fldiv@b+3,w
  8581     0BDB  00F3               	movwf	??___fldiv
  8582     0BDC  0773               	addwf	??___fldiv,w
  8583     0BDD  00B3               	movwf	___fldiv@bexp
  8584     0BDE                     l3972:
  8585     0BDE  1FA6               	btfss	___fldiv@b+2,7
  8586     0BDF  2BE1               	goto	u4681
  8587     0BE0  2BE2               	goto	u4680
  8588     0BE1                     u4681:
  8589     0BE1  2BE3               	goto	l3976
  8590     0BE2                     u4680:
  8591     0BE2                     l3974:
  8592     0BE2  1433               	bsf	___fldiv@bexp,0
  8593     0BE3                     l3976:
  8594     0BE3  0833               	movf	___fldiv@bexp,w
  8595     0BE4  1903               	btfsc	3,2
  8596     0BE5  2BE7               	goto	u4691
  8597     0BE6  2BE8               	goto	u4690
  8598     0BE7                     u4691:
  8599     0BE7  2BF8               	goto	l3986
  8600     0BE8                     u4690:
  8601     0BE8                     l3978:
  8602     0BE8  0A33               	incf	___fldiv@bexp,w
  8603     0BE9  1D03               	btfss	3,2
  8604     0BEA  2BEC               	goto	u4701
  8605     0BEB  2BED               	goto	u4700
  8606     0BEC                     u4701:
  8607     0BEC  2BF5               	goto	l3982
  8608     0BED                     u4700:
  8609     0BED                     l3980:
  8610     0BED  3000               	movlw	0
  8611     0BEE  00A7               	movwf	___fldiv@b+3
  8612     0BEF  3000               	movlw	0
  8613     0BF0  00A6               	movwf	___fldiv@b+2
  8614     0BF1  3000               	movlw	0
  8615     0BF2  00A5               	movwf	___fldiv@b+1
  8616     0BF3  3000               	movlw	0
  8617     0BF4  00A4               	movwf	___fldiv@b
  8618     0BF5                     l3982:
  8619     0BF5  17A6               	bsf	___fldiv@b+2,7
  8620     0BF6                     l3984:
  8621     0BF6  01A7               	clrf	___fldiv@b+3
  8622     0BF7  2C00               	goto	l3988
  8623     0BF8                     l3986:
  8624     0BF8  3000               	movlw	0
  8625     0BF9  00A7               	movwf	___fldiv@b+3
  8626     0BFA  3000               	movlw	0
  8627     0BFB  00A6               	movwf	___fldiv@b+2
  8628     0BFC  3000               	movlw	0
  8629     0BFD  00A5               	movwf	___fldiv@b+1
  8630     0BFE  3000               	movlw	0
  8631     0BFF  00A4               	movwf	___fldiv@b
  8632     0C00                     l3988:
  8633     0C00  0823               	movf	___fldiv@a+3,w
  8634     0C01  3980               	andlw	128
  8635     0C02  00F3               	movwf	??___fldiv
  8636     0C03  0873               	movf	??___fldiv,w
  8637     0C04  06AC               	xorwf	___fldiv@sign,f
  8638     0C05                     l3990:
  8639     0C05  0823               	movf	___fldiv@a+3,w
  8640     0C06  00F3               	movwf	??___fldiv
  8641     0C07  0773               	addwf	??___fldiv,w
  8642     0C08  00B4               	movwf	___fldiv@aexp
  8643     0C09                     l3992:
  8644     0C09  1FA2               	btfss	___fldiv@a+2,7
  8645     0C0A  2C0C               	goto	u4711
  8646     0C0B  2C0D               	goto	u4710
  8647     0C0C                     u4711:
  8648     0C0C  2C0E               	goto	l3996
  8649     0C0D                     u4710:
  8650     0C0D                     l3994:
  8651     0C0D  1434               	bsf	___fldiv@aexp,0
  8652     0C0E                     l3996:
  8653     0C0E  0834               	movf	___fldiv@aexp,w
  8654     0C0F  1903               	btfsc	3,2
  8655     0C10  2C12               	goto	u4721
  8656     0C11  2C13               	goto	u4720
  8657     0C12                     u4721:
  8658     0C12  2C23               	goto	l4006
  8659     0C13                     u4720:
  8660     0C13                     l3998:
  8661     0C13  0A34               	incf	___fldiv@aexp,w
  8662     0C14  1D03               	btfss	3,2
  8663     0C15  2C17               	goto	u4731
  8664     0C16  2C18               	goto	u4730
  8665     0C17                     u4731:
  8666     0C17  2C20               	goto	l4002
  8667     0C18                     u4730:
  8668     0C18                     l4000:
  8669     0C18  3000               	movlw	0
  8670     0C19  00A3               	movwf	___fldiv@a+3
  8671     0C1A  3000               	movlw	0
  8672     0C1B  00A2               	movwf	___fldiv@a+2
  8673     0C1C  3000               	movlw	0
  8674     0C1D  00A1               	movwf	___fldiv@a+1
  8675     0C1E  3000               	movlw	0
  8676     0C1F  00A0               	movwf	___fldiv@a
  8677     0C20                     l4002:
  8678     0C20  17A2               	bsf	___fldiv@a+2,7
  8679     0C21                     l4004:
  8680     0C21  01A3               	clrf	___fldiv@a+3
  8681     0C22  2C2B               	goto	l848
  8682     0C23                     l4006:
  8683     0C23  3000               	movlw	0
  8684     0C24  00A3               	movwf	___fldiv@a+3
  8685     0C25  3000               	movlw	0
  8686     0C26  00A2               	movwf	___fldiv@a+2
  8687     0C27  3000               	movlw	0
  8688     0C28  00A1               	movwf	___fldiv@a+1
  8689     0C29  3000               	movlw	0
  8690     0C2A  00A0               	movwf	___fldiv@a
  8691     0C2B                     l848:
  8692     0C2B  0823               	movf	___fldiv@a+3,w
  8693     0C2C  0422               	iorwf	___fldiv@a+2,w
  8694     0C2D  0421               	iorwf	___fldiv@a+1,w
  8695     0C2E  0420               	iorwf	___fldiv@a,w
  8696     0C2F  1D03               	skipz
  8697     0C30  2C32               	goto	u4741
  8698     0C31  2C33               	goto	u4740
  8699     0C32                     u4741:
  8700     0C32  2C4C               	goto	l4016
  8701     0C33                     u4740:
  8702     0C33                     l4008:
  8703     0C33  3000               	movlw	0
  8704     0C34  00A7               	movwf	___fldiv@b+3
  8705     0C35  3000               	movlw	0
  8706     0C36  00A6               	movwf	___fldiv@b+2
  8707     0C37  3000               	movlw	0
  8708     0C38  00A5               	movwf	___fldiv@b+1
  8709     0C39  3000               	movlw	0
  8710     0C3A  00A4               	movwf	___fldiv@b
  8711     0C3B  3080               	movlw	128
  8712     0C3C  04A6               	iorwf	___fldiv@b+2,f
  8713     0C3D  307F               	movlw	127
  8714     0C3E  04A7               	iorwf	___fldiv@b+3,f
  8715     0C3F                     l4010:
  8716     0C3F  082C               	movf	___fldiv@sign,w
  8717     0C40  00F3               	movwf	??___fldiv
  8718     0C41  0873               	movf	??___fldiv,w
  8719     0C42  04A7               	iorwf	___fldiv@b+3,f
  8720     0C43                     l4012:
  8721     0C43  0827               	movf	___fldiv@b+3,w
  8722     0C44  00A3               	movwf	?___fldiv+3
  8723     0C45  0826               	movf	___fldiv@b+2,w
  8724     0C46  00A2               	movwf	?___fldiv+2
  8725     0C47  0825               	movf	___fldiv@b+1,w
  8726     0C48  00A1               	movwf	?___fldiv+1
  8727     0C49  0824               	movf	___fldiv@b,w
  8728     0C4A  00A0               	movwf	?___fldiv
  8729     0C4B  2DA7               	goto	l850
  8730     0C4C                     l4016:
  8731     0C4C  0833               	movf	___fldiv@bexp,w
  8732     0C4D  1D03               	btfss	3,2
  8733     0C4E  2C50               	goto	u4751
  8734     0C4F  2C51               	goto	u4750
  8735     0C50                     u4751:
  8736     0C50  2C5A               	goto	l4022
  8737     0C51                     u4750:
  8738     0C51                     l4018:
  8739     0C51  3000               	movlw	0
  8740     0C52  00A3               	movwf	?___fldiv+3
  8741     0C53  3000               	movlw	0
  8742     0C54  00A2               	movwf	?___fldiv+2
  8743     0C55  3000               	movlw	0
  8744     0C56  00A1               	movwf	?___fldiv+1
  8745     0C57  3000               	movlw	0
  8746     0C58  00A0               	movwf	?___fldiv
  8747     0C59  2DA7               	goto	l850
  8748     0C5A                     l4022:
  8749     0C5A  0833               	movf	___fldiv@bexp,w
  8750     0C5B  00F3               	movwf	??___fldiv
  8751     0C5C  01F4               	clrf	??___fldiv+1
  8752     0C5D  0874               	movf	??___fldiv+1,w
  8753     0C5E  00F6               	movwf	??___fldiv+3
  8754     0C5F  0834               	movf	___fldiv@aexp,w
  8755     0C60  0273               	subwf	??___fldiv,w
  8756     0C61  00F5               	movwf	??___fldiv+2
  8757     0C62  1C03               	skipc
  8758     0C63  03F6               	decf	??___fldiv+3,f
  8759     0C64  0875               	movf	??___fldiv+2,w
  8760     0C65  3E7F               	addlw	127
  8761     0C66  00AD               	movwf	___fldiv@new_exp
  8762     0C67  0876               	movf	??___fldiv+3,w
  8763     0C68  1803               	skipnc
  8764     0C69  3E01               	addlw	1
  8765     0C6A  3E00               	addlw	0
  8766     0C6B  00AE               	movwf	___fldiv@new_exp+1
  8767     0C6C                     l4024:
  8768     0C6C  0827               	movf	___fldiv@b+3,w
  8769     0C6D  00AB               	movwf	___fldiv@rem+3
  8770     0C6E  0826               	movf	___fldiv@b+2,w
  8771     0C6F  00AA               	movwf	___fldiv@rem+2
  8772     0C70  0825               	movf	___fldiv@b+1,w
  8773     0C71  00A9               	movwf	___fldiv@rem+1
  8774     0C72  0824               	movf	___fldiv@b,w
  8775     0C73  00A8               	movwf	___fldiv@rem
  8776     0C74                     l4026:
  8777     0C74  3000               	movlw	0
  8778     0C75  00A7               	movwf	___fldiv@b+3
  8779     0C76  3000               	movlw	0
  8780     0C77  00A6               	movwf	___fldiv@b+2
  8781     0C78  3000               	movlw	0
  8782     0C79  00A5               	movwf	___fldiv@b+1
  8783     0C7A  3000               	movlw	0
  8784     0C7B  00A4               	movwf	___fldiv@b
  8785     0C7C                     l4028:
  8786     0C7C  3000               	movlw	0
  8787     0C7D  00B2               	movwf	___fldiv@grs+3
  8788     0C7E  3000               	movlw	0
  8789     0C7F  00B1               	movwf	___fldiv@grs+2
  8790     0C80  3000               	movlw	0
  8791     0C81  00B0               	movwf	___fldiv@grs+1
  8792     0C82  3000               	movlw	0
  8793     0C83  00AF               	movwf	___fldiv@grs
  8794     0C84                     l4030:
  8795     0C84  01B4               	clrf	___fldiv@aexp
  8796     0C85  2CD0               	goto	l4050
  8797     0C86                     l4032:
  8798     0C86  0834               	movf	___fldiv@aexp,w
  8799     0C87  1903               	btfsc	3,2
  8800     0C88  2C8A               	goto	u4761
  8801     0C89  2C8B               	goto	u4760
  8802     0C8A                     u4761:
  8803     0C8A  2CAB               	goto	l4042
  8804     0C8B                     u4760:
  8805     0C8B                     l4034:
  8806     0C8B  3001               	movlw	1
  8807     0C8C  00F3               	movwf	??___fldiv
  8808     0C8D                     u4775:
  8809     0C8D  1003               	clrc
  8810     0C8E  0DA8               	rlf	___fldiv@rem,f
  8811     0C8F  0DA9               	rlf	___fldiv@rem+1,f
  8812     0C90  0DAA               	rlf	___fldiv@rem+2,f
  8813     0C91  0DAB               	rlf	___fldiv@rem+3,f
  8814     0C92  0BF3               	decfsz	??___fldiv,f
  8815     0C93  2C8D               	goto	u4775
  8816     0C94  3001               	movlw	1
  8817     0C95  00F3               	movwf	??___fldiv
  8818     0C96                     u4785:
  8819     0C96  1003               	clrc
  8820     0C97  0DA4               	rlf	___fldiv@b,f
  8821     0C98  0DA5               	rlf	___fldiv@b+1,f
  8822     0C99  0DA6               	rlf	___fldiv@b+2,f
  8823     0C9A  0DA7               	rlf	___fldiv@b+3,f
  8824     0C9B  0BF3               	decfsz	??___fldiv,f
  8825     0C9C  2C96               	goto	u4785
  8826     0C9D                     l4036:
  8827     0C9D  1FB2               	btfss	___fldiv@grs+3,7
  8828     0C9E  2CA0               	goto	u4791
  8829     0C9F  2CA1               	goto	u4790
  8830     0CA0                     u4791:
  8831     0CA0  2CA2               	goto	l4040
  8832     0CA1                     u4790:
  8833     0CA1                     l4038:
  8834     0CA1  1424               	bsf	___fldiv@b,0
  8835     0CA2                     l4040:
  8836     0CA2  3001               	movlw	1
  8837     0CA3  00F3               	movwf	??___fldiv
  8838     0CA4                     u4805:
  8839     0CA4  1003               	clrc
  8840     0CA5  0DAF               	rlf	___fldiv@grs,f
  8841     0CA6  0DB0               	rlf	___fldiv@grs+1,f
  8842     0CA7  0DB1               	rlf	___fldiv@grs+2,f
  8843     0CA8  0DB2               	rlf	___fldiv@grs+3,f
  8844     0CA9  0BF3               	decfsz	??___fldiv,f
  8845     0CAA  2CA4               	goto	u4805
  8846     0CAB                     l4042:
  8847     0CAB  0823               	movf	___fldiv@a+3,w
  8848     0CAC  022B               	subwf	___fldiv@rem+3,w
  8849     0CAD  1D03               	skipz
  8850     0CAE  2CB9               	goto	u4815
  8851     0CAF  0822               	movf	___fldiv@a+2,w
  8852     0CB0  022A               	subwf	___fldiv@rem+2,w
  8853     0CB1  1D03               	skipz
  8854     0CB2  2CB9               	goto	u4815
  8855     0CB3  0821               	movf	___fldiv@a+1,w
  8856     0CB4  0229               	subwf	___fldiv@rem+1,w
  8857     0CB5  1D03               	skipz
  8858     0CB6  2CB9               	goto	u4815
  8859     0CB7  0820               	movf	___fldiv@a,w
  8860     0CB8  0228               	subwf	___fldiv@rem,w
  8861     0CB9                     u4815:
  8862     0CB9  1C03               	skipc
  8863     0CBA  2CBC               	goto	u4811
  8864     0CBB  2CBD               	goto	u4810
  8865     0CBC                     u4811:
  8866     0CBC  2CCC               	goto	l4048
  8867     0CBD                     u4810:
  8868     0CBD                     l4044:
  8869     0CBD  1732               	bsf	___fldiv@grs+3,6
  8870     0CBE                     l4046:
  8871     0CBE  0820               	movf	___fldiv@a,w
  8872     0CBF  02A8               	subwf	___fldiv@rem,f
  8873     0CC0  0821               	movf	___fldiv@a+1,w
  8874     0CC1  1C03               	skipc
  8875     0CC2  0F21               	incfsz	___fldiv@a+1,w
  8876     0CC3  02A9               	subwf	___fldiv@rem+1,f
  8877     0CC4  0822               	movf	___fldiv@a+2,w
  8878     0CC5  1C03               	skipc
  8879     0CC6  0F22               	incfsz	___fldiv@a+2,w
  8880     0CC7  02AA               	subwf	___fldiv@rem+2,f
  8881     0CC8  0823               	movf	___fldiv@a+3,w
  8882     0CC9  1C03               	skipc
  8883     0CCA  0F23               	incfsz	___fldiv@a+3,w
  8884     0CCB  02AB               	subwf	___fldiv@rem+3,f
  8885     0CCC                     l4048:
  8886     0CCC  3001               	movlw	1
  8887     0CCD  00F3               	movwf	??___fldiv
  8888     0CCE  0873               	movf	??___fldiv,w
  8889     0CCF  07B4               	addwf	___fldiv@aexp,f
  8890     0CD0                     l4050:
  8891     0CD0  301A               	movlw	26
  8892     0CD1  0234               	subwf	___fldiv@aexp,w
  8893     0CD2  1C03               	skipc
  8894     0CD3  2CD5               	goto	u4821
  8895     0CD4  2CD6               	goto	u4820
  8896     0CD5                     u4821:
  8897     0CD5  2C86               	goto	l4032
  8898     0CD6                     u4820:
  8899     0CD6                     l4052:
  8900     0CD6  082B               	movf	___fldiv@rem+3,w
  8901     0CD7  042A               	iorwf	___fldiv@rem+2,w
  8902     0CD8  0429               	iorwf	___fldiv@rem+1,w
  8903     0CD9  0428               	iorwf	___fldiv@rem,w
  8904     0CDA  1903               	skipnz
  8905     0CDB  2CDD               	goto	u4831
  8906     0CDC  2CDE               	goto	u4830
  8907     0CDD                     u4831:
  8908     0CDD  2CFD               	goto	l4066
  8909     0CDE                     u4830:
  8910     0CDE                     l4054:
  8911     0CDE  142F               	bsf	___fldiv@grs,0
  8912     0CDF  2CFD               	goto	l4066
  8913     0CE0                     l4056:
  8914     0CE0  3001               	movlw	1
  8915     0CE1  00F3               	movwf	??___fldiv
  8916     0CE2                     u4845:
  8917     0CE2  1003               	clrc
  8918     0CE3  0DA4               	rlf	___fldiv@b,f
  8919     0CE4  0DA5               	rlf	___fldiv@b+1,f
  8920     0CE5  0DA6               	rlf	___fldiv@b+2,f
  8921     0CE6  0DA7               	rlf	___fldiv@b+3,f
  8922     0CE7  0BF3               	decfsz	??___fldiv,f
  8923     0CE8  2CE2               	goto	u4845
  8924     0CE9                     l4058:
  8925     0CE9  1FB2               	btfss	___fldiv@grs+3,7
  8926     0CEA  2CEC               	goto	u4851
  8927     0CEB  2CED               	goto	u4850
  8928     0CEC                     u4851:
  8929     0CEC  2CEE               	goto	l4062
  8930     0CED                     u4850:
  8931     0CED                     l4060:
  8932     0CED  1424               	bsf	___fldiv@b,0
  8933     0CEE                     l4062:
  8934     0CEE  3001               	movlw	1
  8935     0CEF  00F3               	movwf	??___fldiv
  8936     0CF0                     u4865:
  8937     0CF0  1003               	clrc
  8938     0CF1  0DAF               	rlf	___fldiv@grs,f
  8939     0CF2  0DB0               	rlf	___fldiv@grs+1,f
  8940     0CF3  0DB1               	rlf	___fldiv@grs+2,f
  8941     0CF4  0DB2               	rlf	___fldiv@grs+3,f
  8942     0CF5  0BF3               	decfsz	??___fldiv,f
  8943     0CF6  2CF0               	goto	u4865
  8944     0CF7                     l4064:
  8945     0CF7  30FF               	movlw	255
  8946     0CF8  07AD               	addwf	___fldiv@new_exp,f
  8947     0CF9  1803               	skipnc
  8948     0CFA  0AAE               	incf	___fldiv@new_exp+1,f
  8949     0CFB  30FF               	movlw	255
  8950     0CFC  07AE               	addwf	___fldiv@new_exp+1,f
  8951     0CFD                     l4066:
  8952     0CFD  1FA6               	btfss	___fldiv@b+2,7
  8953     0CFE  2D00               	goto	u4871
  8954     0CFF  2D01               	goto	u4870
  8955     0D00                     u4871:
  8956     0D00  2CE0               	goto	l4056
  8957     0D01                     u4870:
  8958     0D01                     l4068:
  8959     0D01  01B4               	clrf	___fldiv@aexp
  8960     0D02                     l4070:
  8961     0D02  1FB2               	btfss	___fldiv@grs+3,7
  8962     0D03  2D05               	goto	u4881
  8963     0D04  2D06               	goto	u4880
  8964     0D05                     u4881:
  8965     0D05  2D22               	goto	l4078
  8966     0D06                     u4880:
  8967     0D06                     l4072:
  8968     0D06  30FF               	movlw	255
  8969     0D07  052F               	andwf	___fldiv@grs,w
  8970     0D08  00F3               	movwf	??___fldiv
  8971     0D09  30FF               	movlw	255
  8972     0D0A  0530               	andwf	___fldiv@grs+1,w
  8973     0D0B  00F4               	movwf	??___fldiv+1
  8974     0D0C  30FF               	movlw	255
  8975     0D0D  0531               	andwf	___fldiv@grs+2,w
  8976     0D0E  00F5               	movwf	??___fldiv+2
  8977     0D0F  307F               	movlw	127
  8978     0D10  0532               	andwf	___fldiv@grs+3,w
  8979     0D11  00F6               	movwf	??___fldiv+3
  8980     0D12  0876               	movf	??___fldiv+3,w
  8981     0D13  0475               	iorwf	??___fldiv+2,w
  8982     0D14  0474               	iorwf	??___fldiv+1,w
  8983     0D15  0473               	iorwf	??___fldiv,w
  8984     0D16  1903               	skipnz
  8985     0D17  2D19               	goto	u4891
  8986     0D18  2D1A               	goto	u4890
  8987     0D19                     u4891:
  8988     0D19  2D1D               	goto	l864
  8989     0D1A                     u4890:
  8990     0D1A                     l4074:
  8991     0D1A  01B4               	clrf	___fldiv@aexp
  8992     0D1B  0AB4               	incf	___fldiv@aexp,f
  8993     0D1C  2D22               	goto	l4078
  8994     0D1D                     l864:
  8995     0D1D  1C24               	btfss	___fldiv@b,0
  8996     0D1E  2D20               	goto	u4901
  8997     0D1F  2D21               	goto	u4900
  8998     0D20                     u4901:
  8999     0D20  2D22               	goto	l4078
  9000     0D21                     u4900:
  9001     0D21  2D1A               	goto	l4074
  9002     0D22                     l4078:
  9003     0D22  0834               	movf	___fldiv@aexp,w
  9004     0D23  1903               	btfsc	3,2
  9005     0D24  2D26               	goto	u4911
  9006     0D25  2D27               	goto	u4910
  9007     0D26                     u4911:
  9008     0D26  2D58               	goto	l4088
  9009     0D27                     u4910:
  9010     0D27                     l4080:
  9011     0D27  3001               	movlw	1
  9012     0D28  07A4               	addwf	___fldiv@b,f
  9013     0D29  3000               	movlw	0
  9014     0D2A  1803               	skipnc
  9015     0D2B  3001               	movlw	1
  9016     0D2C  07A5               	addwf	___fldiv@b+1,f
  9017     0D2D  3000               	movlw	0
  9018     0D2E  1803               	skipnc
  9019     0D2F  3001               	movlw	1
  9020     0D30  07A6               	addwf	___fldiv@b+2,f
  9021     0D31  3000               	movlw	0
  9022     0D32  1803               	skipnc
  9023     0D33  3001               	movlw	1
  9024     0D34  07A7               	addwf	___fldiv@b+3,f
  9025     0D35                     l4082:
  9026     0D35  1C27               	btfss	___fldiv@b+3,0
  9027     0D36  2D38               	goto	u4921
  9028     0D37  2D39               	goto	u4920
  9029     0D38                     u4921:
  9030     0D38  2D58               	goto	l4088
  9031     0D39                     u4920:
  9032     0D39                     l4084:
  9033     0D39  0824               	movf	___fldiv@b,w
  9034     0D3A  00F3               	movwf	??___fldiv
  9035     0D3B  0825               	movf	___fldiv@b+1,w
  9036     0D3C  00F4               	movwf	??___fldiv+1
  9037     0D3D  0826               	movf	___fldiv@b+2,w
  9038     0D3E  00F5               	movwf	??___fldiv+2
  9039     0D3F  0827               	movf	___fldiv@b+3,w
  9040     0D40  00F6               	movwf	??___fldiv+3
  9041     0D41  3001               	movlw	1
  9042     0D42  00F7               	movwf	??___fldiv+4
  9043     0D43                     u4935:
  9044     0D43  0D76               	rlf	??___fldiv+3,w
  9045     0D44  0CF6               	rrf	??___fldiv+3,f
  9046     0D45  0CF5               	rrf	??___fldiv+2,f
  9047     0D46  0CF4               	rrf	??___fldiv+1,f
  9048     0D47  0CF3               	rrf	??___fldiv,f
  9049     0D48                     u4930:
  9050     0D48  0BF7               	decfsz	??___fldiv+4,f
  9051     0D49  2D43               	goto	u4935
  9052     0D4A  0876               	movf	??___fldiv+3,w
  9053     0D4B  00A7               	movwf	___fldiv@b+3
  9054     0D4C  0875               	movf	??___fldiv+2,w
  9055     0D4D  00A6               	movwf	___fldiv@b+2
  9056     0D4E  0874               	movf	??___fldiv+1,w
  9057     0D4F  00A5               	movwf	___fldiv@b+1
  9058     0D50  0873               	movf	??___fldiv,w
  9059     0D51  00A4               	movwf	___fldiv@b
  9060     0D52                     l4086:
  9061     0D52  3001               	movlw	1
  9062     0D53  07AD               	addwf	___fldiv@new_exp,f
  9063     0D54  1803               	skipnc
  9064     0D55  0AAE               	incf	___fldiv@new_exp+1,f
  9065     0D56  3000               	movlw	0
  9066     0D57  07AE               	addwf	___fldiv@new_exp+1,f
  9067     0D58                     l4088:
  9068     0D58  082E               	movf	___fldiv@new_exp+1,w
  9069     0D59  3A80               	xorlw	128
  9070     0D5A  00FF               	movwf	btemp+1
  9071     0D5B  3080               	movlw	128
  9072     0D5C  027F               	subwf	btemp+1,w
  9073     0D5D  1D03               	skipz
  9074     0D5E  2D61               	goto	u4945
  9075     0D5F  30FF               	movlw	255
  9076     0D60  022D               	subwf	___fldiv@new_exp,w
  9077     0D61                     u4945:
  9078     0D61  1C03               	skipc
  9079     0D62  2D64               	goto	u4941
  9080     0D63  2D65               	goto	u4940
  9081     0D64                     u4941:
  9082     0D64  2D73               	goto	l4092
  9083     0D65                     u4940:
  9084     0D65                     l4090:
  9085     0D65  30FF               	movlw	255
  9086     0D66  1283               	bcf	3,5	;RP0=0, select bank0
  9087     0D67  1303               	bcf	3,6	;RP1=0, select bank0
  9088     0D68  00AD               	movwf	___fldiv@new_exp
  9089     0D69  3000               	movlw	0
  9090     0D6A  00AE               	movwf	___fldiv@new_exp+1
  9091     0D6B  3000               	movlw	0
  9092     0D6C  00A7               	movwf	___fldiv@b+3
  9093     0D6D  3000               	movlw	0
  9094     0D6E  00A6               	movwf	___fldiv@b+2
  9095     0D6F  3000               	movlw	0
  9096     0D70  00A5               	movwf	___fldiv@b+1
  9097     0D71  3000               	movlw	0
  9098     0D72  00A4               	movwf	___fldiv@b
  9099     0D73                     l4092:
  9100     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  9101     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  9102     0D75  082E               	movf	___fldiv@new_exp+1,w
  9103     0D76  3A80               	xorlw	128
  9104     0D77  00FF               	movwf	btemp+1
  9105     0D78  3080               	movlw	128
  9106     0D79  027F               	subwf	btemp+1,w
  9107     0D7A  1D03               	skipz
  9108     0D7B  2D7E               	goto	u4955
  9109     0D7C  3001               	movlw	1
  9110     0D7D  022D               	subwf	___fldiv@new_exp,w
  9111     0D7E                     u4955:
  9112     0D7E  1803               	skipnc
  9113     0D7F  2D81               	goto	u4951
  9114     0D80  2D82               	goto	u4950
  9115     0D81                     u4951:
  9116     0D81  2D8F               	goto	l870
  9117     0D82                     u4950:
  9118     0D82                     l4094:
  9119     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  9120     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  9121     0D84  01AD               	clrf	___fldiv@new_exp
  9122     0D85  01AE               	clrf	___fldiv@new_exp+1
  9123     0D86                     l4096:
  9124     0D86  3000               	movlw	0
  9125     0D87  00A7               	movwf	___fldiv@b+3
  9126     0D88  3000               	movlw	0
  9127     0D89  00A6               	movwf	___fldiv@b+2
  9128     0D8A  3000               	movlw	0
  9129     0D8B  00A5               	movwf	___fldiv@b+1
  9130     0D8C  3000               	movlw	0
  9131     0D8D  00A4               	movwf	___fldiv@b
  9132     0D8E                     l4098:
  9133     0D8E  01AC               	clrf	___fldiv@sign
  9134     0D8F                     l870:
  9135     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  9136     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  9137     0D91  082D               	movf	___fldiv@new_exp,w
  9138     0D92  00B3               	movwf	___fldiv@bexp
  9139     0D93                     l4100:
  9140     0D93  1C33               	btfss	___fldiv@bexp,0
  9141     0D94  2D96               	goto	u4961
  9142     0D95  2D97               	goto	u4960
  9143     0D96                     u4961:
  9144     0D96  2D99               	goto	l4104
  9145     0D97                     u4960:
  9146     0D97                     l4102:
  9147     0D97  17A6               	bsf	___fldiv@b+2,7
  9148     0D98  2D9D               	goto	l872
  9149     0D99                     l4104:
  9150     0D99  307F               	movlw	127
  9151     0D9A  00F3               	movwf	??___fldiv
  9152     0D9B  0873               	movf	??___fldiv,w
  9153     0D9C  05A6               	andwf	___fldiv@b+2,f
  9154     0D9D                     l872:
  9155     0D9D  0833               	movf	___fldiv@bexp,w
  9156     0D9E  00F3               	movwf	??___fldiv
  9157     0D9F  1003               	clrc
  9158     0DA0  0C73               	rrf	??___fldiv,w
  9159     0DA1  00A7               	movwf	___fldiv@b+3
  9160     0DA2  082C               	movf	___fldiv@sign,w
  9161     0DA3  00F3               	movwf	??___fldiv
  9162     0DA4  0873               	movf	??___fldiv,w
  9163     0DA5  04A7               	iorwf	___fldiv@b+3,f
  9164     0DA6  2C43               	goto	l4012
  9165     0DA7                     l850:
  9166     0DA7  0008               	return
  9167     0DA8                     __end_of___fldiv:
  9168                           
  9169                           	psect	text35
  9170     144B                     __ptext35:	
  9171 ;; *************** function _Lcd_Write_String *****************
  9172 ;; Defined at:
  9173 ;;		line 98 in file "LCD.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  a               2    0[BANK0 ] PTR unsigned char 
  9176 ;;		 -> buffer2(48), buffer(30), STR_1(3), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  i               2    5[BANK0 ] int 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9188 ;;      Params:         0       2       0       0       0
  9189 ;;      Locals:         0       2       0       0       0
  9190 ;;      Temps:          0       3       0       0       0
  9191 ;;      Totals:         0       7       0       0       0
  9192 ;;Total ram usage:        7 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 3
  9195 ;; This function calls:
  9196 ;;		_Lcd_Write_Char
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;;		_AHT10_Read
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203     144B                     _Lcd_Write_String:	
  9204                           ;psect for function _Lcd_Write_String
  9205                           
  9206     144B                     l4264:	
  9207                           ;incstack = 0
  9208                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9209                           
  9210                           
  9211                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  9212     144B  1283               	bcf	3,5	;RP0=0, select bank0
  9213     144C  1303               	bcf	3,6	;RP1=0, select bank0
  9214     144D  01A5               	clrf	Lcd_Write_String@i
  9215     144E  01A6               	clrf	Lcd_Write_String@i+1
  9216     144F  2C74               	goto	l4270
  9217     1450                     l4266:
  9218                           
  9219                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  9220     1450  0825               	movf	Lcd_Write_String@i,w
  9221     1451  0720               	addwf	Lcd_Write_String@a,w
  9222     1452  00A3               	movwf	??_Lcd_Write_String+1
  9223     1453  0821               	movf	Lcd_Write_String@a+1,w
  9224     1454  00A2               	movwf	??_Lcd_Write_String
  9225     1455  1803               	skipnc
  9226     1456  0AA2               	incf	??_Lcd_Write_String,f
  9227     1457  1FA5               	btfss	Lcd_Write_String@i,7
  9228     1458  2C5A               	goto	u5260
  9229     1459  03A2               	decf	??_Lcd_Write_String,f
  9230     145A                     u5260:
  9231     145A  1283               	bcf	3,5	;RP0=0, select bank0
  9232     145B  1303               	bcf	3,6	;RP1=0, select bank0
  9233     145C  0822               	movf	??_Lcd_Write_String,w
  9234     145D  00A4               	movwf	??_Lcd_Write_String+2
  9235     145E  0824               	movf	??_Lcd_Write_String+2,w
  9236     145F  00FF               	movwf	btemp+1
  9237     1460  0823               	movf	??_Lcd_Write_String+1,w
  9238     1461  0084               	movwf	4
  9239     1462  160A  118A  2000  160A  118A  	fcall	stringtab
  9240     1467  160A  118A  23DA  160A  118A  	fcall	_Lcd_Write_Char
  9241     146C                     l4268:
  9242     146C  3001               	movlw	1
  9243     146D  1283               	bcf	3,5	;RP0=0, select bank0
  9244     146E  1303               	bcf	3,6	;RP1=0, select bank0
  9245     146F  07A5               	addwf	Lcd_Write_String@i,f
  9246     1470  1803               	skipnc
  9247     1471  0AA6               	incf	Lcd_Write_String@i+1,f
  9248     1472  3000               	movlw	0
  9249     1473  07A6               	addwf	Lcd_Write_String@i+1,f
  9250     1474                     l4270:
  9251     1474  0825               	movf	Lcd_Write_String@i,w
  9252     1475  0720               	addwf	Lcd_Write_String@a,w
  9253     1476  00A3               	movwf	??_Lcd_Write_String+1
  9254     1477  0821               	movf	Lcd_Write_String@a+1,w
  9255     1478  00A2               	movwf	??_Lcd_Write_String
  9256     1479  1803               	skipnc
  9257     147A  0AA2               	incf	??_Lcd_Write_String,f
  9258     147B  1FA5               	btfss	Lcd_Write_String@i,7
  9259     147C  2C7E               	goto	u5270
  9260     147D  03A2               	decf	??_Lcd_Write_String,f
  9261     147E                     u5270:
  9262     147E  1283               	bcf	3,5	;RP0=0, select bank0
  9263     147F  1303               	bcf	3,6	;RP1=0, select bank0
  9264     1480  0822               	movf	??_Lcd_Write_String,w
  9265     1481  00A4               	movwf	??_Lcd_Write_String+2
  9266     1482  0824               	movf	??_Lcd_Write_String+2,w
  9267     1483  00FF               	movwf	btemp+1
  9268     1484  0823               	movf	??_Lcd_Write_String+1,w
  9269     1485  0084               	movwf	4
  9270     1486  160A  118A  2000  160A  118A  	fcall	stringtab
  9271     148B  3A00               	xorlw	0
  9272     148C  1D03               	skipz
  9273     148D  2C8F               	goto	u5281
  9274     148E  2C90               	goto	u5280
  9275     148F                     u5281:
  9276     148F  2C50               	goto	l4266
  9277     1490                     u5280:
  9278     1490                     l297:
  9279     1490  0008               	return
  9280     1491                     __end_of_Lcd_Write_String:
  9281                           
  9282                           	psect	text36
  9283     13DA                     __ptext36:	
  9284 ;; *************** function _Lcd_Write_Char *****************
  9285 ;; Defined at:
  9286 ;;		line 83 in file "LCD.c"
  9287 ;; Parameters:    Size  Location     Type
  9288 ;;  a               1    wreg     unsigned char 
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;  a               1    7[COMMON] unsigned char 
  9291 ;;  y               1    6[COMMON] unsigned char 
  9292 ;;  temp            1    5[COMMON] unsigned char 
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2, status,0, pclath, cstack
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9302 ;;      Params:         0       0       0       0       0
  9303 ;;      Locals:         3       0       0       0       0
  9304 ;;      Temps:          1       0       0       0       0
  9305 ;;      Totals:         4       0       0       0       0
  9306 ;;Total ram usage:        4 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; Hardware stack levels required when called: 2
  9309 ;; This function calls:
  9310 ;;		_Lcd_Port
  9311 ;; This function is called by:
  9312 ;;		_Lcd_Write_String
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316     13DA                     _Lcd_Write_Char:	
  9317                           ;psect for function _Lcd_Write_Char
  9318                           
  9319                           
  9320                           ;incstack = 0
  9321                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9322                           ;Lcd_Write_Char@a stored from wreg
  9323     13DA  00F7               	movwf	Lcd_Write_Char@a
  9324     13DB                     l2698:
  9325                           
  9326                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  9327     13DB  0877               	movf	Lcd_Write_Char@a,w
  9328     13DC  390F               	andlw	15
  9329     13DD  00F5               	movwf	Lcd_Write_Char@temp
  9330                           
  9331                           ;LCD.c: 86:     y = a & 0xF0;
  9332     13DE  0877               	movf	Lcd_Write_Char@a,w
  9333     13DF  39F0               	andlw	240
  9334     13E0  00F6               	movwf	Lcd_Write_Char@y
  9335     13E1                     l2700:
  9336                           
  9337                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  9338     13E1  1283               	bcf	3,5	;RP0=0, select bank0
  9339     13E2  1303               	bcf	3,6	;RP1=0, select bank0
  9340     13E3  1708               	bsf	8,6	;volatile
  9341     13E4                     l2702:
  9342                           
  9343                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  9344     13E4  0876               	movf	Lcd_Write_Char@y,w
  9345     13E5  00F4               	movwf	??_Lcd_Write_Char
  9346     13E6  3004               	movlw	4
  9347     13E7                     u2815:
  9348     13E7  1003               	clrc
  9349     13E8  0CF4               	rrf	??_Lcd_Write_Char,f
  9350     13E9  3EFF               	addlw	-1
  9351     13EA  1D03               	skipz
  9352     13EB  2BE7               	goto	u2815
  9353     13EC  0874               	movf	??_Lcd_Write_Char,w
  9354     13ED  160A  118A  21AA  160A  118A  	fcall	_Lcd_Port
  9355     13F2                     l2704:
  9356                           
  9357                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  9358     13F2  1283               	bcf	3,5	;RP0=0, select bank0
  9359     13F3  1303               	bcf	3,6	;RP1=0, select bank0
  9360     13F4  1788               	bsf	8,7	;volatile
  9361     13F5                     l2706:
  9362                           
  9363                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9364     13F5  301A               	movlw	26
  9365     13F6  00F4               	movwf	??_Lcd_Write_Char
  9366     13F7                     u5667:
  9367     13F7  0BF4               	decfsz	??_Lcd_Write_Char,f
  9368     13F8  2BF7               	goto	u5667
  9369     13F9  0000               	nop
  9370     13FA                     l2708:
  9371                           
  9372                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  9373     13FA  1283               	bcf	3,5	;RP0=0, select bank0
  9374     13FB  1303               	bcf	3,6	;RP1=0, select bank0
  9375     13FC  1388               	bcf	8,7	;volatile
  9376     13FD                     l2710:
  9377                           
  9378                           ;LCD.c: 92:     Lcd_Port(temp);
  9379     13FD  0875               	movf	Lcd_Write_Char@temp,w
  9380     13FE  160A  118A  21AA  160A  118A  	fcall	_Lcd_Port
  9381     1403                     l2712:
  9382                           
  9383                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  9384     1403  1283               	bcf	3,5	;RP0=0, select bank0
  9385     1404  1303               	bcf	3,6	;RP1=0, select bank0
  9386     1405  1788               	bsf	8,7	;volatile
  9387     1406                     l2714:
  9388                           
  9389                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9390     1406  301A               	movlw	26
  9391     1407  00F4               	movwf	??_Lcd_Write_Char
  9392     1408                     u5677:
  9393     1408  0BF4               	decfsz	??_Lcd_Write_Char,f
  9394     1409  2C08               	goto	u5677
  9395     140A  0000               	nop
  9396     140B                     l2716:
  9397                           
  9398                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  9399     140B  1283               	bcf	3,5	;RP0=0, select bank0
  9400     140C  1303               	bcf	3,6	;RP1=0, select bank0
  9401     140D  1388               	bcf	8,7	;volatile
  9402     140E                     l291:
  9403     140E  0008               	return
  9404     140F                     __end_of_Lcd_Write_Char:
  9405                           
  9406                           	psect	text37
  9407     14D7                     __ptext37:	
  9408 ;; *************** function _Lcd_Set_Cursor *****************
  9409 ;; Defined at:
  9410 ;;		line 48 in file "LCD.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  a               1    wreg     unsigned char 
  9413 ;;  b               1    7[COMMON] unsigned char 
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  a               1    1[BANK0 ] unsigned char 
  9416 ;;  temp            1    4[BANK0 ] unsigned char 
  9417 ;;  y               1    3[BANK0 ] unsigned char 
  9418 ;;  z               1    2[BANK0 ] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      void 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0, pclath, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9428 ;;      Params:         1       0       0       0       0
  9429 ;;      Locals:         0       4       0       0       0
  9430 ;;      Temps:          0       1       0       0       0
  9431 ;;      Totals:         1       5       0       0       0
  9432 ;;Total ram usage:        6 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 3
  9435 ;; This function calls:
  9436 ;;		_Lcd_Cmd
  9437 ;; This function is called by:
  9438 ;;		_main
  9439 ;;		_AHT10_Read
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443     14D7                     _Lcd_Set_Cursor:	
  9444                           ;psect for function _Lcd_Set_Cursor
  9445                           
  9446                           
  9447                           ;incstack = 0
  9448                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9449                           ;Lcd_Set_Cursor@a stored from wreg
  9450     14D7  1283               	bcf	3,5	;RP0=0, select bank0
  9451     14D8  1303               	bcf	3,6	;RP1=0, select bank0
  9452     14D9  00A1               	movwf	Lcd_Set_Cursor@a
  9453     14DA                     l4244:
  9454                           
  9455                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  9456     14DA  0321               	decf	Lcd_Set_Cursor@a,w
  9457     14DB  1D03               	btfss	3,2
  9458     14DC  2CDE               	goto	u5221
  9459     14DD  2CDF               	goto	u5220
  9460     14DE                     u5221:
  9461     14DE  2CFE               	goto	l4254
  9462     14DF                     u5220:
  9463     14DF                     l4246:
  9464                           
  9465                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  9466     14DF  0877               	movf	Lcd_Set_Cursor@b,w
  9467     14E0  3E7F               	addlw	127
  9468     14E1  00A4               	movwf	Lcd_Set_Cursor@temp
  9469                           
  9470                           ;LCD.c: 52:         z = temp >> 4;
  9471     14E2  0824               	movf	Lcd_Set_Cursor@temp,w
  9472     14E3  00A0               	movwf	??_Lcd_Set_Cursor
  9473     14E4  3004               	movlw	4
  9474     14E5                     u5235:
  9475     14E5  1003               	clrc
  9476     14E6  0CA0               	rrf	??_Lcd_Set_Cursor,f
  9477     14E7  3EFF               	addlw	-1
  9478     14E8  1D03               	skipz
  9479     14E9  2CE5               	goto	u5235
  9480     14EA  0820               	movf	??_Lcd_Set_Cursor,w
  9481     14EB  00A2               	movwf	Lcd_Set_Cursor@z
  9482     14EC                     l4248:
  9483                           
  9484                           ;LCD.c: 53:         y = temp & 0x0F;
  9485     14EC  0824               	movf	Lcd_Set_Cursor@temp,w
  9486     14ED  390F               	andlw	15
  9487     14EE  00A3               	movwf	Lcd_Set_Cursor@y
  9488     14EF                     l4250:
  9489                           
  9490                           ;LCD.c: 54:         Lcd_Cmd(z);
  9491     14EF  0822               	movf	Lcd_Set_Cursor@z,w
  9492     14F0  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  9493     14F5                     l4252:
  9494                           
  9495                           ;LCD.c: 55:         Lcd_Cmd(y);
  9496     14F5  1283               	bcf	3,5	;RP0=0, select bank0
  9497     14F6  1303               	bcf	3,6	;RP1=0, select bank0
  9498     14F7  0823               	movf	Lcd_Set_Cursor@y,w
  9499     14F8  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  9500                           
  9501                           ;LCD.c: 56:     } else if (a == 2) {
  9502     14FD  2D22               	goto	l285
  9503     14FE                     l4254:
  9504     14FE  3002               	movlw	2
  9505     14FF  0621               	xorwf	Lcd_Set_Cursor@a,w
  9506     1500  1D03               	btfss	3,2
  9507     1501  2D03               	goto	u5241
  9508     1502  2D04               	goto	u5240
  9509     1503                     u5241:
  9510     1503  2D22               	goto	l285
  9511     1504                     u5240:
  9512     1504                     l4256:
  9513                           
  9514                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  9515     1504  0877               	movf	Lcd_Set_Cursor@b,w
  9516     1505  3EBF               	addlw	191
  9517     1506  00A4               	movwf	Lcd_Set_Cursor@temp
  9518                           
  9519                           ;LCD.c: 58:         z = temp >> 4;
  9520     1507  0824               	movf	Lcd_Set_Cursor@temp,w
  9521     1508  00A0               	movwf	??_Lcd_Set_Cursor
  9522     1509  3004               	movlw	4
  9523     150A                     u5255:
  9524     150A  1003               	clrc
  9525     150B  0CA0               	rrf	??_Lcd_Set_Cursor,f
  9526     150C  3EFF               	addlw	-1
  9527     150D  1D03               	skipz
  9528     150E  2D0A               	goto	u5255
  9529     150F  0820               	movf	??_Lcd_Set_Cursor,w
  9530     1510  00A2               	movwf	Lcd_Set_Cursor@z
  9531     1511                     l4258:
  9532                           
  9533                           ;LCD.c: 59:         y = temp & 0x0F;
  9534     1511  0824               	movf	Lcd_Set_Cursor@temp,w
  9535     1512  390F               	andlw	15
  9536     1513  00A3               	movwf	Lcd_Set_Cursor@y
  9537     1514                     l4260:
  9538                           
  9539                           ;LCD.c: 60:         Lcd_Cmd(z);
  9540     1514  0822               	movf	Lcd_Set_Cursor@z,w
  9541     1515  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  9542     151A                     l4262:
  9543                           
  9544                           ;LCD.c: 61:         Lcd_Cmd(y);
  9545     151A  1283               	bcf	3,5	;RP0=0, select bank0
  9546     151B  1303               	bcf	3,6	;RP1=0, select bank0
  9547     151C  0823               	movf	Lcd_Set_Cursor@y,w
  9548     151D  160A  118A  2138  160A  118A  	fcall	_Lcd_Cmd
  9549     1522                     l285:
  9550     1522  0008               	return
  9551     1523                     __end_of_Lcd_Set_Cursor:
  9552                           
  9553                           	psect	text38
  9554     1138                     __ptext38:	
  9555 ;; *************** function _Lcd_Cmd *****************
  9556 ;; Defined at:
  9557 ;;		line 35 in file "LCD.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  a               1    wreg     unsigned char 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  a               1    6[COMMON] unsigned char 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg, status,2, status,0, pclath, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9571 ;;      Params:         0       0       0       0       0
  9572 ;;      Locals:         1       0       0       0       0
  9573 ;;      Temps:          2       0       0       0       0
  9574 ;;      Totals:         3       0       0       0       0
  9575 ;;Total ram usage:        3 bytes
  9576 ;; Hardware stack levels used: 1
  9577 ;; Hardware stack levels required when called: 2
  9578 ;; This function calls:
  9579 ;;		_Lcd_Port
  9580 ;; This function is called by:
  9581 ;;		_Lcd_Clear
  9582 ;;		_Lcd_Set_Cursor
  9583 ;;		_Lcd_Init
  9584 ;;		_Lcd_Shift_Right
  9585 ;;		_Lcd_Shift_Left
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589     1138                     _Lcd_Cmd:	
  9590                           ;psect for function _Lcd_Cmd
  9591                           
  9592                           
  9593                           ;incstack = 0
  9594                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9595                           ;Lcd_Cmd@a stored from wreg
  9596     1138  00F6               	movwf	Lcd_Cmd@a
  9597     1139                     l2688:
  9598                           
  9599                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  9600     1139  1283               	bcf	3,5	;RP0=0, select bank0
  9601     113A  1303               	bcf	3,6	;RP1=0, select bank0
  9602     113B  1308               	bcf	8,6	;volatile
  9603     113C                     l2690:
  9604                           
  9605                           ;LCD.c: 37:     Lcd_Port(a);
  9606     113C  0876               	movf	Lcd_Cmd@a,w
  9607     113D  160A  118A  21AA  160A  118A  	fcall	_Lcd_Port
  9608     1142                     l2692:
  9609                           
  9610                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  9611     1142  1283               	bcf	3,5	;RP0=0, select bank0
  9612     1143  1303               	bcf	3,6	;RP1=0, select bank0
  9613     1144  1788               	bsf	8,7	;volatile
  9614     1145                     l2694:
  9615                           
  9616                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9617     1145  300B               	movlw	11
  9618     1146  00F5               	movwf	??_Lcd_Cmd+1
  9619     1147  3062               	movlw	98
  9620     1148  00F4               	movwf	??_Lcd_Cmd
  9621     1149                     u5687:
  9622     1149  0BF4               	decfsz	??_Lcd_Cmd,f
  9623     114A  2949               	goto	u5687
  9624     114B  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9625     114C  2949               	goto	u5687
  9626     114D  0000               	nop
  9627     114E                     l2696:
  9628                           
  9629                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  9630     114E  1283               	bcf	3,5	;RP0=0, select bank0
  9631     114F  1303               	bcf	3,6	;RP1=0, select bank0
  9632     1150  1388               	bcf	8,7	;volatile
  9633     1151                     l276:
  9634     1151  0008               	return
  9635     1152                     __end_of_Lcd_Cmd:
  9636                           
  9637                           	psect	text39
  9638     11AA                     __ptext39:	
  9639 ;; *************** function _Lcd_Port *****************
  9640 ;; Defined at:
  9641 ;;		line 13 in file "LCD.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  a               1    wreg     unsigned char 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  a               1    3[COMMON] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  1    wreg      void 
  9648 ;; Registers used:
  9649 ;;		wreg
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9655 ;;      Params:         0       0       0       0       0
  9656 ;;      Locals:         1       0       0       0       0
  9657 ;;      Temps:          0       0       0       0       0
  9658 ;;      Totals:         1       0       0       0       0
  9659 ;;Total ram usage:        1 bytes
  9660 ;; Hardware stack levels used: 1
  9661 ;; Hardware stack levels required when called: 1
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_Lcd_Cmd
  9666 ;;		_Lcd_Init
  9667 ;;		_Lcd_Write_Char
  9668 ;; This function uses a non-reentrant model
  9669 ;;
  9670                           
  9671     11AA                     _Lcd_Port:	
  9672                           ;psect for function _Lcd_Port
  9673                           
  9674                           
  9675                           ;incstack = 0
  9676                           ; Regs used in _Lcd_Port: [wreg]
  9677                           ;Lcd_Port@a stored from wreg
  9678     11AA  00F3               	movwf	Lcd_Port@a
  9679     11AB                     l2450:
  9680                           
  9681                           ;LCD.c: 14:     if (a & 1)
  9682     11AB  1C73               	btfss	Lcd_Port@a,0
  9683     11AC  29AE               	goto	u2221
  9684     11AD  29AF               	goto	u2220
  9685     11AE                     u2221:
  9686     11AE  29B3               	goto	l265
  9687     11AF                     u2220:
  9688     11AF                     l2452:
  9689                           
  9690                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  9691     11AF  1283               	bcf	3,5	;RP0=0, select bank0
  9692     11B0  1303               	bcf	3,6	;RP1=0, select bank0
  9693     11B1  1606               	bsf	6,4	;volatile
  9694     11B2  29B6               	goto	l266
  9695     11B3                     l265:	
  9696                           ;LCD.c: 16:     else
  9697                           
  9698                           
  9699                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  9700     11B3  1283               	bcf	3,5	;RP0=0, select bank0
  9701     11B4  1303               	bcf	3,6	;RP1=0, select bank0
  9702     11B5  1206               	bcf	6,4	;volatile
  9703     11B6                     l266:
  9704                           
  9705                           ;LCD.c: 19:     if (a & 2)
  9706     11B6  1CF3               	btfss	Lcd_Port@a,1
  9707     11B7  29B9               	goto	u2231
  9708     11B8  29BA               	goto	u2230
  9709     11B9                     u2231:
  9710     11B9  29BC               	goto	l267
  9711     11BA                     u2230:
  9712     11BA                     l2454:
  9713                           
  9714                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  9715     11BA  1686               	bsf	6,5	;volatile
  9716     11BB  29BD               	goto	l268
  9717     11BC                     l267:	
  9718                           ;LCD.c: 21:     else
  9719                           
  9720                           
  9721                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  9722     11BC  1286               	bcf	6,5	;volatile
  9723     11BD                     l268:
  9724                           
  9725                           ;LCD.c: 24:     if (a & 4)
  9726     11BD  1D73               	btfss	Lcd_Port@a,2
  9727     11BE  29C0               	goto	u2241
  9728     11BF  29C1               	goto	u2240
  9729     11C0                     u2241:
  9730     11C0  29C3               	goto	l269
  9731     11C1                     u2240:
  9732     11C1                     l2456:
  9733                           
  9734                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  9735     11C1  1706               	bsf	6,6	;volatile
  9736     11C2  29C4               	goto	l270
  9737     11C3                     l269:	
  9738                           ;LCD.c: 26:     else
  9739                           
  9740                           
  9741                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  9742     11C3  1306               	bcf	6,6	;volatile
  9743     11C4                     l270:
  9744                           
  9745                           ;LCD.c: 29:     if (a & 8)
  9746     11C4  1DF3               	btfss	Lcd_Port@a,3
  9747     11C5  29C7               	goto	u2251
  9748     11C6  29C8               	goto	u2250
  9749     11C7                     u2251:
  9750     11C7  29CA               	goto	l271
  9751     11C8                     u2250:
  9752     11C8                     l2458:
  9753                           
  9754                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  9755     11C8  1786               	bsf	6,7	;volatile
  9756     11C9  29CB               	goto	l273
  9757     11CA                     l271:	
  9758                           ;LCD.c: 31:     else
  9759                           
  9760                           
  9761                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  9762     11CA  1386               	bcf	6,7	;volatile
  9763     11CB                     l273:
  9764     11CB  0008               	return
  9765     11CC                     __end_of_Lcd_Port:
  9766                           
  9767                           	psect	text40
  9768     10C4                     __ptext40:	
  9769 ;; *************** function _I2C_Ack *****************
  9770 ;; Defined at:
  9771 ;;		line 48 in file "i2c.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		None
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9785 ;;      Params:         0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0
  9788 ;;      Totals:         0       0       0       0       0
  9789 ;;Total ram usage:        0 bytes
  9790 ;; Hardware stack levels used: 1
  9791 ;; Hardware stack levels required when called: 1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_AHT10_Read
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799     10C4                     _I2C_Ack:	
  9800                           ;psect for function _I2C_Ack
  9801                           
  9802     10C4                     l3302:	
  9803                           ;incstack = 0
  9804                           ; Regs used in _I2C_Ack: []
  9805                           
  9806                           
  9807                           ;i2c.c: 50:     SSPCON2bits.ACKDT = 0;
  9808     10C4  1683               	bsf	3,5	;RP0=1, select bank1
  9809     10C5  1303               	bcf	3,6	;RP1=0, select bank1
  9810     10C6  1291               	bcf	17,5	;volatile
  9811                           
  9812                           ;i2c.c: 51:  SSPCON2bits.ACKEN = 1;
  9813     10C7  1611               	bsf	17,4	;volatile
  9814     10C8                     l346:	
  9815                           ;i2c.c: 52:  while(PIR1bits.SSPIF == 0);
  9816                           
  9817     10C8  1283               	bcf	3,5	;RP0=0, select bank0
  9818     10C9  1D8C               	btfss	12,3	;volatile
  9819     10CA  28CC               	goto	u4051
  9820     10CB  28CD               	goto	u4050
  9821     10CC                     u4051:
  9822     10CC  28C8               	goto	l346
  9823     10CD                     u4050:
  9824     10CD                     l348:
  9825                           
  9826                           ;i2c.c: 53:     PIR1bits.SSPIF = 0;
  9827     10CD  118C               	bcf	12,3	;volatile
  9828     10CE                     l349:
  9829     10CE  0008               	return
  9830     10CF                     __end_of_I2C_Ack:
  9831                           
  9832                           	psect	text41
  9833     1523                     __ptext41:	
  9834 ;; *************** function _AHT10_Init *****************
  9835 ;; Defined at:
  9836 ;;		line 277 in file "main_master.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;		None
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  status          1    6[COMMON] unsigned char 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  1    wreg      void 
  9843 ;; Registers used:
  9844 ;;		wreg, status,2, status,0, pclath, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9850 ;;      Params:         0       0       0       0       0
  9851 ;;      Locals:         1       0       0       0       0
  9852 ;;      Temps:          2       0       0       0       0
  9853 ;;      Totals:         3       0       0       0       0
  9854 ;;Total ram usage:        3 bytes
  9855 ;; Hardware stack levels used: 1
  9856 ;; Hardware stack levels required when called: 2
  9857 ;; This function calls:
  9858 ;;		_I2C_Nack
  9859 ;;		_I2C_Read
  9860 ;;		_I2C_Restart
  9861 ;;		_I2C_Start
  9862 ;;		_I2C_Stop
  9863 ;;		_I2C_Write
  9864 ;; This function is called by:
  9865 ;;		_main
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869     1523                     _AHT10_Init:	
  9870                           ;psect for function _AHT10_Init
  9871                           
  9872     1523                     l4360:	
  9873                           ;incstack = 0
  9874                           ; Regs used in _AHT10_Init: [wreg+status,2+status,0+pclath+cstack]
  9875                           
  9876                           
  9877                           ;main_master.c: 278:     _delay((unsigned long)((40)*(8000000/4000.0)));
  9878     1523  3068               	movlw	104
  9879     1524  00F5               	movwf	??_AHT10_Init+1
  9880     1525  30E4               	movlw	228
  9881     1526  00F4               	movwf	??_AHT10_Init
  9882     1527                     u5697:
  9883     1527  0BF4               	decfsz	??_AHT10_Init,f
  9884     1528  2D27               	goto	u5697
  9885     1529  0BF5               	decfsz	??_AHT10_Init+1,f
  9886     152A  2D27               	goto	u5697
  9887     152B  0000               	nop
  9888     152C                     l4362:
  9889                           
  9890                           ;main_master.c: 279:     uint8_t status;;main_master.c: 280:     I2C_Start();
  9891     152C  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  9892                           
  9893                           ;main_master.c: 281:     I2C_Write(0x70);
  9894     1531  3070               	movlw	112
  9895     1532  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9896                           
  9897                           ;main_master.c: 282:     I2C_Write(0x71);
  9898     1537  3071               	movlw	113
  9899     1538  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9900     153D                     l4364:
  9901                           
  9902                           ;main_master.c: 283:     I2C_Restart();
  9903     153D  160A  118A  2090  160A  118A  	fcall	_I2C_Restart
  9904     1542                     l4366:
  9905                           
  9906                           ;main_master.c: 284:     I2C_Write(0x71);
  9907     1542  3071               	movlw	113
  9908     1543  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9909     1548                     l4368:
  9910                           
  9911                           ;main_master.c: 285:     status = I2C_Read();
  9912     1548  160A  118A  20B9  160A  118A  	fcall	_I2C_Read
  9913     154D  00F6               	movwf	AHT10_Init@status
  9914     154E                     l4370:
  9915                           
  9916                           ;main_master.c: 286:     I2C_Nack();
  9917     154E  160A  118A  20AE  160A  118A  	fcall	_I2C_Nack
  9918     1553                     l4372:
  9919                           
  9920                           ;main_master.c: 287:     I2C_Stop();
  9921     1553  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  9922     1558                     l4374:
  9923                           
  9924                           ;main_master.c: 289:     status = status & 0b00001000;
  9925     1558  0876               	movf	AHT10_Init@status,w
  9926     1559  3908               	andlw	8
  9927     155A  00F6               	movwf	AHT10_Init@status
  9928     155B                     l4376:
  9929                           
  9930                           ;main_master.c: 292:         I2C_Start();
  9931     155B  160A  118A  209A  160A  118A  	fcall	_I2C_Start
  9932     1560                     l4378:
  9933                           
  9934                           ;main_master.c: 293:         I2C_Write(0x70);
  9935     1560  3070               	movlw	112
  9936     1561  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9937     1566                     l4380:
  9938                           
  9939                           ;main_master.c: 294:         I2C_Write(0xE1);
  9940     1566  30E1               	movlw	225
  9941     1567  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9942     156C                     l4382:
  9943                           
  9944                           ;main_master.c: 295:         I2C_Write(0x08);
  9945     156C  3008               	movlw	8
  9946     156D  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9947     1572                     l4384:
  9948                           
  9949                           ;main_master.c: 296:         I2C_Write(0x00);
  9950     1572  3000               	movlw	0
  9951     1573  120A  118A  27F2  160A  118A  	fcall	_I2C_Write
  9952     1578                     l4386:
  9953                           
  9954                           ;main_master.c: 297:         I2C_Stop();
  9955     1578  160A  118A  20A4  160A  118A  	fcall	_I2C_Stop
  9956     157D                     l4388:
  9957                           
  9958                           ;main_master.c: 299:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9959     157D  301A               	movlw	26
  9960     157E  00F5               	movwf	??_AHT10_Init+1
  9961     157F  30F8               	movlw	248
  9962     1580  00F4               	movwf	??_AHT10_Init
  9963     1581                     u5707:
  9964     1581  0BF4               	decfsz	??_AHT10_Init,f
  9965     1582  2D81               	goto	u5707
  9966     1583  0BF5               	decfsz	??_AHT10_Init+1,f
  9967     1584  2D81               	goto	u5707
  9968     1585  0000               	nop
  9969     1586                     l226:
  9970     1586  0008               	return
  9971     1587                     __end_of_AHT10_Init:
  9972                           
  9973                           	psect	text42
  9974     07F2                     __ptext42:	
  9975 ;; *************** function _I2C_Write *****************
  9976 ;; Defined at:
  9977 ;;		line 64 in file "i2c.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  data            1    wreg     unsigned char 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;  data            1    3[COMMON] unsigned char 
  9982 ;;  b_ok            2    0        short 
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  2   66[None  ] short 
  9985 ;; Registers used:
  9986 ;;		wreg
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9992 ;;      Params:         0       0       0       0       0
  9993 ;;      Locals:         1       0       0       0       0
  9994 ;;      Temps:          0       0       0       0       0
  9995 ;;      Totals:         1       0       0       0       0
  9996 ;;Total ram usage:        1 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 1
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_Read
 10003 ;;		_Set_sec
 10004 ;;		_Set_min
 10005 ;;		_Set_hour
 10006 ;;		_Set_day
 10007 ;;		_Set_month
 10008 ;;		_Set_year
 10009 ;;		_AHT10_Init
 10010 ;;		_AHT10_Read
 10011 ;;		_AHT10_Soft_Reset
 10012 ;;		_Slave1_Total
 10013 ;;		_Set_day_week
 10014 ;;		_Slave1_Red
 10015 ;;		_Slave1_Green
 10016 ;;		_Slave1_Blue
 10017 ;;		_Slave1_Overheat
 10018 ;;		_Slave1_Normal_Temperature
 10019 ;;		_Slave2
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023     07F2                     _I2C_Write:	
 10024                           ;psect for function _I2C_Write
 10025                           
 10026                           
 10027                           ;incstack = 0
 10028                           ; Regs used in _I2C_Write: [wreg]
 10029                           ;I2C_Write@data stored from wreg
 10030     07F2  00F3               	movwf	I2C_Write@data
 10031     07F3                     l3880:
 10032                           
 10033                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
 10034     07F3  0873               	movf	I2C_Write@data,w
 10035     07F4  1283               	bcf	3,5	;RP0=0, select bank0
 10036     07F5  1303               	bcf	3,6	;RP1=0, select bank0
 10037     07F6  0093               	movwf	19	;volatile
 10038     07F7                     l358:	
 10039                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
 10040                           
 10041     07F7  1D8C               	btfss	12,3	;volatile
 10042     07F8  2FFA               	goto	u4441
 10043     07F9  2FFB               	goto	u4440
 10044     07FA                     u4441:
 10045     07FA  2FF7               	goto	l358
 10046     07FB                     u4440:
 10047     07FB                     l360:
 10048                           
 10049                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
 10050     07FB  118C               	bcf	12,3	;volatile
 10051     07FC                     l3882:
 10052     07FC  1683               	bsf	3,5	;RP0=1, select bank1
 10053     07FD  1303               	bcf	3,6	;RP1=0, select bank1
 10054     07FE  0811               	movf	17,w	;volatile
 10055     07FF                     l361:
 10056     07FF  0008               	return
 10057     0800                     __end_of_I2C_Write:
 10058                           
 10059                           	psect	text43
 10060     10A4                     __ptext43:	
 10061 ;; *************** function _I2C_Stop *****************
 10062 ;; Defined at:
 10063 ;;		line 34 in file "i2c.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;		None
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		None
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10077 ;;      Params:         0       0       0       0       0
 10078 ;;      Locals:         0       0       0       0       0
 10079 ;;      Temps:          0       0       0       0       0
 10080 ;;      Totals:         0       0       0       0       0
 10081 ;;Total ram usage:        0 bytes
 10082 ;; Hardware stack levels used: 1
 10083 ;; Hardware stack levels required when called: 1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_Read
 10088 ;;		_Set_sec
 10089 ;;		_Set_min
 10090 ;;		_Set_hour
 10091 ;;		_Set_day
 10092 ;;		_Set_month
 10093 ;;		_Set_year
 10094 ;;		_AHT10_Init
 10095 ;;		_AHT10_Read
 10096 ;;		_AHT10_Soft_Reset
 10097 ;;		_Slave1_Total
 10098 ;;		_Set_day_week
 10099 ;;		_Slave1_Red
 10100 ;;		_Slave1_Green
 10101 ;;		_Slave1_Blue
 10102 ;;		_Slave1_Overheat
 10103 ;;		_Slave1_Normal_Temperature
 10104 ;;		_Slave2
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108     10A4                     _I2C_Stop:	
 10109                           ;psect for function _I2C_Stop
 10110                           
 10111     10A4                     l3896:	
 10112                           ;incstack = 0
 10113                           ; Regs used in _I2C_Stop: []
 10114                           
 10115                           
 10116                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
 10117     10A4  1683               	bsf	3,5	;RP0=1, select bank1
 10118     10A5  1303               	bcf	3,6	;RP1=0, select bank1
 10119     10A6  1511               	bsf	17,2	;volatile
 10120     10A7                     l334:	
 10121                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
 10122                           
 10123     10A7  1283               	bcf	3,5	;RP0=0, select bank0
 10124     10A8  1D8C               	btfss	12,3	;volatile
 10125     10A9  28AB               	goto	u4481
 10126     10AA  28AC               	goto	u4480
 10127     10AB                     u4481:
 10128     10AB  28A7               	goto	l334
 10129     10AC                     u4480:
 10130     10AC                     l336:
 10131                           
 10132                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
 10133     10AC  118C               	bcf	12,3	;volatile
 10134     10AD                     l337:
 10135     10AD  0008               	return
 10136     10AE                     __end_of_I2C_Stop:
 10137                           
 10138                           	psect	text44
 10139     109A                     __ptext44:	
 10140 ;; *************** function _I2C_Start *****************
 10141 ;; Defined at:
 10142 ;;		line 27 in file "i2c.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		None
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10156 ;;      Params:         0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0
 10159 ;;      Totals:         0       0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used: 1
 10162 ;; Hardware stack levels required when called: 1
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_Read
 10167 ;;		_Set_sec
 10168 ;;		_Set_min
 10169 ;;		_Set_hour
 10170 ;;		_Set_day
 10171 ;;		_Set_month
 10172 ;;		_Set_year
 10173 ;;		_AHT10_Init
 10174 ;;		_AHT10_Read
 10175 ;;		_AHT10_Soft_Reset
 10176 ;;		_Slave1_Total
 10177 ;;		_Set_day_week
 10178 ;;		_Slave1_Red
 10179 ;;		_Slave1_Green
 10180 ;;		_Slave1_Blue
 10181 ;;		_Slave1_Overheat
 10182 ;;		_Slave1_Normal_Temperature
 10183 ;;		_Slave2
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187     109A                     _I2C_Start:	
 10188                           ;psect for function _I2C_Start
 10189                           
 10190     109A                     l3878:	
 10191                           ;incstack = 0
 10192                           ; Regs used in _I2C_Start: []
 10193                           
 10194                           
 10195                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
 10196     109A  1683               	bsf	3,5	;RP0=1, select bank1
 10197     109B  1303               	bcf	3,6	;RP1=0, select bank1
 10198     109C  1411               	bsf	17,0	;volatile
 10199     109D                     l328:	
 10200                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
 10201                           
 10202     109D  1283               	bcf	3,5	;RP0=0, select bank0
 10203     109E  1D8C               	btfss	12,3	;volatile
 10204     109F  28A1               	goto	u4431
 10205     10A0  28A2               	goto	u4430
 10206     10A1                     u4431:
 10207     10A1  289D               	goto	l328
 10208     10A2                     u4430:
 10209     10A2                     l330:
 10210                           
 10211                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
 10212     10A2  118C               	bcf	12,3	;volatile
 10213     10A3                     l331:
 10214     10A3  0008               	return
 10215     10A4                     __end_of_I2C_Start:
 10216                           
 10217                           	psect	text45
 10218     1090                     __ptext45:	
 10219 ;; *************** function _I2C_Restart *****************
 10220 ;; Defined at:
 10221 ;;		line 41 in file "i2c.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;		None
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;		None
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  1    wreg      void 
 10228 ;; Registers used:
 10229 ;;		None
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10235 ;;      Params:         0       0       0       0       0
 10236 ;;      Locals:         0       0       0       0       0
 10237 ;;      Temps:          0       0       0       0       0
 10238 ;;      Totals:         0       0       0       0       0
 10239 ;;Total ram usage:        0 bytes
 10240 ;; Hardware stack levels used: 1
 10241 ;; Hardware stack levels required when called: 1
 10242 ;; This function calls:
 10243 ;;		Nothing
 10244 ;; This function is called by:
 10245 ;;		_Read
 10246 ;;		_AHT10_Init
 10247 ;;		_AHT10_Read
 10248 ;;		_Slave1_Green
 10249 ;;		_Slave1_Blue
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253     1090                     _I2C_Restart:	
 10254                           ;psect for function _I2C_Restart
 10255                           
 10256     1090                     l3886:	
 10257                           ;incstack = 0
 10258                           ; Regs used in _I2C_Restart: []
 10259                           
 10260                           
 10261                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
 10262     1090  1683               	bsf	3,5	;RP0=1, select bank1
 10263     1091  1303               	bcf	3,6	;RP1=0, select bank1
 10264     1092  1491               	bsf	17,1	;volatile
 10265     1093                     l340:	
 10266                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
 10267                           
 10268     1093  1283               	bcf	3,5	;RP0=0, select bank0
 10269     1094  1D8C               	btfss	12,3	;volatile
 10270     1095  2897               	goto	u4451
 10271     1096  2898               	goto	u4450
 10272     1097                     u4451:
 10273     1097  2893               	goto	l340
 10274     1098                     u4450:
 10275     1098                     l342:
 10276                           
 10277                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
 10278     1098  118C               	bcf	12,3	;volatile
 10279     1099                     l343:
 10280     1099  0008               	return
 10281     109A                     __end_of_I2C_Restart:
 10282                           
 10283                           	psect	text46
 10284     10B9                     __ptext46:	
 10285 ;; *************** function _I2C_Read *****************
 10286 ;; Defined at:
 10287 ;;		line 73 in file "i2c.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;		None
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      unsigned char 
 10294 ;; Registers used:
 10295 ;;		wreg
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10301 ;;      Params:         0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used: 1
 10307 ;; Hardware stack levels required when called: 1
 10308 ;; This function calls:
 10309 ;;		Nothing
 10310 ;; This function is called by:
 10311 ;;		_Read
 10312 ;;		_AHT10_Init
 10313 ;;		_AHT10_Read
 10314 ;;		_Slave1_Green
 10315 ;;		_Slave1_Blue
 10316 ;;		_Slave2
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320     10B9                     _I2C_Read:	
 10321                           ;psect for function _I2C_Read
 10322                           
 10323     10B9                     l3888:	
 10324                           ;incstack = 0
 10325                           ; Regs used in _I2C_Read: [wreg]
 10326                           
 10327                           
 10328                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
 10329     10B9  1683               	bsf	3,5	;RP0=1, select bank1
 10330     10BA  1303               	bcf	3,6	;RP1=0, select bank1
 10331     10BB  1591               	bsf	17,3	;volatile
 10332     10BC                     l364:	
 10333                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
 10334                           
 10335     10BC  1283               	bcf	3,5	;RP0=0, select bank0
 10336     10BD  1D8C               	btfss	12,3	;volatile
 10337     10BE  28C0               	goto	u4461
 10338     10BF  28C1               	goto	u4460
 10339     10C0                     u4461:
 10340     10C0  28BC               	goto	l364
 10341     10C1                     u4460:
 10342     10C1                     l366:
 10343                           
 10344                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
 10345     10C1  118C               	bcf	12,3	;volatile
 10346     10C2                     l3890:
 10347                           
 10348                           ;i2c.c: 78:     return SSPBUF;
 10349     10C2  0813               	movf	19,w	;volatile
 10350     10C3                     l367:
 10351     10C3  0008               	return
 10352     10C4                     __end_of_I2C_Read:
 10353                           
 10354                           	psect	text47
 10355     10AE                     __ptext47:	
 10356 ;; *************** function _I2C_Nack *****************
 10357 ;; Defined at:
 10358 ;;		line 56 in file "i2c.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;		None
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		None
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10372 ;;      Params:         0       0       0       0       0
 10373 ;;      Locals:         0       0       0       0       0
 10374 ;;      Temps:          0       0       0       0       0
 10375 ;;      Totals:         0       0       0       0       0
 10376 ;;Total ram usage:        0 bytes
 10377 ;; Hardware stack levels used: 1
 10378 ;; Hardware stack levels required when called: 1
 10379 ;; This function calls:
 10380 ;;		Nothing
 10381 ;; This function is called by:
 10382 ;;		_Read
 10383 ;;		_AHT10_Init
 10384 ;;		_AHT10_Read
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388     10AE                     _I2C_Nack:	
 10389                           ;psect for function _I2C_Nack
 10390                           
 10391     10AE                     l3894:	
 10392                           ;incstack = 0
 10393                           ; Regs used in _I2C_Nack: []
 10394                           
 10395                           
 10396                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
 10397     10AE  1683               	bsf	3,5	;RP0=1, select bank1
 10398     10AF  1303               	bcf	3,6	;RP1=0, select bank1
 10399     10B0  1691               	bsf	17,5	;volatile
 10400                           
 10401                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
 10402     10B1  1611               	bsf	17,4	;volatile
 10403     10B2                     l352:	
 10404                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
 10405                           
 10406     10B2  1283               	bcf	3,5	;RP0=0, select bank0
 10407     10B3  1D8C               	btfss	12,3	;volatile
 10408     10B4  28B6               	goto	u4471
 10409     10B5  28B7               	goto	u4470
 10410     10B6                     u4471:
 10411     10B6  28B2               	goto	l352
 10412     10B7                     u4470:
 10413     10B7                     l354:
 10414                           
 10415                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
 10416     10B7  118C               	bcf	12,3	;volatile
 10417     10B8                     l355:
 10418     10B8  0008               	return
 10419     10B9                     __end_of_I2C_Nack:
 10420                           
 10421                           	psect	text48
 10422     116E                     __ptext48:	
 10423 ;; *************** function _isr *****************
 10424 ;; Defined at:
 10425 ;;		line 129 in file "main_master.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;		None
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, status,2, status,0
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10439 ;;      Params:         0       0       0       0       0
 10440 ;;      Locals:         0       0       0       0       0
 10441 ;;      Temps:          3       0       0       0       0
 10442 ;;      Totals:         3       0       0       0       0
 10443 ;;Total ram usage:        3 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		Interrupt level 1
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452     116E                     _isr:	
 10453                           ;psect for function _isr
 10454                           
 10455     116E                     i1l3748:
 10456                           
 10457                           ;main_master.c: 130:     if (INTCONbits.T0IF == 1){
 10458     116E  1D0B               	btfss	11,2	;volatile
 10459     116F  2971               	goto	u441_21
 10460     1170  2972               	goto	u441_20
 10461     1171                     u441_21:
 10462     1171  2984               	goto	i1l179
 10463     1172                     u441_20:
 10464     1172                     i1l3750:
 10465                           
 10466                           ;main_master.c: 131:         contador++;
 10467     1172  3001               	movlw	1
 10468     1173  00F0               	movwf	??_isr
 10469     1174  0870               	movf	??_isr,w
 10470     1175  1683               	bsf	3,5	;RP0=1, select bank1
 10471     1176  1303               	bcf	3,6	;RP1=0, select bank1
 10472     1177  07E3               	addwf	_contador^(0+128),f
 10473                           
 10474                           ;main_master.c: 132:         if (contador == 50){
 10475     1178  3032               	movlw	50
 10476     1179  0663               	xorwf	_contador^(0+128),w
 10477     117A  1D03               	btfss	3,2
 10478     117B  297D               	goto	u442_21
 10479     117C  297E               	goto	u442_20
 10480     117D                     u442_21:
 10481     117D  297F               	goto	i1l3754
 10482     117E                     u442_20:
 10483     117E                     i1l3752:
 10484                           
 10485                           ;main_master.c: 133:             contador = 0;
 10486     117E  01E3               	clrf	_contador^(0+128)
 10487     117F                     i1l3754:
 10488                           
 10489                           ;main_master.c: 136:         TMR0 = 100;
 10490     117F  3064               	movlw	100
 10491     1180  1283               	bcf	3,5	;RP0=0, select bank0
 10492     1181  1303               	bcf	3,6	;RP1=0, select bank0
 10493     1182  0081               	movwf	1	;volatile
 10494     1183                     i1l3756:
 10495                           
 10496                           ;main_master.c: 137:         INTCONbits.T0IF = 0;
 10497     1183  110B               	bcf	11,2	;volatile
 10498     1184                     i1l179:
 10499     1184  0872               	movf	??_isr+2,w
 10500     1185  008A               	movwf	10
 10501     1186  0E71               	swapf	??_isr+1,w
 10502     1187  0083               	movwf	3
 10503     1188  0EFE               	swapf	btemp,f
 10504     1189  0E7E               	swapf	btemp,w
 10505     118A  0009               	retfie
 10506     118B                     __end_of_isr:
 10507     007E                     btemp	set	126	;btemp
 10508     007E                     wtemp0	set	126
 10509                           
 10510                           	psect	intentry
 10511     0004                     __pintentry:	
 10512                           ;incstack = 0
 10513                           ; Regs used in _isr: [wreg+status,2+status,0]
 10514                           
 10515     0004                     interrupt_function:
 10516     007E                     saved_w	set	btemp
 10517     0004  00FE               	movwf	btemp
 10518     0005  0E03               	swapf	3,w
 10519     0006  00F1               	movwf	??_isr+1
 10520     0007  080A               	movf	10,w
 10521     0008  00F2               	movwf	??_isr+2
 10522     0009  160A  118A  296E   	ljmp	_isr
 10523                           
 10524                           	psect	idloc
 10525                           
 10526                           ;Config register IDLOC0 @ 0x2000
 10527                           ;	unspecified, using default values
 10528     2000                     	org	8192
 10529     2000  3FFF               	dw	16383
 10530                           
 10531                           ;Config register IDLOC1 @ 0x2001
 10532                           ;	unspecified, using default values
 10533     2001                     	org	8193
 10534     2001  3FFF               	dw	16383
 10535                           
 10536                           ;Config register IDLOC2 @ 0x2002
 10537                           ;	unspecified, using default values
 10538     2002                     	org	8194
 10539     2002  3FFF               	dw	16383
 10540                           
 10541                           ;Config register IDLOC3 @ 0x2003
 10542                           ;	unspecified, using default values
 10543     2003                     	org	8195
 10544     2003  3FFF               	dw	16383
 10545                           
 10546                           	psect	config
 10547                           
 10548                           ;Config register CONFIG1 @ 0x2007
 10549                           ;	Oscillator Selection bits
 10550                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10551                           ;	Watchdog Timer Enable bit
 10552                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10553                           ;	Power-up Timer Enable bit
 10554                           ;	PWRTE = OFF, PWRT disabled
 10555                           ;	RE3/MCLR pin function select bit
 10556                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10557                           ;	Code Protection bit
 10558                           ;	CP = OFF, Program memory code protection is disabled
 10559                           ;	Data Code Protection bit
 10560                           ;	CPD = OFF, Data memory code protection is disabled
 10561                           ;	Brown Out Reset Selection bits
 10562                           ;	BOREN = OFF, BOR disabled
 10563                           ;	Internal External Switchover bit
 10564                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10565                           ;	Fail-Safe Clock Monitor Enabled bit
 10566                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10567                           ;	Low Voltage Programming Enable bit
 10568                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10569                           ;	In-Circuit Debugger Mode bit
 10570                           ;	DEBUG = 0x1, unprogramme 10571     2007                     	org	8199
 10572     2007  20D4               	dw	8404
 10573                           
 10574                           ;Config register CONFIG2 @ 0x2008
 10575                           ;	Brown-out Reset Selection bit
 10576                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10577                           ;	Flash Program Memory Self Write Enable bits
 10578                           ;	WRT = OFF, Write protection off
 10579     2008                     	org	8200
 10580     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     76      77
    BANK1            80     43      80
    BANK3            96      0      94
    BANK2            96      6       6

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 48
		 -> buffer2(BANK3[48]), buffer(BANK3[30]), STR_1(CODE[3]), 

    Read_Fecha@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK1[1]), 

    Read_Fecha@mo	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK1[1]), 

    Read_Fecha@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK1[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> horas(COMMON[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minutos(COMMON[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundos(BANK0[1]), 

    floattostr@cadena_	PTR unsigned char  size(1) Largest target is 48
		 -> buffer2(BANK3[48]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Read_Fecha
    _main->_Read_Time
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    _Slave1_Total->_I2C_Write
    _Set_year->_Dec_to_Bcd
    _Set_sec->_Dec_to_Bcd
    _Set_month->_Dec_to_Bcd
    _Set_min->_Dec_to_Bcd
    _Set_hour->_Dec_to_Bcd
    _Set_day->_Dec_to_Bcd
    _Read_Time->_Read
    _Read_Fecha->_Read
    _Read->_I2C_Write
    _Bcd_to_Dec->___bmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _AHT10_Soft_Reset->_I2C_Write
    _AHT10_Read->_Lcd_Set_Cursor
    _AHT10_Read->___fldiv
    _floattostr->___fldiv
    ___fladd->___fldiv
    ___flmul->___fldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _AHT10_Init->_I2C_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Read_Time->_Bcd_to_Dec
    _Read_Fecha->_Bcd_to_Dec
    _AHT10_Read->_floattostr
    _floattostr->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_AHT10_Read
    _AHT10_Read->_floattostr

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   33190
                                              0 BANK2      6     6      0
                         _AHT10_Init
                         _AHT10_Read
                   _AHT10_Soft_Reset
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Read_Fecha
                          _Read_Time
                            _Set_day
                           _Set_hour
                            _Set_min
                          _Set_month
                            _Set_sec
                           _Set_year
                       _Slave1_Total
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    2810
                                              9 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Slave1_Total                                         1     1      0      41
                                              4 COMMON     1     1      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_min                                              1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              1     1      0     208
                                              5 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     136
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2     740
                                              7 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Fecha                                           3     1      2     740
                                              7 COMMON     1     1      0
                                              4 BANK0      2     0      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 3     3      0     109
                                              4 COMMON     3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     322
                                              0 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _AHT10_Soft_Reset                                     2     2      0      41
                                              4 COMMON     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _AHT10_Read                                          26    26      0   25050
                                             18 BANK1     25    25      0
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _floattostr
 ---------------------------------------------------------------------------------
 (2) _floattostr                                          19    13      6   14199
                                             75 BANK0      1     1      0
                                              0 BANK1     18    12      6
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              3 COMMON     4     0      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2637
                                             67 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2440
                                             47 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2721
                                             21 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1166
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2403
                                              3 COMMON     5     5      0
                                              0 BANK0     21    13      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     938
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1130
                                              7 COMMON     1     0      1
                                              0 BANK0      5     5      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AHT10_Init                                           3     3      0      78
                                              4 COMMON     3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      41
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AHT10_Init
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _AHT10_Read
     _I2C_Ack
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _floattostr
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
   _AHT10_Soft_Reset
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _Read_Fecha
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_min
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Slave1_Total
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     10C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5E       9       97.9%
BITBANK2            60      0       0      10        0.0%
BANK2               60      6       6      11        6.2%
DATA                 0      0     10C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 24 13:20:32 2023

            ___fldiv@aexp 0034              ___fldiv@bexp 0033                         _h 0194  
                       _t 0198                         pc 0002              ___fldiv@sign 002C  
          ___bmul@product 0075                _Bcd_to_Dec 1152                        _th 00CB  
                      fsr 0004       ___wmul@multiplicand 0075       __Umul8_16@word_mpld 0022  
                     l200 1211                       l106 0408                       l220 110C  
                     l212 129D                       l206 11EE                       l223 116D  
                     l232 0BD4                       l209 1257                       l330 10A2  
                     l226 1586                       l331 10A3                       l235 1316  
                     l340 1093                       l325 11A9                       l501 1341  
                     l342 1098                       l334 10A7                       l270 11C4  
                     l238 1137                       l182 12C4                       l343 1099  
                     l271 11CA                       l191 13A5                       l352 10B2  
                     l328 109D                       l336 10AC                       l360 07FB  
                     l337 10AD                       l361 07FF                       l273 11CB  
                     l265 11B3                       l185 13D9                       l354 10B7  
                     l346 10C8                       l266 11B6                       l194 127A  
                     l355 10B8                       l267 11BC                       l291 140E  
                     l364 10BC                       l348 10CD                       l268 11BD  
                     l276 1151                       l188 1372                       l349 10CE  
                     l269 11C3                       l285 1522                       l525 1121  
                     l197 1234                       l366 10C1                       l358 07F7  
                     l367 10C3                       l279 10E6                       l288 15EB  
                     l297 1490                       l465 08B7                       l900 0741  
                     l813 0F4F                       l805 0FFF                       l823 0F95  
                     l495 0A22                       l673 076C                       l681 10D9  
                     l817 0F73                       l850 0DA7                       l834 0FF5  
                     l826 0FD3                       l907 12DB                       l835 0FFF  
                     l771 14D6                       l499 1327                       l676 07D8  
                     l692 0887                       l932 1610                       l677 07F1  
                     l909 12ED                       l685 089C                       l781 144A  
                     l870 0D8F                       l838 0824                       l934 16A5  
                     l695 089C                       l872 0D9D                       l864 0D1D  
                     l848 0C2B                       l792 0E03                       l952 10F8  
                     l945 166F                       l946 167B                       l938 1653  
                     l796 0E86                       l894 06BD                       l798 0E5F  
                     l888 074D                       _dia 00EF                       _ano 00ED  
         __end_of_I2C_Ack 10CF                       _mes 00EE                       _isr 116E  
                     fsr0 0004                       indf 0000              ___flmul@aexp 0047  
            ___flmul@bexp 0048              ___flmul@sign 0042              ___flmul@temp 004D  
            ___flmul@prod 0049                _Dec_to_Bcd 10F9       floattostr@tempo_int 00A6  
            ___fltol@exp1 0025                      l3000 0508                      l3010 0566  
                    l3002 0524                      l3020 05F0                      l3012 0583  
                    l3004 052D                      l3030 0680                      l3022 061B  
                    l3014 059A                      l3006 053B                      l4000 0C18  
                    l3032 0689                      l3040 069D                      l3024 0641  
                    l3016 05B7                      l3008 0558                      l4010 0C3F  
                    l4002 0C20                      l3042 06A1                      l3034 068D  
                    l3026 0669                      l3018 05E2                      l4100 0D93  
                    l4012 0C43                      l4004 0C21                      l3060 06F2  
                    l3052 06C2                      l3044 06A2                      l3036 068E  
                    l3028 0672                      l2500 0DF9                      l3302 10C4  
                    l4102 0D97                      l4030 0C84                      l4022 0C5A  
                    l4006 0C23                      l3070 0729                      l3054 06C7  
                    l3062 06F8                      l3046 06A6                      l3038 0697  
                    l2510 0E13                      l2502 0DFB                      l4110 15EF  
                    l3310 10F5                      l4104 0D99                      l4040 0CA2  
                    l4032 0C86                      l4024 0C6C                      l4008 0C33  
                    l4016 0C4C                      l3080 0745                      l3072 072B  
                    l3064 0705                      l3056 06D5                      l3048 06BA  
                    l2600 0F65                      l2520 0E1D                      l2512 0E15  
                    l2504 0E09                      l4112 15F4                      l4200 02B0  
                    l3400 12B8                      l3312 10F7                      l3304 10E8  
                    l2450 11AB                      l4034 0C8B                      l4042 0CAB  
                    l4050 0CD0                      l4026 0C74                      l4018 0C51  
                    l3074 0737                      l3066 0710                      l3058 06D9  
                    l2610 0F7C                      l2602 0F6E                      l2530 0E27  
                    l2522 0E1F                      l2514 0E17                      l2506 0E0D  
                    l4130 163C                      l4122 1621                      l4114 15F8  
                    l4210 02D5                      l4202 02B5                      l3250 1196  
                    l3402 12B9                      l3306 10E9                      l2452 11AF  
                    l2700 13E1                      l4060 0CED                      l4052 0CD6  
                    l4044 0CBD                      l4036 0C9D                      l4028 0C7C  
                    l3076 073B                      l3068 071F                      l2620 0F8C  
                    l2612 0F81                      l2604 0F72                      l2540 0E30  
                    l2532 0E29                      l2524 0E21                      l2516 0E19  
                    l2508 0E11                      l2460 0DA8                      l4140 1673  
                    l4132 164A                      l4124 1624                      l4116 1608  
                    l4212 02DA                      l4204 02BD                      l4220 0305  
                    l3420 10DA                      l3252 1199                      l3404 12BA  
                    l3308 10EF                      l2454 11BA                      l2710 13FD  
                    l2702 13E4                      l4070 0D02                      l4062 0CEE  
                    l4054 0CDE                      l4046 0CBE                      l4038 0CA1  
                    l3078 073C                      l2630 0FAD                      l2622 0F92  
                    l2606 0F77                      l2614 0F83                      l2550 0E70  
                    l2542 0E47                      l2534 0E2B                      l2526 0E23  
                    l2518 0E1B                      l2470 0DBB                      l2462 0DAD  
                    l4150 169D                      l4142 167D                      l4134 165A  
                    l4126 1631                      l4118 1618                      l4230 0337  
                    l4222 030A                      l4214 02E1                      l4206 02C9  
                    l3254 119F                      l3246 118C                      l3406 12BE  
                    l4310 1335                      l4302 1317                      l2456 11C1  
                    l2712 1403                      l2704 13F2                      l4080 0D27  
                    l4072 0D06                      l4064 0CF7                      l4056 0CE0  
                    l4048 0CCC                      l2640 0FE5                      l2632 0FB1  
                    l2608 0F7A                      l2616 0F87                      l2560 0E8F  
                    l2552 0E71                      l2544 0E63                      l2536 0E2D  
                    l2528 0E25                      l2480 0DD3                      l2472 0DC0  
                    l2464 0DB1                      l4144 1693                      l4136 1665  
                    l4128 1638                      l4232 033B                      l4224 031F  
                    l4240 03EC                      l4216 02E9                      l4208 02CD  
                    l4160 005D                      l4400 1213                      l3256 11A2  
                    l3248 1190                      l4320 149B                      l3360 141A  
                    l4312 133B                      l4304 131B                      l2458 11C8  
                    l4250 14EF                      l2714 1406                      l2706 13F5  
                    l4090 0D65                      l4082 0D35                      l4074 0D1A  
                    l4058 0CE9                      l4066 0CFD                      l2650 0FFA  
                    l2642 0FEA                      l2634 0FCF                      l2626 0F9A  
                    l2618 0F88                      l2570 0EB7                      l2554 0E7A  
                    l2546 0E6A                      l2538 0E2F                      l2490 0DE5  
                    l2482 0DD6                      l2474 0DC8                      l2466 0DB5  
                    l4146 1698                      l4138 1669                      l4242 0402  
                    l4234 0343                      l4226 0325                      l4218 02EF  
                    l4170 00AF                      l4162 0064                      l4154 002B  
                    l3290 10FA                      l4410 11F0                      l4402 1218  
                    l3258 11A7                      l4330 14BE                      l4322 149E  
                    l3370 1439                      l3362 1421                      l4306 131F  
                    l4260 1514                      l4252 14F5                      l4244 14DA  
                    l2716 140B                      l2708 13FA                      l4092 0D73  
                    l4084 0D39                      l4068 0D01                      l2660 12D5  
                    l2652 0FFE                      l2644 0FEB                      l2636 0FD8  
                    l2628 0F9F                      l2580 0ECE                      l2572 0EBE  
                    l2564 0E98                      l2548 0E6C                      l2556 0E7E  
                    l2492 0DE6                      l2484 0DDC                      l2476 0DC9  
                    l2468 0DB6                      l4148 169C                      l4236 03A7  
                    l4228 032D                      l4172 00EE                      l4180 0163  
                    l4164 006C                      l4156 0034                      l4500 0AAC  
                    l3292 10FB                      l4420 11CD                      l4412 11F5  
                    l4404 121E                      l3380 12AC                      l4332 14C4  
                    l4324 14A5                      l4316 1491                      l3372 1440  
                    l3364 1425                      l3356 140F                      l4308 132E  
                    l4262 151A                      l4246 14DF                      l4254 14FE  
                    l4270 1474                      l4094 0D82                      l4086 0D52  
                    l4078 0D22                      l2662 12E4                      l2654 12C8  
                    l2646 0FEF                      l2638 0FDD                      l2590 0F32  
                    l2574 0EC0                      l2566 0EAF                      l2558 0E8A  
                    l2582 0ED3                      l2494 0DEB                      l2486 0DDD  
                    l2478 0DCB                      l4238 03E6                      l4190 01F9  
                    l4182 018C                      l4174 00F4                      l4166 0083  
                    l4158 0036                      l4510 0ACE                      l4502 0AB4  
                    l4350 15AD                      l4342 1587                      l3294 1101  
                    l4422 11D2                      l4414 11FB                      l4406 1224  
                    l4430 1236                      l3390 12B3                      l3382 12AF  
                    l4334 14C5                      l4326 14A9                      l4318 1495  
                    l3366 1429                      l3358 1417                      l3374 1446  
                    l4360 1523                      l4256 1504                      l4248 14EC  
                    l4264 144B                      l4096 0D86                      l4088 0D58  
                    l2664 12E9                      l2656 12CA                      l2752 10CF  
                    l2648 0FF1                      l2584 0EE9                      l2592 0F41  
                    l2576 0EC4                      l2568 0EB3                      l2496 0DF0  
                    l2488 0DE1                      l4192 020F                      l4184 0196  
                    l4176 011E                      l4520 0B43                      l4512 0AD3  
                    l4504 0AB9                      l4352 15E4                      l4344 158D  
                    l4280 13B8                      l4272 13A7                      l3296 1108  
                    l4424 11D8                      l4416 1201                      l4408 122F  
                    l4432 123B                      l4440 127C                      l3392 12B4  
                    l3384 12B0                      l4336 14CC                      l4328 14AD  
                    l3368 1433                      l4600 09A3                      l4370 154E  
                    l4362 152C                      l2690 113C                      l4258 1511  
                    l4266 1450                      l4098 0D8E                      l2658 12D1  
                    l2754 10D7                      l2594 0F57                      l2586 0F27  
                    l2578 0EC5                      l2498 0DF8                      l4194 0273  
                    l4186 01B4                      l4178 015D                      l4522 0BB0  
                    l4514 0ADB                      l4506 0AC1                      l4354 12EE  
                    l4346 1597                      l4290 13D3                      l4282 13BD  
                    l4274 13A7                      l4450 1343                      l3298 110B  
                    l4426 11DE                      l4418 120C                      l4434 1241  
                    l4442 1281                      l4530 1127                      l3394 12B5  
                    l3386 12B1                      l3378 129E                      l4338 14D2  
                    l4610 09CB                      l4602 09B0                      l4380 1566  
                    l4372 1553                      l4364 153D                      l2692 1142  
                    l4268 146C                      l2756 10D9                      l2596 0F5C  
                    l2588 0F2D                      l4196 029A                      l4188 01F3  
                    l4524 0BC1                      l4516 0AE0                      l4508 0AC6  
                    l4460 0A34                      l4356 12F7                      l4348 15A7  
                    l3900 110F                      l4292 13D8                      l4284 13C3  
                    l4276 13AC                      l4452 1374                      l4428 11E9  
                    l4436 1247                      l4444 1287                      l4532 112D  
                    l3396 12B6                      l3388 12B2                      l4612 09CE  
                    l4604 09B6                      l4540 08A9                      l4620 0A0E  
                    l4382 156C                      l4374 1558                      l4366 1542  
                    l2694 1145                      l2950 0416                      l4198 02AA  
                    l4526 0BC9                      l4518 0AE5                      l4470 0A5A  
                    l4462 0A3A                      l4454 0A23                      l4358 1308  
                    l3902 1113                      l4286 13C9                      l4278 13B2  
                    l4438 1252                      l4390 1259                      l4446 128D  
                    l4534 1132                      l3398 12B7                      l4614 09FC  
                    l4606 09BB                      l4622 0A1E                      l4550 08BC  
                    l4542 08AE                      l4384 1572                      l4376 155B  
                    l4368 1548                      l2696 114E                      l2688 1139  
                    l3920 078C                      l3912 074E                      l2960 042B  
                    l2952 0417                      l2944 0409                      l4480 0A7A  
                    l4472 0A60                      l4464 0A45                      l4456 0A28  
                    l3904 1117                      l4296 1155                      l4288 13CE  
                    l4392 125E                      l4448 1298                      l4528 1122  
                    l4616 0A01                      l4608 09BF                      l4560 090B  
                    l4552 08CF                      l4544 08B3                      l4536 08A0  
                    l4640 16CD                      l4386 1578                      l4378 1560  
                    l2698 13DB                      l3922 07B0                      l3914 0764  
                    l2970 0441                      l2962 0433                      l2954 041C  
                    l2946 040E                      l4490 0A8D                      l4482 0A7A  
                    l4474 0A6B                      l4466 0A4F                      l4458 0A2E  
                    l3906 1119                      l4298 116C                      l4394 1264  
                    l4618 0A05                      l4570 0941                      l4562 090F  
                    l4554 08DF                      l4546 08B8                      l4538 08A3  
                    l4650 16EA                      l4642 16D2                      l4634 16A6  
                    l4388 157D                      l3924 07B4                      l3916 0780  
                    l2980 045D                      l2972 0446                      l2964 0438  
                    l2956 0421                      l2948 0412                      l2796 0801  
                    l3940 084C                      l3932 0825                      l4492 0A92  
                    l4484 0A7A                      l4476 0A70                      l4468 0A54  
                    l3908 1120                      l4396 126A                      l4580 094F  
                    l4572 0949                      l4564 0920                      l4556 08E3  
                    l4660 1720                      l4652 16F0                      l4644 16D8  
                    l4636 16BD                      l3926 07EE                      l3918 0788  
                    l2990 047E                      l2982 0462                      l2974 044B  
                    l2966 043C                      l2958 0429                      l2798 0805  
                    l3942 084D                      l3934 0830                      l4494 0A9A  
                    l4486 0A7F                      l4478 0A75                      l4398 1275  
                    l4590 098C                      l4574 094D                      l4558 08F8  
                    l4670 1797                      l4662 1757                      l4654 16F6  
                    l4646 16DE                      l4638 16C8                      l3880 07F3  
                    l3928 07F0                      l2992 048B                      l2984 0467  
                    l2976 0453                      l2968 0440                      l3944 0855  
                    l4496 0A9F                      l4488 0A85                      l4592 0990  
                    l4584 096B                      l4568 0925                      l4672 17AA  
                    l4664 176A                      l4656 1702                      l4648 16E4  
                    l3890 10C2                      l3882 07FC                      l3970 0BDA  
                    l2994 04A6                      l2978 0455                      l3962 087C  
                    l3954 0863                      l3946 0857                      l3938 0839  
                    l4498 0AA7                      l4594 0994                      l4586 0975  
                    l4674 17C3                      l4666 1777                      l4658 170E  
                    l3980 0BED                      l3972 0BDE                      l2996 04C2  
                    l2988 0470                      l3964 088C                      l3948 085B  
                    l3956 0875                      l4596 099A                      l4588 0980  
                    l4676 17D6                      l4668 178A                      l3894 10AE  
                    l3886 1090                      l3878 109A                      l3990 0C05  
                    l3982 0BF5                      l3974 0BE2                      l2998 04EC  
                    l3966 0891                      l4598 099F                      l4678 17F1  
                    l3888 10B9                      l3896 10A4                      l3992 0C09  
                    l3984 0BF6                      l3976 0BE3                      l3968 0BD5  
                    l4792 08CA                      l3994 0C0D                      l3978 0BE8  
                    l3986 0BF8                      l3898 110E                      l4794 0939  
                    l3996 0C0E                      l3988 0C00                      ?_isr 0070  
                    l3998 0C13                      STR_1 1029                      STR_2 101A  
                    STR_3 1024                      STR_4 1024                      STR_5 1024  
                    STR_6 1024                      u2220 11AF                      u2300 0DE5  
                    u2221 11AE                      u2301 0DE4                      u2230 11BA  
                    u2310 0DEB                      u2231 11B9                      u2311 0DEA  
                    u2240 11C1                      u2320 0DF0                      u2241 11C0  
                    u2321 0DEF                      u2250 11C8                      u2410 0E86  
                    u2330 0E09                      u4010 119F                      u2251 11C7  
                    u2411 0E85                      u2331 0E08                      u4011 119E  
                    u2420 0E8A                      u2340 0E0D                      u2260 0DB5  
                    u4020 11A7                      u2501 0F00                      u2421 0E89  
                    u2405 0E73                      u2341 0E0C                      u2261 0DB4  
                    u4021 11A6                      u2510 0F14                      u2502 0F01  
                    u2430 0E8F                      u2350 0E47                      u2270 0DBB  
                    u2511 0F15                      u2503 0F06                      u2431 0E8E  
                    u2351 0E46                      u2271 0DBA                      u3320 0416  
                    u2600 0F8C                      u2520 0F32                      u2512 0F1A  
                    u2504 0F07                      u2360 0E52                      u2280 0DC0  
                    u4040 1101                      u3401 04B4                      u3321 0415  
                    u2601 0F8B                      u2521 0F31                      u2513 0F1B  
                    u2505 0F0C                      u2441 0EA1                      u2361 0E50  
                    u2281 0DBF                      u4041 1100                      u4050 10CD  
                    u3402 04BB                      u3330 041C                      u2610 0F92  
                    u2530 0F57                      u2506 0F0D                      u2450 0EB3  
                    u2442 0EA8                      u2370 0E53                      u2290 0DDC  
                    u5010 1637                      u4210 1429                      u4051 10CC  
                    u3411 04D0                      u3403 04C2                      u3331 041B  
                    u2611 0F91                      u2531 0F56                      u2451 0EB2  
                    u2443 0EAF                      u2355 0E43                      u2291 0DDB  
                    u5011 1636                      u4211 1428                      u3412 04D7  
                    u3340 0421                      u2700 0FEF                      u2620 0F99  
                    u2540 0F5C                      u2460 0EB7                      u2380 0E63  
                    u5100 169C                      u4220 1433                      u4060 10EF  
                    u3501 05FF                      u3421 04FA                      u3413 04DE  
                    u3341 0420                      u2701 0FEE                      u2621 0F98  
                    u2541 0F5B                      u2461 0EB6                      u2381 0E62  
                    u5101 169B                      u5005 1629                      u4221 1432  
                    u4205 141B                      u4061 10EE                      u3510 0627  
                    u3502 0606                      u3422 0501                      u3350 0440  
                    u2710 0FFE                      u2630 0F9F                      u2470 0EC4  
                    u2390 0E70                      u5030 1659                      u5110 005D  
                    u4070 10F5                      u3503 060D                      u3431 0516  
                    u3423 0508                      u3351 043F                      u2711 0FFD  
                    u2631 0F9E                      u2471 0EC3                      u2391 0E6F  
                    u5031 1658                      u5111 005C                      u4071 10F4  
                    u2720 12D5                      u3600 06A6                      u3432 051D  
                    u3360 0446                      u2640 0FB1                      u2560 0F72  
                    u5200 0337                      u5120 00AE                      u4240 1446  
                    u2721 12D4                      u3601 06A5                      u3521 0633  
                    u3433 0524                      u3361 0445                      u2641 0FB0  
                    u2561 0F71                      u5025 164B                      u5201 0336  
                    u5121 00AD                      u4241 1445                      u4225 142F  
                    u3610 06BA                      u3530 064F                      u3522 063A  
                    u3370 044B                      u2650 0FC0                      u2570 0F77  
                    u2490 0EE9                      u5050 1669                      u5210 0402  
                    u5130 011D                      u3611 06B9                      u3523 0641  
                    u3515 0622                      u3451 054A                      u3371 044A  
                    u2571 0F76                      u2555 0F67                      u2491 0EE8  
                    u5051 1668                      u5211 0401                      u5131 011C  
                    u4235 143A                      u5220 14DF                      u2740 12E9  
                    u3620 06C1                      u3452 0551                      u3380 0462  
                    u2660 0FCF                      u2580 0F81                      u5060 166F  
                    u5140 018C                      u4500 1120                      u5300 131F  
                    u5221 14DE                      u2741 12E8                      u3621 06C0  
                    u3541 065B                      u3461 0575                      u3453 0558  
                    u3445 0526                      u3381 0461                      u2661 0FCE  
                    u2581 0F80                      u2493 0EE5                      u2485 0EC7  
                    u5061 166E                      u5045 165E                      u5205 0333  
                    u5141 018B                      u4501 111F                      u5301 131E  
                    u4430 10A2                      u4510 0764                      u3630 06C7  
                    u3542 0662                      u3462 057C                      u3390 0467  
                    u2910 10D7                      u2670 0FD8                      u2590 0F87  
                    u5070 1673                      u5150 020F                      u4190 1417  
                    u4431 10A1                      u2815 13E7                      u4511 0763  
                    u2735 12DC                      u3631 06C6                      u3543 0669  
                    u3535 064A                      u3463 0583                      u3391 0466  
                    u2911 10D6                      u2671 0FD7                      u2655 0FBB  
                    u2591 0F86                      u5071 1672                      u5215 03FE  
                    u5151 020E                      u4191 1416                      u4440 07FB  
                    u5240 1504                      u4520 0780                      u3640 06D9  
                    u2680 0FDD                      u4600 085B                      u5080 1688  
                    u5160 029A                      u5400 14D2                      u4441 07FA  
                    u5241 1503                      u4521 077F                      u3641 06D8  
                    u3481 05A9                      u2681 0FDC                      u4601 085A  
                    u5161 0299                      u5401 14D1                      u4450 1098  
                    u4530 078C                      u3650 06E8                      u3570 068D  
                    u3482 05B0                      u2690 0FEA                      u4610 0862  
                    u5090 1698                      u5170 02B0                      u5410 0B04  
                    u5330 133B                      u4451 1097                      u5235 14E5  
                    u4531 078B                      u3571 068C                      u3555 066B  
                    u3491 05D4                      u3483 05B7                      u3475 0585  
                    u2691 0FE9                      u4611 0861                      u5091 1697  
                    u5171 02AF                      u5155 020B                      u5331 133A  
                    u5315 1328                      u4460 10C1                      u5260 145A  
                    u4700 0BED                      u3660 0705                      u3492 05DB  
                    u5180 02CD                      u5420 0B0E                      u5340 149B  
                    u5500 0994                      u4461 10C0                      u4701 0BEC  
                    u4541 079B                      u3661 0704                      u3565 0682  
                    u3493 05E2                      u5085 1683                      u5181 02CC  
                    u5421 0B0F                      u5341 149A                      u5325 132F  
                    u5501 0993                      u4470 10B7                      u5270 147E  
                    u4710 0C0D                      u4550 07B4                      u4542 079C  
                    u3670 071F                      u3590 06A1                      u4630 0874  
                    u5190 0305                      u5430 0B20                      u5422 0B14  
                    u5510 099A                      u4471 10B6                      u5255 150A  
                    u4711 0C0C                      u4551 07B3                      u4543 07A1  
                    u3671 071E                      u3655 06E3                      u3591 06A0  
                    u4631 0873                      u5191 0304                      u5431 0B21  
                    u5423 0B15                      u5415 0AFF                      u5511 0999  
                    u4480 10AC                      u5280 1490                      u4720 0C13  
                    u4544 07A2                      u3680 073B                      u4640 087B  
                    u5432 0B26                      u5360 14AD                      u5520 09AF  
                    u5440 08A9                      u4481 10AB                      u5281 148F  
                    u4721 0C12                      u4561 07C3                      u4545 07A7  
                    u3681 073A                      u3665 0701                      u3585 0690  
                    u4641 087A                      u4625 0864                      u5433 0B27  
                    u5361 14AC                      u5521 09AE                      u5441 08A8  
                    u4810 0CBD                      u4730 0C18                      u4570 07EE  
                    u4562 07C4                      u4546 07A8                      u4490 1113  
                    u5530 09B6                      u5450 08DF                      u4811 0CBC  
                    u4731 0C17                      u4571 07ED                      u4563 07C9  
                    u3675 071B                      u5195 0301                      u4491 1112  
                    u5355 149F                      u5531 09B5                      u5451 08DE  
                    u4900 0D21                      u4820 0CD6                      u4740 0C33  
                    u4564 07CA                      u4660 088C                      u4580 0830  
                    u5380 14BE                      u5540 09CB                      u5460 091F  
                    u4901 0D20                      u4821 0CD5                      u4805 0CA4  
                    u4741 0C32                      u4565 07CF                      u4661 088B  
                    u4581 082F                      u5381 14BD                      u5541 09CA  
                    u5461 091E                      u4910 0D27                      u4830 0CDE  
                    u4750 0C51                      u4566 07D0                      u4670 0891  
                    u4590 0847                      u5550 0A0E                      u5470 096A  
                    u4911 0D26                      u4831 0CDD                      u4815 0CB9  
                    u4751 0C50                      u4575 07EA                      u4671 0890  
                    u4655 087E                      u5607 15A3                      u5295 115D  
                    u5375 14AE                      u5551 0A0D                      u5471 0969  
                    u4920 0D39                      u4760 0C8B                      u4680 0BE2  
                    u5560 0A1E                      u5480 0975                      u4921 0D38  
                    u4761 0C8A                      u4681 0BE1                      u5617 15B1  
                    u5385 14BA                      u5561 0A1D                      u5481 0974  
                    u4930 0D48                      u4850 0CED                      u4690 0BE8  
                    u5490 0980                      u5707 1581                      u4851 0CEC  
                    u4691 0BE7                      u4595 0842                      u5627 15E8  
                    u5395 14C6                      u5491 097F                      u5475 0966  
                    u4940 0D65                      u4941 0D64                      u4845 0CE2  
                    u5637 12F2                      u4950 0D82                      u4870 0D01  
                    u4790 0CA1                      u4951 0D81                      u4935 0D43  
                    u4871 0D00                      u4791 0CA0                      u4775 0C8D  
                    u5647 1311                      u5495 097C                      u4960 0D97  
                    u4880 0D06                      u4961 0D96                      u4945 0D61  
                    u4881 0D05                      u4865 0CF0                      u4785 0C96  
                    u5657 0A4B                      u5577 1134                      u4890 0D1A  
                    u4970 15F4                      u5667 13F7                      u4955 0D7E  
                    u4891 0D19                      u4971 15F3                      u5587 13D5  
                    u4980 15F8                      u5677 1408                      u4981 15F7  
                    u5597 1593                      u4990 1618                      u5687 1149  
                    u4991 1617                      u5697 1527                      _TMR0 0001  
                    _Read 13A6                      _dec2 00EB         ?_Lcd_Write_String 0020  
                    _hum1 00D3                      _hum2 00CF                      _cont 00E4  
                    _main 16A6          __end_of_I2C_Nack 10B9                      _uni2 00EA  
                    _tmp1 00DB                      _tmp2 00D7                      _tmp3 019C  
        __end_of_I2C_Read 10C4                      btemp 007E          __end_of_I2C_Stop 10AE  
                    start 000C        ??_Lcd_Write_String 0022          ?_I2C_Init_Master 0070  
         ___fldiv@new_exp 002D           __end_of_Lcd_Cmd 1152                Read_Time@h 0025  
              Read_Time@m 0024                Read_Time@s 0077         ___bmul@multiplier 0076  
             Read@address 0075                     ??_isr 0070            AHT10_Read@data 00C0  
         __end_of_Set_day 11EF           __end_of_Set_min 1235           __end_of_Set_sec 127B  
                   ?_Read 0070             ___fltol@sign1 0024           __end_of___fladd 1000  
                   ?_main 0070           __end_of___fldiv 0DA8           __end_of___flneg 10DA  
         __end_of___flmul 074E           __end_of___flsub 0825           __end_of___fltol 089D  
                   _ANSEL 0188           __end_of___lwdiv 14D7           __end_of___lwmod 144B  
                   i1l179 1184                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _deci2 00E9                     _cent2 00E8  
         __end_of_dpowers 101A                     _contb 00E5                     _contg 0078  
                   _contr 00E6                     _horas 0079           __end_of_isdigit 10F9  
                   _setup 129E               Read_Fecha@d 0077               Read_Fecha@y 0025  
       __end_of_I2C_Start 10A4         __end_of_I2C_Write 0800                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0A23  
        __end_of_Lcd_Init 15EC          __end_of_Lcd_Port 11CC           __initialization 000F  
            __end_of_Read 13DA                _Read_Fecha 1373              __end_of_main 1800  
             ?_Bcd_to_Dec 0070                 ??_I2C_Ack 0073                    ??_Read 0074  
   floattostr@tempo_float 00A8                    ??_main 0110          __end_of_Set_hour 1212  
        __end_of_Set_year 129E                Set_day@day 0075              ??_AHT10_Init 0074  
            ??_AHT10_Read 00B2          _AHT10_Soft_Reset 12EE               ?_Dec_to_Bcd 0070  
              Set_min@min 0075                Set_sec@sec 0075                    ?_setup 0070  
                  _ANSELH 0189                    i1l3750 1172                    i1l3752 117E  
                  i1l3754 117F                    i1l3756 1183                    i1l3748 116E  
                  u441_20 1172                    u441_21 1171                    u442_20 117E  
                  u442_21 117D                 ??_Lcd_Cmd 0074                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 16A6  
               ??_Set_day 0075                 ??_Set_min 0075                 ??_Set_sec 0075  
                  ___flge 074E                    ___bmul 110D                 ??___fladd 0057  
                  ___wmul 1317                 ??___fldiv 0073                 ??___flneg 0077  
               ??___flmul 003D                 ??___flsub 0078                 ??___fltol 0020  
      __end_of_AHT10_Init 1587        __end_of_AHT10_Read 0BD5                 ??___lwdiv 0077  
               ??___lwmod 0027                    _buffer 01D0                    _estado 00EC  
            Read_Fecha@mo 0024      Dec_to_Bcd@bcd_number 0074                 ?_I2C_Nack 0070  
               ??_isdigit 0073                 ?_I2C_Read 0070                 ?_I2C_Stop 0070  
                  saved_w 007E                 ??_sprintf 0030           Lcd_Set_Cursor@a 0021  
         Lcd_Set_Cursor@b 0077           Lcd_Set_Cursor@y 0023           Lcd_Set_Cursor@z 0022  
              ___flge@ff1 0020                ___flge@ff2 0024              ___xxtofl@arg 0026  
            ___xxtofl@exp 0025              ___xxtofl@val 0073      Dec_to_Bcd@dec_number 0073  
 __end_of__initialization 0027                ___flneg@f1 0073         __end_of_Lcd_Clear 10E7  
              ___fltol@f1 0073       ___bmul@multiplicand 0073               ?_Read_Fecha 0024  
          __pcstackCOMMON 0070             __end_of_setup 12C5             ?_Slave1_Total 0070  
       __end_of_Read_Time 1373            _Lcd_Set_Cursor 14D7                ??_I2C_Nack 0073  
          _OPTION_REGbits 0081                ??_I2C_Read 0073                ??_I2C_Stop 0073  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070     AHT10_Read@temperatura 00C7  
            sprintf@width 0038                   ??_setup 0074                __pbssBANK0 006C  
              __pbssBANK1 00CB                __pbssBANK3 0190          AHT10_Init@status 0076  
       __end_of_Set_month 1258         __end_of__Umul8_16 12EE                 ?_Set_hour 0070  
              __pmaintext 16A6                 ?_Set_year 0070                   ?___flge 0020  
                 ?___bmul 0073                   ?___wmul 0073                __pintentry 0004  
                 _I2C_Ack 10C4    __end_of_Lcd_Set_Cursor 1523            ??_Slave1_Total 0074  
           ??_I2C_Restart 0073                 ?___xxtofl 0073                ??_Lcd_Init 0020  
              ??_Lcd_Port 0073                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 1000            _Lcd_Write_Char 13DA                   _Lcd_Cmd 1138  
              _floattostr 002B                 _I2C_Start 109A                 _I2C_Write 07F2  
                 _Set_day 11CC                ??_Set_hour 0075                   _Set_min 1212  
                 _Set_sec 1258                ??_Set_year 0075  __end_of_AHT10_Soft_Reset 1317  
                 ___fladd 0DA8                   ___fldiv 0BD5                   ___flneg 10CF  
                 ___flmul 0409                   ___flsub 0801                   ___fltol 0825  
                 ___lwdiv 1491                   ___lwmod 140F              ??_Bcd_to_Dec 0020  
         ?_Lcd_Set_Cursor 0077                   __ptext1 089D                   __ptext2 10E7  
                 __ptext3 1317                   __ptext4 140F                   __ptext5 1491  
                 __ptext6 129E                   __ptext7 118B                   __ptext8 1122  
                 __ptext9 127B                   _buffer2 01A0                   _dpowers 1010  
                 _isdigit 10E7                ??___xxtofl 0020                   _humedad 0190  
                 _minutos 007A              ??_Dec_to_Bcd 0073                   _sprintf 089D  
                 clrloop0 1089       __end_of_I2C_Restart 109A    __end_of_Lcd_Write_Char 140F  
    end_of_initialization 0027        __end_of_Bcd_to_Dec 116E                ?_I2C_Start 0070  
              ?_I2C_Write 0070             Bcd_to_Dec@bcd 0023             Bcd_to_Dec@dec 0022  
               Lcd_Port@a 0073        __end_of_Dec_to_Bcd 110D         floattostr@cadena_ 00A4  
               _PORTBbits 0006                 _PORTDbits 0008               ___fladd@grs 0062  
           ___xxtofl@sign 0024         floattostr@largo_n 00AC                 _TRISCbits 0087  
             ___fldiv@grs 002F               ___fldiv@rem 0028           ?_Lcd_Write_Char 0070  
       floattostr@numero_ 00A0         Lcd_Write_String@a 0020         Lcd_Write_String@i 0025  
             ___flmul@grs 0043               ?_floattostr 00A0      __end_of_Slave1_Total 1138  
            ??_Read_Fecha 0077                 _Lcd_Clear 10DA            __end_of___flge 07F2  
          __end_of___bmul 1122            __end_of___wmul 1342          _Lcd_Write_String 144B  
             _I2C_Restart 1090       start_initialization 000F         ??_I2C_Init_Master 0073  
             __end_of_isr 118B                 _Read_Time 1342     I2C_Init_Master@sp_i2c 0073  
      __end_of_Read_Fecha 13A6               ??_I2C_Start 0073               ??_I2C_Write 0073  
               _Set_month 1235                ?_Lcd_Clear 0070                  ??___flge 0073  
                ??___bmul 0074                  ??___wmul 0077                 __Umul8_16 12C5  
                ?_I2C_Ack 0070           Lcd_Write_Char@a 0077           Lcd_Write_Char@y 0076  
               ___fladd@a 0053                 ___fladd@b 004F                 ___fldiv@a 0020  
               ___fldiv@b 0024                 ___flmul@a 0039                 ___flmul@b 0035  
             __pbssCOMMON 0078                 ___flsub@a 0063                 ___flsub@b 0067  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
           __pcstackBANK2 0110                ?_Read_Time 0024              _isdigit$1019 0073  
                ?_Lcd_Cmd 0070               sprintf@flag 0034               sprintf@prec 0037  
        ___lwdiv@dividend 0075                  ?_Set_day 0070                  ?_Set_min 0070  
                ?_Set_sec 0070                ?_Set_month 0070          ??_Lcd_Set_Cursor 0020  
       ?_AHT10_Soft_Reset 0070                  ?___fladd 004F                  ?___fldiv 0020  
                ?___flneg 0073                  ?___flmul 0035                  ?___flsub 0063  
                ?___fltol 0073                ?__Umul8_16 0073                  ?___lwdiv 0073  
                ?___lwmod 0023        ??_AHT10_Soft_Reset 0074                 __pstrings 1000  
               _distancia 00E7                  _I2C_Nack 10AE                  ?_isdigit 0070  
                _I2C_Read 10B9                  _I2C_Stop 10A4          ___lwdiv@quotient 0021  
                ?_sprintf 0029              Set_hour@hour 0075         interrupt_function 0004  
          ___wmul@product 0020                 clear_ram0 1088                  Lcd_Cmd@a 0076  
                _PIR1bits 000C               ??_Lcd_Clear 0077              Set_year@year 0075  
             __stringbase 100F         ___wmul@multiplier 0073              _Slave1_Total 1122  
                Read@dato 0076          ??_Lcd_Write_Char 0074                _AHT10_Init 1523  
              _AHT10_Read 0A23                  _Lcd_Init 1587               ??_Read_Time 0077  
                _Lcd_Port 11AA  __end_of_Lcd_Write_String 1491              ??_floattostr 006B  
             ??_Set_month 0075                  _Set_hour 11EF                  _Set_year 127B  
         _I2C_Init_Master 118B             I2C_Write@data 0073               ??__Umul8_16 0075  
      __end_of__stringtab 1010              ?_I2C_Restart 0070                sprintf@val 0035  
                ___xxtofl 15EC        __end_of_floattostr 0409           ___lwdiv@divisor 0073  
         ___lwdiv@counter 0020                  __ptext10 1258                  __ptext11 1235  
                __ptext20 110D                  __ptext12 1212                  __ptext21 1587  
                __ptext13 11EF                  __ptext30 10CF                  __ptext22 10DA  
                __ptext14 11CC                  __ptext31 0409                  __ptext23 12EE  
                __ptext15 10F9                  __ptext40 10C4                  __ptext32 12C5  
                __ptext24 0A23                  __ptext16 1342                  __ptext41 1523  
                __ptext33 074E                  __ptext25 002B                  __ptext17 1373  
                __ptext42 07F2                  __ptext34 0BD5                  __ptext26 15EC  
                __ptext18 13A6                  __ptext43 10A4                  __ptext35 144B  
                __ptext27 0825                  __ptext19 1152                  __ptext44 109A  
                __ptext36 13DA                  __ptext28 0801                  __ptext45 1090  
                __ptext37 14D7                  __ptext29 0DA8                  __ptext46 10B9  
                __ptext38 1138                  __ptext47 10AE                  __ptext39 11AA  
                __ptext48 116E                  _contador 00E3                  _segundos 006C  
                _temporal 00DF                _INTCONbits 000B               ?_AHT10_Init 0070  
             ?_AHT10_Read 0070                  isdigit@c 0074        Lcd_Write_Char@temp 0075  
    floattostr@decimales_ 00A5                  intlevel1 0000                 sprintf@ap 0033  
               sprintf@sp 003A          ___lwmod@dividend 0025   __end_of_I2C_Init_Master 11AA  
          Set_month@month 0075                 stringcode 100A                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0024    __Umul8_16@multiplicand 0073                  sprintf@c 003B  
                sprintf@f 0029           ___lwmod@divisor 0023           ___lwmod@counter 0028  
                stringdir 100A                  stringtab 1000    floattostr@largo_entera 00B0  
             _SSPCON2bits 0091             ___fladd@signs 005F              ___fladd@aexp 0060  
            ___fladd@bexp 0061      __Umul8_16@multiplier 0024        floattostr@cont_for 00AE  
       __Umul8_16@product 0020  
