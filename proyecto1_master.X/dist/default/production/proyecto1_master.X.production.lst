

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 23 14:34:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    69                           	dabs	1,0x7E,2
    70     0000                     
    71                           ; Version 2.40
    72                           ; Generated 17/11/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F887 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     008F                     	;# 
   151     0090                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0093                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0095                     	;# 
   159     0096                     	;# 
   160     0097                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009A                     	;# 
   164     009B                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     0105                     	;# 
   170     0107                     	;# 
   171     0108                     	;# 
   172     0109                     	;# 
   173     010C                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     0185                     	;# 
   179     0187                     	;# 
   180     0188                     	;# 
   181     0189                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     0000                     	;# 
   185     0001                     	;# 
   186     0002                     	;# 
   187     0003                     	;# 
   188     0004                     	;# 
   189     0005                     	;# 
   190     0006                     	;# 
   191     0007                     	;# 
   192     0008                     	;# 
   193     0009                     	;# 
   194     000A                     	;# 
   195     000B                     	;# 
   196     000C                     	;# 
   197     000D                     	;# 
   198     000E                     	;# 
   199     000E                     	;# 
   200     000F                     	;# 
   201     0010                     	;# 
   202     0011                     	;# 
   203     0012                     	;# 
   204     0013                     	;# 
   205     0014                     	;# 
   206     0015                     	;# 
   207     0015                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001B                     	;# 
   215     001C                     	;# 
   216     001D                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     0081                     	;# 
   220     0085                     	;# 
   221     0086                     	;# 
   222     0087                     	;# 
   223     0088                     	;# 
   224     0089                     	;# 
   225     008C                     	;# 
   226     008D                     	;# 
   227     008E                     	;# 
   228     008F                     	;# 
   229     0090                     	;# 
   230     0091                     	;# 
   231     0092                     	;# 
   232     0093                     	;# 
   233     0093                     	;# 
   234     0093                     	;# 
   235     0094                     	;# 
   236     0095                     	;# 
   237     0096                     	;# 
   238     0097                     	;# 
   239     0098                     	;# 
   240     0099                     	;# 
   241     009A                     	;# 
   242     009B                     	;# 
   243     009C                     	;# 
   244     009D                     	;# 
   245     009E                     	;# 
   246     009F                     	;# 
   247     0105                     	;# 
   248     0107                     	;# 
   249     0108                     	;# 
   250     0109                     	;# 
   251     010C                     	;# 
   252     010C                     	;# 
   253     010D                     	;# 
   254     010E                     	;# 
   255     010F                     	;# 
   256     0185                     	;# 
   257     0187                     	;# 
   258     0188                     	;# 
   259     0189                     	;# 
   260     018C                     	;# 
   261     018D                     	;# 
   262     0000                     	;# 
   263     0001                     	;# 
   264     0002                     	;# 
   265     0003                     	;# 
   266     0004                     	;# 
   267     0005                     	;# 
   268     0006                     	;# 
   269     0007                     	;# 
   270     0008                     	;# 
   271     0009                     	;# 
   272     000A                     	;# 
   273     000B                     	;# 
   274     000C                     	;# 
   275     000D                     	;# 
   276     000E                     	;# 
   277     000E                     	;# 
   278     000F                     	;# 
   279     0010                     	;# 
   280     0011                     	;# 
   281     0012                     	;# 
   282     0013                     	;# 
   283     0014                     	;# 
   284     0015                     	;# 
   285     0015                     	;# 
   286     0016                     	;# 
   287     0017                     	;# 
   288     0018                     	;# 
   289     0019                     	;# 
   290     001A                     	;# 
   291     001B                     	;# 
   292     001B                     	;# 
   293     001C                     	;# 
   294     001D                     	;# 
   295     001E                     	;# 
   296     001F                     	;# 
   297     0081                     	;# 
   298     0085                     	;# 
   299     0086                     	;# 
   300     0087                     	;# 
   301     0088                     	;# 
   302     0089                     	;# 
   303     008C                     	;# 
   304     008D                     	;# 
   305     008E                     	;# 
   306     008F                     	;# 
   307     0090                     	;# 
   308     0091                     	;# 
   309     0092                     	;# 
   310     0093                     	;# 
   311     0093                     	;# 
   312     0093                     	;# 
   313     0094                     	;# 
   314     0095                     	;# 
   315     0096                     	;# 
   316     0097                     	;# 
   317     0098                     	;# 
   318     0099                     	;# 
   319     009A                     	;# 
   320     009B                     	;# 
   321     009C                     	;# 
   322     009D                     	;# 
   323     009E                     	;# 
   324     009F                     	;# 
   325     0105                     	;# 
   326     0107                     	;# 
   327     0108                     	;# 
   328     0109                     	;# 
   329     010C                     	;# 
   330     010C                     	;# 
   331     010D                     	;# 
   332     010E                     	;# 
   333     010F                     	;# 
   334     0185                     	;# 
   335     0187                     	;# 
   336     0188                     	;# 
   337     0189                     	;# 
   338     018C                     	;# 
   339     018D                     	;# 
   340     0000                     	;# 
   341     0001                     	;# 
   342     0002                     	;# 
   343     0003                     	;# 
   344     0004                     	;# 
   345     0005                     	;# 
   346     0006                     	;# 
   347     0007                     	;# 
   348     0008                     	;# 
   349     0009                     	;# 
   350     000A                     	;# 
   351     000B                     	;# 
   352     000C                     	;# 
   353     000D                     	;# 
   354     000E                     	;# 
   355     000E                     	;# 
   356     000F                     	;# 
   357     0010                     	;# 
   358     0011                     	;# 
   359     0012                     	;# 
   360     0013                     	;# 
   361     0014                     	;# 
   362     0015                     	;# 
   363     0015                     	;# 
   364     0016                     	;# 
   365     0017                     	;# 
   366     0018                     	;# 
   367     0019                     	;# 
   368     001A                     	;# 
   369     001B                     	;# 
   370     001B                     	;# 
   371     001C                     	;# 
   372     001D                     	;# 
   373     001E                     	;# 
   374     001F                     	;# 
   375     0081                     	;# 
   376     0085                     	;# 
   377     0086                     	;# 
   378     0087                     	;# 
   379     0088                     	;# 
   380     0089                     	;# 
   381     008C                     	;# 
   382     008D                     	;# 
   383     008E                     	;# 
   384     008F                     	;# 
   385     0090                     	;# 
   386     0091                     	;# 
   387     0092                     	;# 
   388     0093                     	;# 
   389     0093                     	;# 
   390     0093                     	;# 
   391     0094                     	;# 
   392     0095                     	;# 
   393     0096                     	;# 
   394     0097                     	;# 
   395     0098                     	;# 
   396     0099                     	;# 
   397     009A                     	;# 
   398     009B                     	;# 
   399     009C                     	;# 
   400     009D                     	;# 
   401     009E                     	;# 
   402     009F                     	;# 
   403     0105                     	;# 
   404     0107                     	;# 
   405     0108                     	;# 
   406     0109                     	;# 
   407     010C                     	;# 
   408     010C                     	;# 
   409     010D                     	;# 
   410     010E                     	;# 
   411     010F                     	;# 
   412     0185                     	;# 
   413     0187                     	;# 
   414     0188                     	;# 
   415     0189                     	;# 
   416     018C                     	;# 
   417     018D                     	;# 
   418                           
   419                           	psect	strings
   420     1000                     __pstrings:
   421     1000                     stringtab:
   422     1000                     __stringtab:
   423                           
   424                           ;	String table - string pointers are 1 byte each
   425     1000  1BFF               	btfsc	btemp+1,7
   426     1001  280A               	ljmp	stringcode
   427     1002  1383               	bcf	3,7
   428     1003  187F               	btfsc	btemp+1,0
   429     1004  1783               	bsf	3,7
   430     1005  0800               	movf	0,w
   431     1006  0A84               	incf	4,f
   432     1007  1903               	skipnz
   433     1008  0AFF               	incf	btemp+1,f
   434     1009  0008               	return
   435     100A                     stringcode:
   436     100A                     stringdir:
   437     100A  3010               	movlw	high stringdir
   438     100B  008A               	movwf	10
   439     100C  0804               	movf	4,w
   440     100D  0A84               	incf	4,f
   441     100E  0782               	addwf	2,f
   442     100F                     __stringbase:
   443     100F  3400               	retlw	0
   444     1010                     __end_of__stringtab:
   445     1010                     _dpowers:
   446     1010  3401               	retlw	1
   447     1011  3400               	retlw	0
   448     1012  340A               	retlw	10
   449     1013  3400               	retlw	0
   450     1014  3464               	retlw	100
   451     1015  3400               	retlw	0
   452     1016  34E8               	retlw	232
   453     1017  3403               	retlw	3
   454     1018  3410               	retlw	16
   455     1019  3427               	retlw	39
   456     101A                     __end_of_dpowers:
   457     0013                     _SSPBUF	set	19
   458     0014                     _SSPCON	set	20
   459     0008                     _PORTDbits	set	8
   460     0006                     _PORTBbits	set	6
   461     0010                     _T1CONbits	set	16
   462     000B                     _INTCONbits	set	11
   463     0008                     _PORTD	set	8
   464     0007                     _PORTC	set	7
   465     0006                     _PORTB	set	6
   466     0005                     _PORTA	set	5
   467     000E                     _TMR1L	set	14
   468     000F                     _TMR1H	set	15
   469     000C                     _PIR1bits	set	12
   470     0091                     _SSPCON2bits	set	145
   471     0093                     _SSPADD	set	147
   472     0091                     _SSPCON2	set	145
   473     0094                     _SSPSTAT	set	148
   474     0087                     _TRISCbits	set	135
   475     008C                     _PIE1bits	set	140
   476     008F                     _OSCCONbits	set	143
   477     0088                     _TRISD	set	136
   478     0086                     _TRISB	set	134
   479     0189                     _ANSELH	set	393
   480     0188                     _ANSEL	set	392
   481     101A                     STR_3:
   482     101A  3425               	retlw	37	;'%'
   483     101B  3430               	retlw	48	;'0'
   484     101C  3432               	retlw	50	;'2'
   485     101D  3475               	retlw	117	;'u'
   486     101E  342F               	retlw	47	;'/'
   487     101F  3425               	retlw	37	;'%'
   488     1020  3430               	retlw	48	;'0'
   489     1021  3432               	retlw	50	;'2'
   490     1022  3475               	retlw	117	;'u'
   491     1023  342F               	retlw	47	;'/'
   492     1024  3432               	retlw	50	;'2'
   493     1025  3430               	retlw	48	;'0'
   494     1026  3425               	retlw	37	;'%'
   495     1027  3430               	retlw	48	;'0'
   496     1028  3432               	retlw	50	;'2'
   497     1029  3475               	retlw	117	;'u'
   498     102A  3400               	retlw	0
   499     102B                     STR_2:
   500     102B  3425               	retlw	37	;'%'
   501     102C  3430               	retlw	48	;'0'
   502     102D  3432               	retlw	50	;'2'
   503     102E  3475               	retlw	117	;'u'
   504     102F  343A               	retlw	58	;':'
   505     1030  3425               	retlw	37	;'%'
   506     1031  3430               	retlw	48	;'0'
   507     1032  3432               	retlw	50	;'2'
   508     1033  3475               	retlw	117	;'u'
   509     1034  343A               	retlw	58	;':'
   510     1035  3425               	retlw	37	;'%'
   511     1036  3430               	retlw	48	;'0'
   512     1037  3432               	retlw	50	;'2'
   513     1038  3475               	retlw	117	;'u'
   514     1039  3400               	retlw	0
   515     103A                     STR_1:
   516     103A  3454               	retlw	84	;'T'
   517     103B  343A               	retlw	58	;':'
   518     103C  3400               	retlw	0
   519     1026                     
   520                           	psect	cinit
   521     000F                     start_initialization:	
   522                           ; #config settings
   523                           
   524     000F                     __initialization:
   525                           
   526                           ; Clear objects allocated to COMMON
   527     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   528     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   529     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   530     0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   531     0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   532     0014  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   533                           
   534                           ; Clear objects allocated to BANK1
   535     0015  1383               	bcf	3,7	;select IRP bank0
   536     0016  30D2               	movlw	low __pbssBANK1
   537     0017  0084               	movwf	4
   538     0018  30F0               	movlw	low (__pbssBANK1+30)
   539     0019  160A  158A  2771  120A  118A  	fcall	clear_ram0
   540                           
   541                           ; Clear objects allocated to BANK3
   542     001E  1783               	bsf	3,7	;select IRP bank2
   543     001F  3090               	movlw	low __pbssBANK3
   544     0020  0084               	movwf	4
   545     0021  30C2               	movlw	low (__pbssBANK3+50)
   546     0022  160A  158A  2771  120A  118A  	fcall	clear_ram0
   547                           
   548                           ; Clear objects allocated to BANK2
   549     0027  3010               	movlw	low __pbssBANK2
   550     0028  0084               	movwf	4
   551     0029  3040               	movlw	low (__pbssBANK2+48)
   552     002A  160A  158A  2771  120A  118A  	fcall	clear_ram0
   553     002F                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556     002F                     __end_of__initialization:
   557     002F  0183               	clrf	3
   558     0030  160A  118A  2EC2   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssCOMMON
   561     0078                     __pbssCOMMON:
   562     0078                     _distancia:
   563     0078                     	ds	1
   564     0079                     _cent2:
   565     0079                     	ds	1
   566     007A                     _deci2:
   567     007A                     	ds	1
   568     007B                     _uni2:
   569     007B                     	ds	1
   570     007C                     _dec2:
   571     007C                     	ds	1
   572     007D                     _estado:
   573     007D                     	ds	1
   574                           
   575                           	psect	bssBANK1
   576     00D2                     __pbssBANK1:
   577     00D2                     _hum2:
   578     00D2                     	ds	4
   579     00D6                     _hum1:
   580     00D6                     	ds	4
   581     00DA                     _tmp2:
   582     00DA                     	ds	4
   583     00DE                     _tmp1:
   584     00DE                     	ds	4
   585     00E2                     _temporal:
   586     00E2                     	ds	4
   587     00E6                     _cont:
   588     00E6                     	ds	1
   589     00E7                     _contb:
   590     00E7                     	ds	1
   591     00E8                     _contg:
   592     00E8                     	ds	1
   593     00E9                     _contr:
   594     00E9                     	ds	1
   595     00EA                     _ano:
   596     00EA                     	ds	1
   597     00EB                     _mes:
   598     00EB                     	ds	1
   599     00EC                     _dia:
   600     00EC                     	ds	1
   601     00ED                     _horas:
   602     00ED                     	ds	1
   603     00EE                     _minutos:
   604     00EE                     	ds	1
   605     00EF                     _segundos:
   606     00EF                     	ds	1
   607                           
   608                           	psect	bssBANK3
   609     0190                     __pbssBANK3:
   610     0190                     _humedad:
   611     0190                     	ds	4
   612     0194                     _h:
   613     0194                     	ds	4
   614     0198                     _t:
   615     0198                     	ds	4
   616     019C                     _tmp3:
   617     019C                     	ds	4
   618     01A0                     _th:
   619     01A0                     	ds	4
   620     01A4                     _buffer:
   621     01A4                     	ds	30
   622                           
   623                           	psect	bssBANK2
   624     0110                     __pbssBANK2:
   625     0110                     _buffer2:
   626     0110                     	ds	48
   627                           
   628                           	psect	clrtext
   629     1F71                     clear_ram0:	
   630                           ;	Called with FSR containing the base address, and
   631                           ;	W with the last address+1
   632                           
   633     1F71  0064               	clrwdt	;clear the watchdog before getting into this loop
   634     1F72                     clrloop0:
   635     1F72  0180               	clrf	0	;clear RAM location pointed to by FSR
   636     1F73  0A84               	incf	4,f	;increment pointer
   637     1F74  0604               	xorwf	4,w	;XOR with final address
   638     1F75  1903               	btfsc	3,2	;have we reached the end yet?
   639     1F76  3400               	retlw	0	;all done for this memory range, return
   640     1F77  0604               	xorwf	4,w	;XOR again to restore value
   641     1F78  2F72               	goto	clrloop0	;do the next byte
   642                           
   643                           	psect	cstackBANK1
   644     00A0                     __pcstackBANK1:
   645     00A0                     ?_floattostr:
   646     00A0                     floattostr@numero_:	
   647                           ; 1 bytes @ 0x0
   648                           
   649                           
   650                           ; 4 bytes @ 0x0
   651     00A0                     	ds	4
   652     00A4                     floattostr@cadena_:
   653                           
   654                           ; 1 bytes @ 0x4
   655     00A4                     	ds	1
   656     00A5                     floattostr@decimales_:
   657                           
   658                           ; 1 bytes @ 0x5
   659     00A5                     	ds	1
   660     00A6                     ??_floattostr:
   661                           
   662                           ; 1 bytes @ 0x6
   663     00A6                     	ds	1
   664     00A7                     floattostr@tempo_int:
   665                           
   666                           ; 2 bytes @ 0x7
   667     00A7                     	ds	2
   668     00A9                     floattostr@tempo_float:
   669                           
   670                           ; 4 bytes @ 0x9
   671     00A9                     	ds	4
   672     00AD                     floattostr@largo_n:
   673                           
   674                           ; 2 bytes @ 0xD
   675     00AD                     	ds	2
   676     00AF                     floattostr@cont_for:
   677                           
   678                           ; 2 bytes @ 0xF
   679     00AF                     	ds	2
   680     00B1                     floattostr@largo_entera:
   681                           
   682                           ; 2 bytes @ 0x11
   683     00B1                     	ds	2
   684     00B3                     ??_AHT10_Read:
   685                           
   686                           ; 1 bytes @ 0x13
   687     00B3                     	ds	14
   688     00C1                     AHT10_Read@data:
   689                           
   690                           ; 7 bytes @ 0x21
   691     00C1                     	ds	7
   692     00C8                     AHT10_Read@temperatura:
   693                           
   694                           ; 4 bytes @ 0x28
   695     00C8                     	ds	4
   696     00CC                     ??_main:
   697                           
   698                           ; 1 bytes @ 0x2C
   699     00CC                     	ds	6
   700                           
   701                           	psect	cstackCOMMON
   702     0070                     __pcstackCOMMON:
   703     0070                     ?_isdigit:
   704     0070                     ?_setup:	
   705                           ; 1 bit 
   706                           
   707     0070                     ?_Lcd_Init:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0070                     ?_Lcd_Clear:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     0070                     ?_AHT10_Soft_Reset:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ?_AHT10_Init:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ?_Set_sec:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ?_Set_min:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0070                     ?_Set_hour:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     0070                     ?_Set_day:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_Set_month:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_Set_year:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_AHT10_Read:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_Slave1_Total:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_Lcd_Shift_Right:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?_I2C_Init_Master:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ?_I2C_Start:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?_I2C_Restart:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ?_I2C_Read:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?_I2C_Nack:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ?_I2C_Stop:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_Bcd_to_Dec:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?_Dec_to_Bcd:	
   768                           ; 1 bytes @ 0x0
   769                           
   770     0070                     ?_I2C_Ack:	
   771                           ; 1 bytes @ 0x0
   772                           
   773     0070                     ?_main:	
   774                           ; 1 bytes @ 0x0
   775                           
   776     0070                     ?_isr:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0070                     ?_Read:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0070                     ?_Lcd_Port:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0070                     ?_Lcd_Cmd:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0070                     ?_Lcd_Write_Char:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0070                     ?i1_Lcd_Port:	
   792                           ; 1 bytes @ 0x0
   793                           
   794     0070                     ??i1_Lcd_Port:	
   795                           ; 1 bytes @ 0x0
   796                           
   797     0070                     ?i1_Lcd_Cmd:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_I2C_Write:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     i1Lcd_Port@a:	
   804                           ; 2 bytes @ 0x0
   805                           
   806                           
   807                           ; 1 bytes @ 0x0
   808     0070                     	ds	1
   809     0071                     ??i1_Lcd_Cmd:
   810                           
   811                           ; 1 bytes @ 0x1
   812     0071                     	ds	2
   813     0073                     i1Lcd_Cmd@a:
   814                           
   815                           ; 1 bytes @ 0x3
   816     0073                     	ds	1
   817     0074                     ??_Lcd_Shift_Right:
   818     0074                     ??_isr:	
   819                           ; 1 bytes @ 0x4
   820                           
   821                           
   822                           ; 1 bytes @ 0x4
   823     0074                     	ds	3
   824     0077                     isr@contador:
   825                           
   826                           ; 1 bytes @ 0x7
   827     0077                     	ds	1
   828                           
   829                           	psect	cstackBANK0
   830     0020                     __pcstackBANK0:
   831     0020                     ?___flge:
   832     0020                     ??_I2C_Init_Master:	
   833                           ; 1 bit 
   834                           
   835     0020                     ??_I2C_Start:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0020                     ??_I2C_Write:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0020                     ??_I2C_Restart:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0020                     ??_I2C_Read:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0020                     ??_I2C_Nack:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0020                     ??_I2C_Stop:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0020                     ??_Dec_to_Bcd:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0020                     ??_I2C_Ack:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0020                     ??_isdigit:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0020                     ??_Lcd_Port:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0020                     ?___bmul:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0020                     ?__Umul8_16:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0020                     ?___wmul:	
   872                           ; 2 bytes @ 0x0
   873                           
   874     0020                     ?___lwdiv:	
   875                           ; 2 bytes @ 0x0
   876                           
   877     0020                     ?___flneg:	
   878                           ; 2 bytes @ 0x0
   879                           
   880     0020                     ?___fltol:	
   881                           ; 4 bytes @ 0x0
   882                           
   883     0020                     ?___fldiv:	
   884                           ; 4 bytes @ 0x0
   885                           
   886     0020                     ?___xxtofl:	
   887                           ; 4 bytes @ 0x0
   888                           
   889     0020                     Dec_to_Bcd@dec_number:	
   890                           ; 4 bytes @ 0x0
   891                           
   892     0020                     Lcd_Port@a:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0020                     I2C_Init_Master@sp_i2c:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0020                     I2C_Write@data:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0020                     ___bmul@multiplicand:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0020                     __Umul8_16@multiplicand:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0020                     _isdigit$1081:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0020                     ___wmul@multiplier:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0020                     ___lwdiv@divisor:	
   914                           ; 2 bytes @ 0x0
   915                           
   916     0020                     ___flge@ff1:	
   917                           ; 2 bytes @ 0x0
   918                           
   919     0020                     ___flneg@f1:	
   920                           ; 4 bytes @ 0x0
   921                           
   922     0020                     ___fltol@f1:	
   923                           ; 4 bytes @ 0x0
   924                           
   925     0020                     ___fldiv@a:	
   926                           ; 4 bytes @ 0x0
   927                           
   928     0020                     ___xxtofl@val:	
   929                           ; 4 bytes @ 0x0
   930                           
   931                           
   932                           ; 4 bytes @ 0x0
   933     0020                     	ds	1
   934     0021                     ??_setup:
   935     0021                     ??_AHT10_Soft_Reset:	
   936                           ; 1 bytes @ 0x1
   937                           
   938     0021                     ??_AHT10_Init:	
   939                           ; 1 bytes @ 0x1
   940                           
   941     0021                     ??_Slave1_Total:	
   942                           ; 1 bytes @ 0x1
   943                           
   944     0021                     ??_Read:	
   945                           ; 1 bytes @ 0x1
   946                           
   947     0021                     ??_Lcd_Cmd:	
   948                           ; 1 bytes @ 0x1
   949                           
   950     0021                     ??_Lcd_Write_Char:	
   951                           ; 1 bytes @ 0x1
   952                           
   953     0021                     ??___bmul:	
   954                           ; 1 bytes @ 0x1
   955                           
   956     0021                     Dec_to_Bcd@bcd_number:	
   957                           ; 1 bytes @ 0x1
   958                           
   959     0021                     isdigit@c:	
   960                           ; 1 bytes @ 0x1
   961                           
   962                           
   963                           ; 1 bytes @ 0x1
   964     0021                     	ds	1
   965     0022                     ??_Set_sec:
   966     0022                     ??_Set_min:	
   967                           ; 1 bytes @ 0x2
   968                           
   969     0022                     ??_Set_hour:	
   970                           ; 1 bytes @ 0x2
   971                           
   972     0022                     ??_Set_day:	
   973                           ; 1 bytes @ 0x2
   974                           
   975     0022                     ??_Set_month:	
   976                           ; 1 bytes @ 0x2
   977                           
   978     0022                     ??_Set_year:	
   979                           ; 1 bytes @ 0x2
   980                           
   981     0022                     ??__Umul8_16:	
   982                           ; 1 bytes @ 0x2
   983                           
   984     0022                     Read@address:	
   985                           ; 1 bytes @ 0x2
   986                           
   987     0022                     Set_sec@sec:	
   988                           ; 1 bytes @ 0x2
   989                           
   990     0022                     Set_min@min:	
   991                           ; 1 bytes @ 0x2
   992                           
   993     0022                     Set_hour@hour:	
   994                           ; 1 bytes @ 0x2
   995                           
   996     0022                     Set_day@day:	
   997                           ; 1 bytes @ 0x2
   998                           
   999     0022                     Set_month@month:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002     0022                     Set_year@year:	
  1003                           ; 1 bytes @ 0x2
  1004                           
  1005     0022                     Lcd_Write_Char@temp:	
  1006                           ; 1 bytes @ 0x2
  1007                           
  1008     0022                     ___bmul@product:	
  1009                           ; 1 bytes @ 0x2
  1010                           
  1011     0022                     ___wmul@multiplicand:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014     0022                     ___lwdiv@dividend:	
  1015                           ; 2 bytes @ 0x2
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x2
  1019     0022                     	ds	1
  1020     0023                     Read@dato:
  1021     0023                     AHT10_Init@status:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024     0023                     Lcd_Cmd@a:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027     0023                     Lcd_Write_Char@y:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030     0023                     ___bmul@multiplier:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x3
  1035     0023                     	ds	1
  1036     0024                     ??_Lcd_Init:
  1037     0024                     ??_Lcd_Clear:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040     0024                     ?_Lcd_Set_Cursor:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043     0024                     ??_Bcd_to_Dec:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046     0024                     ??___wmul:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049     0024                     ??___flneg:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052     0024                     ??___fltol:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055     0024                     ??___lwdiv:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058     0024                     ??___xxtofl:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061     0024                     Lcd_Set_Cursor@b:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064     0024                     Lcd_Write_Char@a:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067     0024                     ___wmul@product:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070     0024                     __Umul8_16@product:	
  1071                           ; 2 bytes @ 0x4
  1072                           
  1073     0024                     ___flge@ff2:	
  1074                           ; 2 bytes @ 0x4
  1075                           
  1076     0024                     ___fldiv@b:	
  1077                           ; 4 bytes @ 0x4
  1078                           
  1079                           
  1080                           ; 4 bytes @ 0x4
  1081     0024                     	ds	1
  1082     0025                     ??_Lcd_Set_Cursor:
  1083     0025                     ?_Lcd_Write_String:	
  1084                           ; 1 bytes @ 0x5
  1085                           
  1086     0025                     Lcd_Write_String@a:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089     0025                     ___lwdiv@quotient:	
  1090                           ; 2 bytes @ 0x5
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x5
  1094     0025                     	ds	1
  1095     0026                     Bcd_to_Dec@dec:
  1096     0026                     Lcd_Set_Cursor@a:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099     0026                     __Umul8_16@word_mpld:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x6
  1104     0026                     	ds	1
  1105     0027                     ??_Lcd_Write_String:
  1106     0027                     Bcd_to_Dec@bcd:	
  1107                           ; 1 bytes @ 0x7
  1108                           
  1109     0027                     Lcd_Set_Cursor@z:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112     0027                     ___lwdiv@counter:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x7
  1117     0027                     	ds	1
  1118     0028                     ?_Read_Time:
  1119     0028                     ?_Read_Fecha:	
  1120                           ; 1 bytes @ 0x8
  1121                           
  1122     0028                     ??___flge:	
  1123                           ; 1 bytes @ 0x8
  1124                           
  1125     0028                     ??___fldiv:	
  1126                           ; 1 bytes @ 0x8
  1127                           
  1128     0028                     ?___lwmod:	
  1129                           ; 1 bytes @ 0x8
  1130                           
  1131     0028                     Read_Time@m:	
  1132                           ; 2 bytes @ 0x8
  1133                           
  1134     0028                     Read_Fecha@mo:	
  1135                           ; 1 bytes @ 0x8
  1136                           
  1137     0028                     Lcd_Set_Cursor@y:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140     0028                     ___fltol@sign1:	
  1141                           ; 1 bytes @ 0x8
  1142                           
  1143     0028                     __Umul8_16@multiplier:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146     0028                     ___xxtofl@sign:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149     0028                     ___lwmod@divisor:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152                           
  1153                           ; 2 bytes @ 0x8
  1154     0028                     	ds	1
  1155     0029                     Read_Time@h:
  1156     0029                     Read_Fecha@y:	
  1157                           ; 1 bytes @ 0x9
  1158                           
  1159     0029                     Lcd_Set_Cursor@temp:	
  1160                           ; 1 bytes @ 0x9
  1161                           
  1162     0029                     ___fltol@exp1:	
  1163                           ; 1 bytes @ 0x9
  1164                           
  1165     0029                     ___xxtofl@exp:	
  1166                           ; 1 bytes @ 0x9
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x9
  1170     0029                     	ds	1
  1171     002A                     ??_Read_Time:
  1172     002A                     ??_Read_Fecha:	
  1173                           ; 1 bytes @ 0xA
  1174                           
  1175     002A                     Read_Time@s:	
  1176                           ; 1 bytes @ 0xA
  1177                           
  1178     002A                     Read_Fecha@d:	
  1179                           ; 1 bytes @ 0xA
  1180                           
  1181     002A                     Lcd_Write_String@i:	
  1182                           ; 1 bytes @ 0xA
  1183                           
  1184     002A                     ___lwmod@dividend:	
  1185                           ; 2 bytes @ 0xA
  1186                           
  1187     002A                     ___xxtofl@arg:	
  1188                           ; 2 bytes @ 0xA
  1189                           
  1190                           
  1191                           ; 4 bytes @ 0xA
  1192     002A                     	ds	2
  1193     002C                     ??___lwmod:
  1194                           
  1195                           ; 1 bytes @ 0xC
  1196     002C                     	ds	1
  1197     002D                     ___lwmod@counter:
  1198     002D                     ___fldiv@rem:	
  1199                           ; 1 bytes @ 0xD
  1200                           
  1201                           
  1202                           ; 4 bytes @ 0xD
  1203     002D                     	ds	1
  1204     002E                     ?_sprintf:
  1205     002E                     sprintf@f:	
  1206                           ; 2 bytes @ 0xE
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0xE
  1210     002E                     	ds	3
  1211     0031                     ___fldiv@sign:
  1212                           
  1213                           ; 1 bytes @ 0x11
  1214     0031                     	ds	1
  1215     0032                     ___fldiv@new_exp:
  1216                           
  1217                           ; 2 bytes @ 0x12
  1218     0032                     	ds	2
  1219     0034                     ___fldiv@grs:
  1220                           
  1221                           ; 4 bytes @ 0x14
  1222     0034                     	ds	1
  1223     0035                     ??_sprintf:
  1224                           
  1225                           ; 1 bytes @ 0x15
  1226     0035                     	ds	3
  1227     0038                     sprintf@ap:
  1228     0038                     ___fldiv@bexp:	
  1229                           ; 1 bytes @ 0x18
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x18
  1233     0038                     	ds	1
  1234     0039                     sprintf@flag:
  1235     0039                     ___fldiv@aexp:	
  1236                           ; 1 bytes @ 0x19
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x19
  1240     0039                     	ds	1
  1241     003A                     ?___flmul:
  1242     003A                     sprintf@val:	
  1243                           ; 4 bytes @ 0x1A
  1244                           
  1245     003A                     ___flmul@b:	
  1246                           ; 2 bytes @ 0x1A
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x1A
  1250     003A                     	ds	2
  1251     003C                     sprintf@prec:
  1252                           
  1253                           ; 1 bytes @ 0x1C
  1254     003C                     	ds	1
  1255     003D                     sprintf@sp:
  1256                           
  1257                           ; 1 bytes @ 0x1D
  1258     003D                     	ds	1
  1259     003E                     sprintf@width:
  1260     003E                     ___flmul@a:	
  1261                           ; 2 bytes @ 0x1E
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x1E
  1265     003E                     	ds	2
  1266     0040                     sprintf@c:
  1267                           
  1268                           ; 1 bytes @ 0x20
  1269     0040                     	ds	2
  1270     0042                     ??___flmul:
  1271                           
  1272                           ; 1 bytes @ 0x22
  1273     0042                     	ds	5
  1274     0047                     ___flmul@sign:
  1275                           
  1276                           ; 1 bytes @ 0x27
  1277     0047                     	ds	1
  1278     0048                     ___flmul@grs:
  1279                           
  1280                           ; 4 bytes @ 0x28
  1281     0048                     	ds	4
  1282     004C                     ___flmul@aexp:
  1283                           
  1284                           ; 1 bytes @ 0x2C
  1285     004C                     	ds	1
  1286     004D                     ___flmul@bexp:
  1287                           
  1288                           ; 1 bytes @ 0x2D
  1289     004D                     	ds	1
  1290     004E                     ___flmul@prod:
  1291                           
  1292                           ; 4 bytes @ 0x2E
  1293     004E                     	ds	4
  1294     0052                     ___flmul@temp:
  1295                           
  1296                           ; 2 bytes @ 0x32
  1297     0052                     	ds	2
  1298     0054                     ?___fladd:
  1299     0054                     ___fladd@b:	
  1300                           ; 4 bytes @ 0x34
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x34
  1304     0054                     	ds	4
  1305     0058                     ___fladd@a:
  1306                           
  1307                           ; 4 bytes @ 0x38
  1308     0058                     	ds	4
  1309     005C                     ??___fladd:
  1310                           
  1311                           ; 1 bytes @ 0x3C
  1312     005C                     	ds	8
  1313     0064                     ___fladd@signs:
  1314                           
  1315                           ; 1 bytes @ 0x44
  1316     0064                     	ds	1
  1317     0065                     ___fladd@aexp:
  1318                           
  1319                           ; 1 bytes @ 0x45
  1320     0065                     	ds	1
  1321     0066                     ___fladd@bexp:
  1322                           
  1323                           ; 1 bytes @ 0x46
  1324     0066                     	ds	1
  1325     0067                     ___fladd@grs:
  1326                           
  1327                           ; 1 bytes @ 0x47
  1328     0067                     	ds	1
  1329     0068                     ?___flsub:
  1330     0068                     ___flsub@a:	
  1331                           ; 4 bytes @ 0x48
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x48
  1335     0068                     	ds	4
  1336     006C                     ___flsub@b:
  1337                           
  1338                           ; 4 bytes @ 0x4C
  1339     006C                     	ds	4
  1340     0070                     ??___flsub:
  1341                           
  1342                           	psect	maintext
  1343     16C2                     __pmaintext:	
  1344                           ; 1 bytes @ 0x50
  1345 ;;
  1346 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1347 ;;
  1348 ;; *************** function _main *****************
  1349 ;; Defined at:
  1350 ;;		line 70 in file "main_master.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1359 ;; Tracked objects:
  1360 ;;		On entry : B00/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       6       0       0
  1367 ;;      Totals:         0       0       6       0       0
  1368 ;;Total ram usage:        6 bytes
  1369 ;; Hardware stack levels required when called: 8
  1370 ;; This function calls:
  1371 ;;		_AHT10_Init
  1372 ;;		_AHT10_Read
  1373 ;;		_AHT10_Soft_Reset
  1374 ;;		_Lcd_Clear
  1375 ;;		_Lcd_Init
  1376 ;;		_Lcd_Set_Cursor
  1377 ;;		_Lcd_Write_String
  1378 ;;		_Read_Fecha
  1379 ;;		_Read_Time
  1380 ;;		_Set_day
  1381 ;;		_Set_hour
  1382 ;;		_Set_min
  1383 ;;		_Set_month
  1384 ;;		_Set_sec
  1385 ;;		_Set_year
  1386 ;;		_Slave1_Total
  1387 ;;		_setup
  1388 ;;		_sprintf
  1389 ;; This function is called by:
  1390 ;;		Startup code after reset
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394     16C2                     _main:	
  1395                           ;psect for function _main
  1396                           
  1397     16C2                     l3762:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1400                           
  1401                           
  1402                           ;main_master.c: 71:     setup();
  1403     16C2  160A  118A  2289  160A  118A  	fcall	_setup
  1404                           
  1405                           ;main_master.c: 72:     Lcd_Init();
  1406     16C7  160A  118A  24FF  160A  118A  	fcall	_Lcd_Init
  1407                           
  1408                           ;main_master.c: 73:     Lcd_Clear();
  1409     16CC  160A  158A  27C8  160A  118A  	fcall	_Lcd_Clear
  1410                           
  1411                           ;main_master.c: 74:     Lcd_Set_Cursor(1,10);
  1412     16D1  300A               	movlw	10
  1413     16D2  1283               	bcf	3,5	;RP0=0, select bank0
  1414     16D3  1303               	bcf	3,6	;RP1=0, select bank0
  1415     16D4  00A4               	movwf	Lcd_Set_Cursor@b
  1416     16D5  3001               	movlw	1
  1417     16D6  160A  118A  24B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1418     16DB                     l3764:
  1419                           
  1420                           ;main_master.c: 75:     Lcd_Write_String("T:");
  1421     16DB  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1422     16DC  1283               	bcf	3,5	;RP0=0, select bank0
  1423     16DD  1303               	bcf	3,6	;RP1=0, select bank0
  1424     16DE  00A5               	movwf	Lcd_Write_String@a
  1425     16DF  3080               	movlw	128
  1426     16E0  00A6               	movwf	Lcd_Write_String@a+1
  1427     16E1  160A  118A  2427  160A  118A  	fcall	_Lcd_Write_String
  1428     16E6                     l3766:
  1429                           
  1430                           ;main_master.c: 76:     AHT10_Soft_Reset();
  1431     16E6  160A  118A  22DD  160A  118A  	fcall	_AHT10_Soft_Reset
  1432     16EB                     l3768:
  1433                           
  1434                           ;main_master.c: 77:     AHT10_Init();
  1435     16EB  120A  158A  2013  160A  118A  	fcall	_AHT10_Init
  1436     16F0                     l3770:
  1437                           
  1438                           ;main_master.c: 78:     Set_sec(0);
  1439     16F0  3000               	movlw	0
  1440     16F1  160A  118A  21EB  160A  118A  	fcall	_Set_sec
  1441     16F6                     l3772:
  1442                           
  1443                           ;main_master.c: 79:     Set_min(0);
  1444     16F6  3000               	movlw	0
  1445     16F7  160A  118A  219D  160A  118A  	fcall	_Set_min
  1446     16FC                     l3774:
  1447                           
  1448                           ;main_master.c: 80:     Set_hour(0);
  1449     16FC  3000               	movlw	0
  1450     16FD  160A  118A  2176  160A  118A  	fcall	_Set_hour
  1451     1702                     l3776:
  1452                           
  1453                           ;main_master.c: 81:     Set_day(20);
  1454     1702  3014               	movlw	20
  1455     1703  160A  118A  214F  160A  118A  	fcall	_Set_day
  1456     1708                     l3778:
  1457                           
  1458                           ;main_master.c: 82:     Set_month(2);
  1459     1708  3002               	movlw	2
  1460     1709  160A  118A  21C4  160A  118A  	fcall	_Set_month
  1461     170E                     l3780:
  1462                           
  1463                           ;main_master.c: 83:     Set_year(23);
  1464     170E  3017               	movlw	23
  1465     170F  160A  118A  2212  160A  118A  	fcall	_Set_year
  1466     1714                     l3782:
  1467                           
  1468                           ;main_master.c: 85:         Read_Time(&segundos, &minutos, &horas);
  1469     1714  30EE               	movlw	(low (_minutos| 0))& (0+255)
  1470     1715  1283               	bcf	3,5	;RP0=0, select bank0
  1471     1716  1303               	bcf	3,6	;RP1=0, select bank0
  1472     1717  00A8               	movwf	Read_Time@m
  1473     1718  30ED               	movlw	(low (_horas| 0))& (0+255)
  1474     1719  00A9               	movwf	Read_Time@h
  1475     171A  30EF               	movlw	(low (_segundos| 0))& (0+255)
  1476     171B  160A  118A  233F  160A  118A  	fcall	_Read_Time
  1477     1720                     l3784:
  1478                           
  1479                           ;main_master.c: 86:         Read_Fecha(&dia, &mes, &ano);
  1480     1720  30EB               	movlw	(low (_mes| 0))& (0+255)
  1481     1721  1283               	bcf	3,5	;RP0=0, select bank0
  1482     1722  1303               	bcf	3,6	;RP1=0, select bank0
  1483     1723  00A8               	movwf	Read_Fecha@mo
  1484     1724  30EA               	movlw	(low (_ano| 0))& (0+255)
  1485     1725  00A9               	movwf	Read_Fecha@y
  1486     1726  30EC               	movlw	(low (_dia| 0))& (0+255)
  1487     1727  160A  118A  230A  160A  118A  	fcall	_Read_Fecha
  1488     172C                     l3786:
  1489                           
  1490                           ;main_master.c: 87:         AHT10_Read();
  1491     172C  120A  158A  2205  160A  118A  	fcall	_AHT10_Read
  1492                           
  1493                           ;main_master.c: 88:         Slave1_Total();
  1494     1731  160A  118A  20C5  160A  118A  	fcall	_Slave1_Total
  1495                           
  1496                           ;main_master.c: 100:         Lcd_Set_Cursor(1,1);
  1497     1736  1283               	bcf	3,5	;RP0=0, select bank0
  1498     1737  1303               	bcf	3,6	;RP1=0, select bank0
  1499     1738  01A4               	clrf	Lcd_Set_Cursor@b
  1500     1739  0AA4               	incf	Lcd_Set_Cursor@b,f
  1501     173A  3001               	movlw	1
  1502     173B  160A  118A  24B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1503     1740                     l3788:
  1504                           
  1505                           ;main_master.c: 101:         sprintf(buffer, "%02u:%02u:%02u", horas, minutos, segundos)
      +                          ;
  1506     1740  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1507     1741  1283               	bcf	3,5	;RP0=0, select bank0
  1508     1742  1303               	bcf	3,6	;RP1=0, select bank0
  1509     1743  00AE               	movwf	sprintf@f
  1510     1744  1683               	bsf	3,5	;RP0=1, select bank1
  1511     1745  1303               	bcf	3,6	;RP1=0, select bank1
  1512     1746  086D               	movf	_horas^(0+128),w
  1513     1747  00CC               	movwf	??_main^(0+128)
  1514     1748  01CD               	clrf	(??_main^(0+128)+1)
  1515     1749  084C               	movf	??_main^(0+128),w
  1516     174A  1283               	bcf	3,5	;RP0=0, select bank0
  1517     174B  1303               	bcf	3,6	;RP1=0, select bank0
  1518     174C  00AF               	movwf	?_sprintf+1
  1519     174D  1683               	bsf	3,5	;RP0=1, select bank1
  1520     174E  1303               	bcf	3,6	;RP1=0, select bank1
  1521     174F  084D               	movf	(??_main+1)^(0+128),w
  1522     1750  1283               	bcf	3,5	;RP0=0, select bank0
  1523     1751  1303               	bcf	3,6	;RP1=0, select bank0
  1524     1752  00B0               	movwf	?_sprintf+2
  1525     1753  1683               	bsf	3,5	;RP0=1, select bank1
  1526     1754  1303               	bcf	3,6	;RP1=0, select bank1
  1527     1755  086E               	movf	_minutos^(0+128),w
  1528     1756  00CE               	movwf	(??_main+2)^(0+128)
  1529     1757  01CF               	clrf	((??_main+2)^(0+128)+1)
  1530     1758  084E               	movf	(??_main+2)^(0+128),w
  1531     1759  1283               	bcf	3,5	;RP0=0, select bank0
  1532     175A  1303               	bcf	3,6	;RP1=0, select bank0
  1533     175B  00B1               	movwf	?_sprintf+3
  1534     175C  1683               	bsf	3,5	;RP0=1, select bank1
  1535     175D  1303               	bcf	3,6	;RP1=0, select bank1
  1536     175E  084F               	movf	(??_main+3)^(0+128),w
  1537     175F  1283               	bcf	3,5	;RP0=0, select bank0
  1538     1760  1303               	bcf	3,6	;RP1=0, select bank0
  1539     1761  00B2               	movwf	?_sprintf+4
  1540     1762  1683               	bsf	3,5	;RP0=1, select bank1
  1541     1763  1303               	bcf	3,6	;RP1=0, select bank1
  1542     1764  086F               	movf	_segundos^(0+128),w
  1543     1765  00D0               	movwf	(??_main+4)^(0+128)
  1544     1766  01D1               	clrf	((??_main+4)^(0+128)+1)
  1545     1767  0850               	movf	(??_main+4)^(0+128),w
  1546     1768  1283               	bcf	3,5	;RP0=0, select bank0
  1547     1769  1303               	bcf	3,6	;RP1=0, select bank0
  1548     176A  00B3               	movwf	?_sprintf+5
  1549     176B  1683               	bsf	3,5	;RP0=1, select bank1
  1550     176C  1303               	bcf	3,6	;RP1=0, select bank1
  1551     176D  0851               	movf	(??_main+5)^(0+128),w
  1552     176E  1283               	bcf	3,5	;RP0=0, select bank0
  1553     176F  1303               	bcf	3,6	;RP1=0, select bank0
  1554     1770  00B4               	movwf	?_sprintf+6
  1555     1771  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1556     1772  120A  158A  207F  160A  118A  	fcall	_sprintf
  1557     1777                     l3790:
  1558                           
  1559                           ;main_master.c: 102:         Lcd_Write_String(buffer);
  1560     1777  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1561     1778  1283               	bcf	3,5	;RP0=0, select bank0
  1562     1779  1303               	bcf	3,6	;RP1=0, select bank0
  1563     177A  00A5               	movwf	Lcd_Write_String@a
  1564     177B  3001               	movlw	1
  1565     177C  00A6               	movwf	Lcd_Write_String@a+1
  1566     177D  160A  118A  2427  160A  118A  	fcall	_Lcd_Write_String
  1567                           
  1568                           ;main_master.c: 104:         Lcd_Set_Cursor(2,1);
  1569     1782  1283               	bcf	3,5	;RP0=0, select bank0
  1570     1783  1303               	bcf	3,6	;RP1=0, select bank0
  1571     1784  01A4               	clrf	Lcd_Set_Cursor@b
  1572     1785  0AA4               	incf	Lcd_Set_Cursor@b,f
  1573     1786  3002               	movlw	2
  1574     1787  160A  118A  24B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1575     178C                     l3792:
  1576                           
  1577                           ;main_master.c: 105:         sprintf(buffer, "%02u/%02u/20%02u", dia, mes, ano);
  1578     178C  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1579     178D  1283               	bcf	3,5	;RP0=0, select bank0
  1580     178E  1303               	bcf	3,6	;RP1=0, select bank0
  1581     178F  00AE               	movwf	sprintf@f
  1582     1790  1683               	bsf	3,5	;RP0=1, select bank1
  1583     1791  1303               	bcf	3,6	;RP1=0, select bank1
  1584     1792  086C               	movf	_dia^(0+128),w
  1585     1793  00CC               	movwf	??_main^(0+128)
  1586     1794  01CD               	clrf	(??_main^(0+128)+1)
  1587     1795  084C               	movf	??_main^(0+128),w
  1588     1796  1283               	bcf	3,5	;RP0=0, select bank0
  1589     1797  1303               	bcf	3,6	;RP1=0, select bank0
  1590     1798  00AF               	movwf	?_sprintf+1
  1591     1799  1683               	bsf	3,5	;RP0=1, select bank1
  1592     179A  1303               	bcf	3,6	;RP1=0, select bank1
  1593     179B  084D               	movf	(??_main+1)^(0+128),w
  1594     179C  1283               	bcf	3,5	;RP0=0, select bank0
  1595     179D  1303               	bcf	3,6	;RP1=0, select bank0
  1596     179E  00B0               	movwf	?_sprintf+2
  1597     179F  1683               	bsf	3,5	;RP0=1, select bank1
  1598     17A0  1303               	bcf	3,6	;RP1=0, select bank1
  1599     17A1  086B               	movf	_mes^(0+128),w
  1600     17A2  00CE               	movwf	(??_main+2)^(0+128)
  1601     17A3  01CF               	clrf	((??_main+2)^(0+128)+1)
  1602     17A4  084E               	movf	(??_main+2)^(0+128),w
  1603     17A5  1283               	bcf	3,5	;RP0=0, select bank0
  1604     17A6  1303               	bcf	3,6	;RP1=0, select bank0
  1605     17A7  00B1               	movwf	?_sprintf+3
  1606     17A8  1683               	bsf	3,5	;RP0=1, select bank1
  1607     17A9  1303               	bcf	3,6	;RP1=0, select bank1
  1608     17AA  084F               	movf	(??_main+3)^(0+128),w
  1609     17AB  1283               	bcf	3,5	;RP0=0, select bank0
  1610     17AC  1303               	bcf	3,6	;RP1=0, select bank0
  1611     17AD  00B2               	movwf	?_sprintf+4
  1612     17AE  1683               	bsf	3,5	;RP0=1, select bank1
  1613     17AF  1303               	bcf	3,6	;RP1=0, select bank1
  1614     17B0  086A               	movf	_ano^(0+128),w
  1615     17B1  00D0               	movwf	(??_main+4)^(0+128)
  1616     17B2  01D1               	clrf	((??_main+4)^(0+128)+1)
  1617     17B3  0850               	movf	(??_main+4)^(0+128),w
  1618     17B4  1283               	bcf	3,5	;RP0=0, select bank0
  1619     17B5  1303               	bcf	3,6	;RP1=0, select bank0
  1620     17B6  00B3               	movwf	?_sprintf+5
  1621     17B7  1683               	bsf	3,5	;RP0=1, select bank1
  1622     17B8  1303               	bcf	3,6	;RP1=0, select bank1
  1623     17B9  0851               	movf	(??_main+5)^(0+128),w
  1624     17BA  1283               	bcf	3,5	;RP0=0, select bank0
  1625     17BB  1303               	bcf	3,6	;RP1=0, select bank0
  1626     17BC  00B4               	movwf	?_sprintf+6
  1627     17BD  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1628     17BE  120A  158A  207F  160A  118A  	fcall	_sprintf
  1629     17C3                     l3794:
  1630                           
  1631                           ;main_master.c: 106:         Lcd_Write_String(buffer);
  1632     17C3  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1633     17C4  1283               	bcf	3,5	;RP0=0, select bank0
  1634     17C5  1303               	bcf	3,6	;RP1=0, select bank0
  1635     17C6  00A5               	movwf	Lcd_Write_String@a
  1636     17C7  3001               	movlw	1
  1637     17C8  00A6               	movwf	Lcd_Write_String@a+1
  1638     17C9  160A  118A  2427  160A  118A  	fcall	_Lcd_Write_String
  1639                           
  1640                           ;main_master.c: 108:         Lcd_Set_Cursor(2,12);
  1641     17CE  300C               	movlw	12
  1642     17CF  1283               	bcf	3,5	;RP0=0, select bank0
  1643     17D0  1303               	bcf	3,6	;RP1=0, select bank0
  1644     17D1  00A4               	movwf	Lcd_Set_Cursor@b
  1645     17D2  3002               	movlw	2
  1646     17D3  160A  118A  24B3  160A  118A  	fcall	_Lcd_Set_Cursor
  1647     17D8                     l3796:
  1648                           
  1649                           ;main_master.c: 109:         sprintf(buffer, "%02u", cont);
  1650     17D8  3017               	movlw	(low (((STR_3+12)-__stringbase)| (0+32768)))& (0+255)
  1651     17D9  1283               	bcf	3,5	;RP0=0, select bank0
  1652     17DA  1303               	bcf	3,6	;RP1=0, select bank0
  1653     17DB  00AE               	movwf	sprintf@f
  1654     17DC  1683               	bsf	3,5	;RP0=1, select bank1
  1655     17DD  1303               	bcf	3,6	;RP1=0, select bank1
  1656     17DE  0866               	movf	_cont^(0+128),w
  1657     17DF  00CC               	movwf	??_main^(0+128)
  1658     17E0  01CD               	clrf	(??_main^(0+128)+1)
  1659     17E1  084C               	movf	??_main^(0+128),w
  1660     17E2  1283               	bcf	3,5	;RP0=0, select bank0
  1661     17E3  1303               	bcf	3,6	;RP1=0, select bank0
  1662     17E4  00AF               	movwf	?_sprintf+1
  1663     17E5  1683               	bsf	3,5	;RP0=1, select bank1
  1664     17E6  1303               	bcf	3,6	;RP1=0, select bank1
  1665     17E7  084D               	movf	(??_main+1)^(0+128),w
  1666     17E8  1283               	bcf	3,5	;RP0=0, select bank0
  1667     17E9  1303               	bcf	3,6	;RP1=0, select bank0
  1668     17EA  00B0               	movwf	?_sprintf+2
  1669     17EB  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1670     17EC  120A  158A  207F  160A  118A  	fcall	_sprintf
  1671     17F1                     l3798:
  1672                           
  1673                           ;main_master.c: 110:         Lcd_Write_String(buffer);
  1674     17F1  30A4               	movlw	(low (_buffer| (0+256)))& (0+255)
  1675     17F2  1283               	bcf	3,5	;RP0=0, select bank0
  1676     17F3  1303               	bcf	3,6	;RP1=0, select bank0
  1677     17F4  00A5               	movwf	Lcd_Write_String@a
  1678     17F5  3001               	movlw	1
  1679     17F6  00A6               	movwf	Lcd_Write_String@a+1
  1680     17F7  160A  118A  2427  160A  118A  	fcall	_Lcd_Write_String
  1681     17FC  2F14               	goto	l3782
  1682     17FD  120A  118A  280C   	ljmp	start
  1683     1800                     __end_of_main:
  1684                           
  1685                           	psect	text1
  1686     087F                     __ptext1:	
  1687 ;; *************** function _sprintf *****************
  1688 ;; Defined at:
  1689 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  sp              1    wreg     PTR unsigned char 
  1692 ;;		 -> buffer(30), 
  1693 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1694 ;;		 -> STR_4(5), STR_3(17), STR_2(15), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  1697 ;;		 -> buffer(30), 
  1698 ;;  tmpval          4    0        struct .
  1699 ;;  width           2   30[BANK0 ] int 
  1700 ;;  val             2   26[BANK0 ] unsigned int 
  1701 ;;  cp              2    0        PTR const unsigned char 
  1702 ;;  len             2    0        unsigned int 
  1703 ;;  c               1   32[BANK0 ] unsigned char 
  1704 ;;  prec            1   28[BANK0 ] char 
  1705 ;;  flag            1   25[BANK0 ] unsigned char 
  1706 ;;  ap              1   24[BANK0 ] PTR void [1]
  1707 ;;		 -> ?_sprintf(2), 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2   14[BANK0 ] int 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       7       0       0       0
  1718 ;;      Locals:         0       9       0       0       0
  1719 ;;      Temps:          0       3       0       0       0
  1720 ;;      Totals:         0      19       0       0       0
  1721 ;;Total ram usage:       19 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 5
  1724 ;; This function calls:
  1725 ;;		___lwdiv
  1726 ;;		___lwmod
  1727 ;;		___wmul
  1728 ;;		_isdigit
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734     087F                     _sprintf:	
  1735                           ;psect for function _sprintf
  1736                           
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1740                           ;sprintf@sp stored from wreg
  1741     087F  1283               	bcf	3,5	;RP0=0, select bank0
  1742     0880  1303               	bcf	3,6	;RP1=0, select bank0
  1743     0881  00BD               	movwf	sprintf@sp
  1744     0882                     l3662:
  1745                           
  1746                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1747     0882  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1748     0883  00B8               	movwf	sprintf@ap
  1749                           
  1750                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1751     0884  29F0               	goto	l3746
  1752     0885                     l3664:
  1753                           
  1754                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1755     0885  3025               	movlw	37
  1756     0886  0640               	xorwf	sprintf@c,w
  1757     0887  1903               	btfsc	3,2
  1758     0888  288A               	goto	u4351
  1759     0889  288B               	goto	u4350
  1760     088A                     u4351:
  1761     088A  2895               	goto	l3670
  1762     088B                     u4350:
  1763     088B                     l3666:
  1764                           
  1765                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1766     088B  083D               	movf	sprintf@sp,w
  1767     088C  0084               	movwf	4
  1768     088D  0840               	movf	sprintf@c,w
  1769     088E  1783               	bsf	3,7	;select IRP bank2
  1770     088F  0080               	movwf	0
  1771     0890                     l3668:
  1772     0890  3001               	movlw	1
  1773     0891  00B5               	movwf	??_sprintf
  1774     0892  0835               	movf	??_sprintf,w
  1775     0893  07BD               	addwf	sprintf@sp,f
  1776                           
  1777                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1778     0894  29F0               	goto	l3746
  1779     0895                     l3670:
  1780                           
  1781                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1782     0895  01BE               	clrf	sprintf@width
  1783     0896  01BF               	clrf	sprintf@width+1
  1784                           
  1785                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1786     0897  01B9               	clrf	sprintf@flag
  1787     0898  289E               	goto	l3676
  1788     0899                     l471:	
  1789                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1790                           
  1791                           
  1792                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1793     0899  1539               	bsf	sprintf@flag,2
  1794     089A                     l3672:
  1795                           
  1796                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1797     089A  3001               	movlw	1
  1798     089B  00B5               	movwf	??_sprintf
  1799     089C  0835               	movf	??_sprintf,w
  1800     089D  07AE               	addwf	sprintf@f,f
  1801     089E                     l3676:	
  1802                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1803                           
  1804     089E  082E               	movf	sprintf@f,w
  1805     089F  0084               	movwf	4
  1806     08A0  160A  118A  200A  120A  158A  	fcall	stringdir
  1807     08A5  00B5               	movwf	??_sprintf
  1808     08A6  01B6               	clrf	??_sprintf+1
  1809                           
  1810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 1, Range of values is 0 to 0
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            4     3 (average)
  1816                           ; direct_byte           11     8 (fixed)
  1817                           ; jumptable            260     6 (fixed)
  1818                           ;	Chosen strategy is simple_byte
  1819     08A7  0836               	movf	??_sprintf+1,w
  1820     08A8  3A00               	xorlw	0	; case 0
  1821     08A9  1903               	skipnz
  1822     08AA  28AC               	goto	l3936
  1823     08AB  28B1               	goto	l3678
  1824     08AC                     l3936:
  1825                           
  1826                           ; Switch size 1, requested type "simple"
  1827                           ; Number of cases is 1, Range of values is 48 to 48
  1828                           ; switch strategies available:
  1829                           ; Name         Instructions Cycles
  1830                           ; simple_byte            4     3 (average)
  1831                           ; direct_byte           14    11 (fixed)
  1832                           ; jumptable            263     9 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834     08AC  0835               	movf	??_sprintf,w
  1835     08AD  3A30               	xorlw	48	; case 48
  1836     08AE  1903               	skipnz
  1837     08AF  2899               	goto	l471
  1838     08B0  28B1               	goto	l3678
  1839     08B1                     l3678:
  1840                           
  1841                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1842     08B1  082E               	movf	sprintf@f,w
  1843     08B2  0084               	movwf	4
  1844     08B3  160A  118A  200A  120A  158A  	fcall	stringdir
  1845     08B8  160A  158A  27D5  120A  158A  	fcall	_isdigit
  1846     08BD  1C03               	btfss	3,0
  1847     08BE  28C0               	goto	u4361
  1848     08BF  28C1               	goto	u4360
  1849     08C0                     u4361:
  1850     08C0  2907               	goto	l3694
  1851     08C1                     u4360:
  1852     08C1                     l3680:
  1853                           
  1854                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1855     08C1  1283               	bcf	3,5	;RP0=0, select bank0
  1856     08C2  1303               	bcf	3,6	;RP1=0, select bank0
  1857     08C3  01BE               	clrf	sprintf@width
  1858     08C4  01BF               	clrf	sprintf@width+1
  1859     08C5                     l3682:
  1860                           
  1861                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1862     08C5  300A               	movlw	10
  1863     08C6  1283               	bcf	3,5	;RP0=0, select bank0
  1864     08C7  1303               	bcf	3,6	;RP1=0, select bank0
  1865     08C8  00A0               	movwf	___wmul@multiplier
  1866     08C9  3000               	movlw	0
  1867     08CA  00A1               	movwf	___wmul@multiplier+1
  1868     08CB  083F               	movf	sprintf@width+1,w
  1869     08CC  00A3               	movwf	___wmul@multiplicand+1
  1870     08CD  083E               	movf	sprintf@width,w
  1871     08CE  00A2               	movwf	___wmul@multiplicand
  1872     08CF  160A  118A  2239  120A  158A  	fcall	___wmul
  1873     08D4  1283               	bcf	3,5	;RP0=0, select bank0
  1874     08D5  1303               	bcf	3,6	;RP1=0, select bank0
  1875     08D6  0821               	movf	?___wmul+1,w
  1876     08D7  00BF               	movwf	sprintf@width+1
  1877     08D8  0820               	movf	?___wmul,w
  1878     08D9  00BE               	movwf	sprintf@width
  1879     08DA                     l3684:
  1880                           
  1881                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1882     08DA  082E               	movf	sprintf@f,w
  1883     08DB  0084               	movwf	4
  1884     08DC  160A  118A  200A  120A  158A  	fcall	stringdir
  1885     08E1  3ED0               	addlw	208
  1886     08E2  00B5               	movwf	??_sprintf
  1887     08E3  30FF               	movlw	255
  1888     08E4  1803               	skipnc
  1889     08E5  3000               	movlw	0
  1890     08E6  00B6               	movwf	??_sprintf+1
  1891     08E7  0835               	movf	??_sprintf,w
  1892     08E8  07BE               	addwf	sprintf@width,f
  1893     08E9  1803               	skipnc
  1894     08EA  0ABF               	incf	sprintf@width+1,f
  1895     08EB  0836               	movf	??_sprintf+1,w
  1896     08EC  07BF               	addwf	sprintf@width+1,f
  1897     08ED                     l3686:
  1898     08ED  3001               	movlw	1
  1899     08EE  00B5               	movwf	??_sprintf
  1900     08EF  0835               	movf	??_sprintf,w
  1901     08F0  07AE               	addwf	sprintf@f,f
  1902     08F1                     l3688:
  1903                           
  1904                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1905     08F1  082E               	movf	sprintf@f,w
  1906     08F2  0084               	movwf	4
  1907     08F3  160A  118A  200A  120A  158A  	fcall	stringdir
  1908     08F8  160A  158A  27D5  120A  158A  	fcall	_isdigit
  1909     08FD  1803               	btfsc	3,0
  1910     08FE  2900               	goto	u4371
  1911     08FF  2901               	goto	u4370
  1912     0900                     u4371:
  1913     0900  28C5               	goto	l3682
  1914     0901                     u4370:
  1915     0901  2907               	goto	l3694
  1916     0902                     l3690:
  1917                           
  1918                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1919     0902  30C0               	movlw	192
  1920     0903  00B5               	movwf	??_sprintf
  1921     0904  0835               	movf	??_sprintf,w
  1922     0905  04B9               	iorwf	sprintf@flag,f
  1923                           
  1924                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1925     0906  2923               	goto	l3696
  1926     0907                     l3694:
  1927     0907  3001               	movlw	1
  1928     0908  1283               	bcf	3,5	;RP0=0, select bank0
  1929     0909  1303               	bcf	3,6	;RP1=0, select bank0
  1930     090A  07AE               	addwf	sprintf@f,f
  1931     090B  30FF               	movlw	-1
  1932     090C  072E               	addwf	sprintf@f,w
  1933     090D  0084               	movwf	4
  1934     090E  160A  118A  200A  120A  158A  	fcall	stringdir
  1935     0913  00C0               	movwf	sprintf@c
  1936     0914  00B5               	movwf	??_sprintf
  1937     0915  01B6               	clrf	??_sprintf+1
  1938                           
  1939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1940                           ; Switch size 1, requested type "simple"
  1941                           ; Number of cases is 1, Range of values is 0 to 0
  1942                           ; switch strategies available:
  1943                           ; Name         Instructions Cycles
  1944                           ; simple_byte            4     3 (average)
  1945                           ; direct_byte           11     8 (fixed)
  1946                           ; jumptable            260     6 (fixed)
  1947                           ;	Chosen strategy is simple_byte
  1948     0916  0836               	movf	??_sprintf+1,w
  1949     0917  3A00               	xorlw	0	; case 0
  1950     0918  1903               	skipnz
  1951     0919  291B               	goto	l3938
  1952     091A  29F0               	goto	l3746
  1953     091B                     l3938:
  1954                           
  1955                           ; Switch size 1, requested type "simple"
  1956                           ; Number of cases is 2, Range of values is 0 to 117
  1957                           ; switch strategies available:
  1958                           ; Name         Instructions Cycles
  1959                           ; simple_byte            7     4 (average)
  1960                           ; jumptable            260     6 (fixed)
  1961                           ;	Chosen strategy is simple_byte
  1962     091B  0835               	movf	??_sprintf,w
  1963     091C  3A00               	xorlw	0	; case 0
  1964     091D  1903               	skipnz
  1965     091E  2A00               	goto	l3748
  1966     091F  3A75               	xorlw	117	; case 117
  1967     0920  1903               	skipnz
  1968     0921  2902               	goto	l3690
  1969     0922  29F0               	goto	l3746
  1970     0923                     l3696:
  1971                           
  1972                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1973     0923  0838               	movf	sprintf@ap,w
  1974     0924  0084               	movwf	4
  1975     0925  1383               	bcf	3,7	;select IRP bank0
  1976     0926  0800               	movf	0,w
  1977     0927  00BA               	movwf	sprintf@val
  1978     0928  0A84               	incf	4,f
  1979     0929  0800               	movf	0,w
  1980     092A  00BB               	movwf	sprintf@val+1
  1981     092B                     l3698:
  1982     092B  3002               	movlw	2
  1983     092C  00B5               	movwf	??_sprintf
  1984     092D  0835               	movf	??_sprintf,w
  1985     092E  07B8               	addwf	sprintf@ap,f
  1986     092F                     l3700:
  1987                           
  1988                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1989     092F  01C0               	clrf	sprintf@c
  1990     0930  0AC0               	incf	sprintf@c,f
  1991     0931                     l3706:
  1992                           
  1993                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1994     0931  0840               	movf	sprintf@c,w
  1995     0932  00B5               	movwf	??_sprintf
  1996     0933  0735               	addwf	??_sprintf,w
  1997     0934  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1998     0935  0084               	movwf	4
  1999     0936  160A  118A  200A  120A  158A  	fcall	stringdir
  2000     093B  00B6               	movwf	??_sprintf+1
  2001     093C  160A  118A  200A  120A  158A  	fcall	stringdir
  2002     0941  00B7               	movwf	??_sprintf+2
  2003     0942  0837               	movf	??_sprintf+2,w
  2004     0943  023B               	subwf	sprintf@val+1,w
  2005     0944  1D03               	skipz
  2006     0945  2948               	goto	u4385
  2007     0946  0836               	movf	??_sprintf+1,w
  2008     0947  023A               	subwf	sprintf@val,w
  2009     0948                     u4385:
  2010     0948  1803               	skipnc
  2011     0949  294B               	goto	u4381
  2012     094A  294C               	goto	u4380
  2013     094B                     u4381:
  2014     094B  294D               	goto	l3710
  2015     094C                     u4380:
  2016     094C  2957               	goto	l3712
  2017     094D                     l3710:
  2018     094D  3001               	movlw	1
  2019     094E  00B5               	movwf	??_sprintf
  2020     094F  0835               	movf	??_sprintf,w
  2021     0950  07C0               	addwf	sprintf@c,f
  2022     0951  3005               	movlw	5
  2023     0952  0640               	xorwf	sprintf@c,w
  2024     0953  1D03               	btfss	3,2
  2025     0954  2956               	goto	u4391
  2026     0955  2957               	goto	u4390
  2027     0956                     u4391:
  2028     0956  2931               	goto	l3706
  2029     0957                     u4390:
  2030     0957                     l3712:
  2031                           
  2032                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2033     0957  083F               	movf	sprintf@width+1,w
  2034     0958  3A80               	xorlw	128
  2035     0959  3C80               	sublw	128
  2036     095A  1D03               	skipz
  2037     095B  295E               	goto	u4405
  2038     095C  083E               	movf	sprintf@width,w
  2039     095D  0240               	subwf	sprintf@c,w
  2040     095E                     u4405:
  2041     095E  1803               	skipnc
  2042     095F  2961               	goto	u4401
  2043     0960  2962               	goto	u4400
  2044     0961                     u4401:
  2045     0961  296E               	goto	l3716
  2046     0962                     u4400:
  2047     0962                     l3714:
  2048                           
  2049                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2050     0962  1283               	bcf	3,5	;RP0=0, select bank0
  2051     0963  1303               	bcf	3,6	;RP1=0, select bank0
  2052     0964  0840               	movf	sprintf@c,w
  2053     0965  00B5               	movwf	??_sprintf
  2054     0966  01B6               	clrf	??_sprintf+1
  2055     0967  0835               	movf	??_sprintf,w
  2056     0968  02BE               	subwf	sprintf@width,f
  2057     0969  0836               	movf	??_sprintf+1,w
  2058     096A  1C03               	skipc
  2059     096B  03BF               	decf	sprintf@width+1,f
  2060     096C  02BF               	subwf	sprintf@width+1,f
  2061     096D  2972               	goto	l3718
  2062     096E                     l3716:
  2063                           
  2064                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2065     096E  1283               	bcf	3,5	;RP0=0, select bank0
  2066     096F  1303               	bcf	3,6	;RP1=0, select bank0
  2067     0970  01BE               	clrf	sprintf@width
  2068     0971  01BF               	clrf	sprintf@width+1
  2069     0972                     l3718:
  2070                           
  2071                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2072     0972  1D39               	btfss	sprintf@flag,2
  2073     0973  2975               	goto	u4411
  2074     0974  2976               	goto	u4410
  2075     0975                     u4411:
  2076     0975  2992               	goto	l3728
  2077     0976                     u4410:
  2078     0976                     l3720:
  2079                           
  2080                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2081     0976  083E               	movf	sprintf@width,w
  2082     0977  043F               	iorwf	sprintf@width+1,w
  2083     0978  1903               	btfsc	3,2
  2084     0979  297B               	goto	u4421
  2085     097A  297C               	goto	u4420
  2086     097B                     u4421:
  2087     097B  29AD               	goto	l3736
  2088     097C                     u4420:
  2089     097C                     l3722:
  2090                           
  2091                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2092     097C  083D               	movf	sprintf@sp,w
  2093     097D  0084               	movwf	4
  2094     097E  3030               	movlw	48
  2095     097F  1783               	bsf	3,7	;select IRP bank2
  2096     0980  0080               	movwf	0
  2097     0981                     l3724:
  2098     0981  3001               	movlw	1
  2099     0982  00B5               	movwf	??_sprintf
  2100     0983  0835               	movf	??_sprintf,w
  2101     0984  07BD               	addwf	sprintf@sp,f
  2102     0985                     l3726:
  2103     0985  30FF               	movlw	255
  2104     0986  07BE               	addwf	sprintf@width,f
  2105     0987  1803               	skipnc
  2106     0988  0ABF               	incf	sprintf@width+1,f
  2107     0989  30FF               	movlw	255
  2108     098A  07BF               	addwf	sprintf@width+1,f
  2109     098B  083E               	movf	sprintf@width,w
  2110     098C  043F               	iorwf	sprintf@width+1,w
  2111     098D  1D03               	btfss	3,2
  2112     098E  2990               	goto	u4431
  2113     098F  2991               	goto	u4430
  2114     0990                     u4431:
  2115     0990  297C               	goto	l3722
  2116     0991                     u4430:
  2117     0991  29AD               	goto	l3736
  2118     0992                     l3728:
  2119                           
  2120                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2121     0992  083E               	movf	sprintf@width,w
  2122     0993  043F               	iorwf	sprintf@width+1,w
  2123     0994  1903               	btfsc	3,2
  2124     0995  2997               	goto	u4441
  2125     0996  2998               	goto	u4440
  2126     0997                     u4441:
  2127     0997  29AD               	goto	l3736
  2128     0998                     u4440:
  2129     0998                     l3730:
  2130                           
  2131                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2132     0998  083D               	movf	sprintf@sp,w
  2133     0999  0084               	movwf	4
  2134     099A  3020               	movlw	32
  2135     099B  1783               	bsf	3,7	;select IRP bank2
  2136     099C  0080               	movwf	0
  2137     099D                     l3732:
  2138     099D  3001               	movlw	1
  2139     099E  00B5               	movwf	??_sprintf
  2140     099F  0835               	movf	??_sprintf,w
  2141     09A0  07BD               	addwf	sprintf@sp,f
  2142     09A1                     l3734:
  2143     09A1  30FF               	movlw	255
  2144     09A2  07BE               	addwf	sprintf@width,f
  2145     09A3  1803               	skipnc
  2146     09A4  0ABF               	incf	sprintf@width+1,f
  2147     09A5  30FF               	movlw	255
  2148     09A6  07BF               	addwf	sprintf@width+1,f
  2149     09A7  083E               	movf	sprintf@width,w
  2150     09A8  043F               	iorwf	sprintf@width+1,w
  2151     09A9  1D03               	btfss	3,2
  2152     09AA  29AC               	goto	u4451
  2153     09AB  29AD               	goto	u4450
  2154     09AC                     u4451:
  2155     09AC  2998               	goto	l3730
  2156     09AD                     u4450:
  2157     09AD                     l3736:
  2158                           
  2159                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2160     09AD  0840               	movf	sprintf@c,w
  2161     09AE  00BC               	movwf	sprintf@prec
  2162                           
  2163                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2164     09AF  29E7               	goto	l3744
  2165     09B0                     l3738:
  2166                           
  2167                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2168     09B0  300A               	movlw	10
  2169     09B1  00A8               	movwf	___lwmod@divisor
  2170     09B2  3000               	movlw	0
  2171     09B3  00A9               	movwf	___lwmod@divisor+1
  2172     09B4  083C               	movf	sprintf@prec,w
  2173     09B5  00B5               	movwf	??_sprintf
  2174     09B6  0735               	addwf	??_sprintf,w
  2175     09B7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2176     09B8  0084               	movwf	4
  2177     09B9  160A  118A  200A  120A  158A  	fcall	stringdir
  2178     09BE  00A0               	movwf	___lwdiv@divisor
  2179     09BF  160A  118A  200A  120A  158A  	fcall	stringdir
  2180     09C4  00A1               	movwf	___lwdiv@divisor+1
  2181     09C5  083B               	movf	sprintf@val+1,w
  2182     09C6  00A3               	movwf	___lwdiv@dividend+1
  2183     09C7  083A               	movf	sprintf@val,w
  2184     09C8  00A2               	movwf	___lwdiv@dividend
  2185     09C9  160A  118A  246D  120A  158A  	fcall	___lwdiv
  2186     09CE  1283               	bcf	3,5	;RP0=0, select bank0
  2187     09CF  1303               	bcf	3,6	;RP1=0, select bank0
  2188     09D0  0821               	movf	?___lwdiv+1,w
  2189     09D1  00AB               	movwf	___lwmod@dividend+1
  2190     09D2  0820               	movf	?___lwdiv,w
  2191     09D3  00AA               	movwf	___lwmod@dividend
  2192     09D4  160A  118A  23AD  120A  158A  	fcall	___lwmod
  2193     09D9  1283               	bcf	3,5	;RP0=0, select bank0
  2194     09DA  1303               	bcf	3,6	;RP1=0, select bank0
  2195     09DB  0828               	movf	?___lwmod,w
  2196     09DC  3E30               	addlw	48
  2197     09DD  00C0               	movwf	sprintf@c
  2198     09DE                     l3740:
  2199                           
  2200                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2201     09DE  083D               	movf	sprintf@sp,w
  2202     09DF  0084               	movwf	4
  2203     09E0  0840               	movf	sprintf@c,w
  2204     09E1  1783               	bsf	3,7	;select IRP bank2
  2205     09E2  0080               	movwf	0
  2206     09E3                     l3742:
  2207     09E3  3001               	movlw	1
  2208     09E4  00B5               	movwf	??_sprintf
  2209     09E5  0835               	movf	??_sprintf,w
  2210     09E6  07BD               	addwf	sprintf@sp,f
  2211     09E7                     l3744:
  2212                           
  2213                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2214     09E7  30FF               	movlw	255
  2215     09E8  00B5               	movwf	??_sprintf
  2216     09E9  0835               	movf	??_sprintf,w
  2217     09EA  07BC               	addwf	sprintf@prec,f
  2218     09EB  0A3C               	incf	sprintf@prec,w
  2219     09EC  1D03               	btfss	3,2
  2220     09ED  29EF               	goto	u4461
  2221     09EE  29F0               	goto	u4460
  2222     09EF                     u4461:
  2223     09EF  29B0               	goto	l3738
  2224     09F0                     u4460:
  2225     09F0                     l3746:
  2226                           
  2227                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2228     09F0  3001               	movlw	1
  2229     09F1  07AE               	addwf	sprintf@f,f
  2230     09F2  30FF               	movlw	-1
  2231     09F3  072E               	addwf	sprintf@f,w
  2232     09F4  0084               	movwf	4
  2233     09F5  160A  118A  200A  120A  158A  	fcall	stringdir
  2234     09FA  00C0               	movwf	sprintf@c
  2235     09FB  0840               	movf	sprintf@c,w
  2236     09FC  1D03               	btfss	3,2
  2237     09FD  29FF               	goto	u4471
  2238     09FE  2A00               	goto	u4470
  2239     09FF                     u4471:
  2240     09FF  2885               	goto	l3664
  2241     0A00                     u4470:
  2242     0A00                     l3748:
  2243                           
  2244                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2245     0A00  083D               	movf	sprintf@sp,w
  2246     0A01  0084               	movwf	4
  2247     0A02  1783               	bsf	3,7	;select IRP bank2
  2248     0A03  0180               	clrf	0
  2249     0A04                     l501:
  2250     0A04  0008               	return
  2251     0A05                     __end_of_sprintf:
  2252                           
  2253                           	psect	text2
  2254     1FD5                     __ptext2:	
  2255 ;; *************** function _isdigit *****************
  2256 ;; Defined at:
  2257 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  c               1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  c               1    1[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       2       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       2       0       0       0
  2275 ;;Total ram usage:        2 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 4
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_sprintf
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285     1FD5                     _isdigit:	
  2286                           ;psect for function _isdigit
  2287                           
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2291                           ;isdigit@c stored from wreg
  2292     1FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2293     1FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2294     1FD7  00A1               	movwf	isdigit@c
  2295     1FD8                     l3348:
  2296     1FD8  01A0               	clrf	_isdigit$1081
  2297     1FD9                     l3350:
  2298     1FD9  303A               	movlw	58
  2299     1FDA  0221               	subwf	isdigit@c,w
  2300     1FDB  1803               	skipnc
  2301     1FDC  2FDE               	goto	u4131
  2302     1FDD  2FDF               	goto	u4130
  2303     1FDE                     u4131:
  2304     1FDE  2FE7               	goto	l3356
  2305     1FDF                     u4130:
  2306     1FDF                     l3352:
  2307     1FDF  3030               	movlw	48
  2308     1FE0  0221               	subwf	isdigit@c,w
  2309     1FE1  1C03               	skipc
  2310     1FE2  2FE4               	goto	u4141
  2311     1FE3  2FE5               	goto	u4140
  2312     1FE4                     u4141:
  2313     1FE4  2FE7               	goto	l3356
  2314     1FE5                     u4140:
  2315     1FE5                     l3354:
  2316     1FE5  01A0               	clrf	_isdigit$1081
  2317     1FE6  0AA0               	incf	_isdigit$1081,f
  2318     1FE7                     l3356:
  2319     1FE7  0C20               	rrf	_isdigit$1081,w
  2320     1FE8                     l958:
  2321     1FE8  0008               	return
  2322     1FE9                     __end_of_isdigit:
  2323                           
  2324                           	psect	text3
  2325     1239                     __ptext3:	
  2326 ;; *************** function ___wmul *****************
  2327 ;; Defined at:
  2328 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2331 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  product         2    4[BANK0 ] unsigned int 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  2    0[BANK0 ] unsigned int 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       4       0       0       0
  2344 ;;      Locals:         0       2       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         0       6       0       0       0
  2347 ;;Total ram usage:        6 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 4
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_sprintf
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     1239                     ___wmul:	
  2358                           ;psect for function ___wmul
  2359                           
  2360     1239                     l3360:	
  2361                           ;incstack = 0
  2362                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2363                           
  2364     1239  1283               	bcf	3,5	;RP0=0, select bank0
  2365     123A  1303               	bcf	3,6	;RP1=0, select bank0
  2366     123B  01A4               	clrf	___wmul@product
  2367     123C  01A5               	clrf	___wmul@product+1
  2368     123D                     l3362:
  2369     123D  1C20               	btfss	___wmul@multiplier,0
  2370     123E  2A40               	goto	u4151
  2371     123F  2A41               	goto	u4150
  2372     1240                     u4151:
  2373     1240  2A47               	goto	l505
  2374     1241                     u4150:
  2375     1241                     l3364:
  2376     1241  0822               	movf	___wmul@multiplicand,w
  2377     1242  07A4               	addwf	___wmul@product,f
  2378     1243  1803               	skipnc
  2379     1244  0AA5               	incf	___wmul@product+1,f
  2380     1245  0823               	movf	___wmul@multiplicand+1,w
  2381     1246  07A5               	addwf	___wmul@product+1,f
  2382     1247                     l505:
  2383     1247  3001               	movlw	1
  2384     1248                     u4165:
  2385     1248  1003               	clrc
  2386     1249  0DA2               	rlf	___wmul@multiplicand,f
  2387     124A  0DA3               	rlf	___wmul@multiplicand+1,f
  2388     124B  3EFF               	addlw	-1
  2389     124C  1D03               	skipz
  2390     124D  2A48               	goto	u4165
  2391     124E                     l3366:
  2392     124E  3001               	movlw	1
  2393     124F                     u4175:
  2394     124F  1003               	clrc
  2395     1250  0CA1               	rrf	___wmul@multiplier+1,f
  2396     1251  0CA0               	rrf	___wmul@multiplier,f
  2397     1252  3EFF               	addlw	-1
  2398     1253  1D03               	skipz
  2399     1254  2A4F               	goto	u4175
  2400     1255                     l3368:
  2401     1255  0820               	movf	___wmul@multiplier,w
  2402     1256  0421               	iorwf	___wmul@multiplier+1,w
  2403     1257  1D03               	btfss	3,2
  2404     1258  2A5A               	goto	u4181
  2405     1259  2A5B               	goto	u4180
  2406     125A                     u4181:
  2407     125A  2A3D               	goto	l3362
  2408     125B                     u4180:
  2409     125B                     l3370:
  2410     125B  0825               	movf	___wmul@product+1,w
  2411     125C  00A1               	movwf	?___wmul+1
  2412     125D  0824               	movf	___wmul@product,w
  2413     125E  00A0               	movwf	?___wmul
  2414     125F                     l507:
  2415     125F  0008               	return
  2416     1260                     __end_of___wmul:
  2417                           
  2418                           	psect	text4
  2419     13AD                     __ptext4:	
  2420 ;; *************** function ___lwmod *****************
  2421 ;; Defined at:
  2422 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  divisor         2    8[BANK0 ] unsigned int 
  2425 ;;  dividend        2   10[BANK0 ] unsigned int 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  counter         1   13[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  2    8[BANK0 ] unsigned int 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       4       0       0       0
  2438 ;;      Locals:         0       1       0       0       0
  2439 ;;      Temps:          0       1       0       0       0
  2440 ;;      Totals:         0       6       0       0       0
  2441 ;;Total ram usage:        6 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 4
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_sprintf
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451     13AD                     ___lwmod:	
  2452                           ;psect for function ___lwmod
  2453                           
  2454     13AD                     l3400:	
  2455                           ;incstack = 0
  2456                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2457                           
  2458     13AD  1283               	bcf	3,5	;RP0=0, select bank0
  2459     13AE  1303               	bcf	3,6	;RP1=0, select bank0
  2460     13AF  0828               	movf	___lwmod@divisor,w
  2461     13B0  0429               	iorwf	___lwmod@divisor+1,w
  2462     13B1  1903               	btfsc	3,2
  2463     13B2  2BB4               	goto	u4261
  2464     13B3  2BB5               	goto	u4260
  2465     13B4                     u4261:
  2466     13B4  2BE4               	goto	l3418
  2467     13B5                     u4260:
  2468     13B5                     l3402:
  2469     13B5  01AD               	clrf	___lwmod@counter
  2470     13B6  0AAD               	incf	___lwmod@counter,f
  2471     13B7  2BC3               	goto	l3408
  2472     13B8                     l3404:
  2473     13B8  3001               	movlw	1
  2474     13B9                     u4275:
  2475     13B9  1003               	clrc
  2476     13BA  0DA8               	rlf	___lwmod@divisor,f
  2477     13BB  0DA9               	rlf	___lwmod@divisor+1,f
  2478     13BC  3EFF               	addlw	-1
  2479     13BD  1D03               	skipz
  2480     13BE  2BB9               	goto	u4275
  2481     13BF                     l3406:
  2482     13BF  3001               	movlw	1
  2483     13C0  00AC               	movwf	??___lwmod
  2484     13C1  082C               	movf	??___lwmod,w
  2485     13C2  07AD               	addwf	___lwmod@counter,f
  2486     13C3                     l3408:
  2487     13C3  1FA9               	btfss	___lwmod@divisor+1,7
  2488     13C4  2BC6               	goto	u4281
  2489     13C5  2BC7               	goto	u4280
  2490     13C6                     u4281:
  2491     13C6  2BB8               	goto	l3404
  2492     13C7                     u4280:
  2493     13C7                     l3410:
  2494     13C7  0829               	movf	___lwmod@divisor+1,w
  2495     13C8  022B               	subwf	___lwmod@dividend+1,w
  2496     13C9  1D03               	skipz
  2497     13CA  2BCD               	goto	u4295
  2498     13CB  0828               	movf	___lwmod@divisor,w
  2499     13CC  022A               	subwf	___lwmod@dividend,w
  2500     13CD                     u4295:
  2501     13CD  1C03               	skipc
  2502     13CE  2BD0               	goto	u4291
  2503     13CF  2BD1               	goto	u4290
  2504     13D0                     u4291:
  2505     13D0  2BD7               	goto	l3414
  2506     13D1                     u4290:
  2507     13D1                     l3412:
  2508     13D1  0828               	movf	___lwmod@divisor,w
  2509     13D2  02AA               	subwf	___lwmod@dividend,f
  2510     13D3  0829               	movf	___lwmod@divisor+1,w
  2511     13D4  1C03               	skipc
  2512     13D5  03AB               	decf	___lwmod@dividend+1,f
  2513     13D6  02AB               	subwf	___lwmod@dividend+1,f
  2514     13D7                     l3414:
  2515     13D7  3001               	movlw	1
  2516     13D8                     u4305:
  2517     13D8  1003               	clrc
  2518     13D9  0CA9               	rrf	___lwmod@divisor+1,f
  2519     13DA  0CA8               	rrf	___lwmod@divisor,f
  2520     13DB  3EFF               	addlw	-1
  2521     13DC  1D03               	skipz
  2522     13DD  2BD8               	goto	u4305
  2523     13DE                     l3416:
  2524     13DE  3001               	movlw	1
  2525     13DF  02AD               	subwf	___lwmod@counter,f
  2526     13E0  1D03               	btfss	3,2
  2527     13E1  2BE3               	goto	u4311
  2528     13E2  2BE4               	goto	u4310
  2529     13E3                     u4311:
  2530     13E3  2BC7               	goto	l3410
  2531     13E4                     u4310:
  2532     13E4                     l3418:
  2533     13E4  082B               	movf	___lwmod@dividend+1,w
  2534     13E5  00A9               	movwf	?___lwmod+1
  2535     13E6  082A               	movf	___lwmod@dividend,w
  2536     13E7  00A8               	movwf	?___lwmod
  2537     13E8                     l787:
  2538     13E8  0008               	return
  2539     13E9                     __end_of___lwmod:
  2540                           
  2541                           	psect	text5
  2542     146D                     __ptext5:	
  2543 ;; *************** function ___lwdiv *****************
  2544 ;; Defined at:
  2545 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  divisor         2    0[BANK0 ] unsigned int 
  2548 ;;  dividend        2    2[BANK0 ] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  quotient        2    5[BANK0 ] unsigned int 
  2551 ;;  counter         1    7[BANK0 ] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  2    0[BANK0 ] unsigned int 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       4       0       0       0
  2562 ;;      Locals:         0       3       0       0       0
  2563 ;;      Temps:          0       1       0       0       0
  2564 ;;      Totals:         0       8       0       0       0
  2565 ;;Total ram usage:        8 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 4
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_sprintf
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575     146D                     ___lwdiv:	
  2576                           ;psect for function ___lwdiv
  2577                           
  2578     146D                     l3374:	
  2579                           ;incstack = 0
  2580                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2581                           
  2582     146D  1283               	bcf	3,5	;RP0=0, select bank0
  2583     146E  1303               	bcf	3,6	;RP1=0, select bank0
  2584     146F  01A5               	clrf	___lwdiv@quotient
  2585     1470  01A6               	clrf	___lwdiv@quotient+1
  2586     1471                     l3376:
  2587     1471  0820               	movf	___lwdiv@divisor,w
  2588     1472  0421               	iorwf	___lwdiv@divisor+1,w
  2589     1473  1903               	btfsc	3,2
  2590     1474  2C76               	goto	u4191
  2591     1475  2C77               	goto	u4190
  2592     1476                     u4191:
  2593     1476  2CAE               	goto	l3396
  2594     1477                     u4190:
  2595     1477                     l3378:
  2596     1477  01A7               	clrf	___lwdiv@counter
  2597     1478  0AA7               	incf	___lwdiv@counter,f
  2598     1479  2C85               	goto	l3384
  2599     147A                     l3380:
  2600     147A  3001               	movlw	1
  2601     147B                     u4205:
  2602     147B  1003               	clrc
  2603     147C  0DA0               	rlf	___lwdiv@divisor,f
  2604     147D  0DA1               	rlf	___lwdiv@divisor+1,f
  2605     147E  3EFF               	addlw	-1
  2606     147F  1D03               	skipz
  2607     1480  2C7B               	goto	u4205
  2608     1481                     l3382:
  2609     1481  3001               	movlw	1
  2610     1482  00A4               	movwf	??___lwdiv
  2611     1483  0824               	movf	??___lwdiv,w
  2612     1484  07A7               	addwf	___lwdiv@counter,f
  2613     1485                     l3384:
  2614     1485  1FA1               	btfss	___lwdiv@divisor+1,7
  2615     1486  2C88               	goto	u4211
  2616     1487  2C89               	goto	u4210
  2617     1488                     u4211:
  2618     1488  2C7A               	goto	l3380
  2619     1489                     u4210:
  2620     1489                     l3386:
  2621     1489  3001               	movlw	1
  2622     148A                     u4225:
  2623     148A  1003               	clrc
  2624     148B  0DA5               	rlf	___lwdiv@quotient,f
  2625     148C  0DA6               	rlf	___lwdiv@quotient+1,f
  2626     148D  3EFF               	addlw	-1
  2627     148E  1D03               	skipz
  2628     148F  2C8A               	goto	u4225
  2629     1490  0821               	movf	___lwdiv@divisor+1,w
  2630     1491  0223               	subwf	___lwdiv@dividend+1,w
  2631     1492  1D03               	skipz
  2632     1493  2C96               	goto	u4235
  2633     1494  0820               	movf	___lwdiv@divisor,w
  2634     1495  0222               	subwf	___lwdiv@dividend,w
  2635     1496                     u4235:
  2636     1496  1C03               	skipc
  2637     1497  2C99               	goto	u4231
  2638     1498  2C9A               	goto	u4230
  2639     1499                     u4231:
  2640     1499  2CA1               	goto	l3392
  2641     149A                     u4230:
  2642     149A                     l3388:
  2643     149A  0820               	movf	___lwdiv@divisor,w
  2644     149B  02A2               	subwf	___lwdiv@dividend,f
  2645     149C  0821               	movf	___lwdiv@divisor+1,w
  2646     149D  1C03               	skipc
  2647     149E  03A3               	decf	___lwdiv@dividend+1,f
  2648     149F  02A3               	subwf	___lwdiv@dividend+1,f
  2649     14A0                     l3390:
  2650     14A0  1425               	bsf	___lwdiv@quotient,0
  2651     14A1                     l3392:
  2652     14A1  3001               	movlw	1
  2653     14A2                     u4245:
  2654     14A2  1003               	clrc
  2655     14A3  0CA1               	rrf	___lwdiv@divisor+1,f
  2656     14A4  0CA0               	rrf	___lwdiv@divisor,f
  2657     14A5  3EFF               	addlw	-1
  2658     14A6  1D03               	skipz
  2659     14A7  2CA2               	goto	u4245
  2660     14A8                     l3394:
  2661     14A8  3001               	movlw	1
  2662     14A9  02A7               	subwf	___lwdiv@counter,f
  2663     14AA  1D03               	btfss	3,2
  2664     14AB  2CAD               	goto	u4251
  2665     14AC  2CAE               	goto	u4250
  2666     14AD                     u4251:
  2667     14AD  2C89               	goto	l3386
  2668     14AE                     u4250:
  2669     14AE                     l3396:
  2670     14AE  0826               	movf	___lwdiv@quotient+1,w
  2671     14AF  00A1               	movwf	?___lwdiv+1
  2672     14B0  0825               	movf	___lwdiv@quotient,w
  2673     14B1  00A0               	movwf	?___lwdiv
  2674     14B2                     l777:
  2675     14B2  0008               	return
  2676     14B3                     __end_of___lwdiv:
  2677                           
  2678                           	psect	text6
  2679     1289                     __ptext6:	
  2680 ;; *************** function _setup *****************
  2681 ;; Defined at:
  2682 ;;		line 128 in file "main_master.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 5
  2703 ;; This function calls:
  2704 ;;		_I2C_Init_Master
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710     1289                     _setup:	
  2711                           ;psect for function _setup
  2712                           
  2713     1289                     l3432:	
  2714                           ;incstack = 0
  2715                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2716                           
  2717                           
  2718                           ;main_master.c: 129:     ANSEL = 0;
  2719     1289  1683               	bsf	3,5	;RP0=1, select bank3
  2720     128A  1703               	bsf	3,6	;RP1=1, select bank3
  2721     128B  0188               	clrf	8	;volatile
  2722                           
  2723                           ;main_master.c: 130:     ANSELH = 0;
  2724     128C  0189               	clrf	9	;volatile
  2725                           
  2726                           ;main_master.c: 132:     TRISB = 0;
  2727     128D  1683               	bsf	3,5	;RP0=1, select bank1
  2728     128E  1303               	bcf	3,6	;RP1=0, select bank1
  2729     128F  0186               	clrf	6	;volatile
  2730                           
  2731                           ;main_master.c: 133:     TRISD = 0;
  2732     1290  0188               	clrf	8	;volatile
  2733                           
  2734                           ;main_master.c: 135:     PORTA = 0;
  2735     1291  1283               	bcf	3,5	;RP0=0, select bank0
  2736     1292  1303               	bcf	3,6	;RP1=0, select bank0
  2737     1293  0185               	clrf	5	;volatile
  2738                           
  2739                           ;main_master.c: 136:     PORTB = 0;
  2740     1294  0186               	clrf	6	;volatile
  2741                           
  2742                           ;main_master.c: 137:     PORTC = 0;
  2743     1295  0187               	clrf	7	;volatile
  2744                           
  2745                           ;main_master.c: 138:     PORTD = 0;
  2746     1296  0188               	clrf	8	;volatile
  2747     1297                     l3434:
  2748                           
  2749                           ;main_master.c: 140:     OSCCONbits.IRCF2 = 1;
  2750     1297  1683               	bsf	3,5	;RP0=1, select bank1
  2751     1298  1303               	bcf	3,6	;RP1=0, select bank1
  2752     1299  170F               	bsf	15,6	;volatile
  2753     129A                     l3436:
  2754                           
  2755                           ;main_master.c: 141:     OSCCONbits.IRCF1 = 1;
  2756     129A  168F               	bsf	15,5	;volatile
  2757     129B                     l3438:
  2758                           
  2759                           ;main_master.c: 142:     OSCCONbits.IRCF0 = 1;
  2760     129B  160F               	bsf	15,4	;volatile
  2761     129C                     l3440:
  2762                           
  2763                           ;main_master.c: 143:     OSCCONbits.SCS = 1;
  2764     129C  140F               	bsf	15,0	;volatile
  2765     129D                     l3442:
  2766                           
  2767                           ;main_master.c: 145:     INTCONbits.GIE = 1;
  2768     129D  178B               	bsf	11,7	;volatile
  2769     129E                     l3444:
  2770                           
  2771                           ;main_master.c: 146:     INTCONbits.PEIE = 1;
  2772     129E  170B               	bsf	11,6	;volatile
  2773     129F                     l3446:
  2774                           
  2775                           ;main_master.c: 147:     PIE1bits.TMR1IE = 1;
  2776     129F  140C               	bsf	12,0	;volatile
  2777     12A0                     l3448:
  2778                           
  2779                           ;main_master.c: 148:     PIR1bits.TMR1IF = 0;
  2780     12A0  1283               	bcf	3,5	;RP0=0, select bank0
  2781     12A1  1303               	bcf	3,6	;RP1=0, select bank0
  2782     12A2  100C               	bcf	12,0	;volatile
  2783     12A3                     l3450:
  2784                           
  2785                           ;main_master.c: 150:     T1CONbits.T1CKPS1 = 1;
  2786     12A3  1690               	bsf	16,5	;volatile
  2787     12A4                     l3452:
  2788                           
  2789                           ;main_master.c: 151:     T1CONbits.T1CKPS0 = 1;
  2790     12A4  1610               	bsf	16,4	;volatile
  2791     12A5                     l3454:
  2792                           
  2793                           ;main_master.c: 152:     T1CONbits.TMR1CS = 0;
  2794     12A5  1090               	bcf	16,1	;volatile
  2795     12A6                     l3456:
  2796                           
  2797                           ;main_master.c: 153:     T1CONbits.TMR1ON = 1;
  2798     12A6  1410               	bsf	16,0	;volatile
  2799     12A7                     l3458:
  2800                           
  2801                           ;main_master.c: 154:     TMR1H = 0x3C;
  2802     12A7  303C               	movlw	60
  2803     12A8  008F               	movwf	15	;volatile
  2804     12A9                     l3460:
  2805                           
  2806                           ;main_master.c: 155:     TMR1L = 0xB0;
  2807     12A9  30B0               	movlw	176
  2808     12AA  008E               	movwf	14	;volatile
  2809     12AB                     l3462:
  2810                           
  2811                           ;main_master.c: 157:     I2C_Init_Master(0x80);
  2812     12AB  3080               	movlw	128
  2813     12AC  160A  118A  22B2  160A  118A  	fcall	_I2C_Init_Master
  2814     12B1                     l188:
  2815     12B1  0008               	return
  2816     12B2                     __end_of_setup:
  2817                           
  2818                           	psect	text7
  2819     12B2                     __ptext7:	
  2820 ;; *************** function _I2C_Init_Master *****************
  2821 ;; Defined at:
  2822 ;;		line 12 in file "i2c.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  sp_i2c          1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  sp_i2c          1    0[BANK0 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       0       0       0
  2837 ;;      Locals:         0       1       0       0       0
  2838 ;;      Temps:          0       0       0       0       0
  2839 ;;      Totals:         0       1       0       0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 4
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_setup
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850     12B2                     _I2C_Init_Master:	
  2851                           ;psect for function _I2C_Init_Master
  2852                           
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  2856                           ;I2C_Init_Master@sp_i2c stored from wreg
  2857     12B2  1283               	bcf	3,5	;RP0=0, select bank0
  2858     12B3  1303               	bcf	3,6	;RP1=0, select bank0
  2859     12B4  00A0               	movwf	I2C_Init_Master@sp_i2c
  2860     12B5                     l3290:
  2861                           
  2862                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  2863     12B5  1683               	bsf	3,5	;RP0=1, select bank1
  2864     12B6  1303               	bcf	3,6	;RP1=0, select bank1
  2865     12B7  1587               	bsf	7,3	;volatile
  2866                           
  2867                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  2868     12B8  1607               	bsf	7,4	;volatile
  2869     12B9                     l3292:
  2870                           
  2871                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  2872     12B9  1283               	bcf	3,5	;RP0=0, select bank0
  2873     12BA  1303               	bcf	3,6	;RP1=0, select bank0
  2874     12BB  0820               	movf	I2C_Init_Master@sp_i2c,w
  2875     12BC  1683               	bsf	3,5	;RP0=1, select bank1
  2876     12BD  1303               	bcf	3,6	;RP1=0, select bank1
  2877     12BE  0094               	movwf	20	;volatile
  2878                           
  2879                           ;i2c.c: 17:  SSPCON = 0x28;
  2880     12BF  3028               	movlw	40
  2881     12C0  1283               	bcf	3,5	;RP0=0, select bank0
  2882     12C1  1303               	bcf	3,6	;RP1=0, select bank0
  2883     12C2  0094               	movwf	20	;volatile
  2884     12C3                     l3294:
  2885                           
  2886                           ;i2c.c: 18:     SSPCON2 = 0x00;
  2887     12C3  1683               	bsf	3,5	;RP0=1, select bank1
  2888     12C4  1303               	bcf	3,6	;RP1=0, select bank1
  2889     12C5  0191               	clrf	17	;volatile
  2890     12C6                     l3296:
  2891                           
  2892                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  2893     12C6  3080               	movlw	128
  2894     12C7  1283               	bcf	3,5	;RP0=0, select bank0
  2895     12C8  1303               	bcf	3,6	;RP1=0, select bank0
  2896     12C9  0620               	xorwf	I2C_Init_Master@sp_i2c,w
  2897     12CA  1D03               	btfss	3,2
  2898     12CB  2ACD               	goto	u4081
  2899     12CC  2ACE               	goto	u4080
  2900     12CD                     u4081:
  2901     12CD  2AD3               	goto	l3300
  2902     12CE                     u4080:
  2903     12CE                     l3298:
  2904                           
  2905                           ;i2c.c: 20:         SSPADD = 19;
  2906     12CE  3013               	movlw	19
  2907     12CF  1683               	bsf	3,5	;RP0=1, select bank1
  2908     12D0  1303               	bcf	3,6	;RP1=0, select bank1
  2909     12D1  0093               	movwf	19	;volatile
  2910                           
  2911                           ;i2c.c: 21:     }
  2912     12D2  2ADC               	goto	l331
  2913     12D3                     l3300:
  2914     12D3  0820               	movf	I2C_Init_Master@sp_i2c,w
  2915     12D4  1D03               	btfss	3,2
  2916     12D5  2AD7               	goto	u4091
  2917     12D6  2AD8               	goto	u4090
  2918     12D7                     u4091:
  2919     12D7  2ADC               	goto	l331
  2920     12D8                     u4090:
  2921     12D8                     l3302:
  2922                           
  2923                           ;i2c.c: 23:         SSPADD = 29;
  2924     12D8  301D               	movlw	29
  2925     12D9  1683               	bsf	3,5	;RP0=1, select bank1
  2926     12DA  1303               	bcf	3,6	;RP1=0, select bank1
  2927     12DB  0093               	movwf	19	;volatile
  2928     12DC                     l331:
  2929     12DC  0008               	return
  2930     12DD                     __end_of_I2C_Init_Master:
  2931                           
  2932                           	psect	text8
  2933     10C5                     __ptext8:	
  2934 ;; *************** function _Slave1_Total *****************
  2935 ;; Defined at:
  2936 ;;		line 357 in file "main_master.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          0       1       0       0       0
  2953 ;;      Totals:         0       1       0       0       0
  2954 ;;Total ram usage:        1 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 5
  2957 ;; This function calls:
  2958 ;;		_I2C_Read
  2959 ;;		_I2C_Start
  2960 ;;		_I2C_Stop
  2961 ;;		_I2C_Write
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967     10C5                     _Slave1_Total:	
  2968                           ;psect for function _Slave1_Total
  2969                           
  2970     10C5                     l3652:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _Slave1_Total: [wreg+status,2+status,0+pclath+cstack]
  2973                           
  2974                           
  2975                           ;main_master.c: 364:     I2C_Start();
  2976     10C5  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  2977     10CA                     l3654:
  2978                           
  2979                           ;main_master.c: 365:     I2C_Write(0x51);
  2980     10CA  3051               	movlw	81
  2981     10CB  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  2982     10D0                     l3656:
  2983                           
  2984                           ;main_master.c: 366:     cont = I2C_Read();
  2985     10D0  160A  158A  2798  160A  118A  	fcall	_I2C_Read
  2986     10D5  1683               	bsf	3,5	;RP0=1, select bank1
  2987     10D6  1303               	bcf	3,6	;RP1=0, select bank1
  2988     10D7  00E6               	movwf	_cont^(0+128)
  2989     10D8                     l3658:
  2990                           
  2991                           ;main_master.c: 368:     I2C_Stop();
  2992     10D8  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  2993     10DD                     l3660:
  2994                           
  2995                           ;main_master.c: 369:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2996     10DD  3041               	movlw	65
  2997     10DE  1283               	bcf	3,5	;RP0=0, select bank0
  2998     10DF  1303               	bcf	3,6	;RP1=0, select bank0
  2999     10E0  00A1               	movwf	??_Slave1_Total
  3000     10E1                     u4507:
  3001     10E1  0BA1               	decfsz	??_Slave1_Total,f
  3002     10E2  28E1               	goto	u4507
  3003     10E3  28E4               	nop2
  3004     10E4                     l244:
  3005     10E4  0008               	return
  3006     10E5                     __end_of_Slave1_Total:
  3007                           
  3008                           	psect	text9
  3009     1212                     __ptext9:	
  3010 ;; *************** function _Set_year *****************
  3011 ;; Defined at:
  3012 ;;		line 234 in file "main_master.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  year            1    wreg     unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  year            1    2[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       0       0       0       0
  3027 ;;      Locals:         0       1       0       0       0
  3028 ;;      Temps:          0       0       0       0       0
  3029 ;;      Totals:         0       1       0       0       0
  3030 ;;Total ram usage:        1 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 5
  3033 ;; This function calls:
  3034 ;;		_Dec_to_Bcd
  3035 ;;		_I2C_Start
  3036 ;;		_I2C_Stop
  3037 ;;		_I2C_Write
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043     1212                     _Set_year:	
  3044                           ;psect for function _Set_year
  3045                           
  3046                           
  3047                           ;incstack = 0
  3048                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  3049                           ;Set_year@year stored from wreg
  3050     1212  1283               	bcf	3,5	;RP0=0, select bank0
  3051     1213  1303               	bcf	3,6	;RP1=0, select bank0
  3052     1214  00A2               	movwf	Set_year@year
  3053     1215                     l3564:
  3054                           
  3055                           ;main_master.c: 235:     I2C_Start();
  3056     1215  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3057     121A                     l3566:
  3058                           
  3059                           ;main_master.c: 236:     I2C_Write(0xD0);
  3060     121A  30D0               	movlw	208
  3061     121B  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3062     1220                     l3568:
  3063                           
  3064                           ;main_master.c: 237:     I2C_Write(0x06);
  3065     1220  3006               	movlw	6
  3066     1221  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3067     1226                     l3570:
  3068                           
  3069                           ;main_master.c: 238:     I2C_Write(Dec_to_Bcd(year));
  3070     1226  1283               	bcf	3,5	;RP0=0, select bank0
  3071     1227  1303               	bcf	3,6	;RP1=0, select bank0
  3072     1228  0822               	movf	Set_year@year,w
  3073     1229  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3074     122E  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3075     1233                     l3572:
  3076                           
  3077                           ;main_master.c: 239:     I2C_Stop();
  3078     1233  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3079     1238                     l218:
  3080     1238  0008               	return
  3081     1239                     __end_of_Set_year:
  3082                           
  3083                           	psect	text10
  3084     11EB                     __ptext10:	
  3085 ;; *************** function _Set_sec *****************
  3086 ;; Defined at:
  3087 ;;		line 186 in file "main_master.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  sec             1    wreg     unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  sec             1    2[BANK0 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, pclath, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3101 ;;      Params:         0       0       0       0       0
  3102 ;;      Locals:         0       1       0       0       0
  3103 ;;      Temps:          0       0       0       0       0
  3104 ;;      Totals:         0       1       0       0       0
  3105 ;;Total ram usage:        1 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 5
  3108 ;; This function calls:
  3109 ;;		_Dec_to_Bcd
  3110 ;;		_I2C_Start
  3111 ;;		_I2C_Stop
  3112 ;;		_I2C_Write
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     11EB                     _Set_sec:	
  3119                           ;psect for function _Set_sec
  3120                           
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  3124                           ;Set_sec@sec stored from wreg
  3125     11EB  1283               	bcf	3,5	;RP0=0, select bank0
  3126     11EC  1303               	bcf	3,6	;RP1=0, select bank0
  3127     11ED  00A2               	movwf	Set_sec@sec
  3128     11EE                     l3514:
  3129                           
  3130                           ;main_master.c: 187:     I2C_Start();
  3131     11EE  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3132     11F3                     l3516:
  3133                           
  3134                           ;main_master.c: 188:     I2C_Write(0xD0);
  3135     11F3  30D0               	movlw	208
  3136     11F4  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3137     11F9                     l3518:
  3138                           
  3139                           ;main_master.c: 189:     I2C_Write(0x00);
  3140     11F9  3000               	movlw	0
  3141     11FA  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3142     11FF                     l3520:
  3143                           
  3144                           ;main_master.c: 190:     I2C_Write(Dec_to_Bcd(sec));
  3145     11FF  1283               	bcf	3,5	;RP0=0, select bank0
  3146     1200  1303               	bcf	3,6	;RP1=0, select bank0
  3147     1201  0822               	movf	Set_sec@sec,w
  3148     1202  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3149     1207  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3150     120C                     l3522:
  3151                           
  3152                           ;main_master.c: 191:     I2C_Stop();
  3153     120C  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3154     1211                     l200:
  3155     1211  0008               	return
  3156     1212                     __end_of_Set_sec:
  3157                           
  3158                           	psect	text11
  3159     11C4                     __ptext11:	
  3160 ;; *************** function _Set_month *****************
  3161 ;; Defined at:
  3162 ;;		line 226 in file "main_master.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  month           1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  month           1    2[BANK0 ] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, pclath, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       0       0       0       0
  3177 ;;      Locals:         0       1       0       0       0
  3178 ;;      Temps:          0       0       0       0       0
  3179 ;;      Totals:         0       1       0       0       0
  3180 ;;Total ram usage:        1 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 5
  3183 ;; This function calls:
  3184 ;;		_Dec_to_Bcd
  3185 ;;		_I2C_Start
  3186 ;;		_I2C_Stop
  3187 ;;		_I2C_Write
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193     11C4                     _Set_month:	
  3194                           ;psect for function _Set_month
  3195                           
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  3199                           ;Set_month@month stored from wreg
  3200     11C4  1283               	bcf	3,5	;RP0=0, select bank0
  3201     11C5  1303               	bcf	3,6	;RP1=0, select bank0
  3202     11C6  00A2               	movwf	Set_month@month
  3203     11C7                     l3554:
  3204                           
  3205                           ;main_master.c: 227:     I2C_Start();
  3206     11C7  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3207     11CC                     l3556:
  3208                           
  3209                           ;main_master.c: 228:     I2C_Write(0xD0);
  3210     11CC  30D0               	movlw	208
  3211     11CD  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3212     11D2                     l3558:
  3213                           
  3214                           ;main_master.c: 229:     I2C_Write(0x05);
  3215     11D2  3005               	movlw	5
  3216     11D3  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3217     11D8                     l3560:
  3218                           
  3219                           ;main_master.c: 230:     I2C_Write(Dec_to_Bcd(month));
  3220     11D8  1283               	bcf	3,5	;RP0=0, select bank0
  3221     11D9  1303               	bcf	3,6	;RP1=0, select bank0
  3222     11DA  0822               	movf	Set_month@month,w
  3223     11DB  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3224     11E0  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3225     11E5                     l3562:
  3226                           
  3227                           ;main_master.c: 231:     I2C_Stop();
  3228     11E5  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3229     11EA                     l215:
  3230     11EA  0008               	return
  3231     11EB                     __end_of_Set_month:
  3232                           
  3233                           	psect	text12
  3234     119D                     __ptext12:	
  3235 ;; *************** function _Set_min *****************
  3236 ;; Defined at:
  3237 ;;		line 194 in file "main_master.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  min             1    wreg     unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  min             1    2[BANK0 ] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3251 ;;      Params:         0       0       0       0       0
  3252 ;;      Locals:         0       1       0       0       0
  3253 ;;      Temps:          0       0       0       0       0
  3254 ;;      Totals:         0       1       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 5
  3258 ;; This function calls:
  3259 ;;		_Dec_to_Bcd
  3260 ;;		_I2C_Start
  3261 ;;		_I2C_Stop
  3262 ;;		_I2C_Write
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     119D                     _Set_min:	
  3269                           ;psect for function _Set_min
  3270                           
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _Set_min: [wreg+status,2+status,0+pclath+cstack]
  3274                           ;Set_min@min stored from wreg
  3275     119D  1283               	bcf	3,5	;RP0=0, select bank0
  3276     119E  1303               	bcf	3,6	;RP1=0, select bank0
  3277     119F  00A2               	movwf	Set_min@min
  3278     11A0                     l3524:
  3279                           
  3280                           ;main_master.c: 195:     I2C_Start();
  3281     11A0  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3282     11A5                     l3526:
  3283                           
  3284                           ;main_master.c: 196:     I2C_Write(0xD0);
  3285     11A5  30D0               	movlw	208
  3286     11A6  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3287     11AB                     l3528:
  3288                           
  3289                           ;main_master.c: 197:     I2C_Write(0x01);
  3290     11AB  3001               	movlw	1
  3291     11AC  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3292     11B1                     l3530:
  3293                           
  3294                           ;main_master.c: 198:     I2C_Write(Dec_to_Bcd(min));
  3295     11B1  1283               	bcf	3,5	;RP0=0, select bank0
  3296     11B2  1303               	bcf	3,6	;RP1=0, select bank0
  3297     11B3  0822               	movf	Set_min@min,w
  3298     11B4  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3299     11B9  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3300     11BE                     l3532:
  3301                           
  3302                           ;main_master.c: 199:     I2C_Stop();
  3303     11BE  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3304     11C3                     l203:
  3305     11C3  0008               	return
  3306     11C4                     __end_of_Set_min:
  3307                           
  3308                           	psect	text13
  3309     1176                     __ptext13:	
  3310 ;; *************** function _Set_hour *****************
  3311 ;; Defined at:
  3312 ;;		line 202 in file "main_master.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  hour            1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  hour            1    2[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         0       1       0       0       0
  3328 ;;      Temps:          0       0       0       0       0
  3329 ;;      Totals:         0       1       0       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used: 1
  3332 ;; Hardware stack levels required when called: 5
  3333 ;; This function calls:
  3334 ;;		_Dec_to_Bcd
  3335 ;;		_I2C_Start
  3336 ;;		_I2C_Stop
  3337 ;;		_I2C_Write
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     1176                     _Set_hour:	
  3344                           ;psect for function _Set_hour
  3345                           
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  3349                           ;Set_hour@hour stored from wreg
  3350     1176  1283               	bcf	3,5	;RP0=0, select bank0
  3351     1177  1303               	bcf	3,6	;RP1=0, select bank0
  3352     1178  00A2               	movwf	Set_hour@hour
  3353     1179                     l3534:
  3354                           
  3355                           ;main_master.c: 203:     I2C_Start();
  3356     1179  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3357     117E                     l3536:
  3358                           
  3359                           ;main_master.c: 204:     I2C_Write(0xD0);
  3360     117E  30D0               	movlw	208
  3361     117F  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3362     1184                     l3538:
  3363                           
  3364                           ;main_master.c: 205:     I2C_Write(0x02);
  3365     1184  3002               	movlw	2
  3366     1185  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3367     118A                     l3540:
  3368                           
  3369                           ;main_master.c: 206:     I2C_Write(Dec_to_Bcd(hour));
  3370     118A  1283               	bcf	3,5	;RP0=0, select bank0
  3371     118B  1303               	bcf	3,6	;RP1=0, select bank0
  3372     118C  0822               	movf	Set_hour@hour,w
  3373     118D  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3374     1192  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3375     1197                     l3542:
  3376                           
  3377                           ;main_master.c: 207:     I2C_Stop();
  3378     1197  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3379     119C                     l206:
  3380     119C  0008               	return
  3381     119D                     __end_of_Set_hour:
  3382                           
  3383                           	psect	text14
  3384     114F                     __ptext14:	
  3385 ;; *************** function _Set_day *****************
  3386 ;; Defined at:
  3387 ;;		line 218 in file "main_master.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  day             1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  day             1    2[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       1       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         0       1       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 5
  3408 ;; This function calls:
  3409 ;;		_Dec_to_Bcd
  3410 ;;		_I2C_Start
  3411 ;;		_I2C_Stop
  3412 ;;		_I2C_Write
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418     114F                     _Set_day:	
  3419                           ;psect for function _Set_day
  3420                           
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  3424                           ;Set_day@day stored from wreg
  3425     114F  1283               	bcf	3,5	;RP0=0, select bank0
  3426     1150  1303               	bcf	3,6	;RP1=0, select bank0
  3427     1151  00A2               	movwf	Set_day@day
  3428     1152                     l3544:
  3429                           
  3430                           ;main_master.c: 219:     I2C_Start();
  3431     1152  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3432     1157                     l3546:
  3433                           
  3434                           ;main_master.c: 220:     I2C_Write(0xD0);
  3435     1157  30D0               	movlw	208
  3436     1158  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3437     115D                     l3548:
  3438                           
  3439                           ;main_master.c: 221:     I2C_Write(0x04);
  3440     115D  3004               	movlw	4
  3441     115E  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3442     1163                     l3550:
  3443                           
  3444                           ;main_master.c: 222:     I2C_Write(Dec_to_Bcd(day));
  3445     1163  1283               	bcf	3,5	;RP0=0, select bank0
  3446     1164  1303               	bcf	3,6	;RP1=0, select bank0
  3447     1165  0822               	movf	Set_day@day,w
  3448     1166  160A  118A  203D  160A  118A  	fcall	_Dec_to_Bcd
  3449     116B  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3450     1170                     l3552:
  3451                           
  3452                           ;main_master.c: 223:     I2C_Stop();
  3453     1170  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3454     1175                     l212:
  3455     1175  0008               	return
  3456     1176                     __end_of_Set_day:
  3457                           
  3458                           	psect	text15
  3459     103D                     __ptext15:	
  3460 ;; *************** function _Dec_to_Bcd *****************
  3461 ;; Defined at:
  3462 ;;		line 242 in file "main_master.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  dec_number      1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  dec_number      1    0[BANK0 ] unsigned char 
  3467 ;;  bcd_number      1    1[BANK0 ] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         0       2       0       0       0
  3479 ;;      Temps:          0       0       0       0       0
  3480 ;;      Totals:         0       2       0       0       0
  3481 ;;Total ram usage:        2 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 4
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_Set_sec
  3488 ;;		_Set_min
  3489 ;;		_Set_hour
  3490 ;;		_Set_day
  3491 ;;		_Set_month
  3492 ;;		_Set_year
  3493 ;;		_Set_day_week
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497     103D                     _Dec_to_Bcd:	
  3498                           ;psect for function _Dec_to_Bcd
  3499                           
  3500                           
  3501                           ;incstack = 0
  3502                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  3503                           ;Dec_to_Bcd@dec_number stored from wreg
  3504     103D  1283               	bcf	3,5	;RP0=0, select bank0
  3505     103E  1303               	bcf	3,6	;RP1=0, select bank0
  3506     103F  00A0               	movwf	Dec_to_Bcd@dec_number
  3507     1040                     l3334:
  3508                           
  3509                           ;main_master.c: 243:     uint8_t bcd_number;;main_master.c: 244:     bcd_number = 0;
  3510     1040  01A1               	clrf	Dec_to_Bcd@bcd_number
  3511     1041                     l3336:
  3512                           
  3513                           ;main_master.c: 246:         if (dec_number >= 10){
  3514     1041  300A               	movlw	10
  3515     1042  0220               	subwf	Dec_to_Bcd@dec_number,w
  3516     1043  1C03               	skipc
  3517     1044  2846               	goto	u4111
  3518     1045  2847               	goto	u4110
  3519     1046                     u4111:
  3520     1046  284E               	goto	l3340
  3521     1047                     u4110:
  3522     1047                     l3338:
  3523                           
  3524                           ;main_master.c: 247:             dec_number = dec_number - 10;
  3525     1047  0820               	movf	Dec_to_Bcd@dec_number,w
  3526     1048  3EF6               	addlw	246
  3527     1049  00A0               	movwf	Dec_to_Bcd@dec_number
  3528                           
  3529                           ;main_master.c: 248:             bcd_number = bcd_number + 0b00010000;
  3530     104A  0821               	movf	Dec_to_Bcd@bcd_number,w
  3531     104B  3E10               	addlw	16
  3532     104C  00A1               	movwf	Dec_to_Bcd@bcd_number
  3533                           
  3534                           ;main_master.c: 249:         }
  3535     104D  2841               	goto	l3336
  3536     104E                     l3340:
  3537                           
  3538                           ;main_master.c: 251:             bcd_number = bcd_number + dec_number;
  3539     104E  0820               	movf	Dec_to_Bcd@dec_number,w
  3540     104F  0721               	addwf	Dec_to_Bcd@bcd_number,w
  3541     1050  00A1               	movwf	Dec_to_Bcd@bcd_number
  3542     1051                     l3342:	
  3543                           ;main_master.c: 252:             break;
  3544                           
  3545                           
  3546                           ;main_master.c: 255:     return bcd_number;
  3547     1051  0821               	movf	Dec_to_Bcd@bcd_number,w
  3548     1052                     l226:
  3549     1052  0008               	return
  3550     1053                     __end_of_Dec_to_Bcd:
  3551                           
  3552                           	psect	text16
  3553     133F                     __ptext16:	
  3554 ;; *************** function _Read_Time *****************
  3555 ;; Defined at:
  3556 ;;		line 174 in file "main_master.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  s               1    wreg     PTR unsigned char 
  3559 ;;		 -> segundos(1), 
  3560 ;;  m               1    8[BANK0 ] PTR unsigned char 
  3561 ;;		 -> minutos(1), 
  3562 ;;  h               1    9[BANK0 ] PTR unsigned char 
  3563 ;;		 -> horas(1), 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  s               1   10[BANK0 ] PTR unsigned char 
  3566 ;;		 -> segundos(1), 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3576 ;;      Params:         0       2       0       0       0
  3577 ;;      Locals:         0       1       0       0       0
  3578 ;;      Temps:          0       0       0       0       0
  3579 ;;      Totals:         0       3       0       0       0
  3580 ;;Total ram usage:        3 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; Hardware stack levels required when called: 6
  3583 ;; This function calls:
  3584 ;;		_Bcd_to_Dec
  3585 ;;		_Read
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591     133F                     _Read_Time:	
  3592                           ;psect for function _Read_Time
  3593                           
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3597                           ;Read_Time@s stored from wreg
  3598     133F  1283               	bcf	3,5	;RP0=0, select bank0
  3599     1340  1303               	bcf	3,6	;RP1=0, select bank0
  3600     1341  00AA               	movwf	Read_Time@s
  3601     1342                     l3574:
  3602                           
  3603                           ;main_master.c: 175:     *s = Bcd_to_Dec(Read(0x00));
  3604     1342  082A               	movf	Read_Time@s,w
  3605     1343  0084               	movwf	4
  3606     1344  3000               	movlw	0
  3607     1345  160A  118A  23E9  160A  118A  	fcall	_Read
  3608     134A  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3609     134F  1383               	bcf	3,7	;select IRP bank0
  3610     1350  0080               	movwf	0
  3611                           
  3612                           ;main_master.c: 176:     *m = Bcd_to_Dec(Read(0x01));
  3613     1351  1283               	bcf	3,5	;RP0=0, select bank0
  3614     1352  1303               	bcf	3,6	;RP1=0, select bank0
  3615     1353  0828               	movf	Read_Time@m,w
  3616     1354  0084               	movwf	4
  3617     1355  3001               	movlw	1
  3618     1356  160A  118A  23E9  160A  118A  	fcall	_Read
  3619     135B  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3620     1360  1383               	bcf	3,7	;select IRP bank0
  3621     1361  0080               	movwf	0
  3622                           
  3623                           ;main_master.c: 177:     *h = Bcd_to_Dec(Read(0x02));
  3624     1362  1283               	bcf	3,5	;RP0=0, select bank0
  3625     1363  1303               	bcf	3,6	;RP1=0, select bank0
  3626     1364  0829               	movf	Read_Time@h,w
  3627     1365  0084               	movwf	4
  3628     1366  3002               	movlw	2
  3629     1367  160A  118A  23E9  160A  118A  	fcall	_Read
  3630     136C  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3631     1371  1383               	bcf	3,7	;select IRP bank0
  3632     1372  0080               	movwf	0
  3633     1373                     l194:
  3634     1373  0008               	return
  3635     1374                     __end_of_Read_Time:
  3636                           
  3637                           	psect	text17
  3638     130A                     __ptext17:	
  3639 ;; *************** function _Read_Fecha *****************
  3640 ;; Defined at:
  3641 ;;		line 180 in file "main_master.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  d               1    wreg     PTR unsigned char 
  3644 ;;		 -> dia(1), 
  3645 ;;  mo              1    8[BANK0 ] PTR unsigned char 
  3646 ;;		 -> mes(1), 
  3647 ;;  y               1    9[BANK0 ] PTR unsigned char 
  3648 ;;		 -> ano(1), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  d               1   10[BANK0 ] PTR unsigned char 
  3651 ;;		 -> dia(1), 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       2       0       0       0
  3662 ;;      Locals:         0       1       0       0       0
  3663 ;;      Temps:          0       0       0       0       0
  3664 ;;      Totals:         0       3       0       0       0
  3665 ;;Total ram usage:        3 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 6
  3668 ;; This function calls:
  3669 ;;		_Bcd_to_Dec
  3670 ;;		_Read
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676     130A                     _Read_Fecha:	
  3677                           ;psect for function _Read_Fecha
  3678                           
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _Read_Fecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3682                           ;Read_Fecha@d stored from wreg
  3683     130A  1283               	bcf	3,5	;RP0=0, select bank0
  3684     130B  1303               	bcf	3,6	;RP1=0, select bank0
  3685     130C  00AA               	movwf	Read_Fecha@d
  3686     130D                     l3576:
  3687                           
  3688                           ;main_master.c: 181:     *d = Bcd_to_Dec(Read(0x04));
  3689     130D  082A               	movf	Read_Fecha@d,w
  3690     130E  0084               	movwf	4
  3691     130F  3004               	movlw	4
  3692     1310  160A  118A  23E9  160A  118A  	fcall	_Read
  3693     1315  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3694     131A  1383               	bcf	3,7	;select IRP bank0
  3695     131B  0080               	movwf	0
  3696                           
  3697                           ;main_master.c: 182:     *mo = Bcd_to_Dec(Read(0x05));
  3698     131C  1283               	bcf	3,5	;RP0=0, select bank0
  3699     131D  1303               	bcf	3,6	;RP1=0, select bank0
  3700     131E  0828               	movf	Read_Fecha@mo,w
  3701     131F  0084               	movwf	4
  3702     1320  3005               	movlw	5
  3703     1321  160A  118A  23E9  160A  118A  	fcall	_Read
  3704     1326  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3705     132B  1383               	bcf	3,7	;select IRP bank0
  3706     132C  0080               	movwf	0
  3707                           
  3708                           ;main_master.c: 183:     *y = Bcd_to_Dec(Read(0x06));
  3709     132D  1283               	bcf	3,5	;RP0=0, select bank0
  3710     132E  1303               	bcf	3,6	;RP1=0, select bank0
  3711     132F  0829               	movf	Read_Fecha@y,w
  3712     1330  0084               	movwf	4
  3713     1331  3006               	movlw	6
  3714     1332  160A  118A  23E9  160A  118A  	fcall	_Read
  3715     1337  160A  118A  2089  160A  118A  	fcall	_Bcd_to_Dec
  3716     133C  1383               	bcf	3,7	;select IRP bank0
  3717     133D  0080               	movwf	0
  3718     133E                     l197:
  3719     133E  0008               	return
  3720     133F                     __end_of_Read_Fecha:
  3721                           
  3722                           	psect	text18
  3723     13E9                     __ptext18:	
  3724 ;; *************** function _Read *****************
  3725 ;; Defined at:
  3726 ;;		line 160 in file "main_master.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  address         1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  address         1    2[BANK0 ] unsigned char 
  3731 ;;  dato            1    3[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      unsigned char 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0, pclath, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       0       0       0       0
  3742 ;;      Locals:         0       2       0       0       0
  3743 ;;      Temps:          0       1       0       0       0
  3744 ;;      Totals:         0       3       0       0       0
  3745 ;;Total ram usage:        3 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 5
  3748 ;; This function calls:
  3749 ;;		_I2C_Nack
  3750 ;;		_I2C_Read
  3751 ;;		_I2C_Restart
  3752 ;;		_I2C_Start
  3753 ;;		_I2C_Stop
  3754 ;;		_I2C_Write
  3755 ;; This function is called by:
  3756 ;;		_Read_Time
  3757 ;;		_Read_Fecha
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     13E9                     _Read:	
  3762                           ;psect for function _Read
  3763                           
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  3767                           ;Read@address stored from wreg
  3768     13E9  1283               	bcf	3,5	;RP0=0, select bank0
  3769     13EA  1303               	bcf	3,6	;RP1=0, select bank0
  3770     13EB  00A2               	movwf	Read@address
  3771     13EC                     l3304:
  3772     13EC                     l3306:
  3773                           
  3774                           ;main_master.c: 162:     I2C_Start();
  3775     13EC  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  3776     13F1                     l3308:
  3777                           
  3778                           ;main_master.c: 163:     I2C_Write(0xD0);
  3779     13F1  30D0               	movlw	208
  3780     13F2  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3781     13F7                     l3310:
  3782                           
  3783                           ;main_master.c: 164:     I2C_Write(address);
  3784     13F7  1283               	bcf	3,5	;RP0=0, select bank0
  3785     13F8  1303               	bcf	3,6	;RP1=0, select bank0
  3786     13F9  0822               	movf	Read@address,w
  3787     13FA  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3788     13FF                     l3312:
  3789                           
  3790                           ;main_master.c: 165:     I2C_Restart();
  3791     13FF  160A  158A  2779  160A  118A  	fcall	_I2C_Restart
  3792     1404                     l3314:
  3793                           
  3794                           ;main_master.c: 166:     I2C_Write(0xD1);
  3795     1404  30D1               	movlw	209
  3796     1405  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  3797     140A                     l3316:
  3798                           
  3799                           ;main_master.c: 167:     dato = I2C_Read();
  3800     140A  160A  158A  2798  160A  118A  	fcall	_I2C_Read
  3801     140F  1283               	bcf	3,5	;RP0=0, select bank0
  3802     1410  1303               	bcf	3,6	;RP1=0, select bank0
  3803     1411  00A3               	movwf	Read@dato
  3804     1412                     l3318:
  3805                           
  3806                           ;main_master.c: 168:     I2C_Nack();
  3807     1412  160A  158A  278D  160A  118A  	fcall	_I2C_Nack
  3808     1417                     l3320:
  3809                           
  3810                           ;main_master.c: 169:     I2C_Stop();
  3811     1417  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  3812     141C                     l3322:
  3813                           
  3814                           ;main_master.c: 170:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  3815     141C  3005               	movlw	5
  3816     141D  1283               	bcf	3,5	;RP0=0, select bank0
  3817     141E  1303               	bcf	3,6	;RP1=0, select bank0
  3818     141F  00A1               	movwf	??_Read
  3819     1420                     u4517:
  3820     1420  0BA1               	decfsz	??_Read,f
  3821     1421  2C20               	goto	u4517
  3822     1422  2C23               	nop2
  3823     1423                     l3324:
  3824                           
  3825                           ;main_master.c: 171:     return dato;
  3826     1423  1283               	bcf	3,5	;RP0=0, select bank0
  3827     1424  1303               	bcf	3,6	;RP1=0, select bank0
  3828     1425  0823               	movf	Read@dato,w
  3829     1426                     l191:
  3830     1426  0008               	return
  3831     1427                     __end_of_Read:
  3832                           
  3833                           	psect	text19
  3834     1089                     __ptext19:	
  3835 ;; *************** function _Bcd_to_Dec *****************
  3836 ;; Defined at:
  3837 ;;		line 258 in file "main_master.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  bcd             1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  bcd             1    7[BANK0 ] unsigned char 
  3842 ;;  dec             1    6[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      unsigned char 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       0       0       0       0
  3853 ;;      Locals:         0       2       0       0       0
  3854 ;;      Temps:          0       2       0       0       0
  3855 ;;      Totals:         0       4       0       0       0
  3856 ;;Total ram usage:        4 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 5
  3859 ;; This function calls:
  3860 ;;		___bmul
  3861 ;; This function is called by:
  3862 ;;		_Read_Time
  3863 ;;		_Read_Fecha
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867     1089                     _Bcd_to_Dec:	
  3868                           ;psect for function _Bcd_to_Dec
  3869                           
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  3873                           ;Bcd_to_Dec@bcd stored from wreg
  3874     1089  1283               	bcf	3,5	;RP0=0, select bank0
  3875     108A  1303               	bcf	3,6	;RP1=0, select bank0
  3876     108B  00A7               	movwf	Bcd_to_Dec@bcd
  3877     108C                     l3328:
  3878                           
  3879                           ;main_master.c: 259:     uint8_t dec;;main_master.c: 260:     dec = ((bcd>>4)*10)+(bcd &
      +                           0b00001111);
  3880     108C  300F               	movlw	15
  3881     108D  0527               	andwf	Bcd_to_Dec@bcd,w
  3882     108E  00A4               	movwf	??_Bcd_to_Dec
  3883     108F  300A               	movlw	10
  3884     1090  00A0               	movwf	___bmul@multiplicand
  3885     1091  0827               	movf	Bcd_to_Dec@bcd,w
  3886     1092  00A5               	movwf	??_Bcd_to_Dec+1
  3887     1093  3004               	movlw	4
  3888     1094                     u4105:
  3889     1094  1003               	clrc
  3890     1095  0CA5               	rrf	??_Bcd_to_Dec+1,f
  3891     1096  3EFF               	addlw	-1
  3892     1097  1D03               	skipz
  3893     1098  2894               	goto	u4105
  3894     1099  0825               	movf	??_Bcd_to_Dec+1,w
  3895     109A  160A  158A  27E9  160A  118A  	fcall	___bmul
  3896     109F  1283               	bcf	3,5	;RP0=0, select bank0
  3897     10A0  1303               	bcf	3,6	;RP1=0, select bank0
  3898     10A1  0724               	addwf	??_Bcd_to_Dec,w
  3899     10A2  00A6               	movwf	Bcd_to_Dec@dec
  3900     10A3                     l3330:
  3901                           
  3902                           ;main_master.c: 261:     return dec;
  3903     10A3  0826               	movf	Bcd_to_Dec@dec,w
  3904     10A4                     l229:
  3905     10A4  0008               	return
  3906     10A5                     __end_of_Bcd_to_Dec:
  3907                           
  3908                           	psect	text20
  3909     1FE9                     __ptext20:	
  3910 ;; *************** function ___bmul *****************
  3911 ;; Defined at:
  3912 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  multiplier      1    wreg     unsigned char 
  3915 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3918 ;;  product         1    2[BANK0 ] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      unsigned char 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3928 ;;      Params:         0       1       0       0       0
  3929 ;;      Locals:         0       2       0       0       0
  3930 ;;      Temps:          0       1       0       0       0
  3931 ;;      Totals:         0       4       0       0       0
  3932 ;;Total ram usage:        4 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 4
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_Bcd_to_Dec
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942     1FE9                     ___bmul:	
  3943                           ;psect for function ___bmul
  3944                           
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3948                           ;___bmul@multiplier stored from wreg
  3949     1FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3950     1FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3951     1FEB  00A3               	movwf	___bmul@multiplier
  3952     1FEC                     l2752:
  3953     1FEC  01A2               	clrf	___bmul@product
  3954     1FED                     l2754:
  3955     1FED  1C23               	btfss	___bmul@multiplier,0
  3956     1FEE  2FF0               	goto	u2861
  3957     1FEF  2FF1               	goto	u2860
  3958     1FF0                     u2861:
  3959     1FF0  2FF5               	goto	l2758
  3960     1FF1                     u2860:
  3961     1FF1                     l2756:
  3962     1FF1  0820               	movf	___bmul@multiplicand,w
  3963     1FF2  00A1               	movwf	??___bmul
  3964     1FF3  0821               	movf	??___bmul,w
  3965     1FF4  07A2               	addwf	___bmul@product,f
  3966     1FF5                     l2758:
  3967     1FF5  1003               	clrc
  3968     1FF6  0DA0               	rlf	___bmul@multiplicand,f
  3969     1FF7                     l2760:
  3970     1FF7  1003               	clrc
  3971     1FF8  0CA3               	rrf	___bmul@multiplier,f
  3972     1FF9  0823               	movf	___bmul@multiplier,w
  3973     1FFA  1D03               	btfss	3,2
  3974     1FFB  2FFD               	goto	u2871
  3975     1FFC  2FFE               	goto	u2870
  3976     1FFD                     u2871:
  3977     1FFD  2FED               	goto	l2754
  3978     1FFE                     u2870:
  3979     1FFE                     l2762:
  3980     1FFE  0822               	movf	___bmul@product,w
  3981     1FFF                     l531:
  3982     1FFF  0008               	return
  3983     2000                     __end_of___bmul:
  3984                           
  3985                           	psect	text21
  3986     14FF                     __ptext21:	
  3987 ;; *************** function _Lcd_Init *****************
  3988 ;; Defined at:
  3989 ;;		line 65 in file "LCD.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       2       0       0       0
  4006 ;;      Totals:         0       2       0       0       0
  4007 ;;Total ram usage:        2 bytes
  4008 ;; Hardware stack levels used: 1
  4009 ;; Hardware stack levels required when called: 6
  4010 ;; This function calls:
  4011 ;;		_Lcd_Cmd
  4012 ;;		_Lcd_Port
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     14FF                     _Lcd_Init:	
  4019                           ;psect for function _Lcd_Init
  4020                           
  4021     14FF                     l3464:	
  4022                           ;incstack = 0
  4023                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4024                           
  4025                           
  4026                           ;LCD.c: 66:     Lcd_Port(0x00);
  4027     14FF  3000               	movlw	0
  4028     1500  160A  118A  20A5  160A  118A  	fcall	_Lcd_Port
  4029     1505                     l3466:
  4030                           
  4031                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4032     1505  3034               	movlw	52
  4033     1506  1283               	bcf	3,5	;RP0=0, select bank0
  4034     1507  1303               	bcf	3,6	;RP1=0, select bank0
  4035     1508  00A5               	movwf	??_Lcd_Init+1
  4036     1509  30F1               	movlw	241
  4037     150A  00A4               	movwf	??_Lcd_Init
  4038     150B                     u4527:
  4039     150B  0BA4               	decfsz	??_Lcd_Init,f
  4040     150C  2D0B               	goto	u4527
  4041     150D  0BA5               	decfsz	??_Lcd_Init+1,f
  4042     150E  2D0B               	goto	u4527
  4043     150F                     l3468:
  4044                           
  4045                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  4046     150F  3003               	movlw	3
  4047     1510  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4048                           
  4049                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4050     1515  300D               	movlw	13
  4051     1516  1283               	bcf	3,5	;RP0=0, select bank0
  4052     1517  1303               	bcf	3,6	;RP1=0, select bank0
  4053     1518  00A5               	movwf	??_Lcd_Init+1
  4054     1519  30FB               	movlw	251
  4055     151A  00A4               	movwf	??_Lcd_Init
  4056     151B                     u4537:
  4057     151B  0BA4               	decfsz	??_Lcd_Init,f
  4058     151C  2D1B               	goto	u4537
  4059     151D  0BA5               	decfsz	??_Lcd_Init+1,f
  4060     151E  2D1B               	goto	u4537
  4061     151F                     l3470:
  4062                           
  4063                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  4064     151F  3003               	movlw	3
  4065     1520  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4066     1525                     l3472:
  4067                           
  4068                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  4069     1525  3084               	movlw	132
  4070     1526  1283               	bcf	3,5	;RP0=0, select bank0
  4071     1527  1303               	bcf	3,6	;RP1=0, select bank0
  4072     1528  00A4               	movwf	??_Lcd_Init
  4073     1529                     u4547:
  4074     1529  0BA4               	decfsz	??_Lcd_Init,f
  4075     152A  2D29               	goto	u4547
  4076     152B  0000               	nop
  4077                           
  4078                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  4079     152C  3003               	movlw	3
  4080     152D  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4081                           
  4082                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  4083     1532  3002               	movlw	2
  4084     1533  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4085                           
  4086                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  4087     1538  3002               	movlw	2
  4088     1539  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4089                           
  4090                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  4091     153E  3008               	movlw	8
  4092     153F  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4093                           
  4094                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  4095     1544  3000               	movlw	0
  4096     1545  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4097                           
  4098                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  4099     154A  300C               	movlw	12
  4100     154B  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4101                           
  4102                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  4103     1550  3000               	movlw	0
  4104     1551  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4105                           
  4106                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  4107     1556  3006               	movlw	6
  4108     1557  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  4109     155C                     l3474:
  4110                           
  4111                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  4112     155C  3041               	movlw	65
  4113     155D  1283               	bcf	3,5	;RP0=0, select bank0
  4114     155E  1303               	bcf	3,6	;RP1=0, select bank0
  4115     155F  00A4               	movwf	??_Lcd_Init
  4116     1560                     u4557:
  4117     1560  0BA4               	decfsz	??_Lcd_Init,f
  4118     1561  2D60               	goto	u4557
  4119     1562  2D63               	nop2
  4120     1563                     l294:
  4121     1563  0008               	return
  4122     1564                     __end_of_Lcd_Init:
  4123                           
  4124                           	psect	text22
  4125     1FC8                     __ptext22:	
  4126 ;; *************** function _Lcd_Clear *****************
  4127 ;; Defined at:
  4128 ;;		line 43 in file "LCD.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0
  4145 ;;      Totals:         0       0       0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 6
  4149 ;; This function calls:
  4150 ;;		_Lcd_Cmd
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156     1FC8                     _Lcd_Clear:	
  4157                           ;psect for function _Lcd_Clear
  4158                           
  4159     1FC8                     l3476:	
  4160                           ;incstack = 0
  4161                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4162                           
  4163                           
  4164                           ;LCD.c: 44:     Lcd_Cmd(0);
  4165     1FC8  3000               	movlw	0
  4166     1FC9  160A  118A  206D  160A  158A  	fcall	_Lcd_Cmd
  4167                           
  4168                           ;LCD.c: 45:     Lcd_Cmd(1);
  4169     1FCE  3001               	movlw	1
  4170     1FCF  160A  118A  206D  160A  158A  	fcall	_Lcd_Cmd
  4171     1FD4                     l285:
  4172     1FD4  0008               	return
  4173     1FD5                     __end_of_Lcd_Clear:
  4174                           
  4175                           	psect	text23
  4176     12DD                     __ptext23:	
  4177 ;; *************** function _AHT10_Soft_Reset *****************
  4178 ;; Defined at:
  4179 ;;		line 348 in file "main_master.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;		None
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0
  4195 ;;      Temps:          0       2       0       0       0
  4196 ;;      Totals:         0       2       0       0       0
  4197 ;;Total ram usage:        2 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 5
  4200 ;; This function calls:
  4201 ;;		_I2C_Start
  4202 ;;		_I2C_Stop
  4203 ;;		_I2C_Write
  4204 ;; This function is called by:
  4205 ;;		_main
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209     12DD                     _AHT10_Soft_Reset:	
  4210                           ;psect for function _AHT10_Soft_Reset
  4211                           
  4212     12DD                     l3478:	
  4213                           ;incstack = 0
  4214                           ; Regs used in _AHT10_Soft_Reset: [wreg+status,2+status,0+pclath+cstack]
  4215                           
  4216                           
  4217                           ;main_master.c: 349:     _delay((unsigned long)((40)*(8000000/4000.0)));
  4218     12DD  3068               	movlw	104
  4219     12DE  1283               	bcf	3,5	;RP0=0, select bank0
  4220     12DF  1303               	bcf	3,6	;RP1=0, select bank0
  4221     12E0  00A2               	movwf	??_AHT10_Soft_Reset+1
  4222     12E1  30E3               	movlw	227
  4223     12E2  00A1               	movwf	??_AHT10_Soft_Reset
  4224     12E3                     u4567:
  4225     12E3  0BA1               	decfsz	??_AHT10_Soft_Reset,f
  4226     12E4  2AE3               	goto	u4567
  4227     12E5  0BA2               	decfsz	??_AHT10_Soft_Reset+1,f
  4228     12E6  2AE3               	goto	u4567
  4229     12E7  2AE8               	nop2
  4230     12E8                     l3480:
  4231                           
  4232                           ;main_master.c: 350:     I2C_Start();
  4233     12E8  160A  158A  2783  160A  118A  	fcall	_I2C_Start
  4234                           
  4235                           ;main_master.c: 351:     I2C_Write(0x70);
  4236     12ED  3070               	movlw	112
  4237     12EE  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  4238                           
  4239                           ;main_master.c: 352:     I2C_Write(0xBA);
  4240     12F3  30BA               	movlw	186
  4241     12F4  120A  158A  2005  160A  118A  	fcall	_I2C_Write
  4242     12F9                     l3482:
  4243                           
  4244                           ;main_master.c: 353:     I2C_Stop();
  4245     12F9  120A  118A  27F6  160A  118A  	fcall	_I2C_Stop
  4246                           
  4247                           ;main_master.c: 354:     _delay((unsigned long)((25)*(8000000/4000.0)));
  4248     12FE  3041               	movlw	65
  4249     12FF  1283               	bcf	3,5	;RP0=0, select bank0
  4250     1300  1303               	bcf	3,6	;RP1=0, select bank0
  4251     1301  00A2               	movwf	??_AHT10_Soft_Reset+1
  4252     1302  30ED               	movlw	237
  4253     1303  00A1               	movwf	??_AHT10_Soft_Reset
  4254     1304                     u4577:
  4255     1304  0BA1               	decfsz	??_AHT10_Soft_Reset,f
  4256     1305  2B04               	goto	u4577
  4257     1306  0BA2               	decfsz	??_AHT10_Soft_Reset+1,f
  4258     1307  2B04               	goto	u4577
  4259     1308  2B09               	nop2
  4260     1309                     l241:
  4261     1309  0008               	return
  4262     130A                     __end_of_AHT10_Soft_Reset:
  4263                           
  4264                           	psect	text24
  4265     0A05                     __ptext24:	
  4266 ;; *************** function _AHT10_Read *****************
  4267 ;; Defined at:
  4268 ;;		line 290 in file "main_master.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  data            7   33[BANK1 ] unsigned char [7]
  4273 ;;  temperatura     4   40[BANK1 ] float 
  4274 ;;  r               1    0        unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4284 ;;      Params:         0       0       0       0       0
  4285 ;;      Locals:         0       0      11       0       0
  4286 ;;      Temps:          0       0      14       0       0
  4287 ;;      Totals:         0       0      25       0       0
  4288 ;;Total ram usage:       25 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 7
  4291 ;; This function calls:
  4292 ;;		_I2C_Ack
  4293 ;;		_I2C_Nack
  4294 ;;		_I2C_Read
  4295 ;;		_I2C_Restart
  4296 ;;		_I2C_Start
  4297 ;;		_I2C_Stop
  4298 ;;		_I2C_Write
  4299 ;;		_Lcd_Set_Cursor
  4300 ;;		_Lcd_Write_String
  4301 ;;		___fladd
  4302 ;;		___fldiv
  4303 ;;		___flmul
  4304 ;;		___xxtofl
  4305 ;;		_floattostr
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311     0A05                     _AHT10_Read:	
  4312                           ;psect for function _AHT10_Read
  4313                           
  4314     0A05                     l3578:	
  4315                           ;incstack = 0
  4316                           ; Regs used in _AHT10_Read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4317                           
  4318                           
  4319                           ;main_master.c: 291:     uint8_t data[7];;main_master.c: 292:     float temperatura;;mai
      +                          n_master.c: 294:     uint8_t r;;main_master.c: 295:     I2C_Start();
  4320     0A05  160A  158A  2783  120A  158A  	fcall	_I2C_Start
  4321     0A0A                     l3580:
  4322                           
  4323                           ;main_master.c: 296:     I2C_Write(0x70);
  4324     0A0A  3070               	movlw	112
  4325     0A0B  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4326     0A10                     l3582:
  4327                           
  4328                           ;main_master.c: 297:     I2C_Write(0xAC);
  4329     0A10  30AC               	movlw	172
  4330     0A11  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4331     0A16                     l3584:
  4332                           
  4333                           ;main_master.c: 298:     I2C_Write(0x33);
  4334     0A16  3033               	movlw	51
  4335     0A17  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4336     0A1C                     l3586:
  4337                           
  4338                           ;main_master.c: 299:     I2C_Write(0x00);
  4339     0A1C  3000               	movlw	0
  4340     0A1D  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4341                           
  4342                           ;main_master.c: 300:     I2C_Stop();
  4343     0A22  120A  118A  27F6  120A  158A  	fcall	_I2C_Stop
  4344     0A27                     l3588:
  4345                           
  4346                           ;main_master.c: 301:     _delay((unsigned long)((80)*(8000000/4000.0)));
  4347     0A27  30D0               	movlw	208
  4348     0A28  1683               	bsf	3,5	;RP0=1, select bank1
  4349     0A29  1303               	bcf	3,6	;RP1=0, select bank1
  4350     0A2A  00B4               	movwf	(??_AHT10_Read^(0+128)+1)
  4351     0A2B  30C9               	movlw	201
  4352     0A2C  00B3               	movwf	??_AHT10_Read^(0+128)
  4353     0A2D                     u4587:
  4354     0A2D  0BB3               	decfsz	??_AHT10_Read^(0+128),f
  4355     0A2E  2A2D               	goto	u4587
  4356     0A2F  0BB4               	decfsz	(??_AHT10_Read^(0+128)+1),f
  4357     0A30  2A2D               	goto	u4587
  4358     0A31                     l3590:
  4359                           
  4360                           ;main_master.c: 303:     I2C_Start();
  4361     0A31  160A  158A  2783  120A  158A  	fcall	_I2C_Start
  4362     0A36                     l3592:
  4363                           
  4364                           ;main_master.c: 304:     I2C_Write(0x70);
  4365     0A36  3070               	movlw	112
  4366     0A37  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4367     0A3C                     l3594:
  4368                           
  4369                           ;main_master.c: 305:     I2C_Write(0x71);
  4370     0A3C  3071               	movlw	113
  4371     0A3D  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4372     0A42                     l3596:
  4373                           
  4374                           ;main_master.c: 306:     I2C_Restart();
  4375     0A42  160A  158A  2779  120A  158A  	fcall	_I2C_Restart
  4376                           
  4377                           ;main_master.c: 307:     I2C_Write(0x71);
  4378     0A47  3071               	movlw	113
  4379     0A48  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4380     0A4D                     l3598:
  4381     0A4D  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4382     0A52                     l3600:
  4383                           
  4384                           ;main_master.c: 309:     I2C_Nack();
  4385     0A52  160A  158A  278D  120A  158A  	fcall	_I2C_Nack
  4386     0A57                     l3602:
  4387                           
  4388                           ;main_master.c: 310:     I2C_Stop();
  4389     0A57  120A  118A  27F6  120A  158A  	fcall	_I2C_Stop
  4390     0A5C                     l3604:
  4391     0A5C                     l3606:	
  4392                           ;main_master.c: 313:     while (r != 0b00000000);
  4393                           
  4394     0A5C                     l3608:
  4395                           
  4396                           ;main_master.c: 315:     I2C_Start();
  4397     0A5C  160A  158A  2783  120A  158A  	fcall	_I2C_Start
  4398     0A61                     l3610:
  4399                           
  4400                           ;main_master.c: 316:     I2C_Write(0x71);
  4401     0A61  3071               	movlw	113
  4402     0A62  120A  158A  2005  120A  158A  	fcall	_I2C_Write
  4403     0A67                     l3612:
  4404                           
  4405                           ;main_master.c: 322:     data[0] = I2C_Read();
  4406     0A67  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4407     0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  4408     0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  4409     0A6E  00C1               	movwf	AHT10_Read@data^(0+128)
  4410     0A6F                     l3614:
  4411                           
  4412                           ;main_master.c: 323:     I2C_Ack();
  4413     0A6F  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4414     0A74                     l3616:
  4415                           
  4416                           ;main_master.c: 324:     data[1] = I2C_Read();
  4417     0A74  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4418     0A79  1683               	bsf	3,5	;RP0=1, select bank1
  4419     0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  4420     0A7B  00C2               	movwf	(AHT10_Read@data^(0+128)+1)
  4421     0A7C                     l3618:
  4422                           
  4423                           ;main_master.c: 325:     I2C_Ack();
  4424     0A7C  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4425     0A81                     l3620:
  4426                           
  4427                           ;main_master.c: 326:     data[2] = I2C_Read();
  4428     0A81  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4429     0A86  1683               	bsf	3,5	;RP0=1, select bank1
  4430     0A87  1303               	bcf	3,6	;RP1=0, select bank1
  4431     0A88  00C3               	movwf	(AHT10_Read@data^(0+128)+2)
  4432     0A89                     l3622:
  4433                           
  4434                           ;main_master.c: 327:     I2C_Ack();
  4435     0A89  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4436     0A8E                     l3624:
  4437                           
  4438                           ;main_master.c: 328:     data[3] = I2C_Read();
  4439     0A8E  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4440     0A93  1683               	bsf	3,5	;RP0=1, select bank1
  4441     0A94  1303               	bcf	3,6	;RP1=0, select bank1
  4442     0A95  00C4               	movwf	(AHT10_Read@data^(0+128)+3)
  4443     0A96                     l3626:
  4444                           
  4445                           ;main_master.c: 329:     I2C_Ack();
  4446     0A96  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4447     0A9B                     l3628:
  4448                           
  4449                           ;main_master.c: 330:     data[4] = I2C_Read();
  4450     0A9B  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4451     0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  4452     0AA1  1303               	bcf	3,6	;RP1=0, select bank1
  4453     0AA2  00C5               	movwf	(AHT10_Read@data^(0+128)+4)
  4454     0AA3                     l3630:
  4455                           
  4456                           ;main_master.c: 331:     I2C_Ack();
  4457     0AA3  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4458     0AA8                     l3632:
  4459                           
  4460                           ;main_master.c: 332:     data[5] = I2C_Read();
  4461     0AA8  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4462     0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  4463     0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  4464     0AAF  00C6               	movwf	(AHT10_Read@data^(0+128)+5)
  4465     0AB0                     l3634:
  4466                           
  4467                           ;main_master.c: 333:     I2C_Ack();
  4468     0AB0  160A  158A  27A3  120A  158A  	fcall	_I2C_Ack
  4469     0AB5                     l3636:
  4470                           
  4471                           ;main_master.c: 334:     data[6] = I2C_Read();
  4472     0AB5  160A  158A  2798  120A  158A  	fcall	_I2C_Read
  4473     0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  4474     0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  4475     0ABC  00C7               	movwf	(AHT10_Read@data^(0+128)+6)
  4476     0ABD                     l3638:
  4477                           
  4478                           ;main_master.c: 335:     I2C_Nack();
  4479     0ABD  160A  158A  278D  120A  158A  	fcall	_I2C_Nack
  4480     0AC2                     l3640:
  4481                           
  4482                           ;main_master.c: 336:     I2C_Stop();
  4483     0AC2  120A  118A  27F6  120A  158A  	fcall	_I2C_Stop
  4484     0AC7                     l3642:
  4485                           
  4486                           ;main_master.c: 341:  temperatura = (((uint32_t)data[3] & 0x0F) << 16) + ((uint16_t)data
      +                          [4] << 8) + data[5];
  4487     0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  4488     0AC8  1303               	bcf	3,6	;RP1=0, select bank1
  4489     0AC9  0846               	movf	(AHT10_Read@data^(0+128)+5),w
  4490     0ACA  00B3               	movwf	??_AHT10_Read^(0+128)
  4491     0ACB  01B4               	clrf	(??_AHT10_Read^(0+128)+1)
  4492     0ACC  01B5               	clrf	(??_AHT10_Read^(0+128)+2)
  4493     0ACD  01B6               	clrf	(??_AHT10_Read^(0+128)+3)
  4494     0ACE  0845               	movf	(AHT10_Read@data^(0+128)+4),w
  4495     0ACF  00B7               	movwf	(??_AHT10_Read+4)^(0+128)
  4496     0AD0  01B8               	clrf	((??_AHT10_Read+4)^(0+128)+1)
  4497     0AD1  0837               	movf	(??_AHT10_Read+4)^(0+128),w
  4498     0AD2  00B8               	movwf	((??_AHT10_Read+4)^(0+128)+1)
  4499     0AD3  01B7               	clrf	(??_AHT10_Read+4)^(0+128)
  4500     0AD4  0837               	movf	(??_AHT10_Read+4)^(0+128),w
  4501     0AD5  00B9               	movwf	(??_AHT10_Read+6)^(0+128)
  4502     0AD6  0838               	movf	(??_AHT10_Read+5)^(0+128),w
  4503     0AD7  00BA               	movwf	((??_AHT10_Read+6)^(0+128)+1)
  4504     0AD8  01BB               	clrf	((??_AHT10_Read+6)^(0+128)+2)
  4505     0AD9  01BC               	clrf	((??_AHT10_Read+6)^(0+128)+3)
  4506     0ADA  0844               	movf	(AHT10_Read@data^(0+128)+3),w
  4507     0ADB  390F               	andlw	15
  4508     0ADC  00BD               	movwf	(??_AHT10_Read+10)^(0+128)
  4509     0ADD  01BE               	clrf	((??_AHT10_Read+10)^(0+128)+1)
  4510     0ADE  01BF               	clrf	((??_AHT10_Read+10)^(0+128)+2)
  4511     0ADF  01C0               	clrf	((??_AHT10_Read+10)^(0+128)+3)
  4512     0AE0  3010               	movlw	16
  4513     0AE1                     u4325:
  4514     0AE1  1003               	clrc
  4515     0AE2  0DBD               	rlf	(??_AHT10_Read+10)^(0+128),f
  4516     0AE3  0DBE               	rlf	((??_AHT10_Read+10)^(0+128)+1),f
  4517     0AE4  0DBF               	rlf	((??_AHT10_Read+10)^(0+128)+2),f
  4518     0AE5  0DC0               	rlf	((??_AHT10_Read+10)^(0+128)+3),f
  4519     0AE6                     u4320:
  4520     0AE6  3EFF               	addlw	-1
  4521     0AE7  1D03               	skipz
  4522     0AE8  2AE1               	goto	u4325
  4523     0AE9  083D               	movf	(??_AHT10_Read+10)^(0+128),w
  4524     0AEA  07B9               	addwf	(??_AHT10_Read+6)^(0+128),f
  4525     0AEB  083E               	movf	(??_AHT10_Read+11)^(0+128),w
  4526     0AEC  1803               	skipnc
  4527     0AED  0F3E               	incfsz	(??_AHT10_Read+11)^(0+128),w
  4528     0AEE  2AF0               	goto	u4330
  4529     0AEF  2AF1               	goto	u4331
  4530     0AF0                     u4330:
  4531     0AF0  07BA               	addwf	((??_AHT10_Read+6)^(0+128)+1),f
  4532     0AF1                     u4331:
  4533     0AF1  083F               	movf	(??_AHT10_Read+12)^(0+128),w
  4534     0AF2  1803               	skipnc
  4535     0AF3  0F3F               	incfsz	(??_AHT10_Read+12)^(0+128),w
  4536     0AF4  2AF6               	goto	u4332
  4537     0AF5  2AF7               	goto	u4333
  4538     0AF6                     u4332:
  4539     0AF6  07BB               	addwf	((??_AHT10_Read+6)^(0+128)+2),f
  4540     0AF7                     u4333:
  4541     0AF7  0840               	movf	(??_AHT10_Read+13)^(0+128),w
  4542     0AF8  1803               	skipnc
  4543     0AF9  0A40               	incf	(??_AHT10_Read+13)^(0+128),w
  4544     0AFA  07BC               	addwf	((??_AHT10_Read+6)^(0+128)+3),f
  4545     0AFB  0839               	movf	(??_AHT10_Read+6)^(0+128),w
  4546     0AFC  07B3               	addwf	??_AHT10_Read^(0+128),f
  4547     0AFD  083A               	movf	(??_AHT10_Read+7)^(0+128),w
  4548     0AFE  1803               	skipnc
  4549     0AFF  0F3A               	incfsz	(??_AHT10_Read+7)^(0+128),w
  4550     0B00  2B02               	goto	u4340
  4551     0B01  2B03               	goto	u4341
  4552     0B02                     u4340:
  4553     0B02  07B4               	addwf	(??_AHT10_Read^(0+128)+1),f
  4554     0B03                     u4341:
  4555     0B03  083B               	movf	(??_AHT10_Read+8)^(0+128),w
  4556     0B04  1803               	skipnc
  4557     0B05  0F3B               	incfsz	(??_AHT10_Read+8)^(0+128),w
  4558     0B06  2B08               	goto	u4342
  4559     0B07  2B09               	goto	u4343
  4560     0B08                     u4342:
  4561     0B08  07B5               	addwf	(??_AHT10_Read^(0+128)+2),f
  4562     0B09                     u4343:
  4563     0B09  083C               	movf	(??_AHT10_Read+9)^(0+128),w
  4564     0B0A  1803               	skipnc
  4565     0B0B  0A3C               	incf	(??_AHT10_Read+9)^(0+128),w
  4566     0B0C  07B6               	addwf	(??_AHT10_Read^(0+128)+3),f
  4567     0B0D  0836               	movf	(??_AHT10_Read+3)^(0+128),w
  4568     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  4569     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  4570     0B10  00A3               	movwf	___xxtofl@val+3
  4571     0B11  1683               	bsf	3,5	;RP0=1, select bank1
  4572     0B12  1303               	bcf	3,6	;RP1=0, select bank1
  4573     0B13  0835               	movf	(??_AHT10_Read+2)^(0+128),w
  4574     0B14  1283               	bcf	3,5	;RP0=0, select bank0
  4575     0B15  1303               	bcf	3,6	;RP1=0, select bank0
  4576     0B16  00A2               	movwf	___xxtofl@val+2
  4577     0B17  1683               	bsf	3,5	;RP0=1, select bank1
  4578     0B18  1303               	bcf	3,6	;RP1=0, select bank1
  4579     0B19  0834               	movf	(??_AHT10_Read+1)^(0+128),w
  4580     0B1A  1283               	bcf	3,5	;RP0=0, select bank0
  4581     0B1B  1303               	bcf	3,6	;RP1=0, select bank0
  4582     0B1C  00A1               	movwf	___xxtofl@val+1
  4583     0B1D  1683               	bsf	3,5	;RP0=1, select bank1
  4584     0B1E  1303               	bcf	3,6	;RP1=0, select bank1
  4585     0B1F  0833               	movf	??_AHT10_Read^(0+128),w
  4586     0B20  1283               	bcf	3,5	;RP0=0, select bank0
  4587     0B21  1303               	bcf	3,6	;RP1=0, select bank0
  4588     0B22  00A0               	movwf	___xxtofl@val
  4589     0B23  3000               	movlw	0
  4590     0B24  160A  118A  2608  120A  158A  	fcall	___xxtofl
  4591     0B29  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0B2B  0823               	movf	?___xxtofl+3,w
  4594     0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  4595     0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  4596     0B2E  00CB               	movwf	(AHT10_Read@temperatura+3)^(0+128)
  4597     0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  4598     0B30  1303               	bcf	3,6	;RP1=0, select bank0
  4599     0B31  0822               	movf	?___xxtofl+2,w
  4600     0B32  1683               	bsf	3,5	;RP0=1, select bank1
  4601     0B33  1303               	bcf	3,6	;RP1=0, select bank1
  4602     0B34  00CA               	movwf	(AHT10_Read@temperatura+2)^(0+128)
  4603     0B35  1283               	bcf	3,5	;RP0=0, select bank0
  4604     0B36  1303               	bcf	3,6	;RP1=0, select bank0
  4605     0B37  0821               	movf	?___xxtofl+1,w
  4606     0B38  1683               	bsf	3,5	;RP0=1, select bank1
  4607     0B39  1303               	bcf	3,6	;RP1=0, select bank1
  4608     0B3A  00C9               	movwf	(AHT10_Read@temperatura+1)^(0+128)
  4609     0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  4610     0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  4611     0B3D  0820               	movf	?___xxtofl,w
  4612     0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  4613     0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  4614     0B40  00C8               	movwf	AHT10_Read@temperatura^(0+128)
  4615     0B41                     l3644:
  4616                           
  4617                           ;main_master.c: 342:     temperatura = ((temperatura/1048576)*200-50);
  4618     0B41  30C2               	movlw	194
  4619     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  4620     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  4621     0B44  00D7               	movwf	___fladd@b+3
  4622     0B45  3048               	movlw	72
  4623     0B46  00D6               	movwf	___fladd@b+2
  4624     0B47  3000               	movlw	0
  4625     0B48  00D5               	movwf	___fladd@b+1
  4626     0B49  3000               	movlw	0
  4627     0B4A  00D4               	movwf	___fladd@b
  4628     0B4B  3043               	movlw	67
  4629     0B4C  00BD               	movwf	___flmul@b+3
  4630     0B4D  3048               	movlw	72
  4631     0B4E  00BC               	movwf	___flmul@b+2
  4632     0B4F  3000               	movlw	0
  4633     0B50  00BB               	movwf	___flmul@b+1
  4634     0B51  3000               	movlw	0
  4635     0B52  00BA               	movwf	___flmul@b
  4636     0B53  3049               	movlw	73
  4637     0B54  00A3               	movwf	___fldiv@a+3
  4638     0B55  3080               	movlw	128
  4639     0B56  00A2               	movwf	___fldiv@a+2
  4640     0B57  3000               	movlw	0
  4641     0B58  00A1               	movwf	___fldiv@a+1
  4642     0B59  3000               	movlw	0
  4643     0B5A  00A0               	movwf	___fldiv@a
  4644     0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  4645     0B5C  1303               	bcf	3,6	;RP1=0, select bank1
  4646     0B5D  084B               	movf	(AHT10_Read@temperatura+3)^(0+128),w
  4647     0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  4648     0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  4649     0B60  00A7               	movwf	___fldiv@b+3
  4650     0B61  1683               	bsf	3,5	;RP0=1, select bank1
  4651     0B62  1303               	bcf	3,6	;RP1=0, select bank1
  4652     0B63  084A               	movf	(AHT10_Read@temperatura+2)^(0+128),w
  4653     0B64  1283               	bcf	3,5	;RP0=0, select bank0
  4654     0B65  1303               	bcf	3,6	;RP1=0, select bank0
  4655     0B66  00A6               	movwf	___fldiv@b+2
  4656     0B67  1683               	bsf	3,5	;RP0=1, select bank1
  4657     0B68  1303               	bcf	3,6	;RP1=0, select bank1
  4658     0B69  0849               	movf	(AHT10_Read@temperatura+1)^(0+128),w
  4659     0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  4660     0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  4661     0B6C  00A5               	movwf	___fldiv@b+1
  4662     0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  4663     0B6E  1303               	bcf	3,6	;RP1=0, select bank1
  4664     0B6F  0848               	movf	AHT10_Read@temperatura^(0+128),w
  4665     0B70  1283               	bcf	3,5	;RP0=0, select bank0
  4666     0B71  1303               	bcf	3,6	;RP1=0, select bank0
  4667     0B72  00A4               	movwf	___fldiv@b
  4668     0B73  120A  158A  23D5  120A  158A  	fcall	___fldiv
  4669     0B78  1283               	bcf	3,5	;RP0=0, select bank0
  4670     0B79  1303               	bcf	3,6	;RP1=0, select bank0
  4671     0B7A  0823               	movf	?___fldiv+3,w
  4672     0B7B  00C1               	movwf	___flmul@a+3
  4673     0B7C  0822               	movf	?___fldiv+2,w
  4674     0B7D  00C0               	movwf	___flmul@a+2
  4675     0B7E  0821               	movf	?___fldiv+1,w
  4676     0B7F  00BF               	movwf	___flmul@a+1
  4677     0B80  0820               	movf	?___fldiv,w
  4678     0B81  00BE               	movwf	___flmul@a
  4679     0B82  120A  118A  2439  120A  158A  	fcall	___flmul
  4680     0B87  1283               	bcf	3,5	;RP0=0, select bank0
  4681     0B88  1303               	bcf	3,6	;RP1=0, select bank0
  4682     0B89  083D               	movf	?___flmul+3,w
  4683     0B8A  00DB               	movwf	___fladd@a+3
  4684     0B8B  083C               	movf	?___flmul+2,w
  4685     0B8C  00DA               	movwf	___fladd@a+2
  4686     0B8D  083B               	movf	?___flmul+1,w
  4687     0B8E  00D9               	movwf	___fladd@a+1
  4688     0B8F  083A               	movf	?___flmul,w
  4689     0B90  00D8               	movwf	___fladd@a
  4690     0B91  120A  158A  25A8  120A  158A  	fcall	___fladd
  4691     0B96  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0B97  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0B98  0857               	movf	?___fladd+3,w
  4694     0B99  1683               	bsf	3,5	;RP0=1, select bank1
  4695     0B9A  1303               	bcf	3,6	;RP1=0, select bank1
  4696     0B9B  00CB               	movwf	(AHT10_Read@temperatura+3)^(0+128)
  4697     0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  4698     0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  4699     0B9E  0856               	movf	?___fladd+2,w
  4700     0B9F  1683               	bsf	3,5	;RP0=1, select bank1
  4701     0BA0  1303               	bcf	3,6	;RP1=0, select bank1
  4702     0BA1  00CA               	movwf	(AHT10_Read@temperatura+2)^(0+128)
  4703     0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  4704     0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  4705     0BA4  0855               	movf	?___fladd+1,w
  4706     0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  4707     0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  4708     0BA7  00C9               	movwf	(AHT10_Read@temperatura+1)^(0+128)
  4709     0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  4710     0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  4711     0BAA  0854               	movf	?___fladd,w
  4712     0BAB  1683               	bsf	3,5	;RP0=1, select bank1
  4713     0BAC  1303               	bcf	3,6	;RP1=0, select bank1
  4714     0BAD  00C8               	movwf	AHT10_Read@temperatura^(0+128)
  4715     0BAE                     l3646:
  4716                           
  4717                           ;main_master.c: 343:     floattostr(temperatura, buffer2, 2);
  4718     0BAE  084B               	movf	(AHT10_Read@temperatura+3)^(0+128),w
  4719     0BAF  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4720     0BB0  084A               	movf	(AHT10_Read@temperatura+2)^(0+128),w
  4721     0BB1  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4722     0BB2  0849               	movf	(AHT10_Read@temperatura+1)^(0+128),w
  4723     0BB3  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4724     0BB4  0848               	movf	AHT10_Read@temperatura^(0+128),w
  4725     0BB5  00A0               	movwf	floattostr@numero_^(0+128)
  4726     0BB6  3010               	movlw	(low (_buffer2| (0+256)))& (0+255)
  4727     0BB7  00A4               	movwf	floattostr@cadena_^(0+128)
  4728     0BB8  3002               	movlw	2
  4729     0BB9  00A5               	movwf	floattostr@decimales_^(0+128)
  4730     0BBA  120A  118A  2033  120A  158A  	fcall	_floattostr
  4731     0BBF                     l3648:
  4732                           
  4733                           ;main_master.c: 344:     Lcd_Set_Cursor(1,12);
  4734     0BBF  300C               	movlw	12
  4735     0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  4736     0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  4737     0BC2  00A4               	movwf	Lcd_Set_Cursor@b
  4738     0BC3  3001               	movlw	1
  4739     0BC4  160A  118A  24B3  120A  158A  	fcall	_Lcd_Set_Cursor
  4740     0BC9                     l3650:
  4741                           
  4742                           ;main_master.c: 345:     Lcd_Write_String(buffer2);
  4743     0BC9  3010               	movlw	(low (_buffer2| (0+256)))& (0+255)
  4744     0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  4745     0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  4746     0BCC  00A5               	movwf	Lcd_Write_String@a
  4747     0BCD  3001               	movlw	1
  4748     0BCE  00A6               	movwf	Lcd_Write_String@a+1
  4749     0BCF  160A  118A  2427  120A  158A  	fcall	_Lcd_Write_String
  4750     0BD4                     l238:
  4751     0BD4  0008               	return
  4752     0BD5                     __end_of_AHT10_Read:
  4753                           
  4754                           	psect	text25
  4755     0033                     __ptext25:	
  4756 ;; *************** function _floattostr *****************
  4757 ;; Defined at:
  4758 ;;		line 11 in file "./float_str.h"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  numero_         4    0[BANK1 ] float 
  4761 ;;  cadena_         1    4[BANK1 ] PTR unsigned char 
  4762 ;;		 -> buffer2(48), 
  4763 ;;  decimales_      1    5[BANK1 ] unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  tempo_float     4    9[BANK1 ] unsigned char 
  4766 ;;  largo_entera    2   17[BANK1 ] int 
  4767 ;;  cont_for        2   15[BANK1 ] int 
  4768 ;;  largo_n         2   13[BANK1 ] int 
  4769 ;;  tempo_int       2    7[BANK1 ] int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       0       6       0       0
  4780 ;;      Locals:         0       0      12       0       0
  4781 ;;      Temps:          0       0       1       0       0
  4782 ;;      Totals:         0       0      19       0       0
  4783 ;;Total ram usage:       19 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 6
  4786 ;; This function calls:
  4787 ;;		___fladd
  4788 ;;		___fldiv
  4789 ;;		___flge
  4790 ;;		___flmul
  4791 ;;		___flneg
  4792 ;;		___flsub
  4793 ;;		___fltol
  4794 ;;		___xxtofl
  4795 ;; This function is called by:
  4796 ;;		_AHT10_Read
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800     0033                     _floattostr:	
  4801                           ;psect for function _floattostr
  4802                           
  4803     0033                     l3172:	
  4804                           ;incstack = 0
  4805                           ; Regs used in _floattostr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4806                           
  4807                           
  4808                           ;./float_str.h: 11: void floattostr(float numero_, unsigned char *cadena_,char decimales
      +                          _);./float_str.h: 12: {;./float_str.h: 13:     int largo_entera,largo_n,cont_for,tempo_i
      +                          nt;;./float_str.h: 14:     double tempo_float;;./float_str.h: 15:     largo_n = decimale
      +                          s_+1;
  4809     0033  1683               	bsf	3,5	;RP0=1, select bank1
  4810     0034  1303               	bcf	3,6	;RP1=0, select bank1
  4811     0035  0825               	movf	floattostr@decimales_^(0+128),w
  4812     0036  3E01               	addlw	1
  4813     0037  00AD               	movwf	floattostr@largo_n^(0+128)
  4814     0038  3000               	movlw	0
  4815     0039  1803               	skipnc
  4816     003A  3001               	movlw	1
  4817     003B  00AE               	movwf	(floattostr@largo_n^(0+128)+1)
  4818     003C                     l3174:
  4819                           
  4820                           ;./float_str.h: 16:     largo_entera = 0;
  4821     003C  01B1               	clrf	floattostr@largo_entera^(0+128)
  4822     003D  01B2               	clrf	(floattostr@largo_entera+1)^(0+128)
  4823     003E                     l3176:
  4824                           
  4825                           ;./float_str.h: 18:     if(numero_ < 0)
  4826     003E  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4827     003F  1283               	bcf	3,5	;RP0=0, select bank0
  4828     0040  1303               	bcf	3,6	;RP1=0, select bank0
  4829     0041  00A3               	movwf	___flge@ff1+3
  4830     0042  1683               	bsf	3,5	;RP0=1, select bank1
  4831     0043  1303               	bcf	3,6	;RP1=0, select bank1
  4832     0044  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4833     0045  1283               	bcf	3,5	;RP0=0, select bank0
  4834     0046  1303               	bcf	3,6	;RP1=0, select bank0
  4835     0047  00A2               	movwf	___flge@ff1+2
  4836     0048  1683               	bsf	3,5	;RP0=1, select bank1
  4837     0049  1303               	bcf	3,6	;RP1=0, select bank1
  4838     004A  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4839     004B  1283               	bcf	3,5	;RP0=0, select bank0
  4840     004C  1303               	bcf	3,6	;RP1=0, select bank0
  4841     004D  00A1               	movwf	___flge@ff1+1
  4842     004E  1683               	bsf	3,5	;RP0=1, select bank1
  4843     004F  1303               	bcf	3,6	;RP1=0, select bank1
  4844     0050  0820               	movf	floattostr@numero_^(0+128),w
  4845     0051  1283               	bcf	3,5	;RP0=0, select bank0
  4846     0052  1303               	bcf	3,6	;RP1=0, select bank0
  4847     0053  00A0               	movwf	___flge@ff1
  4848     0054  3000               	movlw	0
  4849     0055  00A7               	movwf	___flge@ff2+3
  4850     0056  3000               	movlw	0
  4851     0057  00A6               	movwf	___flge@ff2+2
  4852     0058  3000               	movlw	0
  4853     0059  00A5               	movwf	___flge@ff2+1
  4854     005A  3000               	movlw	0
  4855     005B  00A4               	movwf	___flge@ff2
  4856     005C  160A  118A  2564  120A  118A  	fcall	___flge
  4857     0061  1803               	btfsc	3,0
  4858     0062  2864               	goto	u3901
  4859     0063  2865               	goto	u3900
  4860     0064                     u3901:
  4861     0064  28A3               	goto	l3184
  4862     0065                     u3900:
  4863     0065                     l3178:
  4864                           
  4865                           ;./float_str.h: 19:     {;./float_str.h: 20:         *cadena_++ = '-';
  4866     0065  1683               	bsf	3,5	;RP0=1, select bank1
  4867     0066  1303               	bcf	3,6	;RP1=0, select bank1
  4868     0067  0824               	movf	floattostr@cadena_^(0+128),w
  4869     0068  0084               	movwf	4
  4870     0069  302D               	movlw	45
  4871     006A  1783               	bsf	3,7	;select IRP bank2
  4872     006B  0080               	movwf	0
  4873     006C                     l3180:
  4874     006C  3001               	movlw	1
  4875     006D  00A6               	movwf	??_floattostr^(0+128)
  4876     006E  0826               	movf	??_floattostr^(0+128),w
  4877     006F  07A4               	addwf	floattostr@cadena_^(0+128),f
  4878     0070                     l3182:
  4879                           
  4880                           ;./float_str.h: 21:         numero_ = -numero_;
  4881     0070  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4882     0071  1283               	bcf	3,5	;RP0=0, select bank0
  4883     0072  1303               	bcf	3,6	;RP1=0, select bank0
  4884     0073  00A3               	movwf	___flneg@f1+3
  4885     0074  1683               	bsf	3,5	;RP0=1, select bank1
  4886     0075  1303               	bcf	3,6	;RP1=0, select bank1
  4887     0076  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4888     0077  1283               	bcf	3,5	;RP0=0, select bank0
  4889     0078  1303               	bcf	3,6	;RP1=0, select bank0
  4890     0079  00A2               	movwf	___flneg@f1+2
  4891     007A  1683               	bsf	3,5	;RP0=1, select bank1
  4892     007B  1303               	bcf	3,6	;RP1=0, select bank1
  4893     007C  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4894     007D  1283               	bcf	3,5	;RP0=0, select bank0
  4895     007E  1303               	bcf	3,6	;RP1=0, select bank0
  4896     007F  00A1               	movwf	___flneg@f1+1
  4897     0080  1683               	bsf	3,5	;RP0=1, select bank1
  4898     0081  1303               	bcf	3,6	;RP1=0, select bank1
  4899     0082  0820               	movf	floattostr@numero_^(0+128),w
  4900     0083  1283               	bcf	3,5	;RP0=0, select bank0
  4901     0084  1303               	bcf	3,6	;RP1=0, select bank0
  4902     0085  00A0               	movwf	___flneg@f1
  4903     0086  160A  158A  27BB  120A  118A  	fcall	___flneg
  4904     008B  1283               	bcf	3,5	;RP0=0, select bank0
  4905     008C  1303               	bcf	3,6	;RP1=0, select bank0
  4906     008D  0823               	movf	?___flneg+3,w
  4907     008E  1683               	bsf	3,5	;RP0=1, select bank1
  4908     008F  1303               	bcf	3,6	;RP1=0, select bank1
  4909     0090  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  4910     0091  1283               	bcf	3,5	;RP0=0, select bank0
  4911     0092  1303               	bcf	3,6	;RP1=0, select bank0
  4912     0093  0822               	movf	?___flneg+2,w
  4913     0094  1683               	bsf	3,5	;RP0=1, select bank1
  4914     0095  1303               	bcf	3,6	;RP1=0, select bank1
  4915     0096  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  4916     0097  1283               	bcf	3,5	;RP0=0, select bank0
  4917     0098  1303               	bcf	3,6	;RP1=0, select bank0
  4918     0099  0821               	movf	?___flneg+1,w
  4919     009A  1683               	bsf	3,5	;RP0=1, select bank1
  4920     009B  1303               	bcf	3,6	;RP1=0, select bank1
  4921     009C  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  4922     009D  1283               	bcf	3,5	;RP0=0, select bank0
  4923     009E  1303               	bcf	3,6	;RP1=0, select bank0
  4924     009F  0820               	movf	?___flneg,w
  4925     00A0  1683               	bsf	3,5	;RP0=1, select bank1
  4926     00A1  1303               	bcf	3,6	;RP1=0, select bank1
  4927     00A2  00A0               	movwf	floattostr@numero_^(0+128)
  4928     00A3                     l3184:
  4929                           
  4930                           ;./float_str.h: 23:     if(numero_ > 0.0) while (numero_ < 1.0)
  4931     00A3  3000               	movlw	0
  4932     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  4933     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  4934     00A6  00A3               	movwf	___flge@ff1+3
  4935     00A7  3000               	movlw	0
  4936     00A8  00A2               	movwf	___flge@ff1+2
  4937     00A9  3000               	movlw	0
  4938     00AA  00A1               	movwf	___flge@ff1+1
  4939     00AB  3000               	movlw	0
  4940     00AC  00A0               	movwf	___flge@ff1
  4941     00AD  1683               	bsf	3,5	;RP0=1, select bank1
  4942     00AE  1303               	bcf	3,6	;RP1=0, select bank1
  4943     00AF  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4944     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  4945     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  4946     00B2  00A7               	movwf	___flge@ff2+3
  4947     00B3  1683               	bsf	3,5	;RP0=1, select bank1
  4948     00B4  1303               	bcf	3,6	;RP1=0, select bank1
  4949     00B5  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4950     00B6  1283               	bcf	3,5	;RP0=0, select bank0
  4951     00B7  1303               	bcf	3,6	;RP1=0, select bank0
  4952     00B8  00A6               	movwf	___flge@ff2+2
  4953     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  4954     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  4955     00BB  0821               	movf	(floattostr@numero_+1)^(0+128),w
  4956     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4957     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4958     00BE  00A5               	movwf	___flge@ff2+1
  4959     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  4960     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  4961     00C1  0820               	movf	floattostr@numero_^(0+128),w
  4962     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4963     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4964     00C4  00A4               	movwf	___flge@ff2
  4965     00C5  160A  118A  2564  120A  118A  	fcall	___flge
  4966     00CA  1803               	btfsc	3,0
  4967     00CB  28CD               	goto	u3911
  4968     00CC  28CE               	goto	u3910
  4969     00CD                     u3911:
  4970     00CD  2983               	goto	l3198
  4971     00CE                     u3910:
  4972     00CE  2914               	goto	l3192
  4973     00CF                     l3188:
  4974                           
  4975                           ;./float_str.h: 24:     {;./float_str.h: 25:         numero_ =numero_* 10.0;
  4976     00CF  3041               	movlw	65
  4977     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  4978     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  4979     00D2  00BD               	movwf	___flmul@b+3
  4980     00D3  3020               	movlw	32
  4981     00D4  00BC               	movwf	___flmul@b+2
  4982     00D5  3000               	movlw	0
  4983     00D6  00BB               	movwf	___flmul@b+1
  4984     00D7  3000               	movlw	0
  4985     00D8  00BA               	movwf	___flmul@b
  4986     00D9  1683               	bsf	3,5	;RP0=1, select bank1
  4987     00DA  1303               	bcf	3,6	;RP1=0, select bank1
  4988     00DB  0823               	movf	(floattostr@numero_+3)^(0+128),w
  4989     00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4990     00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4991     00DE  00C1               	movwf	___flmul@a+3
  4992     00DF  1683               	bsf	3,5	;RP0=1, select bank1
  4993     00E0  1303               	bcf	3,6	;RP1=0, select bank1
  4994     00E1  0822               	movf	(floattostr@numero_+2)^(0+128),w
  4995     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4996     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4997     00E4  00C0               	movwf	___flmul@a+2
  4998     00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4999     00E6  1303               	bcf	3,6	;RP1=0, select bank1
  5000     00E7  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5001     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  5002     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  5003     00EA  00BF               	movwf	___flmul@a+1
  5004     00EB  1683               	bsf	3,5	;RP0=1, select bank1
  5005     00EC  1303               	bcf	3,6	;RP1=0, select bank1
  5006     00ED  0820               	movf	floattostr@numero_^(0+128),w
  5007     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5008     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  5009     00F0  00BE               	movwf	___flmul@a
  5010     00F1  120A  118A  2439  120A  118A  	fcall	___flmul
  5011     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  5012     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  5013     00F8  083D               	movf	?___flmul+3,w
  5014     00F9  1683               	bsf	3,5	;RP0=1, select bank1
  5015     00FA  1303               	bcf	3,6	;RP1=0, select bank1
  5016     00FB  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5017     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  5018     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  5019     00FE  083C               	movf	?___flmul+2,w
  5020     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  5021     0100  1303               	bcf	3,6	;RP1=0, select bank1
  5022     0101  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5023     0102  1283               	bcf	3,5	;RP0=0, select bank0
  5024     0103  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0104  083B               	movf	?___flmul+1,w
  5026     0105  1683               	bsf	3,5	;RP0=1, select bank1
  5027     0106  1303               	bcf	3,6	;RP1=0, select bank1
  5028     0107  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5029     0108  1283               	bcf	3,5	;RP0=0, select bank0
  5030     0109  1303               	bcf	3,6	;RP1=0, select bank0
  5031     010A  083A               	movf	?___flmul,w
  5032     010B  1683               	bsf	3,5	;RP0=1, select bank1
  5033     010C  1303               	bcf	3,6	;RP1=0, select bank1
  5034     010D  00A0               	movwf	floattostr@numero_^(0+128)
  5035     010E                     l3190:
  5036                           
  5037                           ;./float_str.h: 26:         largo_entera--;
  5038     010E  30FF               	movlw	255
  5039     010F  07B1               	addwf	floattostr@largo_entera^(0+128),f
  5040     0110  1803               	skipnc
  5041     0111  0AB2               	incf	(floattostr@largo_entera+1)^(0+128),f
  5042     0112  30FF               	movlw	255
  5043     0113  07B2               	addwf	(floattostr@largo_entera+1)^(0+128),f
  5044     0114                     l3192:
  5045                           
  5046                           ;./float_str.h: 23:     if(numero_ > 0.0) while (numero_ < 1.0)
  5047     0114  1683               	bsf	3,5	;RP0=1, select bank1
  5048     0115  1303               	bcf	3,6	;RP1=0, select bank1
  5049     0116  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5050     0117  1283               	bcf	3,5	;RP0=0, select bank0
  5051     0118  1303               	bcf	3,6	;RP1=0, select bank0
  5052     0119  00A3               	movwf	___flge@ff1+3
  5053     011A  1683               	bsf	3,5	;RP0=1, select bank1
  5054     011B  1303               	bcf	3,6	;RP1=0, select bank1
  5055     011C  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5056     011D  1283               	bcf	3,5	;RP0=0, select bank0
  5057     011E  1303               	bcf	3,6	;RP1=0, select bank0
  5058     011F  00A2               	movwf	___flge@ff1+2
  5059     0120  1683               	bsf	3,5	;RP0=1, select bank1
  5060     0121  1303               	bcf	3,6	;RP1=0, select bank1
  5061     0122  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5062     0123  1283               	bcf	3,5	;RP0=0, select bank0
  5063     0124  1303               	bcf	3,6	;RP1=0, select bank0
  5064     0125  00A1               	movwf	___flge@ff1+1
  5065     0126  1683               	bsf	3,5	;RP0=1, select bank1
  5066     0127  1303               	bcf	3,6	;RP1=0, select bank1
  5067     0128  0820               	movf	floattostr@numero_^(0+128),w
  5068     0129  1283               	bcf	3,5	;RP0=0, select bank0
  5069     012A  1303               	bcf	3,6	;RP1=0, select bank0
  5070     012B  00A0               	movwf	___flge@ff1
  5071     012C  303F               	movlw	63
  5072     012D  00A7               	movwf	___flge@ff2+3
  5073     012E  3080               	movlw	128
  5074     012F  00A6               	movwf	___flge@ff2+2
  5075     0130  3000               	movlw	0
  5076     0131  00A5               	movwf	___flge@ff2+1
  5077     0132  3000               	movlw	0
  5078     0133  00A4               	movwf	___flge@ff2
  5079     0134  160A  118A  2564  120A  118A  	fcall	___flge
  5080     0139  1C03               	btfss	3,0
  5081     013A  293C               	goto	u3921
  5082     013B  293D               	goto	u3920
  5083     013C                     u3921:
  5084     013C  28CF               	goto	l3188
  5085     013D                     u3920:
  5086     013D  2983               	goto	l3198
  5087     013E                     l3194:
  5088                           
  5089                           ;./float_str.h: 29:     {;./float_str.h: 30:         numero_ = numero_/10.0;
  5090     013E  3041               	movlw	65
  5091     013F  1283               	bcf	3,5	;RP0=0, select bank0
  5092     0140  1303               	bcf	3,6	;RP1=0, select bank0
  5093     0141  00A3               	movwf	___fldiv@a+3
  5094     0142  3020               	movlw	32
  5095     0143  00A2               	movwf	___fldiv@a+2
  5096     0144  3000               	movlw	0
  5097     0145  00A1               	movwf	___fldiv@a+1
  5098     0146  3000               	movlw	0
  5099     0147  00A0               	movwf	___fldiv@a
  5100     0148  1683               	bsf	3,5	;RP0=1, select bank1
  5101     0149  1303               	bcf	3,6	;RP1=0, select bank1
  5102     014A  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5103     014B  1283               	bcf	3,5	;RP0=0, select bank0
  5104     014C  1303               	bcf	3,6	;RP1=0, select bank0
  5105     014D  00A7               	movwf	___fldiv@b+3
  5106     014E  1683               	bsf	3,5	;RP0=1, select bank1
  5107     014F  1303               	bcf	3,6	;RP1=0, select bank1
  5108     0150  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5109     0151  1283               	bcf	3,5	;RP0=0, select bank0
  5110     0152  1303               	bcf	3,6	;RP1=0, select bank0
  5111     0153  00A6               	movwf	___fldiv@b+2
  5112     0154  1683               	bsf	3,5	;RP0=1, select bank1
  5113     0155  1303               	bcf	3,6	;RP1=0, select bank1
  5114     0156  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5115     0157  1283               	bcf	3,5	;RP0=0, select bank0
  5116     0158  1303               	bcf	3,6	;RP1=0, select bank0
  5117     0159  00A5               	movwf	___fldiv@b+1
  5118     015A  1683               	bsf	3,5	;RP0=1, select bank1
  5119     015B  1303               	bcf	3,6	;RP1=0, select bank1
  5120     015C  0820               	movf	floattostr@numero_^(0+128),w
  5121     015D  1283               	bcf	3,5	;RP0=0, select bank0
  5122     015E  1303               	bcf	3,6	;RP1=0, select bank0
  5123     015F  00A4               	movwf	___fldiv@b
  5124     0160  120A  158A  23D5  120A  118A  	fcall	___fldiv
  5125     0165  1283               	bcf	3,5	;RP0=0, select bank0
  5126     0166  1303               	bcf	3,6	;RP1=0, select bank0
  5127     0167  0823               	movf	?___fldiv+3,w
  5128     0168  1683               	bsf	3,5	;RP0=1, select bank1
  5129     0169  1303               	bcf	3,6	;RP1=0, select bank1
  5130     016A  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5131     016B  1283               	bcf	3,5	;RP0=0, select bank0
  5132     016C  1303               	bcf	3,6	;RP1=0, select bank0
  5133     016D  0822               	movf	?___fldiv+2,w
  5134     016E  1683               	bsf	3,5	;RP0=1, select bank1
  5135     016F  1303               	bcf	3,6	;RP1=0, select bank1
  5136     0170  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5137     0171  1283               	bcf	3,5	;RP0=0, select bank0
  5138     0172  1303               	bcf	3,6	;RP1=0, select bank0
  5139     0173  0821               	movf	?___fldiv+1,w
  5140     0174  1683               	bsf	3,5	;RP0=1, select bank1
  5141     0175  1303               	bcf	3,6	;RP1=0, select bank1
  5142     0176  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5143     0177  1283               	bcf	3,5	;RP0=0, select bank0
  5144     0178  1303               	bcf	3,6	;RP1=0, select bank0
  5145     0179  0820               	movf	?___fldiv,w
  5146     017A  1683               	bsf	3,5	;RP0=1, select bank1
  5147     017B  1303               	bcf	3,6	;RP1=0, select bank1
  5148     017C  00A0               	movwf	floattostr@numero_^(0+128)
  5149     017D                     l3196:
  5150                           
  5151                           ;./float_str.h: 31:         largo_entera++;
  5152     017D  3001               	movlw	1
  5153     017E  07B1               	addwf	floattostr@largo_entera^(0+128),f
  5154     017F  1803               	skipnc
  5155     0180  0AB2               	incf	(floattostr@largo_entera+1)^(0+128),f
  5156     0181  3000               	movlw	0
  5157     0182  07B2               	addwf	(floattostr@largo_entera+1)^(0+128),f
  5158     0183                     l3198:
  5159                           
  5160                           ;./float_str.h: 28:     while(numero_ >= 10.0)
  5161     0183  1683               	bsf	3,5	;RP0=1, select bank1
  5162     0184  1303               	bcf	3,6	;RP1=0, select bank1
  5163     0185  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5164     0186  1283               	bcf	3,5	;RP0=0, select bank0
  5165     0187  1303               	bcf	3,6	;RP1=0, select bank0
  5166     0188  00A3               	movwf	___flge@ff1+3
  5167     0189  1683               	bsf	3,5	;RP0=1, select bank1
  5168     018A  1303               	bcf	3,6	;RP1=0, select bank1
  5169     018B  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5170     018C  1283               	bcf	3,5	;RP0=0, select bank0
  5171     018D  1303               	bcf	3,6	;RP1=0, select bank0
  5172     018E  00A2               	movwf	___flge@ff1+2
  5173     018F  1683               	bsf	3,5	;RP0=1, select bank1
  5174     0190  1303               	bcf	3,6	;RP1=0, select bank1
  5175     0191  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5176     0192  1283               	bcf	3,5	;RP0=0, select bank0
  5177     0193  1303               	bcf	3,6	;RP1=0, select bank0
  5178     0194  00A1               	movwf	___flge@ff1+1
  5179     0195  1683               	bsf	3,5	;RP0=1, select bank1
  5180     0196  1303               	bcf	3,6	;RP1=0, select bank1
  5181     0197  0820               	movf	floattostr@numero_^(0+128),w
  5182     0198  1283               	bcf	3,5	;RP0=0, select bank0
  5183     0199  1303               	bcf	3,6	;RP1=0, select bank0
  5184     019A  00A0               	movwf	___flge@ff1
  5185     019B  3041               	movlw	65
  5186     019C  00A7               	movwf	___flge@ff2+3
  5187     019D  3020               	movlw	32
  5188     019E  00A6               	movwf	___flge@ff2+2
  5189     019F  3000               	movlw	0
  5190     01A0  00A5               	movwf	___flge@ff2+1
  5191     01A1  3000               	movlw	0
  5192     01A2  00A4               	movwf	___flge@ff2
  5193     01A3  160A  118A  2564  120A  118A  	fcall	___flge
  5194     01A8  1803               	btfsc	3,0
  5195     01A9  29AB               	goto	u3931
  5196     01AA  29AC               	goto	u3930
  5197     01AB                     u3931:
  5198     01AB  293E               	goto	l3194
  5199     01AC                     u3930:
  5200     01AC                     l3200:
  5201                           
  5202                           ;./float_str.h: 33:     largo_n = largo_n+largo_entera;
  5203     01AC  1683               	bsf	3,5	;RP0=1, select bank1
  5204     01AD  1303               	bcf	3,6	;RP1=0, select bank1
  5205     01AE  0831               	movf	floattostr@largo_entera^(0+128),w
  5206     01AF  072D               	addwf	floattostr@largo_n^(0+128),w
  5207     01B0  00AD               	movwf	floattostr@largo_n^(0+128)
  5208     01B1  0832               	movf	(floattostr@largo_entera+1)^(0+128),w
  5209     01B2  1803               	skipnc
  5210     01B3  0A32               	incf	(floattostr@largo_entera+1)^(0+128),w
  5211     01B4  072E               	addwf	(floattostr@largo_n+1)^(0+128),w
  5212     01B5  00AE               	movwf	(floattostr@largo_n+1)^(0+128)
  5213     01B6                     l3202:
  5214                           
  5215                           ;./float_str.h: 35:     for(tempo_float = cont_for = 1; cont_for < largo_n; cont_for++)
  5216     01B6  3001               	movlw	1
  5217     01B7  00AF               	movwf	floattostr@cont_for^(0+128)
  5218     01B8  3000               	movlw	0
  5219     01B9  00B0               	movwf	(floattostr@cont_for^(0+128)+1)
  5220     01BA  082F               	movf	floattostr@cont_for^(0+128),w
  5221     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  5222     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  5223     01BD  00A0               	movwf	___xxtofl@val
  5224     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  5225     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  5226     01C0  0830               	movf	(floattostr@cont_for+1)^(0+128),w
  5227     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  5228     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  5229     01C3  00A1               	movwf	___xxtofl@val+1
  5230     01C4  3000               	movlw	0
  5231     01C5  1BA1               	btfsc	___xxtofl@val+1,7
  5232     01C6  30FF               	movlw	255
  5233     01C7  00A2               	movwf	___xxtofl@val+2
  5234     01C8  00A3               	movwf	___xxtofl@val+3
  5235     01C9  3001               	movlw	1
  5236     01CA  160A  118A  2608  120A  118A  	fcall	___xxtofl
  5237     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  5238     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  5239     01D1  0823               	movf	?___xxtofl+3,w
  5240     01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5241     01D3  1303               	bcf	3,6	;RP1=0, select bank1
  5242     01D4  00AC               	movwf	(floattostr@tempo_float+3)^(0+128)
  5243     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  5244     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  5245     01D7  0822               	movf	?___xxtofl+2,w
  5246     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  5247     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  5248     01DA  00AB               	movwf	(floattostr@tempo_float+2)^(0+128)
  5249     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5250     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5251     01DD  0821               	movf	?___xxtofl+1,w
  5252     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  5253     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  5254     01E0  00AA               	movwf	(floattostr@tempo_float+1)^(0+128)
  5255     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  5256     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  5257     01E3  0820               	movf	?___xxtofl,w
  5258     01E4  1683               	bsf	3,5	;RP0=1, select bank1
  5259     01E5  1303               	bcf	3,6	;RP1=0, select bank1
  5260     01E6  00A9               	movwf	floattostr@tempo_float^(0+128)
  5261     01E7  2A2D               	goto	l3208
  5262     01E8                     l3204:
  5263                           
  5264                           ;./float_str.h: 36:         tempo_float = tempo_float/10.0;
  5265     01E8  3041               	movlw	65
  5266     01E9  1283               	bcf	3,5	;RP0=0, select bank0
  5267     01EA  1303               	bcf	3,6	;RP1=0, select bank0
  5268     01EB  00A3               	movwf	___fldiv@a+3
  5269     01EC  3020               	movlw	32
  5270     01ED  00A2               	movwf	___fldiv@a+2
  5271     01EE  3000               	movlw	0
  5272     01EF  00A1               	movwf	___fldiv@a+1
  5273     01F0  3000               	movlw	0
  5274     01F1  00A0               	movwf	___fldiv@a
  5275     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  5276     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  5277     01F4  082C               	movf	(floattostr@tempo_float+3)^(0+128),w
  5278     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  5279     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  5280     01F7  00A7               	movwf	___fldiv@b+3
  5281     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  5282     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  5283     01FA  082B               	movf	(floattostr@tempo_float+2)^(0+128),w
  5284     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  5285     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  5286     01FD  00A6               	movwf	___fldiv@b+2
  5287     01FE  1683               	bsf	3,5	;RP0=1, select bank1
  5288     01FF  1303               	bcf	3,6	;RP1=0, select bank1
  5289     0200  082A               	movf	(floattostr@tempo_float+1)^(0+128),w
  5290     0201  1283               	bcf	3,5	;RP0=0, select bank0
  5291     0202  1303               	bcf	3,6	;RP1=0, select bank0
  5292     0203  00A5               	movwf	___fldiv@b+1
  5293     0204  1683               	bsf	3,5	;RP0=1, select bank1
  5294     0205  1303               	bcf	3,6	;RP1=0, select bank1
  5295     0206  0829               	movf	floattostr@tempo_float^(0+128),w
  5296     0207  1283               	bcf	3,5	;RP0=0, select bank0
  5297     0208  1303               	bcf	3,6	;RP1=0, select bank0
  5298     0209  00A4               	movwf	___fldiv@b
  5299     020A  120A  158A  23D5  120A  118A  	fcall	___fldiv
  5300     020F  1283               	bcf	3,5	;RP0=0, select bank0
  5301     0210  1303               	bcf	3,6	;RP1=0, select bank0
  5302     0211  0823               	movf	?___fldiv+3,w
  5303     0212  1683               	bsf	3,5	;RP0=1, select bank1
  5304     0213  1303               	bcf	3,6	;RP1=0, select bank1
  5305     0214  00AC               	movwf	(floattostr@tempo_float+3)^(0+128)
  5306     0215  1283               	bcf	3,5	;RP0=0, select bank0
  5307     0216  1303               	bcf	3,6	;RP1=0, select bank0
  5308     0217  0822               	movf	?___fldiv+2,w
  5309     0218  1683               	bsf	3,5	;RP0=1, select bank1
  5310     0219  1303               	bcf	3,6	;RP1=0, select bank1
  5311     021A  00AB               	movwf	(floattostr@tempo_float+2)^(0+128)
  5312     021B  1283               	bcf	3,5	;RP0=0, select bank0
  5313     021C  1303               	bcf	3,6	;RP1=0, select bank0
  5314     021D  0821               	movf	?___fldiv+1,w
  5315     021E  1683               	bsf	3,5	;RP0=1, select bank1
  5316     021F  1303               	bcf	3,6	;RP1=0, select bank1
  5317     0220  00AA               	movwf	(floattostr@tempo_float+1)^(0+128)
  5318     0221  1283               	bcf	3,5	;RP0=0, select bank0
  5319     0222  1303               	bcf	3,6	;RP1=0, select bank0
  5320     0223  0820               	movf	?___fldiv,w
  5321     0224  1683               	bsf	3,5	;RP0=1, select bank1
  5322     0225  1303               	bcf	3,6	;RP1=0, select bank1
  5323     0226  00A9               	movwf	floattostr@tempo_float^(0+128)
  5324     0227                     l3206:
  5325     0227  3001               	movlw	1
  5326     0228  07AF               	addwf	floattostr@cont_for^(0+128),f
  5327     0229  1803               	skipnc
  5328     022A  0AB0               	incf	(floattostr@cont_for+1)^(0+128),f
  5329     022B  3000               	movlw	0
  5330     022C  07B0               	addwf	(floattostr@cont_for+1)^(0+128),f
  5331     022D                     l3208:
  5332     022D  0830               	movf	(floattostr@cont_for+1)^(0+128),w
  5333     022E  3A80               	xorlw	128
  5334     022F  00A6               	movwf	??_floattostr^(0+128)
  5335     0230  082E               	movf	(floattostr@largo_n+1)^(0+128),w
  5336     0231  3A80               	xorlw	128
  5337     0232  0226               	subwf	??_floattostr^(0+128),w
  5338     0233  1D03               	skipz
  5339     0234  2A37               	goto	u3945
  5340     0235  082D               	movf	floattostr@largo_n^(0+128),w
  5341     0236  022F               	subwf	floattostr@cont_for^(0+128),w
  5342     0237                     u3945:
  5343     0237  1C03               	skipc
  5344     0238  2A3A               	goto	u3941
  5345     0239  2A3B               	goto	u3940
  5346     023A                     u3941:
  5347     023A  29E8               	goto	l3204
  5348     023B                     u3940:
  5349     023B                     l3210:
  5350                           
  5351                           ;./float_str.h: 37:     numero_ += tempo_float/2.0;
  5352     023B  1683               	bsf	3,5	;RP0=1, select bank1
  5353     023C  1303               	bcf	3,6	;RP1=0, select bank1
  5354     023D  082C               	movf	(floattostr@tempo_float+3)^(0+128),w
  5355     023E  1283               	bcf	3,5	;RP0=0, select bank0
  5356     023F  1303               	bcf	3,6	;RP1=0, select bank0
  5357     0240  00A7               	movwf	___fldiv@b+3
  5358     0241  1683               	bsf	3,5	;RP0=1, select bank1
  5359     0242  1303               	bcf	3,6	;RP1=0, select bank1
  5360     0243  082B               	movf	(floattostr@tempo_float+2)^(0+128),w
  5361     0244  1283               	bcf	3,5	;RP0=0, select bank0
  5362     0245  1303               	bcf	3,6	;RP1=0, select bank0
  5363     0246  00A6               	movwf	___fldiv@b+2
  5364     0247  1683               	bsf	3,5	;RP0=1, select bank1
  5365     0248  1303               	bcf	3,6	;RP1=0, select bank1
  5366     0249  082A               	movf	(floattostr@tempo_float+1)^(0+128),w
  5367     024A  1283               	bcf	3,5	;RP0=0, select bank0
  5368     024B  1303               	bcf	3,6	;RP1=0, select bank0
  5369     024C  00A5               	movwf	___fldiv@b+1
  5370     024D  1683               	bsf	3,5	;RP0=1, select bank1
  5371     024E  1303               	bcf	3,6	;RP1=0, select bank1
  5372     024F  0829               	movf	floattostr@tempo_float^(0+128),w
  5373     0250  1283               	bcf	3,5	;RP0=0, select bank0
  5374     0251  1303               	bcf	3,6	;RP1=0, select bank0
  5375     0252  00A4               	movwf	___fldiv@b
  5376     0253  3040               	movlw	64
  5377     0254  00A3               	movwf	___fldiv@a+3
  5378     0255  3000               	movlw	0
  5379     0256  00A2               	movwf	___fldiv@a+2
  5380     0257  3000               	movlw	0
  5381     0258  00A1               	movwf	___fldiv@a+1
  5382     0259  3000               	movlw	0
  5383     025A  00A0               	movwf	___fldiv@a
  5384     025B  120A  158A  23D5  120A  118A  	fcall	___fldiv
  5385     0260  1283               	bcf	3,5	;RP0=0, select bank0
  5386     0261  1303               	bcf	3,6	;RP1=0, select bank0
  5387     0262  0823               	movf	?___fldiv+3,w
  5388     0263  00D7               	movwf	___fladd@b+3
  5389     0264  0822               	movf	?___fldiv+2,w
  5390     0265  00D6               	movwf	___fladd@b+2
  5391     0266  0821               	movf	?___fldiv+1,w
  5392     0267  00D5               	movwf	___fladd@b+1
  5393     0268  0820               	movf	?___fldiv,w
  5394     0269  00D4               	movwf	___fladd@b
  5395     026A  1683               	bsf	3,5	;RP0=1, select bank1
  5396     026B  1303               	bcf	3,6	;RP1=0, select bank1
  5397     026C  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5398     026D  1283               	bcf	3,5	;RP0=0, select bank0
  5399     026E  1303               	bcf	3,6	;RP1=0, select bank0
  5400     026F  00DB               	movwf	___fladd@a+3
  5401     0270  1683               	bsf	3,5	;RP0=1, select bank1
  5402     0271  1303               	bcf	3,6	;RP1=0, select bank1
  5403     0272  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5404     0273  1283               	bcf	3,5	;RP0=0, select bank0
  5405     0274  1303               	bcf	3,6	;RP1=0, select bank0
  5406     0275  00DA               	movwf	___fladd@a+2
  5407     0276  1683               	bsf	3,5	;RP0=1, select bank1
  5408     0277  1303               	bcf	3,6	;RP1=0, select bank1
  5409     0278  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5410     0279  1283               	bcf	3,5	;RP0=0, select bank0
  5411     027A  1303               	bcf	3,6	;RP1=0, select bank0
  5412     027B  00D9               	movwf	___fladd@a+1
  5413     027C  1683               	bsf	3,5	;RP0=1, select bank1
  5414     027D  1303               	bcf	3,6	;RP1=0, select bank1
  5415     027E  0820               	movf	floattostr@numero_^(0+128),w
  5416     027F  1283               	bcf	3,5	;RP0=0, select bank0
  5417     0280  1303               	bcf	3,6	;RP1=0, select bank0
  5418     0281  00D8               	movwf	___fladd@a
  5419     0282  120A  158A  25A8  120A  118A  	fcall	___fladd
  5420     0287  1283               	bcf	3,5	;RP0=0, select bank0
  5421     0288  1303               	bcf	3,6	;RP1=0, select bank0
  5422     0289  0857               	movf	?___fladd+3,w
  5423     028A  1683               	bsf	3,5	;RP0=1, select bank1
  5424     028B  1303               	bcf	3,6	;RP1=0, select bank1
  5425     028C  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5426     028D  1283               	bcf	3,5	;RP0=0, select bank0
  5427     028E  1303               	bcf	3,6	;RP1=0, select bank0
  5428     028F  0856               	movf	?___fladd+2,w
  5429     0290  1683               	bsf	3,5	;RP0=1, select bank1
  5430     0291  1303               	bcf	3,6	;RP1=0, select bank1
  5431     0292  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5432     0293  1283               	bcf	3,5	;RP0=0, select bank0
  5433     0294  1303               	bcf	3,6	;RP1=0, select bank0
  5434     0295  0855               	movf	?___fladd+1,w
  5435     0296  1683               	bsf	3,5	;RP0=1, select bank1
  5436     0297  1303               	bcf	3,6	;RP1=0, select bank1
  5437     0298  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5438     0299  1283               	bcf	3,5	;RP0=0, select bank0
  5439     029A  1303               	bcf	3,6	;RP1=0, select bank0
  5440     029B  0854               	movf	?___fladd,w
  5441     029C  1683               	bsf	3,5	;RP0=1, select bank1
  5442     029D  1303               	bcf	3,6	;RP1=0, select bank1
  5443     029E  00A0               	movwf	floattostr@numero_^(0+128)
  5444     029F                     l3212:
  5445                           
  5446                           ;./float_str.h: 38:     if(numero_ >= 10.0)
  5447     029F  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5448     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  5449     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  5450     02A2  00A3               	movwf	___flge@ff1+3
  5451     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  5452     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  5453     02A5  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5454     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  5455     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  5456     02A8  00A2               	movwf	___flge@ff1+2
  5457     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  5458     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  5459     02AB  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5460     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  5461     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  5462     02AE  00A1               	movwf	___flge@ff1+1
  5463     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  5464     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  5465     02B1  0820               	movf	floattostr@numero_^(0+128),w
  5466     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  5467     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  5468     02B4  00A0               	movwf	___flge@ff1
  5469     02B5  3041               	movlw	65
  5470     02B6  00A7               	movwf	___flge@ff2+3
  5471     02B7  3020               	movlw	32
  5472     02B8  00A6               	movwf	___flge@ff2+2
  5473     02B9  3000               	movlw	0
  5474     02BA  00A5               	movwf	___flge@ff2+1
  5475     02BB  3000               	movlw	0
  5476     02BC  00A4               	movwf	___flge@ff2
  5477     02BD  160A  118A  2564  120A  118A  	fcall	___flge
  5478     02C2  1C03               	btfss	3,0
  5479     02C3  2AC5               	goto	u3951
  5480     02C4  2AC6               	goto	u3950
  5481     02C5                     u3951:
  5482     02C5  2AD6               	goto	l3216
  5483     02C6                     u3950:
  5484     02C6                     l3214:
  5485                           
  5486                           ;./float_str.h: 39:     {;./float_str.h: 40:         numero_ = 1.0; largo_entera++;
  5487     02C6  303F               	movlw	63
  5488     02C7  1683               	bsf	3,5	;RP0=1, select bank1
  5489     02C8  1303               	bcf	3,6	;RP1=0, select bank1
  5490     02C9  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5491     02CA  3080               	movlw	128
  5492     02CB  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5493     02CC  3000               	movlw	0
  5494     02CD  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5495     02CE  3000               	movlw	0
  5496     02CF  00A0               	movwf	floattostr@numero_^(0+128)
  5497     02D0  3001               	movlw	1
  5498     02D1  07B1               	addwf	floattostr@largo_entera^(0+128),f
  5499     02D2  1803               	skipnc
  5500     02D3  0AB2               	incf	(floattostr@largo_entera+1)^(0+128),f
  5501     02D4  3000               	movlw	0
  5502     02D5  07B2               	addwf	(floattostr@largo_entera+1)^(0+128),f
  5503     02D6                     l3216:
  5504                           
  5505                           ;./float_str.h: 42:     if(largo_entera<0)
  5506     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  5507     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  5508     02D8  1FB2               	btfss	(floattostr@largo_entera+1)^(0+128),7
  5509     02D9  2ADB               	goto	u3961
  5510     02DA  2ADC               	goto	u3960
  5511     02DB                     u3961:
  5512     02DB  2B1D               	goto	l3238
  5513     02DC                     u3960:
  5514     02DC                     l3218:
  5515                           
  5516                           ;./float_str.h: 43:     {;./float_str.h: 44:         *cadena_++ = '0'; *cadena_++ = '.';
  5517     02DC  0824               	movf	floattostr@cadena_^(0+128),w
  5518     02DD  0084               	movwf	4
  5519     02DE  3030               	movlw	48
  5520     02DF  1783               	bsf	3,7	;select IRP bank2
  5521     02E0  0080               	movwf	0
  5522     02E1                     l3220:
  5523     02E1  3001               	movlw	1
  5524     02E2  00A6               	movwf	??_floattostr^(0+128)
  5525     02E3  0826               	movf	??_floattostr^(0+128),w
  5526     02E4  07A4               	addwf	floattostr@cadena_^(0+128),f
  5527     02E5                     l3222:
  5528     02E5  0824               	movf	floattostr@cadena_^(0+128),w
  5529     02E6  0084               	movwf	4
  5530     02E7  302E               	movlw	46
  5531     02E8  0080               	movwf	0
  5532     02E9  3001               	movlw	1
  5533     02EA  00A6               	movwf	??_floattostr^(0+128)
  5534     02EB  0826               	movf	??_floattostr^(0+128),w
  5535     02EC  07A4               	addwf	floattostr@cadena_^(0+128),f
  5536     02ED                     l3224:
  5537                           
  5538                           ;./float_str.h: 45:         if(largo_n < 0) largo_entera = largo_entera-largo_n;
  5539     02ED  1FAE               	btfss	(floattostr@largo_n+1)^(0+128),7
  5540     02EE  2AF0               	goto	u3971
  5541     02EF  2AF1               	goto	u3970
  5542     02F0                     u3971:
  5543     02F0  2AF9               	goto	l3228
  5544     02F1                     u3970:
  5545     02F1                     l3226:
  5546     02F1  082D               	movf	floattostr@largo_n^(0+128),w
  5547     02F2  0231               	subwf	floattostr@largo_entera^(0+128),w
  5548     02F3  00B1               	movwf	floattostr@largo_entera^(0+128)
  5549     02F4  082E               	movf	(floattostr@largo_n+1)^(0+128),w
  5550     02F5  1C03               	skipc
  5551     02F6  0A2E               	incf	(floattostr@largo_n+1)^(0+128),w
  5552     02F7  0232               	subwf	(floattostr@largo_entera+1)^(0+128),w
  5553     02F8  00B2               	movwf	(floattostr@largo_entera+1)^(0+128)
  5554     02F9                     l3228:
  5555                           
  5556                           ;./float_str.h: 46:         for(cont_for = -1; cont_for > largo_entera; cont_for--) *cad
      +                          ena_++ = '0';
  5557     02F9  30FF               	movlw	255
  5558     02FA  00AF               	movwf	floattostr@cont_for^(0+128)
  5559     02FB  30FF               	movlw	255
  5560     02FC  00B0               	movwf	(floattostr@cont_for^(0+128)+1)
  5561     02FD  2B0F               	goto	l3236
  5562     02FE                     l3230:
  5563     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  5564     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  5565     0300  0824               	movf	floattostr@cadena_^(0+128),w
  5566     0301  0084               	movwf	4
  5567     0302  3030               	movlw	48
  5568     0303  1783               	bsf	3,7	;select IRP bank2
  5569     0304  0080               	movwf	0
  5570     0305                     l3232:
  5571     0305  3001               	movlw	1
  5572     0306  00A6               	movwf	??_floattostr^(0+128)
  5573     0307  0826               	movf	??_floattostr^(0+128),w
  5574     0308  07A4               	addwf	floattostr@cadena_^(0+128),f
  5575     0309                     l3234:
  5576     0309  30FF               	movlw	255
  5577     030A  07AF               	addwf	floattostr@cont_for^(0+128),f
  5578     030B  1803               	skipnc
  5579     030C  0AB0               	incf	(floattostr@cont_for+1)^(0+128),f
  5580     030D  30FF               	movlw	255
  5581     030E  07B0               	addwf	(floattostr@cont_for+1)^(0+128),f
  5582     030F                     l3236:
  5583     030F  0832               	movf	(floattostr@largo_entera+1)^(0+128),w
  5584     0310  3A80               	xorlw	128
  5585     0311  00A6               	movwf	??_floattostr^(0+128)
  5586     0312  0830               	movf	(floattostr@cont_for+1)^(0+128),w
  5587     0313  3A80               	xorlw	128
  5588     0314  0226               	subwf	??_floattostr^(0+128),w
  5589     0315  1D03               	skipz
  5590     0316  2B19               	goto	u3985
  5591     0317  082F               	movf	floattostr@cont_for^(0+128),w
  5592     0318  0231               	subwf	floattostr@largo_entera^(0+128),w
  5593     0319                     u3985:
  5594     0319  1C03               	skipc
  5595     031A  2B1C               	goto	u3981
  5596     031B  2B1D               	goto	u3980
  5597     031C                     u3981:
  5598     031C  2AFE               	goto	l3230
  5599     031D                     u3980:
  5600     031D                     l3238:
  5601                           
  5602                           ;./float_str.h: 48:     for(cont_for=0; cont_for < largo_n; cont_for++)
  5603     031D  1683               	bsf	3,5	;RP0=1, select bank1
  5604     031E  1303               	bcf	3,6	;RP1=0, select bank1
  5605     031F  01AF               	clrf	floattostr@cont_for^(0+128)
  5606     0320  01B0               	clrf	(floattostr@cont_for+1)^(0+128)
  5607     0321  2C24               	goto	l3258
  5608     0322                     l3240:
  5609                           
  5610                           ;./float_str.h: 49:     {;./float_str.h: 50:         tempo_int = numero_;
  5611     0322  1683               	bsf	3,5	;RP0=1, select bank1
  5612     0323  1303               	bcf	3,6	;RP1=0, select bank1
  5613     0324  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5614     0325  1283               	bcf	3,5	;RP0=0, select bank0
  5615     0326  1303               	bcf	3,6	;RP1=0, select bank0
  5616     0327  00A3               	movwf	___fltol@f1+3
  5617     0328  1683               	bsf	3,5	;RP0=1, select bank1
  5618     0329  1303               	bcf	3,6	;RP1=0, select bank1
  5619     032A  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5620     032B  1283               	bcf	3,5	;RP0=0, select bank0
  5621     032C  1303               	bcf	3,6	;RP1=0, select bank0
  5622     032D  00A2               	movwf	___fltol@f1+2
  5623     032E  1683               	bsf	3,5	;RP0=1, select bank1
  5624     032F  1303               	bcf	3,6	;RP1=0, select bank1
  5625     0330  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5626     0331  1283               	bcf	3,5	;RP0=0, select bank0
  5627     0332  1303               	bcf	3,6	;RP1=0, select bank0
  5628     0333  00A1               	movwf	___fltol@f1+1
  5629     0334  1683               	bsf	3,5	;RP0=1, select bank1
  5630     0335  1303               	bcf	3,6	;RP1=0, select bank1
  5631     0336  0820               	movf	floattostr@numero_^(0+128),w
  5632     0337  1283               	bcf	3,5	;RP0=0, select bank0
  5633     0338  1303               	bcf	3,6	;RP1=0, select bank0
  5634     0339  00A0               	movwf	___fltol@f1
  5635     033A  120A  118A  277E  120A  118A  	fcall	___fltol
  5636     033F  1283               	bcf	3,5	;RP0=0, select bank0
  5637     0340  1303               	bcf	3,6	;RP1=0, select bank0
  5638     0341  0821               	movf	?___fltol+1,w
  5639     0342  1683               	bsf	3,5	;RP0=1, select bank1
  5640     0343  1303               	bcf	3,6	;RP1=0, select bank1
  5641     0344  00A8               	movwf	(floattostr@tempo_int+1)^(0+128)
  5642     0345  1283               	bcf	3,5	;RP0=0, select bank0
  5643     0346  1303               	bcf	3,6	;RP1=0, select bank0
  5644     0347  0820               	movf	?___fltol,w
  5645     0348  1683               	bsf	3,5	;RP0=1, select bank1
  5646     0349  1303               	bcf	3,6	;RP1=0, select bank1
  5647     034A  00A7               	movwf	floattostr@tempo_int^(0+128)
  5648     034B                     l3242:
  5649                           
  5650                           ;./float_str.h: 51:         *cadena_++ = tempo_int + 48;
  5651     034B  0824               	movf	floattostr@cadena_^(0+128),w
  5652     034C  0084               	movwf	4
  5653     034D  0827               	movf	floattostr@tempo_int^(0+128),w
  5654     034E  3E30               	addlw	48
  5655     034F  1783               	bsf	3,7	;select IRP bank2
  5656     0350  0080               	movwf	0
  5657     0351                     l3244:
  5658     0351  3001               	movlw	1
  5659     0352  00A6               	movwf	??_floattostr^(0+128)
  5660     0353  0826               	movf	??_floattostr^(0+128),w
  5661     0354  07A4               	addwf	floattostr@cadena_^(0+128),f
  5662     0355                     l3246:
  5663                           
  5664                           ;./float_str.h: 52:         if (cont_for == largo_entera ) *cadena_++ = '.';
  5665     0355  0832               	movf	(floattostr@largo_entera+1)^(0+128),w
  5666     0356  0630               	xorwf	(floattostr@cont_for+1)^(0+128),w
  5667     0357  1D03               	skipz
  5668     0358  2B5B               	goto	u3995
  5669     0359  0831               	movf	floattostr@largo_entera^(0+128),w
  5670     035A  062F               	xorwf	floattostr@cont_for^(0+128),w
  5671     035B                     u3995:
  5672     035B  1D03               	skipz
  5673     035C  2B5E               	goto	u3991
  5674     035D  2B5F               	goto	u3990
  5675     035E                     u3991:
  5676     035E  2B67               	goto	l3252
  5677     035F                     u3990:
  5678     035F                     l3248:
  5679     035F  0824               	movf	floattostr@cadena_^(0+128),w
  5680     0360  0084               	movwf	4
  5681     0361  302E               	movlw	46
  5682     0362  0080               	movwf	0
  5683     0363                     l3250:
  5684     0363  3001               	movlw	1
  5685     0364  00A6               	movwf	??_floattostr^(0+128)
  5686     0365  0826               	movf	??_floattostr^(0+128),w
  5687     0366  07A4               	addwf	floattostr@cadena_^(0+128),f
  5688     0367                     l3252:
  5689                           
  5690                           ;./float_str.h: 53:         numero_ -= (tempo_float=tempo_int);
  5691     0367  0827               	movf	floattostr@tempo_int^(0+128),w
  5692     0368  1283               	bcf	3,5	;RP0=0, select bank0
  5693     0369  1303               	bcf	3,6	;RP1=0, select bank0
  5694     036A  00A0               	movwf	___xxtofl@val
  5695     036B  1683               	bsf	3,5	;RP0=1, select bank1
  5696     036C  1303               	bcf	3,6	;RP1=0, select bank1
  5697     036D  0828               	movf	(floattostr@tempo_int+1)^(0+128),w
  5698     036E  1283               	bcf	3,5	;RP0=0, select bank0
  5699     036F  1303               	bcf	3,6	;RP1=0, select bank0
  5700     0370  00A1               	movwf	___xxtofl@val+1
  5701     0371  3000               	movlw	0
  5702     0372  1BA1               	btfsc	___xxtofl@val+1,7
  5703     0373  30FF               	movlw	255
  5704     0374  00A2               	movwf	___xxtofl@val+2
  5705     0375  00A3               	movwf	___xxtofl@val+3
  5706     0376  3001               	movlw	1
  5707     0377  160A  118A  2608  120A  118A  	fcall	___xxtofl
  5708     037C  1283               	bcf	3,5	;RP0=0, select bank0
  5709     037D  1303               	bcf	3,6	;RP1=0, select bank0
  5710     037E  0823               	movf	?___xxtofl+3,w
  5711     037F  1683               	bsf	3,5	;RP0=1, select bank1
  5712     0380  1303               	bcf	3,6	;RP1=0, select bank1
  5713     0381  00AC               	movwf	(floattostr@tempo_float+3)^(0+128)
  5714     0382  1283               	bcf	3,5	;RP0=0, select bank0
  5715     0383  1303               	bcf	3,6	;RP1=0, select bank0
  5716     0384  0822               	movf	?___xxtofl+2,w
  5717     0385  1683               	bsf	3,5	;RP0=1, select bank1
  5718     0386  1303               	bcf	3,6	;RP1=0, select bank1
  5719     0387  00AB               	movwf	(floattostr@tempo_float+2)^(0+128)
  5720     0388  1283               	bcf	3,5	;RP0=0, select bank0
  5721     0389  1303               	bcf	3,6	;RP1=0, select bank0
  5722     038A  0821               	movf	?___xxtofl+1,w
  5723     038B  1683               	bsf	3,5	;RP0=1, select bank1
  5724     038C  1303               	bcf	3,6	;RP1=0, select bank1
  5725     038D  00AA               	movwf	(floattostr@tempo_float+1)^(0+128)
  5726     038E  1283               	bcf	3,5	;RP0=0, select bank0
  5727     038F  1303               	bcf	3,6	;RP1=0, select bank0
  5728     0390  0820               	movf	?___xxtofl,w
  5729     0391  1683               	bsf	3,5	;RP0=1, select bank1
  5730     0392  1303               	bcf	3,6	;RP1=0, select bank1
  5731     0393  00A9               	movwf	floattostr@tempo_float^(0+128)
  5732     0394  082C               	movf	(floattostr@tempo_float+3)^(0+128),w
  5733     0395  1283               	bcf	3,5	;RP0=0, select bank0
  5734     0396  1303               	bcf	3,6	;RP1=0, select bank0
  5735     0397  00EB               	movwf	___flsub@a+3
  5736     0398  1683               	bsf	3,5	;RP0=1, select bank1
  5737     0399  1303               	bcf	3,6	;RP1=0, select bank1
  5738     039A  082B               	movf	(floattostr@tempo_float+2)^(0+128),w
  5739     039B  1283               	bcf	3,5	;RP0=0, select bank0
  5740     039C  1303               	bcf	3,6	;RP1=0, select bank0
  5741     039D  00EA               	movwf	___flsub@a+2
  5742     039E  1683               	bsf	3,5	;RP0=1, select bank1
  5743     039F  1303               	bcf	3,6	;RP1=0, select bank1
  5744     03A0  082A               	movf	(floattostr@tempo_float+1)^(0+128),w
  5745     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  5746     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  5747     03A3  00E9               	movwf	___flsub@a+1
  5748     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  5749     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  5750     03A6  0829               	movf	floattostr@tempo_float^(0+128),w
  5751     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  5752     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  5753     03A9  00E8               	movwf	___flsub@a
  5754     03AA  1683               	bsf	3,5	;RP0=1, select bank1
  5755     03AB  1303               	bcf	3,6	;RP1=0, select bank1
  5756     03AC  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5757     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  5758     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  5759     03AF  00EF               	movwf	___flsub@b+3
  5760     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  5761     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  5762     03B2  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5763     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  5764     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  5765     03B5  00EE               	movwf	___flsub@b+2
  5766     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  5767     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  5768     03B8  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5769     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  5770     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  5771     03BB  00ED               	movwf	___flsub@b+1
  5772     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  5773     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  5774     03BE  0820               	movf	floattostr@numero_^(0+128),w
  5775     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  5776     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  5777     03C1  00EC               	movwf	___flsub@b
  5778     03C2  160A  118A  212B  120A  118A  	fcall	___flsub
  5779     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  5780     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  5781     03C9  086B               	movf	?___flsub+3,w
  5782     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  5783     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  5784     03CC  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5785     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  5786     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  5787     03CF  086A               	movf	?___flsub+2,w
  5788     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  5789     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  5790     03D2  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5791     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  5792     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  5793     03D5  0869               	movf	?___flsub+1,w
  5794     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  5795     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  5796     03D8  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5797     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  5798     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  5799     03DB  0868               	movf	?___flsub,w
  5800     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  5801     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  5802     03DE  00A0               	movwf	floattostr@numero_^(0+128)
  5803     03DF                     l3254:
  5804                           
  5805                           ;./float_str.h: 54:         numero_ = numero_*10.0;
  5806     03DF  3041               	movlw	65
  5807     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  5808     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  5809     03E2  00BD               	movwf	___flmul@b+3
  5810     03E3  3020               	movlw	32
  5811     03E4  00BC               	movwf	___flmul@b+2
  5812     03E5  3000               	movlw	0
  5813     03E6  00BB               	movwf	___flmul@b+1
  5814     03E7  3000               	movlw	0
  5815     03E8  00BA               	movwf	___flmul@b
  5816     03E9  1683               	bsf	3,5	;RP0=1, select bank1
  5817     03EA  1303               	bcf	3,6	;RP1=0, select bank1
  5818     03EB  0823               	movf	(floattostr@numero_+3)^(0+128),w
  5819     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  5820     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  5821     03EE  00C1               	movwf	___flmul@a+3
  5822     03EF  1683               	bsf	3,5	;RP0=1, select bank1
  5823     03F0  1303               	bcf	3,6	;RP1=0, select bank1
  5824     03F1  0822               	movf	(floattostr@numero_+2)^(0+128),w
  5825     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  5826     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  5827     03F4  00C0               	movwf	___flmul@a+2
  5828     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  5829     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  5830     03F7  0821               	movf	(floattostr@numero_+1)^(0+128),w
  5831     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  5832     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  5833     03FA  00BF               	movwf	___flmul@a+1
  5834     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  5835     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  5836     03FD  0820               	movf	floattostr@numero_^(0+128),w
  5837     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  5838     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  5839     0400  00BE               	movwf	___flmul@a
  5840     0401  120A  118A  2439  120A  118A  	fcall	___flmul
  5841     0406  1283               	bcf	3,5	;RP0=0, select bank0
  5842     0407  1303               	bcf	3,6	;RP1=0, select bank0
  5843     0408  083D               	movf	?___flmul+3,w
  5844     0409  1683               	bsf	3,5	;RP0=1, select bank1
  5845     040A  1303               	bcf	3,6	;RP1=0, select bank1
  5846     040B  00A3               	movwf	(floattostr@numero_+3)^(0+128)
  5847     040C  1283               	bcf	3,5	;RP0=0, select bank0
  5848     040D  1303               	bcf	3,6	;RP1=0, select bank0
  5849     040E  083C               	movf	?___flmul+2,w
  5850     040F  1683               	bsf	3,5	;RP0=1, select bank1
  5851     0410  1303               	bcf	3,6	;RP1=0, select bank1
  5852     0411  00A2               	movwf	(floattostr@numero_+2)^(0+128)
  5853     0412  1283               	bcf	3,5	;RP0=0, select bank0
  5854     0413  1303               	bcf	3,6	;RP1=0, select bank0
  5855     0414  083B               	movf	?___flmul+1,w
  5856     0415  1683               	bsf	3,5	;RP0=1, select bank1
  5857     0416  1303               	bcf	3,6	;RP1=0, select bank1
  5858     0417  00A1               	movwf	(floattostr@numero_+1)^(0+128)
  5859     0418  1283               	bcf	3,5	;RP0=0, select bank0
  5860     0419  1303               	bcf	3,6	;RP1=0, select bank0
  5861     041A  083A               	movf	?___flmul,w
  5862     041B  1683               	bsf	3,5	;RP0=1, select bank1
  5863     041C  1303               	bcf	3,6	;RP1=0, select bank1
  5864     041D  00A0               	movwf	floattostr@numero_^(0+128)
  5865     041E                     l3256:
  5866                           
  5867                           ;./float_str.h: 55:     }
  5868     041E  3001               	movlw	1
  5869     041F  07AF               	addwf	floattostr@cont_for^(0+128),f
  5870     0420  1803               	skipnc
  5871     0421  0AB0               	incf	(floattostr@cont_for+1)^(0+128),f
  5872     0422  3000               	movlw	0
  5873     0423  07B0               	addwf	(floattostr@cont_for+1)^(0+128),f
  5874     0424                     l3258:
  5875     0424  0830               	movf	(floattostr@cont_for+1)^(0+128),w
  5876     0425  3A80               	xorlw	128
  5877     0426  00A6               	movwf	??_floattostr^(0+128)
  5878     0427  082E               	movf	(floattostr@largo_n+1)^(0+128),w
  5879     0428  3A80               	xorlw	128
  5880     0429  0226               	subwf	??_floattostr^(0+128),w
  5881     042A  1D03               	skipz
  5882     042B  2C2E               	goto	u4005
  5883     042C  082D               	movf	floattostr@largo_n^(0+128),w
  5884     042D  022F               	subwf	floattostr@cont_for^(0+128),w
  5885     042E                     u4005:
  5886     042E  1C03               	skipc
  5887     042F  2C31               	goto	u4001
  5888     0430  2C32               	goto	u4000
  5889     0431                     u4001:
  5890     0431  2B22               	goto	l3240
  5891     0432                     u4000:
  5892     0432                     l3260:
  5893                           
  5894                           ;./float_str.h: 56:     *cadena_ = 0;
  5895     0432  1683               	bsf	3,5	;RP0=1, select bank1
  5896     0433  1303               	bcf	3,6	;RP1=0, select bank1
  5897     0434  0824               	movf	floattostr@cadena_^(0+128),w
  5898     0435  0084               	movwf	4
  5899     0436  1783               	bsf	3,7	;select IRP bank2
  5900     0437  0180               	clrf	0
  5901     0438                     l114:
  5902     0438  0008               	return
  5903     0439                     __end_of_floattostr:
  5904                           
  5905                           	psect	text26
  5906     1608                     __ptext26:	
  5907 ;; *************** function ___xxtofl *****************
  5908 ;; Defined at:
  5909 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  sign            1    wreg     unsigned char 
  5912 ;;  val             4    0[BANK0 ] long 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  sign            1    8[BANK0 ] unsigned char 
  5915 ;;  arg             4   10[BANK0 ] unsigned long 
  5916 ;;  exp             1    9[BANK0 ] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  4    0[BANK0 ] unsigned char 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5926 ;;      Params:         0       4       0       0       0
  5927 ;;      Locals:         0       6       0       0       0
  5928 ;;      Temps:          0       4       0       0       0
  5929 ;;      Totals:         0      14       0       0       0
  5930 ;;Total ram usage:       14 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; Hardware stack levels required when called: 4
  5933 ;; This function calls:
  5934 ;;		Nothing
  5935 ;; This function is called by:
  5936 ;;		_floattostr
  5937 ;;		_AHT10_Read
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941     1608                     ___xxtofl:	
  5942                           ;psect for function ___xxtofl
  5943                           
  5944                           
  5945                           ;incstack = 0
  5946                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5947                           ;___xxtofl@sign stored from wreg
  5948     1608  1283               	bcf	3,5	;RP0=0, select bank0
  5949     1609  1303               	bcf	3,6	;RP1=0, select bank0
  5950     160A  00A8               	movwf	___xxtofl@sign
  5951     160B                     l3118:
  5952     160B  0828               	movf	___xxtofl@sign,w
  5953     160C  1903               	btfsc	3,2
  5954     160D  2E0F               	goto	u3721
  5955     160E  2E10               	goto	u3720
  5956     160F                     u3721:
  5957     160F  2E24               	goto	l3124
  5958     1610                     u3720:
  5959     1610                     l3120:
  5960     1610  1FA3               	btfss	___xxtofl@val+3,7
  5961     1611  2E13               	goto	u3731
  5962     1612  2E14               	goto	u3730
  5963     1613                     u3731:
  5964     1613  2E24               	goto	l3124
  5965     1614                     u3730:
  5966     1614                     l3122:
  5967     1614  0920               	comf	___xxtofl@val,w
  5968     1615  00AA               	movwf	___xxtofl@arg
  5969     1616  0921               	comf	___xxtofl@val+1,w
  5970     1617  00AB               	movwf	___xxtofl@arg+1
  5971     1618  0922               	comf	___xxtofl@val+2,w
  5972     1619  00AC               	movwf	___xxtofl@arg+2
  5973     161A  0923               	comf	___xxtofl@val+3,w
  5974     161B  00AD               	movwf	___xxtofl@arg+3
  5975     161C  0AAA               	incf	___xxtofl@arg,f
  5976     161D  1903               	skipnz
  5977     161E  0AAB               	incf	___xxtofl@arg+1,f
  5978     161F  1903               	skipnz
  5979     1620  0AAC               	incf	___xxtofl@arg+2,f
  5980     1621  1903               	skipnz
  5981     1622  0AAD               	incf	___xxtofl@arg+3,f
  5982     1623  2E2C               	goto	l938
  5983     1624                     l3124:
  5984     1624  0823               	movf	___xxtofl@val+3,w
  5985     1625  00AD               	movwf	___xxtofl@arg+3
  5986     1626  0822               	movf	___xxtofl@val+2,w
  5987     1627  00AC               	movwf	___xxtofl@arg+2
  5988     1628  0821               	movf	___xxtofl@val+1,w
  5989     1629  00AB               	movwf	___xxtofl@arg+1
  5990     162A  0820               	movf	___xxtofl@val,w
  5991     162B  00AA               	movwf	___xxtofl@arg
  5992     162C                     l938:
  5993     162C  0823               	movf	___xxtofl@val+3,w
  5994     162D  0422               	iorwf	___xxtofl@val+2,w
  5995     162E  0421               	iorwf	___xxtofl@val+1,w
  5996     162F  0420               	iorwf	___xxtofl@val,w
  5997     1630  1D03               	skipz
  5998     1631  2E33               	goto	u3741
  5999     1632  2E34               	goto	u3740
  6000     1633                     u3741:
  6001     1633  2E3D               	goto	l3130
  6002     1634                     u3740:
  6003     1634                     l3126:
  6004     1634  3000               	movlw	0
  6005     1635  00A3               	movwf	?___xxtofl+3
  6006     1636  3000               	movlw	0
  6007     1637  00A2               	movwf	?___xxtofl+2
  6008     1638  3000               	movlw	0
  6009     1639  00A1               	movwf	?___xxtofl+1
  6010     163A  3000               	movlw	0
  6011     163B  00A0               	movwf	?___xxtofl
  6012     163C  2EC1               	goto	l940
  6013     163D                     l3130:
  6014     163D  3096               	movlw	150
  6015     163E  00A9               	movwf	___xxtofl@exp
  6016     163F  2E4D               	goto	l3134
  6017     1640                     l3132:
  6018     1640  3001               	movlw	1
  6019     1641  00A4               	movwf	??___xxtofl
  6020     1642  0824               	movf	??___xxtofl,w
  6021     1643  07A9               	addwf	___xxtofl@exp,f
  6022     1644  3001               	movlw	1
  6023     1645                     u3755:
  6024     1645  1003               	clrc
  6025     1646  0CAD               	rrf	___xxtofl@arg+3,f
  6026     1647  0CAC               	rrf	___xxtofl@arg+2,f
  6027     1648  0CAB               	rrf	___xxtofl@arg+1,f
  6028     1649  0CAA               	rrf	___xxtofl@arg,f
  6029     164A  3EFF               	addlw	-1
  6030     164B  1D03               	skipz
  6031     164C  2E45               	goto	u3755
  6032     164D                     l3134:
  6033     164D  30FE               	movlw	254
  6034     164E  052D               	andwf	___xxtofl@arg+3,w
  6035     164F  1D03               	btfss	3,2
  6036     1650  2E52               	goto	u3761
  6037     1651  2E53               	goto	u3760
  6038     1652                     u3761:
  6039     1652  2E40               	goto	l3132
  6040     1653                     u3760:
  6041     1653  2E6F               	goto	l944
  6042     1654                     l3136:
  6043     1654  3001               	movlw	1
  6044     1655  00A4               	movwf	??___xxtofl
  6045     1656  0824               	movf	??___xxtofl,w
  6046     1657  07A9               	addwf	___xxtofl@exp,f
  6047     1658                     l3138:
  6048     1658  3001               	movlw	1
  6049     1659  07AA               	addwf	___xxtofl@arg,f
  6050     165A  3000               	movlw	0
  6051     165B  1803               	skipnc
  6052     165C  3001               	movlw	1
  6053     165D  07AB               	addwf	___xxtofl@arg+1,f
  6054     165E  3000               	movlw	0
  6055     165F  1803               	skipnc
  6056     1660  3001               	movlw	1
  6057     1661  07AC               	addwf	___xxtofl@arg+2,f
  6058     1662  3000               	movlw	0
  6059     1663  1803               	skipnc
  6060     1664  3001               	movlw	1
  6061     1665  07AD               	addwf	___xxtofl@arg+3,f
  6062     1666                     l3140:
  6063     1666  3001               	movlw	1
  6064     1667                     u3775:
  6065     1667  1003               	clrc
  6066     1668  0CAD               	rrf	___xxtofl@arg+3,f
  6067     1669  0CAC               	rrf	___xxtofl@arg+2,f
  6068     166A  0CAB               	rrf	___xxtofl@arg+1,f
  6069     166B  0CAA               	rrf	___xxtofl@arg,f
  6070     166C  3EFF               	addlw	-1
  6071     166D  1D03               	skipz
  6072     166E  2E67               	goto	u3775
  6073     166F                     l944:
  6074     166F  30FF               	movlw	255
  6075     1670  052D               	andwf	___xxtofl@arg+3,w
  6076     1671  1D03               	btfss	3,2
  6077     1672  2E74               	goto	u3781
  6078     1673  2E75               	goto	u3780
  6079     1674                     u3781:
  6080     1674  2E54               	goto	l3136
  6081     1675                     u3780:
  6082     1675  2E81               	goto	l3144
  6083     1676                     l3142:
  6084     1676  3001               	movlw	1
  6085     1677  02A9               	subwf	___xxtofl@exp,f
  6086     1678  3001               	movlw	1
  6087     1679  00A4               	movwf	??___xxtofl
  6088     167A                     u3795:
  6089     167A  1003               	clrc
  6090     167B  0DAA               	rlf	___xxtofl@arg,f
  6091     167C  0DAB               	rlf	___xxtofl@arg+1,f
  6092     167D  0DAC               	rlf	___xxtofl@arg+2,f
  6093     167E  0DAD               	rlf	___xxtofl@arg+3,f
  6094     167F  0BA4               	decfsz	??___xxtofl,f
  6095     1680  2E7A               	goto	u3795
  6096     1681                     l3144:
  6097     1681  1BAC               	btfsc	___xxtofl@arg+2,7
  6098     1682  2E84               	goto	u3801
  6099     1683  2E85               	goto	u3800
  6100     1684                     u3801:
  6101     1684  2E8B               	goto	l951
  6102     1685                     u3800:
  6103     1685                     l3146:
  6104     1685  3002               	movlw	2
  6105     1686  0229               	subwf	___xxtofl@exp,w
  6106     1687  1803               	skipnc
  6107     1688  2E8A               	goto	u3811
  6108     1689  2E8B               	goto	u3810
  6109     168A                     u3811:
  6110     168A  2E76               	goto	l3142
  6111     168B                     u3810:
  6112     168B                     l951:
  6113     168B  1829               	btfsc	___xxtofl@exp,0
  6114     168C  2E8E               	goto	u3821
  6115     168D  2E8F               	goto	u3820
  6116     168E                     u3821:
  6117     168E  2E97               	goto	l952
  6118     168F                     u3820:
  6119     168F                     l3148:
  6120     168F  30FF               	movlw	255
  6121     1690  05AA               	andwf	___xxtofl@arg,f
  6122     1691  30FF               	movlw	255
  6123     1692  05AB               	andwf	___xxtofl@arg+1,f
  6124     1693  307F               	movlw	127
  6125     1694  05AC               	andwf	___xxtofl@arg+2,f
  6126     1695  30FF               	movlw	255
  6127     1696  05AD               	andwf	___xxtofl@arg+3,f
  6128     1697                     l952:
  6129     1697  1003               	clrc
  6130     1698  0CA9               	rrf	___xxtofl@exp,f
  6131     1699                     l3150:
  6132     1699  0829               	movf	___xxtofl@exp,w
  6133     169A  00A4               	movwf	??___xxtofl
  6134     169B  01A5               	clrf	??___xxtofl+1
  6135     169C  01A6               	clrf	??___xxtofl+2
  6136     169D  01A7               	clrf	??___xxtofl+3
  6137     169E  3018               	movlw	24
  6138     169F                     u3835:
  6139     169F  1003               	clrc
  6140     16A0  0DA4               	rlf	??___xxtofl,f
  6141     16A1  0DA5               	rlf	??___xxtofl+1,f
  6142     16A2  0DA6               	rlf	??___xxtofl+2,f
  6143     16A3  0DA7               	rlf	??___xxtofl+3,f
  6144     16A4                     u3830:
  6145     16A4  3EFF               	addlw	-1
  6146     16A5  1D03               	skipz
  6147     16A6  2E9F               	goto	u3835
  6148     16A7  0824               	movf	??___xxtofl,w
  6149     16A8  04AA               	iorwf	___xxtofl@arg,f
  6150     16A9  0825               	movf	??___xxtofl+1,w
  6151     16AA  04AB               	iorwf	___xxtofl@arg+1,f
  6152     16AB  0826               	movf	??___xxtofl+2,w
  6153     16AC  04AC               	iorwf	___xxtofl@arg+2,f
  6154     16AD  0827               	movf	??___xxtofl+3,w
  6155     16AE  04AD               	iorwf	___xxtofl@arg+3,f
  6156     16AF                     l3152:
  6157     16AF  0828               	movf	___xxtofl@sign,w
  6158     16B0  1903               	btfsc	3,2
  6159     16B1  2EB3               	goto	u3841
  6160     16B2  2EB4               	goto	u3840
  6161     16B3                     u3841:
  6162     16B3  2EB9               	goto	l3158
  6163     16B4                     u3840:
  6164     16B4                     l3154:
  6165     16B4  1FA3               	btfss	___xxtofl@val+3,7
  6166     16B5  2EB7               	goto	u3851
  6167     16B6  2EB8               	goto	u3850
  6168     16B7                     u3851:
  6169     16B7  2EB9               	goto	l3158
  6170     16B8                     u3850:
  6171     16B8                     l3156:
  6172     16B8  17AD               	bsf	___xxtofl@arg+3,7
  6173     16B9                     l3158:
  6174     16B9  082D               	movf	___xxtofl@arg+3,w
  6175     16BA  00A3               	movwf	?___xxtofl+3
  6176     16BB  082C               	movf	___xxtofl@arg+2,w
  6177     16BC  00A2               	movwf	?___xxtofl+2
  6178     16BD  082B               	movf	___xxtofl@arg+1,w
  6179     16BE  00A1               	movwf	?___xxtofl+1
  6180     16BF  082A               	movf	___xxtofl@arg,w
  6181     16C0  00A0               	movwf	?___xxtofl
  6182     16C1                     l940:
  6183     16C1  0008               	return
  6184     16C2                     __end_of___xxtofl:
  6185                           
  6186                           	psect	text27
  6187     077E                     __ptext27:	
  6188 ;; *************** function ___fltol *****************
  6189 ;; Defined at:
  6190 ;;		line 43 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  f1              4    0[BANK0 ] unsigned char 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  exp1            1    9[BANK0 ] unsigned char 
  6195 ;;  sign1           1    8[BANK0 ] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  4    0[BANK0 ] long 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6205 ;;      Params:         0       4       0       0       0
  6206 ;;      Locals:         0       2       0       0       0
  6207 ;;      Temps:          0       4       0       0       0
  6208 ;;      Totals:         0      10       0       0       0
  6209 ;;Total ram usage:       10 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 4
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_floattostr
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219     077E                     ___fltol:	
  6220                           ;psect for function ___fltol
  6221                           
  6222     077E                     l2794:	
  6223                           ;incstack = 0
  6224                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6225                           
  6226     077E  1003               	clrc
  6227     077F  1283               	bcf	3,5	;RP0=0, select bank0
  6228     0780  1303               	bcf	3,6	;RP1=0, select bank0
  6229     0781  0D22               	rlf	___fltol@f1+2,w
  6230     0782  0D23               	rlf	___fltol@f1+3,w
  6231     0783  00A9               	movwf	___fltol@exp1
  6232     0784  0829               	movf	___fltol@exp1,w
  6233     0785  1D03               	btfss	3,2
  6234     0786  2F88               	goto	u2961
  6235     0787  2F89               	goto	u2960
  6236     0788                     u2961:
  6237     0788  2F92               	goto	l2800
  6238     0789                     u2960:
  6239     0789                     l2796:
  6240     0789  3000               	movlw	0
  6241     078A  00A3               	movwf	?___fltol+3
  6242     078B  3000               	movlw	0
  6243     078C  00A2               	movwf	?___fltol+2
  6244     078D  3000               	movlw	0
  6245     078E  00A1               	movwf	?___fltol+1
  6246     078F  3000               	movlw	0
  6247     0790  00A0               	movwf	?___fltol
  6248     0791  2FF5               	goto	l691
  6249     0792                     l2800:
  6250     0792  0820               	movf	___fltol@f1,w
  6251     0793  00A4               	movwf	??___fltol
  6252     0794  0821               	movf	___fltol@f1+1,w
  6253     0795  00A5               	movwf	??___fltol+1
  6254     0796  0822               	movf	___fltol@f1+2,w
  6255     0797  00A6               	movwf	??___fltol+2
  6256     0798  0823               	movf	___fltol@f1+3,w
  6257     0799  00A7               	movwf	??___fltol+3
  6258     079A  301F               	movlw	31
  6259     079B                     u2975:
  6260     079B  1003               	clrc
  6261     079C  0CA7               	rrf	??___fltol+3,f
  6262     079D  0CA6               	rrf	??___fltol+2,f
  6263     079E  0CA5               	rrf	??___fltol+1,f
  6264     079F  0CA4               	rrf	??___fltol,f
  6265     07A0                     u2970:
  6266     07A0  3EFF               	addlw	-1
  6267     07A1  1D03               	skipz
  6268     07A2  2F9B               	goto	u2975
  6269     07A3  0824               	movf	??___fltol,w
  6270     07A4  00A8               	movwf	___fltol@sign1
  6271     07A5                     l2802:
  6272     07A5  17A2               	bsf	___fltol@f1+2,7
  6273     07A6                     l2804:
  6274     07A6  30FF               	movlw	255
  6275     07A7  05A0               	andwf	___fltol@f1,f
  6276     07A8  30FF               	movlw	255
  6277     07A9  05A1               	andwf	___fltol@f1+1,f
  6278     07AA  30FF               	movlw	255
  6279     07AB  05A2               	andwf	___fltol@f1+2,f
  6280     07AC  3000               	movlw	0
  6281     07AD  05A3               	andwf	___fltol@f1+3,f
  6282     07AE                     l2806:
  6283     07AE  3096               	movlw	150
  6284     07AF  02A9               	subwf	___fltol@exp1,f
  6285     07B0                     l2808:
  6286     07B0  1FA9               	btfss	___fltol@exp1,7
  6287     07B1  2FB3               	goto	u2981
  6288     07B2  2FB4               	goto	u2980
  6289     07B3                     u2981:
  6290     07B3  2FCE               	goto	l2818
  6291     07B4                     u2980:
  6292     07B4                     l2810:
  6293     07B4  0829               	movf	___fltol@exp1,w
  6294     07B5  3A80               	xorlw	128
  6295     07B6  3E97               	addlw	151
  6296     07B7  1803               	skipnc
  6297     07B8  2FBA               	goto	u2991
  6298     07B9  2FBB               	goto	u2990
  6299     07BA                     u2991:
  6300     07BA  2FBC               	goto	l2816
  6301     07BB                     u2990:
  6302     07BB  2F89               	goto	l2796
  6303     07BC                     l2816:
  6304     07BC  3001               	movlw	1
  6305     07BD                     u3005:
  6306     07BD  1003               	clrc
  6307     07BE  0CA3               	rrf	___fltol@f1+3,f
  6308     07BF  0CA2               	rrf	___fltol@f1+2,f
  6309     07C0  0CA1               	rrf	___fltol@f1+1,f
  6310     07C1  0CA0               	rrf	___fltol@f1,f
  6311     07C2  3EFF               	addlw	-1
  6312     07C3  1D03               	skipz
  6313     07C4  2FBD               	goto	u3005
  6314     07C5  3001               	movlw	1
  6315     07C6  00A4               	movwf	??___fltol
  6316     07C7  0824               	movf	??___fltol,w
  6317     07C8  07A9               	addwf	___fltol@exp1,f
  6318     07C9  1D03               	btfss	3,2
  6319     07CA  2FCC               	goto	u3011
  6320     07CB  2FCD               	goto	u3010
  6321     07CC                     u3011:
  6322     07CC  2FBC               	goto	l2816
  6323     07CD                     u3010:
  6324     07CD  2FE5               	goto	l2826
  6325     07CE                     l2818:
  6326     07CE  3020               	movlw	32
  6327     07CF  0229               	subwf	___fltol@exp1,w
  6328     07D0  1C03               	skipc
  6329     07D1  2FD3               	goto	u3021
  6330     07D2  2FD4               	goto	u3020
  6331     07D3                     u3021:
  6332     07D3  2FE0               	goto	l698
  6333     07D4                     u3020:
  6334     07D4  2F89               	goto	l2796
  6335     07D5                     l2824:
  6336     07D5  3001               	movlw	1
  6337     07D6  00A4               	movwf	??___fltol
  6338     07D7                     u3035:
  6339     07D7  1003               	clrc
  6340     07D8  0DA0               	rlf	___fltol@f1,f
  6341     07D9  0DA1               	rlf	___fltol@f1+1,f
  6342     07DA  0DA2               	rlf	___fltol@f1+2,f
  6343     07DB  0DA3               	rlf	___fltol@f1+3,f
  6344     07DC  0BA4               	decfsz	??___fltol,f
  6345     07DD  2FD7               	goto	u3035
  6346     07DE  3001               	movlw	1
  6347     07DF  02A9               	subwf	___fltol@exp1,f
  6348     07E0                     l698:
  6349     07E0  0829               	movf	___fltol@exp1,w
  6350     07E1  1D03               	btfss	3,2
  6351     07E2  2FE4               	goto	u3041
  6352     07E3  2FE5               	goto	u3040
  6353     07E4                     u3041:
  6354     07E4  2FD5               	goto	l2824
  6355     07E5                     u3040:
  6356     07E5                     l2826:
  6357     07E5  0828               	movf	___fltol@sign1,w
  6358     07E6  1903               	btfsc	3,2
  6359     07E7  2FE9               	goto	u3051
  6360     07E8  2FEA               	goto	u3050
  6361     07E9                     u3051:
  6362     07E9  2FF5               	goto	l701
  6363     07EA                     u3050:
  6364     07EA                     l2828:
  6365     07EA  09A0               	comf	___fltol@f1,f
  6366     07EB  09A1               	comf	___fltol@f1+1,f
  6367     07EC  09A2               	comf	___fltol@f1+2,f
  6368     07ED  09A3               	comf	___fltol@f1+3,f
  6369     07EE  0AA0               	incf	___fltol@f1,f
  6370     07EF  1903               	skipnz
  6371     07F0  0AA1               	incf	___fltol@f1+1,f
  6372     07F1  1903               	skipnz
  6373     07F2  0AA2               	incf	___fltol@f1+2,f
  6374     07F3  1903               	skipnz
  6375     07F4  0AA3               	incf	___fltol@f1+3,f
  6376     07F5                     l701:
  6377     07F5                     l691:
  6378     07F5  0008               	return
  6379     07F6                     __end_of___fltol:
  6380                           
  6381                           	psect	text28
  6382     112B                     __ptext28:	
  6383 ;; *************** function ___flsub *****************
  6384 ;; Defined at:
  6385 ;;		line 242 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  a               4   72[BANK0 ] long 
  6388 ;;  b               4   76[BANK0 ] long 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4   72[BANK0 ] long 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6400 ;;      Params:         0       8       0       0       0
  6401 ;;      Locals:         0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0
  6403 ;;      Totals:         0       8       0       0       0
  6404 ;;Total ram usage:        8 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 5
  6407 ;; This function calls:
  6408 ;;		___fladd
  6409 ;; This function is called by:
  6410 ;;		_floattostr
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414     112B                     ___flsub:	
  6415                           ;psect for function ___flsub
  6416                           
  6417     112B                     l2830:	
  6418                           ;incstack = 0
  6419                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6420                           
  6421     112B  3080               	movlw	128
  6422     112C  1283               	bcf	3,5	;RP0=0, select bank0
  6423     112D  1303               	bcf	3,6	;RP1=0, select bank0
  6424     112E  06EB               	xorwf	___flsub@a+3,f
  6425     112F                     l2832:
  6426     112F  086F               	movf	___flsub@b+3,w
  6427     1130  00D7               	movwf	___fladd@b+3
  6428     1131  086E               	movf	___flsub@b+2,w
  6429     1132  00D6               	movwf	___fladd@b+2
  6430     1133  086D               	movf	___flsub@b+1,w
  6431     1134  00D5               	movwf	___fladd@b+1
  6432     1135  086C               	movf	___flsub@b,w
  6433     1136  00D4               	movwf	___fladd@b
  6434     1137  086B               	movf	___flsub@a+3,w
  6435     1138  00DB               	movwf	___fladd@a+3
  6436     1139  086A               	movf	___flsub@a+2,w
  6437     113A  00DA               	movwf	___fladd@a+2
  6438     113B  0869               	movf	___flsub@a+1,w
  6439     113C  00D9               	movwf	___fladd@a+1
  6440     113D  0868               	movf	___flsub@a,w
  6441     113E  00D8               	movwf	___fladd@a
  6442     113F  120A  158A  25A8  160A  118A  	fcall	___fladd
  6443     1144  1283               	bcf	3,5	;RP0=0, select bank0
  6444     1145  1303               	bcf	3,6	;RP1=0, select bank0
  6445     1146  0857               	movf	?___fladd+3,w
  6446     1147  00EB               	movwf	?___flsub+3
  6447     1148  0856               	movf	?___fladd+2,w
  6448     1149  00EA               	movwf	?___flsub+2
  6449     114A  0855               	movf	?___fladd+1,w
  6450     114B  00E9               	movwf	?___flsub+1
  6451     114C  0854               	movf	?___fladd,w
  6452     114D  00E8               	movwf	?___flsub
  6453     114E                     l844:
  6454     114E  0008               	return
  6455     114F                     __end_of___flsub:
  6456                           
  6457                           	psect	text29
  6458     0DA8                     __ptext29:	
  6459 ;; *************** function ___fladd *****************
  6460 ;; Defined at:
  6461 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  b               4   52[BANK0 ] long 
  6464 ;;  a               4   56[BANK0 ] long 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  grs             1   71[BANK0 ] unsigned char 
  6467 ;;  bexp            1   70[BANK0 ] unsigned char 
  6468 ;;  aexp            1   69[BANK0 ] unsigned char 
  6469 ;;  signs           1   68[BANK0 ] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  4   52[BANK0 ] unsigned char 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0, btemp+1
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6479 ;;      Params:         0       8       0       0       0
  6480 ;;      Locals:         0       4       0       0       0
  6481 ;;      Temps:          0       8       0       0       0
  6482 ;;      Totals:         0      20       0       0       0
  6483 ;;Total ram usage:       20 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; Hardware stack levels required when called: 4
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_floattostr
  6490 ;;		_AHT10_Read
  6491 ;;		___flsub
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495     0DA8                     ___fladd:	
  6496                           ;psect for function ___fladd
  6497                           
  6498     0DA8                     l2494:	
  6499                           ;incstack = 0
  6500                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6501                           
  6502     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  6503     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  6504     0DAA  0857               	movf	___fladd@b+3,w
  6505     0DAB  3980               	andlw	128
  6506     0DAC  00E4               	movwf	___fladd@signs
  6507     0DAD                     l2496:
  6508     0DAD  0857               	movf	___fladd@b+3,w
  6509     0DAE  00DC               	movwf	??___fladd
  6510     0DAF  075C               	addwf	??___fladd,w
  6511     0DB0  00E6               	movwf	___fladd@bexp
  6512     0DB1                     l2498:
  6513     0DB1  1FD6               	btfss	___fladd@b+2,7
  6514     0DB2  2DB4               	goto	u2301
  6515     0DB3  2DB5               	goto	u2300
  6516     0DB4                     u2301:
  6517     0DB4  2DB6               	goto	l2502
  6518     0DB5                     u2300:
  6519     0DB5                     l2500:
  6520     0DB5  1466               	bsf	___fladd@bexp,0
  6521     0DB6                     l2502:
  6522     0DB6  0866               	movf	___fladd@bexp,w
  6523     0DB7  1903               	btfsc	3,2
  6524     0DB8  2DBA               	goto	u2311
  6525     0DB9  2DBB               	goto	u2310
  6526     0DBA                     u2311:
  6527     0DBA  2DCB               	goto	l2512
  6528     0DBB                     u2310:
  6529     0DBB                     l2504:
  6530     0DBB  0A66               	incf	___fladd@bexp,w
  6531     0DBC  1D03               	btfss	3,2
  6532     0DBD  2DBF               	goto	u2321
  6533     0DBE  2DC0               	goto	u2320
  6534     0DBF                     u2321:
  6535     0DBF  2DC8               	goto	l2508
  6536     0DC0                     u2320:
  6537     0DC0                     l2506:
  6538     0DC0  3000               	movlw	0
  6539     0DC1  00D7               	movwf	___fladd@b+3
  6540     0DC2  3000               	movlw	0
  6541     0DC3  00D6               	movwf	___fladd@b+2
  6542     0DC4  3000               	movlw	0
  6543     0DC5  00D5               	movwf	___fladd@b+1
  6544     0DC6  3000               	movlw	0
  6545     0DC7  00D4               	movwf	___fladd@b
  6546     0DC8                     l2508:
  6547     0DC8  17D6               	bsf	___fladd@b+2,7
  6548     0DC9                     l2510:
  6549     0DC9  01D7               	clrf	___fladd@b+3
  6550     0DCA  2DD3               	goto	l2514
  6551     0DCB                     l2512:
  6552     0DCB  3000               	movlw	0
  6553     0DCC  00D7               	movwf	___fladd@b+3
  6554     0DCD  3000               	movlw	0
  6555     0DCE  00D6               	movwf	___fladd@b+2
  6556     0DCF  3000               	movlw	0
  6557     0DD0  00D5               	movwf	___fladd@b+1
  6558     0DD1  3000               	movlw	0
  6559     0DD2  00D4               	movwf	___fladd@b
  6560     0DD3                     l2514:
  6561     0DD3  085B               	movf	___fladd@a+3,w
  6562     0DD4  3980               	andlw	128
  6563     0DD5  00E5               	movwf	___fladd@aexp
  6564     0DD6                     l2516:
  6565     0DD6  0865               	movf	___fladd@aexp,w
  6566     0DD7  0664               	xorwf	___fladd@signs,w
  6567     0DD8  1903               	skipnz
  6568     0DD9  2DDB               	goto	u2331
  6569     0DDA  2DDC               	goto	u2330
  6570     0DDB                     u2331:
  6571     0DDB  2DDD               	goto	l2520
  6572     0DDC                     u2330:
  6573     0DDC                     l2518:
  6574     0DDC  1764               	bsf	___fladd@signs,6
  6575     0DDD                     l2520:
  6576     0DDD  085B               	movf	___fladd@a+3,w
  6577     0DDE  00DC               	movwf	??___fladd
  6578     0DDF  075C               	addwf	??___fladd,w
  6579     0DE0  00E5               	movwf	___fladd@aexp
  6580     0DE1                     l2522:
  6581     0DE1  1FDA               	btfss	___fladd@a+2,7
  6582     0DE2  2DE4               	goto	u2341
  6583     0DE3  2DE5               	goto	u2340
  6584     0DE4                     u2341:
  6585     0DE4  2DE6               	goto	l2526
  6586     0DE5                     u2340:
  6587     0DE5                     l2524:
  6588     0DE5  1465               	bsf	___fladd@aexp,0
  6589     0DE6                     l2526:
  6590     0DE6  0865               	movf	___fladd@aexp,w
  6591     0DE7  1903               	btfsc	3,2
  6592     0DE8  2DEA               	goto	u2351
  6593     0DE9  2DEB               	goto	u2350
  6594     0DEA                     u2351:
  6595     0DEA  2DFB               	goto	l2536
  6596     0DEB                     u2350:
  6597     0DEB                     l2528:
  6598     0DEB  0A65               	incf	___fladd@aexp,w
  6599     0DEC  1D03               	btfss	3,2
  6600     0DED  2DEF               	goto	u2361
  6601     0DEE  2DF0               	goto	u2360
  6602     0DEF                     u2361:
  6603     0DEF  2DF8               	goto	l2532
  6604     0DF0                     u2360:
  6605     0DF0                     l2530:
  6606     0DF0  3000               	movlw	0
  6607     0DF1  00DB               	movwf	___fladd@a+3
  6608     0DF2  3000               	movlw	0
  6609     0DF3  00DA               	movwf	___fladd@a+2
  6610     0DF4  3000               	movlw	0
  6611     0DF5  00D9               	movwf	___fladd@a+1
  6612     0DF6  3000               	movlw	0
  6613     0DF7  00D8               	movwf	___fladd@a
  6614     0DF8                     l2532:
  6615     0DF8  17DA               	bsf	___fladd@a+2,7
  6616     0DF9                     l2534:
  6617     0DF9  01DB               	clrf	___fladd@a+3
  6618     0DFA  2E03               	goto	l798
  6619     0DFB                     l2536:
  6620     0DFB  3000               	movlw	0
  6621     0DFC  00DB               	movwf	___fladd@a+3
  6622     0DFD  3000               	movlw	0
  6623     0DFE  00DA               	movwf	___fladd@a+2
  6624     0DFF  3000               	movlw	0
  6625     0E00  00D9               	movwf	___fladd@a+1
  6626     0E01  3000               	movlw	0
  6627     0E02  00D8               	movwf	___fladd@a
  6628     0E03                     l798:
  6629     0E03  0866               	movf	___fladd@bexp,w
  6630     0E04  0265               	subwf	___fladd@aexp,w
  6631     0E05  1803               	skipnc
  6632     0E06  2E08               	goto	u2371
  6633     0E07  2E09               	goto	u2370
  6634     0E08                     u2371:
  6635     0E08  2E2F               	goto	l2572
  6636     0E09                     u2370:
  6637     0E09                     l2538:
  6638     0E09  1F64               	btfss	___fladd@signs,6
  6639     0E0A  2E0C               	goto	u2381
  6640     0E0B  2E0D               	goto	u2380
  6641     0E0C                     u2381:
  6642     0E0C  2E11               	goto	l2542
  6643     0E0D                     u2380:
  6644     0E0D                     l2540:
  6645     0E0D  3080               	movlw	128
  6646     0E0E  00DC               	movwf	??___fladd
  6647     0E0F  085C               	movf	??___fladd,w
  6648     0E10  06E4               	xorwf	___fladd@signs,f
  6649     0E11                     l2542:
  6650     0E11  0866               	movf	___fladd@bexp,w
  6651     0E12  00E7               	movwf	___fladd@grs
  6652     0E13                     l2544:
  6653     0E13  0865               	movf	___fladd@aexp,w
  6654     0E14  00E6               	movwf	___fladd@bexp
  6655     0E15                     l2546:
  6656     0E15  0867               	movf	___fladd@grs,w
  6657     0E16  00E5               	movwf	___fladd@aexp
  6658     0E17                     l2548:
  6659     0E17  0854               	movf	___fladd@b,w
  6660     0E18  00E7               	movwf	___fladd@grs
  6661     0E19                     l2550:
  6662     0E19  0858               	movf	___fladd@a,w
  6663     0E1A  00D4               	movwf	___fladd@b
  6664     0E1B                     l2552:
  6665     0E1B  0867               	movf	___fladd@grs,w
  6666     0E1C  00D8               	movwf	___fladd@a
  6667     0E1D                     l2554:
  6668     0E1D  0855               	movf	___fladd@b+1,w
  6669     0E1E  00E7               	movwf	___fladd@grs
  6670     0E1F                     l2556:
  6671     0E1F  0859               	movf	___fladd@a+1,w
  6672     0E20  00D5               	movwf	___fladd@b+1
  6673     0E21                     l2558:
  6674     0E21  0867               	movf	___fladd@grs,w
  6675     0E22  00D9               	movwf	___fladd@a+1
  6676     0E23                     l2560:
  6677     0E23  0856               	movf	___fladd@b+2,w
  6678     0E24  00E7               	movwf	___fladd@grs
  6679     0E25                     l2562:
  6680     0E25  085A               	movf	___fladd@a+2,w
  6681     0E26  00D6               	movwf	___fladd@b+2
  6682     0E27                     l2564:
  6683     0E27  0867               	movf	___fladd@grs,w
  6684     0E28  00DA               	movwf	___fladd@a+2
  6685     0E29                     l2566:
  6686     0E29  0857               	movf	___fladd@b+3,w
  6687     0E2A  00E7               	movwf	___fladd@grs
  6688     0E2B                     l2568:
  6689     0E2B  085B               	movf	___fladd@a+3,w
  6690     0E2C  00D7               	movwf	___fladd@b+3
  6691     0E2D                     l2570:
  6692     0E2D  0867               	movf	___fladd@grs,w
  6693     0E2E  00DB               	movwf	___fladd@a+3
  6694     0E2F                     l2572:
  6695     0E2F  01E7               	clrf	___fladd@grs
  6696     0E30                     l2574:
  6697     0E30  0865               	movf	___fladd@aexp,w
  6698     0E31  00DC               	movwf	??___fladd
  6699     0E32  01DD               	clrf	??___fladd+1
  6700     0E33  085D               	movf	??___fladd+1,w
  6701     0E34  00DF               	movwf	??___fladd+3
  6702     0E35  0866               	movf	___fladd@bexp,w
  6703     0E36  025C               	subwf	??___fladd,w
  6704     0E37  00DE               	movwf	??___fladd+2
  6705     0E38  1C03               	skipc
  6706     0E39  03DF               	decf	??___fladd+3,f
  6707     0E3A  085F               	movf	??___fladd+3,w
  6708     0E3B  3A80               	xorlw	128
  6709     0E3C  00FF               	movwf	btemp+1
  6710     0E3D  3080               	movlw	128
  6711     0E3E  027F               	subwf	btemp+1,w
  6712     0E3F  1D03               	skipz
  6713     0E40  2E43               	goto	u2395
  6714     0E41  301A               	movlw	26
  6715     0E42  025E               	subwf	??___fladd+2,w
  6716     0E43                     u2395:
  6717     0E43  1C03               	skipc
  6718     0E44  2E46               	goto	u2391
  6719     0E45  2E47               	goto	u2390
  6720     0E46                     u2391:
  6721     0E46  2E7E               	goto	l2590
  6722     0E47                     u2390:
  6723     0E47                     l2576:
  6724     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  6725     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  6726     0E49  0857               	movf	___fladd@b+3,w
  6727     0E4A  0456               	iorwf	___fladd@b+2,w
  6728     0E4B  0455               	iorwf	___fladd@b+1,w
  6729     0E4C  0454               	iorwf	___fladd@b,w
  6730     0E4D  1D03               	skipz
  6731     0E4E  2E50               	goto	u2401
  6732     0E4F  2E52               	goto	u2400
  6733     0E50                     u2401:
  6734     0E50  3001               	movlw	1
  6735     0E51  2E53               	goto	u2410
  6736     0E52                     u2400:
  6737     0E52  3000               	movlw	0
  6738     0E53                     u2410:
  6739     0E53  00E7               	movwf	___fladd@grs
  6740     0E54  3000               	movlw	0
  6741     0E55  00D7               	movwf	___fladd@b+3
  6742     0E56  3000               	movlw	0
  6743     0E57  00D6               	movwf	___fladd@b+2
  6744     0E58  3000               	movlw	0
  6745     0E59  00D5               	movwf	___fladd@b+1
  6746     0E5A  3000               	movlw	0
  6747     0E5B  00D4               	movwf	___fladd@b
  6748     0E5C  0865               	movf	___fladd@aexp,w
  6749     0E5D  00E6               	movwf	___fladd@bexp
  6750     0E5E  2E86               	goto	l802
  6751     0E5F                     l804:
  6752     0E5F  1C67               	btfss	___fladd@grs,0
  6753     0E60  2E62               	goto	u2421
  6754     0E61  2E63               	goto	u2420
  6755     0E62                     u2421:
  6756     0E62  2E6A               	goto	l2580
  6757     0E63                     u2420:
  6758     0E63                     l2578:
  6759     0E63  0867               	movf	___fladd@grs,w
  6760     0E64  00DC               	movwf	??___fladd
  6761     0E65  1003               	clrc
  6762     0E66  0C5C               	rrf	??___fladd,w
  6763     0E67  3801               	iorlw	1
  6764     0E68  00E7               	movwf	___fladd@grs
  6765     0E69  2E6C               	goto	l2582
  6766     0E6A                     l2580:
  6767     0E6A  1003               	clrc
  6768     0E6B  0CE7               	rrf	___fladd@grs,f
  6769     0E6C                     l2582:
  6770     0E6C  1C54               	btfss	___fladd@b,0
  6771     0E6D  2E6F               	goto	u2431
  6772     0E6E  2E70               	goto	u2430
  6773     0E6F                     u2431:
  6774     0E6F  2E71               	goto	l2586
  6775     0E70                     u2430:
  6776     0E70                     l2584:
  6777     0E70  17E7               	bsf	___fladd@grs,7
  6778     0E71                     l2586:
  6779     0E71  3001               	movlw	1
  6780     0E72  00DC               	movwf	??___fladd
  6781     0E73                     u2445:
  6782     0E73  0D57               	rlf	___fladd@b+3,w
  6783     0E74  0CD7               	rrf	___fladd@b+3,f
  6784     0E75  0CD6               	rrf	___fladd@b+2,f
  6785     0E76  0CD5               	rrf	___fladd@b+1,f
  6786     0E77  0CD4               	rrf	___fladd@b,f
  6787     0E78  0BDC               	decfsz	??___fladd& (0+127),f
  6788     0E79  2E73               	goto	u2445
  6789     0E7A                     l2588:
  6790     0E7A  3001               	movlw	1
  6791     0E7B  00DC               	movwf	??___fladd
  6792     0E7C  085C               	movf	??___fladd,w
  6793     0E7D  07E6               	addwf	___fladd@bexp,f
  6794     0E7E                     l2590:
  6795     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  6796     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  6797     0E80  0865               	movf	___fladd@aexp,w
  6798     0E81  0266               	subwf	___fladd@bexp,w
  6799     0E82  1C03               	skipc
  6800     0E83  2E85               	goto	u2451
  6801     0E84  2E86               	goto	u2450
  6802     0E85                     u2451:
  6803     0E85  2E5F               	goto	l804
  6804     0E86                     u2450:
  6805     0E86                     l802:
  6806     0E86  1B64               	btfsc	___fladd@signs,6
  6807     0E87  2E89               	goto	u2461
  6808     0E88  2E8A               	goto	u2460
  6809     0E89                     u2461:
  6810     0E89  2ED3               	goto	l2616
  6811     0E8A                     u2460:
  6812     0E8A                     l2592:
  6813     0E8A  0866               	movf	___fladd@bexp,w
  6814     0E8B  1D03               	btfss	3,2
  6815     0E8C  2E8E               	goto	u2471
  6816     0E8D  2E8F               	goto	u2470
  6817     0E8E                     u2471:
  6818     0E8E  2E98               	goto	l2598
  6819     0E8F                     u2470:
  6820     0E8F                     l2594:
  6821     0E8F  3000               	movlw	0
  6822     0E90  00D7               	movwf	?___fladd+3
  6823     0E91  3000               	movlw	0
  6824     0E92  00D6               	movwf	?___fladd+2
  6825     0E93  3000               	movlw	0
  6826     0E94  00D5               	movwf	?___fladd+1
  6827     0E95  3000               	movlw	0
  6828     0E96  00D4               	movwf	?___fladd
  6829     0E97  2FFF               	goto	l811
  6830     0E98                     l2598:
  6831     0E98  0858               	movf	___fladd@a,w
  6832     0E99  07D4               	addwf	___fladd@b,f
  6833     0E9A  0859               	movf	___fladd@a+1,w
  6834     0E9B  1103               	clrz
  6835     0E9C  1803               	skipnc
  6836     0E9D  3E01               	addlw	1
  6837     0E9E  1903               	skipnz
  6838     0E9F  2EA1               	goto	u2481
  6839     0EA0  07D5               	addwf	___fladd@b+1,f
  6840     0EA1                     u2481:
  6841     0EA1  085A               	movf	___fladd@a+2,w
  6842     0EA2  1103               	clrz
  6843     0EA3  1803               	skipnc
  6844     0EA4  3E01               	addlw	1
  6845     0EA5  1903               	skipnz
  6846     0EA6  2EA8               	goto	u2482
  6847     0EA7  07D6               	addwf	___fladd@b+2,f
  6848     0EA8                     u2482:
  6849     0EA8  085B               	movf	___fladd@a+3,w
  6850     0EA9  1103               	clrz
  6851     0EAA  1803               	skipnc
  6852     0EAB  3E01               	addlw	1
  6853     0EAC  1903               	skipnz
  6854     0EAD  2EAF               	goto	u2483
  6855     0EAE  07D7               	addwf	___fladd@b+3,f
  6856     0EAF                     u2483:
  6857     0EAF                     l2600:
  6858     0EAF  1C57               	btfss	___fladd@b+3,0
  6859     0EB0  2EB2               	goto	u2491
  6860     0EB1  2EB3               	goto	u2490
  6861     0EB2                     u2491:
  6862     0EB2  2F87               	goto	l2650
  6863     0EB3                     u2490:
  6864     0EB3                     l2602:
  6865     0EB3  1C67               	btfss	___fladd@grs,0
  6866     0EB4  2EB6               	goto	u2501
  6867     0EB5  2EB7               	goto	u2500
  6868     0EB6                     u2501:
  6869     0EB6  2EBE               	goto	l2606
  6870     0EB7                     u2500:
  6871     0EB7                     l2604:
  6872     0EB7  0867               	movf	___fladd@grs,w
  6873     0EB8  00DC               	movwf	??___fladd
  6874     0EB9  1003               	clrc
  6875     0EBA  0C5C               	rrf	??___fladd,w
  6876     0EBB  3801               	iorlw	1
  6877     0EBC  00E7               	movwf	___fladd@grs
  6878     0EBD  2EC0               	goto	l2608
  6879     0EBE                     l2606:
  6880     0EBE  1003               	clrc
  6881     0EBF  0CE7               	rrf	___fladd@grs,f
  6882     0EC0                     l2608:
  6883     0EC0  1C54               	btfss	___fladd@b,0
  6884     0EC1  2EC3               	goto	u2511
  6885     0EC2  2EC4               	goto	u2510
  6886     0EC3                     u2511:
  6887     0EC3  2EC5               	goto	l2612
  6888     0EC4                     u2510:
  6889     0EC4                     l2610:
  6890     0EC4  17E7               	bsf	___fladd@grs,7
  6891     0EC5                     l2612:
  6892     0EC5  3001               	movlw	1
  6893     0EC6  00DC               	movwf	??___fladd
  6894     0EC7                     u2525:
  6895     0EC7  0D57               	rlf	___fladd@b+3,w
  6896     0EC8  0CD7               	rrf	___fladd@b+3,f
  6897     0EC9  0CD6               	rrf	___fladd@b+2,f
  6898     0ECA  0CD5               	rrf	___fladd@b+1,f
  6899     0ECB  0CD4               	rrf	___fladd@b,f
  6900     0ECC  0BDC               	decfsz	??___fladd& (0+127),f
  6901     0ECD  2EC7               	goto	u2525
  6902     0ECE                     l2614:
  6903     0ECE  3001               	movlw	1
  6904     0ECF  00DC               	movwf	??___fladd
  6905     0ED0  085C               	movf	??___fladd,w
  6906     0ED1  07E6               	addwf	___fladd@bexp,f
  6907     0ED2  2F87               	goto	l2650
  6908     0ED3                     l2616:
  6909     0ED3  0857               	movf	___fladd@b+3,w
  6910     0ED4  3A80               	xorlw	128
  6911     0ED5  00FF               	movwf	btemp+1
  6912     0ED6  085B               	movf	___fladd@a+3,w
  6913     0ED7  3A80               	xorlw	128
  6914     0ED8  027F               	subwf	btemp+1,w
  6915     0ED9  1D03               	skipz
  6916     0EDA  2EE5               	goto	u2533
  6917     0EDB  085A               	movf	___fladd@a+2,w
  6918     0EDC  0256               	subwf	___fladd@b+2,w
  6919     0EDD  1D03               	skipz
  6920     0EDE  2EE5               	goto	u2533
  6921     0EDF  0859               	movf	___fladd@a+1,w
  6922     0EE0  0255               	subwf	___fladd@b+1,w
  6923     0EE1  1D03               	skipz
  6924     0EE2  2EE5               	goto	u2533
  6925     0EE3  0858               	movf	___fladd@a,w
  6926     0EE4  0254               	subwf	___fladd@b,w
  6927     0EE5                     u2533:
  6928     0EE5  1803               	skipnc
  6929     0EE6  2EE8               	goto	u2531
  6930     0EE7  2EE9               	goto	u2530
  6931     0EE8                     u2531:
  6932     0EE8  2F41               	goto	l2626
  6933     0EE9                     u2530:
  6934     0EE9                     l2618:
  6935     0EE9  30FF               	movlw	255
  6936     0EEA  00DC               	movwf	??___fladd
  6937     0EEB  30FF               	movlw	255
  6938     0EEC  00DD               	movwf	??___fladd+1
  6939     0EED  30FF               	movlw	255
  6940     0EEE  00DE               	movwf	??___fladd+2
  6941     0EEF  30FF               	movlw	255
  6942     0EF0  00DF               	movwf	??___fladd+3
  6943     0EF1  0858               	movf	___fladd@a,w
  6944     0EF2  00E0               	movwf	??___fladd+4
  6945     0EF3  0859               	movf	___fladd@a+1,w
  6946     0EF4  00E1               	movwf	??___fladd+5
  6947     0EF5  085A               	movf	___fladd@a+2,w
  6948     0EF6  00E2               	movwf	??___fladd+6
  6949     0EF7  085B               	movf	___fladd@a+3,w
  6950     0EF8  00E3               	movwf	??___fladd+7
  6951     0EF9  0854               	movf	___fladd@b,w
  6952     0EFA  02E0               	subwf	??___fladd+4,f
  6953     0EFB  0855               	movf	___fladd@b+1,w
  6954     0EFC  1C03               	skipc
  6955     0EFD  0F55               	incfsz	___fladd@b+1,w
  6956     0EFE  2F00               	goto	u2541
  6957     0EFF  2F01               	goto	u2542
  6958     0F00                     u2541:
  6959     0F00  02E1               	subwf	??___fladd+5,f
  6960     0F01                     u2542:
  6961     0F01  0856               	movf	___fladd@b+2,w
  6962     0F02  1C03               	skipc
  6963     0F03  0F56               	incfsz	___fladd@b+2,w
  6964     0F04  2F06               	goto	u2543
  6965     0F05  2F07               	goto	u2544
  6966     0F06                     u2543:
  6967     0F06  02E2               	subwf	??___fladd+6,f
  6968     0F07                     u2544:
  6969     0F07  0857               	movf	___fladd@b+3,w
  6970     0F08  1C03               	skipc
  6971     0F09  0F57               	incfsz	___fladd@b+3,w
  6972     0F0A  2F0C               	goto	u2545
  6973     0F0B  2F0D               	goto	u2546
  6974     0F0C                     u2545:
  6975     0F0C  02E3               	subwf	??___fladd+7,f
  6976     0F0D                     u2546:
  6977     0F0D  0860               	movf	??___fladd+4,w
  6978     0F0E  07DC               	addwf	??___fladd,f
  6979     0F0F  0861               	movf	??___fladd+5,w
  6980     0F10  1803               	skipnc
  6981     0F11  0F61               	incfsz	??___fladd+5,w
  6982     0F12  2F14               	goto	u2550
  6983     0F13  2F15               	goto	u2551
  6984     0F14                     u2550:
  6985     0F14  07DD               	addwf	??___fladd+1,f
  6986     0F15                     u2551:
  6987     0F15  0862               	movf	??___fladd+6,w
  6988     0F16  1803               	skipnc
  6989     0F17  0F62               	incfsz	??___fladd+6,w
  6990     0F18  2F1A               	goto	u2552
  6991     0F19  2F1B               	goto	u2553
  6992     0F1A                     u2552:
  6993     0F1A  07DE               	addwf	??___fladd+2,f
  6994     0F1B                     u2553:
  6995     0F1B  0863               	movf	??___fladd+7,w
  6996     0F1C  1803               	skipnc
  6997     0F1D  0A63               	incf	??___fladd+7,w
  6998     0F1E  07DF               	addwf	??___fladd+3,f
  6999     0F1F  085F               	movf	??___fladd+3,w
  7000     0F20  00D7               	movwf	___fladd@b+3
  7001     0F21  085E               	movf	??___fladd+2,w
  7002     0F22  00D6               	movwf	___fladd@b+2
  7003     0F23  085D               	movf	??___fladd+1,w
  7004     0F24  00D5               	movwf	___fladd@b+1
  7005     0F25  085C               	movf	??___fladd,w
  7006     0F26  00D4               	movwf	___fladd@b
  7007     0F27                     l2620:
  7008     0F27  3080               	movlw	128
  7009     0F28  00DC               	movwf	??___fladd
  7010     0F29  085C               	movf	??___fladd,w
  7011     0F2A  06E4               	xorwf	___fladd@signs,f
  7012     0F2B  09E7               	comf	___fladd@grs,f
  7013     0F2C  0AE7               	incf	___fladd@grs,f
  7014     0F2D                     l2622:
  7015     0F2D  0867               	movf	___fladd@grs,w
  7016     0F2E  1D03               	btfss	3,2
  7017     0F2F  2F31               	goto	u2561
  7018     0F30  2F32               	goto	u2560
  7019     0F31                     u2561:
  7020     0F31  2F4F               	goto	l819
  7021     0F32                     u2560:
  7022     0F32                     l2624:
  7023     0F32  3001               	movlw	1
  7024     0F33  07D4               	addwf	___fladd@b,f
  7025     0F34  3000               	movlw	0
  7026     0F35  1803               	skipnc
  7027     0F36  3001               	movlw	1
  7028     0F37  07D5               	addwf	___fladd@b+1,f
  7029     0F38  3000               	movlw	0
  7030     0F39  1803               	skipnc
  7031     0F3A  3001               	movlw	1
  7032     0F3B  07D6               	addwf	___fladd@b+2,f
  7033     0F3C  3000               	movlw	0
  7034     0F3D  1803               	skipnc
  7035     0F3E  3001               	movlw	1
  7036     0F3F  07D7               	addwf	___fladd@b+3,f
  7037     0F40  2F4F               	goto	l819
  7038     0F41                     l2626:
  7039     0F41  0858               	movf	___fladd@a,w
  7040     0F42  02D4               	subwf	___fladd@b,f
  7041     0F43  0859               	movf	___fladd@a+1,w
  7042     0F44  1C03               	skipc
  7043     0F45  0F59               	incfsz	___fladd@a+1,w
  7044     0F46  02D5               	subwf	___fladd@b+1,f
  7045     0F47  085A               	movf	___fladd@a+2,w
  7046     0F48  1C03               	skipc
  7047     0F49  0F5A               	incfsz	___fladd@a+2,w
  7048     0F4A  02D6               	subwf	___fladd@b+2,f
  7049     0F4B  085B               	movf	___fladd@a+3,w
  7050     0F4C  1C03               	skipc
  7051     0F4D  0F5B               	incfsz	___fladd@a+3,w
  7052     0F4E  02D7               	subwf	___fladd@b+3,f
  7053     0F4F                     l819:
  7054     0F4F  0857               	movf	___fladd@b+3,w
  7055     0F50  0456               	iorwf	___fladd@b+2,w
  7056     0F51  0455               	iorwf	___fladd@b+1,w
  7057     0F52  0454               	iorwf	___fladd@b,w
  7058     0F53  1D03               	skipz
  7059     0F54  2F56               	goto	u2571
  7060     0F55  2F57               	goto	u2570
  7061     0F56                     u2571:
  7062     0F56  2F83               	goto	l2648
  7063     0F57                     u2570:
  7064     0F57                     l2628:
  7065     0F57  0867               	movf	___fladd@grs,w
  7066     0F58  1D03               	btfss	3,2
  7067     0F59  2F5B               	goto	u2581
  7068     0F5A  2F5C               	goto	u2580
  7069     0F5B                     u2581:
  7070     0F5B  2F83               	goto	l2648
  7071     0F5C                     u2580:
  7072     0F5C                     l2630:
  7073     0F5C  3000               	movlw	0
  7074     0F5D  00D7               	movwf	?___fladd+3
  7075     0F5E  3000               	movlw	0
  7076     0F5F  00D6               	movwf	?___fladd+2
  7077     0F60  3000               	movlw	0
  7078     0F61  00D5               	movwf	?___fladd+1
  7079     0F62  3000               	movlw	0
  7080     0F63  00D4               	movwf	?___fladd
  7081     0F64  2FFF               	goto	l811
  7082     0F65                     l2634:
  7083     0F65  3001               	movlw	1
  7084     0F66  00DC               	movwf	??___fladd
  7085     0F67                     u2595:
  7086     0F67  1003               	clrc
  7087     0F68  0DD4               	rlf	___fladd@b,f
  7088     0F69  0DD5               	rlf	___fladd@b+1,f
  7089     0F6A  0DD6               	rlf	___fladd@b+2,f
  7090     0F6B  0DD7               	rlf	___fladd@b+3,f
  7091     0F6C  0BDC               	decfsz	??___fladd,f
  7092     0F6D  2F67               	goto	u2595
  7093     0F6E                     l2636:
  7094     0F6E  1FE7               	btfss	___fladd@grs,7
  7095     0F6F  2F71               	goto	u2601
  7096     0F70  2F72               	goto	u2600
  7097     0F71                     u2601:
  7098     0F71  2F73               	goto	l823
  7099     0F72                     u2600:
  7100     0F72                     l2638:
  7101     0F72  1454               	bsf	___fladd@b,0
  7102     0F73                     l823:
  7103     0F73  1C67               	btfss	___fladd@grs,0
  7104     0F74  2F76               	goto	u2611
  7105     0F75  2F77               	goto	u2610
  7106     0F76                     u2611:
  7107     0F76  2F7A               	goto	l2642
  7108     0F77                     u2610:
  7109     0F77                     l2640:
  7110     0F77  1403               	setc
  7111     0F78  0DE7               	rlf	___fladd@grs,f
  7112     0F79  2F7C               	goto	l2644
  7113     0F7A                     l2642:
  7114     0F7A  1003               	clrc
  7115     0F7B  0DE7               	rlf	___fladd@grs,f
  7116     0F7C                     l2644:
  7117     0F7C  0866               	movf	___fladd@bexp,w
  7118     0F7D  1903               	btfsc	3,2
  7119     0F7E  2F80               	goto	u2621
  7120     0F7F  2F81               	goto	u2620
  7121     0F80                     u2621:
  7122     0F80  2F83               	goto	l2648
  7123     0F81                     u2620:
  7124     0F81                     l2646:
  7125     0F81  3001               	movlw	1
  7126     0F82  02E6               	subwf	___fladd@bexp,f
  7127     0F83                     l2648:
  7128     0F83  1FD6               	btfss	___fladd@b+2,7
  7129     0F84  2F86               	goto	u2631
  7130     0F85  2F87               	goto	u2630
  7131     0F86                     u2631:
  7132     0F86  2F65               	goto	l2634
  7133     0F87                     u2630:
  7134     0F87                     l2650:
  7135     0F87  01E5               	clrf	___fladd@aexp
  7136     0F88                     l2652:
  7137     0F88  1FE7               	btfss	___fladd@grs,7
  7138     0F89  2F8B               	goto	u2641
  7139     0F8A  2F8C               	goto	u2640
  7140     0F8B                     u2641:
  7141     0F8B  2F9A               	goto	l2660
  7142     0F8C                     u2640:
  7143     0F8C                     l2654:
  7144     0F8C  0867               	movf	___fladd@grs,w
  7145     0F8D  397F               	andlw	127
  7146     0F8E  1903               	btfsc	3,2
  7147     0F8F  2F91               	goto	u2651
  7148     0F90  2F92               	goto	u2650
  7149     0F91                     u2651:
  7150     0F91  2F95               	goto	l829
  7151     0F92                     u2650:
  7152     0F92                     l2656:
  7153     0F92  01E5               	clrf	___fladd@aexp
  7154     0F93  0AE5               	incf	___fladd@aexp,f
  7155     0F94  2F9A               	goto	l2660
  7156     0F95                     l829:
  7157     0F95  1C54               	btfss	___fladd@b,0
  7158     0F96  2F98               	goto	u2661
  7159     0F97  2F99               	goto	u2660
  7160     0F98                     u2661:
  7161     0F98  2F9A               	goto	l2660
  7162     0F99                     u2660:
  7163     0F99  2F92               	goto	l2656
  7164     0F9A                     l2660:
  7165     0F9A  0865               	movf	___fladd@aexp,w
  7166     0F9B  1903               	btfsc	3,2
  7167     0F9C  2F9E               	goto	u2671
  7168     0F9D  2F9F               	goto	u2670
  7169     0F9E                     u2671:
  7170     0F9E  2FD3               	goto	l832
  7171     0F9F                     u2670:
  7172     0F9F                     l2662:
  7173     0F9F  3001               	movlw	1
  7174     0FA0  07D4               	addwf	___fladd@b,f
  7175     0FA1  3000               	movlw	0
  7176     0FA2  1803               	skipnc
  7177     0FA3  3001               	movlw	1
  7178     0FA4  07D5               	addwf	___fladd@b+1,f
  7179     0FA5  3000               	movlw	0
  7180     0FA6  1803               	skipnc
  7181     0FA7  3001               	movlw	1
  7182     0FA8  07D6               	addwf	___fladd@b+2,f
  7183     0FA9  3000               	movlw	0
  7184     0FAA  1803               	skipnc
  7185     0FAB  3001               	movlw	1
  7186     0FAC  07D7               	addwf	___fladd@b+3,f
  7187     0FAD                     l2664:
  7188     0FAD  1C57               	btfss	___fladd@b+3,0
  7189     0FAE  2FB0               	goto	u2681
  7190     0FAF  2FB1               	goto	u2680
  7191     0FB0                     u2681:
  7192     0FB0  2FD3               	goto	l832
  7193     0FB1                     u2680:
  7194     0FB1                     l2666:
  7195     0FB1  0854               	movf	___fladd@b,w
  7196     0FB2  00DC               	movwf	??___fladd
  7197     0FB3  0855               	movf	___fladd@b+1,w
  7198     0FB4  00DD               	movwf	??___fladd+1
  7199     0FB5  0856               	movf	___fladd@b+2,w
  7200     0FB6  00DE               	movwf	??___fladd+2
  7201     0FB7  0857               	movf	___fladd@b+3,w
  7202     0FB8  00DF               	movwf	??___fladd+3
  7203     0FB9  3001               	movlw	1
  7204     0FBA  00E0               	movwf	??___fladd+4
  7205     0FBB                     u2695:
  7206     0FBB  0D5F               	rlf	??___fladd+3,w
  7207     0FBC  0CDF               	rrf	??___fladd+3,f
  7208     0FBD  0CDE               	rrf	??___fladd+2,f
  7209     0FBE  0CDD               	rrf	??___fladd+1,f
  7210     0FBF  0CDC               	rrf	??___fladd,f
  7211     0FC0                     u2690:
  7212     0FC0  0BE0               	decfsz	??___fladd+4,f
  7213     0FC1  2FBB               	goto	u2695
  7214     0FC2  085F               	movf	??___fladd+3,w
  7215     0FC3  00D7               	movwf	___fladd@b+3
  7216     0FC4  085E               	movf	??___fladd+2,w
  7217     0FC5  00D6               	movwf	___fladd@b+2
  7218     0FC6  085D               	movf	??___fladd+1,w
  7219     0FC7  00D5               	movwf	___fladd@b+1
  7220     0FC8  085C               	movf	??___fladd,w
  7221     0FC9  00D4               	movwf	___fladd@b
  7222     0FCA  0A66               	incf	___fladd@bexp,w
  7223     0FCB  1903               	btfsc	3,2
  7224     0FCC  2FCE               	goto	u2701
  7225     0FCD  2FCF               	goto	u2700
  7226     0FCE                     u2701:
  7227     0FCE  2FD3               	goto	l832
  7228     0FCF                     u2700:
  7229     0FCF                     l2668:
  7230     0FCF  3001               	movlw	1
  7231     0FD0  00DC               	movwf	??___fladd
  7232     0FD1  085C               	movf	??___fladd,w
  7233     0FD2  07E6               	addwf	___fladd@bexp,f
  7234     0FD3                     l832:
  7235     0FD3  0A66               	incf	___fladd@bexp,w
  7236     0FD4  1903               	btfsc	3,2
  7237     0FD5  2FD7               	goto	u2711
  7238     0FD6  2FD8               	goto	u2710
  7239     0FD7                     u2711:
  7240     0FD7  2FDD               	goto	l2672
  7241     0FD8                     u2710:
  7242     0FD8                     l2670:
  7243     0FD8  0866               	movf	___fladd@bexp,w
  7244     0FD9  1D03               	btfss	3,2
  7245     0FDA  2FDC               	goto	u2721
  7246     0FDB  2FDD               	goto	u2720
  7247     0FDC                     u2721:
  7248     0FDC  2FEB               	goto	l2678
  7249     0FDD                     u2720:
  7250     0FDD                     l2672:
  7251     0FDD  3000               	movlw	0
  7252     0FDE  00D7               	movwf	___fladd@b+3
  7253     0FDF  3000               	movlw	0
  7254     0FE0  00D6               	movwf	___fladd@b+2
  7255     0FE1  3000               	movlw	0
  7256     0FE2  00D5               	movwf	___fladd@b+1
  7257     0FE3  3000               	movlw	0
  7258     0FE4  00D4               	movwf	___fladd@b
  7259     0FE5                     l2674:
  7260     0FE5  0866               	movf	___fladd@bexp,w
  7261     0FE6  1D03               	btfss	3,2
  7262     0FE7  2FE9               	goto	u2731
  7263     0FE8  2FEA               	goto	u2730
  7264     0FE9                     u2731:
  7265     0FE9  2FEB               	goto	l2678
  7266     0FEA                     u2730:
  7267     0FEA                     l2676:
  7268     0FEA  01E4               	clrf	___fladd@signs
  7269     0FEB                     l2678:
  7270     0FEB  1C66               	btfss	___fladd@bexp,0
  7271     0FEC  2FEE               	goto	u2741
  7272     0FED  2FEF               	goto	u2740
  7273     0FEE                     u2741:
  7274     0FEE  2FF1               	goto	l2682
  7275     0FEF                     u2740:
  7276     0FEF                     l2680:
  7277     0FEF  17D6               	bsf	___fladd@b+2,7
  7278     0FF0  2FF5               	goto	l840
  7279     0FF1                     l2682:
  7280     0FF1  307F               	movlw	127
  7281     0FF2  00DC               	movwf	??___fladd
  7282     0FF3  085C               	movf	??___fladd,w
  7283     0FF4  05D6               	andwf	___fladd@b+2,f
  7284     0FF5                     l840:
  7285     0FF5  0866               	movf	___fladd@bexp,w
  7286     0FF6  00DC               	movwf	??___fladd
  7287     0FF7  1003               	clrc
  7288     0FF8  0C5C               	rrf	??___fladd,w
  7289     0FF9  00D7               	movwf	___fladd@b+3
  7290     0FFA                     l2684:
  7291     0FFA  1FE4               	btfss	___fladd@signs,7
  7292     0FFB  2FFD               	goto	u2751
  7293     0FFC  2FFE               	goto	u2750
  7294     0FFD                     u2751:
  7295     0FFD  2FFF               	goto	l841
  7296     0FFE                     u2750:
  7297     0FFE                     l2686:
  7298     0FFE  17D7               	bsf	___fladd@b+3,7
  7299     0FFF                     l841:
  7300     0FFF                     l811:
  7301     0FFF  0008               	return
  7302     1000                     __end_of___fladd:
  7303                           
  7304                           	psect	text30
  7305     1FBB                     __ptext30:	
  7306 ;; *************** function ___flneg *****************
  7307 ;; Defined at:
  7308 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  f1              4    0[BANK0 ] unsigned char 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  4    0[BANK0 ] unsigned char 
  7315 ;; Registers used:
  7316 ;;		wreg
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7322 ;;      Params:         0       4       0       0       0
  7323 ;;      Locals:         0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0
  7325 ;;      Totals:         0       4       0       0       0
  7326 ;;Total ram usage:        4 bytes
  7327 ;; Hardware stack levels used: 1
  7328 ;; Hardware stack levels required when called: 4
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_floattostr
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336     1FBB                     ___flneg:	
  7337                           ;psect for function ___flneg
  7338                           
  7339     1FBB                     l2786:	
  7340                           ;incstack = 0
  7341                           ; Regs used in ___flneg: [wreg]
  7342                           
  7343     1FBB  1283               	bcf	3,5	;RP0=0, select bank0
  7344     1FBC  1303               	bcf	3,6	;RP1=0, select bank0
  7345     1FBD  0823               	movf	___flneg@f1+3,w
  7346     1FBE  0422               	iorwf	___flneg@f1+2,w
  7347     1FBF  0421               	iorwf	___flneg@f1+1,w
  7348     1FC0  0420               	iorwf	___flneg@f1,w
  7349     1FC1  1903               	skipnz
  7350     1FC2  2FC4               	goto	u2951
  7351     1FC3  2FC5               	goto	u2950
  7352     1FC4                     u2951:
  7353     1FC4  2FC7               	goto	l2790
  7354     1FC5                     u2950:
  7355     1FC5                     l2788:
  7356     1FC5  3080               	movlw	128
  7357     1FC6  06A3               	xorwf	___flneg@f1+3,f
  7358     1FC7                     l2790:
  7359     1FC7                     l687:
  7360     1FC7  0008               	return
  7361     1FC8                     __end_of___flneg:
  7362                           
  7363                           	psect	text31
  7364     0439                     __ptext31:	
  7365 ;; *************** function ___flmul *****************
  7366 ;; Defined at:
  7367 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  b               4   26[BANK0 ] unsigned char 
  7370 ;;  a               4   30[BANK0 ] unsigned char 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  prod            4   46[BANK0 ] struct .
  7373 ;;  grs             4   40[BANK0 ] unsigned long 
  7374 ;;  temp            2   50[BANK0 ] struct .
  7375 ;;  bexp            1   45[BANK0 ] unsigned char 
  7376 ;;  aexp            1   44[BANK0 ] unsigned char 
  7377 ;;  sign            1   39[BANK0 ] unsigned char 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  4   26[BANK0 ] unsigned char 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7387 ;;      Params:         0       8       0       0       0
  7388 ;;      Locals:         0      13       0       0       0
  7389 ;;      Temps:          0       5       0       0       0
  7390 ;;      Totals:         0      26       0       0       0
  7391 ;;Total ram usage:       26 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 5
  7394 ;; This function calls:
  7395 ;;		__Umul8_16
  7396 ;; This function is called by:
  7397 ;;		_floattostr
  7398 ;;		_AHT10_Read
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402     0439                     ___flmul:	
  7403                           ;psect for function ___flmul
  7404                           
  7405     0439                     l2978:	
  7406                           ;incstack = 0
  7407                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7408                           
  7409     0439  1283               	bcf	3,5	;RP0=0, select bank0
  7410     043A  1303               	bcf	3,6	;RP1=0, select bank0
  7411     043B  083D               	movf	___flmul@b+3,w
  7412     043C  3980               	andlw	128
  7413     043D  00C7               	movwf	___flmul@sign
  7414     043E                     l2980:
  7415     043E  083D               	movf	___flmul@b+3,w
  7416     043F  00C2               	movwf	??___flmul
  7417     0440  0742               	addwf	??___flmul,w
  7418     0441  00CD               	movwf	___flmul@bexp
  7419     0442                     l2982:
  7420     0442  1FBC               	btfss	___flmul@b+2,7
  7421     0443  2C45               	goto	u3351
  7422     0444  2C46               	goto	u3350
  7423     0445                     u3351:
  7424     0445  2C47               	goto	l2986
  7425     0446                     u3350:
  7426     0446                     l2984:
  7427     0446  144D               	bsf	___flmul@bexp,0
  7428     0447                     l2986:
  7429     0447  084D               	movf	___flmul@bexp,w
  7430     0448  1903               	btfsc	3,2
  7431     0449  2C4B               	goto	u3361
  7432     044A  2C4C               	goto	u3360
  7433     044B                     u3361:
  7434     044B  2C5B               	goto	l2994
  7435     044C                     u3360:
  7436     044C                     l2988:
  7437     044C  0A4D               	incf	___flmul@bexp,w
  7438     044D  1D03               	btfss	3,2
  7439     044E  2C50               	goto	u3371
  7440     044F  2C51               	goto	u3370
  7441     0450                     u3371:
  7442     0450  2C59               	goto	l2992
  7443     0451                     u3370:
  7444     0451                     l2990:
  7445     0451  3000               	movlw	0
  7446     0452  00BD               	movwf	___flmul@b+3
  7447     0453  3000               	movlw	0
  7448     0454  00BC               	movwf	___flmul@b+2
  7449     0455  3000               	movlw	0
  7450     0456  00BB               	movwf	___flmul@b+1
  7451     0457  3000               	movlw	0
  7452     0458  00BA               	movwf	___flmul@b
  7453     0459                     l2992:
  7454     0459  17BC               	bsf	___flmul@b+2,7
  7455     045A  2C63               	goto	l2996
  7456     045B                     l2994:
  7457     045B  3000               	movlw	0
  7458     045C  00BD               	movwf	___flmul@b+3
  7459     045D  3000               	movlw	0
  7460     045E  00BC               	movwf	___flmul@b+2
  7461     045F  3000               	movlw	0
  7462     0460  00BB               	movwf	___flmul@b+1
  7463     0461  3000               	movlw	0
  7464     0462  00BA               	movwf	___flmul@b
  7465     0463                     l2996:
  7466     0463  0841               	movf	___flmul@a+3,w
  7467     0464  3980               	andlw	128
  7468     0465  00C2               	movwf	??___flmul
  7469     0466  0842               	movf	??___flmul,w
  7470     0467  06C7               	xorwf	___flmul@sign,f
  7471     0468                     l2998:
  7472     0468  0841               	movf	___flmul@a+3,w
  7473     0469  00C2               	movwf	??___flmul
  7474     046A  0742               	addwf	??___flmul,w
  7475     046B  00CC               	movwf	___flmul@aexp
  7476     046C                     l3000:
  7477     046C  1FC0               	btfss	___flmul@a+2,7
  7478     046D  2C6F               	goto	u3381
  7479     046E  2C70               	goto	u3380
  7480     046F                     u3381:
  7481     046F  2C71               	goto	l3004
  7482     0470                     u3380:
  7483     0470                     l3002:
  7484     0470  144C               	bsf	___flmul@aexp,0
  7485     0471                     l3004:
  7486     0471  084C               	movf	___flmul@aexp,w
  7487     0472  1903               	btfsc	3,2
  7488     0473  2C75               	goto	u3391
  7489     0474  2C76               	goto	u3390
  7490     0475                     u3391:
  7491     0475  2C85               	goto	l3012
  7492     0476                     u3390:
  7493     0476                     l3006:
  7494     0476  0A4C               	incf	___flmul@aexp,w
  7495     0477  1D03               	btfss	3,2
  7496     0478  2C7A               	goto	u3401
  7497     0479  2C7B               	goto	u3400
  7498     047A                     u3401:
  7499     047A  2C83               	goto	l3010
  7500     047B                     u3400:
  7501     047B                     l3008:
  7502     047B  3000               	movlw	0
  7503     047C  00C1               	movwf	___flmul@a+3
  7504     047D  3000               	movlw	0
  7505     047E  00C0               	movwf	___flmul@a+2
  7506     047F  3000               	movlw	0
  7507     0480  00BF               	movwf	___flmul@a+1
  7508     0481  3000               	movlw	0
  7509     0482  00BE               	movwf	___flmul@a
  7510     0483                     l3010:
  7511     0483  17C0               	bsf	___flmul@a+2,7
  7512     0484  2C8D               	goto	l3014
  7513     0485                     l3012:
  7514     0485  3000               	movlw	0
  7515     0486  00C1               	movwf	___flmul@a+3
  7516     0487  3000               	movlw	0
  7517     0488  00C0               	movwf	___flmul@a+2
  7518     0489  3000               	movlw	0
  7519     048A  00BF               	movwf	___flmul@a+1
  7520     048B  3000               	movlw	0
  7521     048C  00BE               	movwf	___flmul@a
  7522     048D                     l3014:
  7523     048D  084C               	movf	___flmul@aexp,w
  7524     048E  1903               	btfsc	3,2
  7525     048F  2C91               	goto	u3411
  7526     0490  2C92               	goto	u3410
  7527     0491                     u3411:
  7528     0491  2C97               	goto	l3018
  7529     0492                     u3410:
  7530     0492                     l3016:
  7531     0492  084D               	movf	___flmul@bexp,w
  7532     0493  1D03               	btfss	3,2
  7533     0494  2C96               	goto	u3421
  7534     0495  2C97               	goto	u3420
  7535     0496                     u3421:
  7536     0496  2CA0               	goto	l3022
  7537     0497                     u3420:
  7538     0497                     l3018:
  7539     0497  3000               	movlw	0
  7540     0498  00BD               	movwf	?___flmul+3
  7541     0499  3000               	movlw	0
  7542     049A  00BC               	movwf	?___flmul+2
  7543     049B  3000               	movlw	0
  7544     049C  00BB               	movwf	?___flmul+1
  7545     049D  3000               	movlw	0
  7546     049E  00BA               	movwf	?___flmul
  7547     049F  2F7D               	goto	l894
  7548     04A0                     l3022:
  7549     04A0  083A               	movf	___flmul@b,w
  7550     04A1  00A0               	movwf	__Umul8_16@multiplicand
  7551     04A2  0840               	movf	___flmul@a+2,w
  7552     04A3  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7553     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  7554     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  7555     04AA  0821               	movf	?__Umul8_16+1,w
  7556     04AB  00D3               	movwf	___flmul@temp+1
  7557     04AC  0820               	movf	?__Umul8_16,w
  7558     04AD  00D2               	movwf	___flmul@temp
  7559     04AE                     l3024:
  7560     04AE  0852               	movf	___flmul@temp,w
  7561     04AF  00C2               	movwf	??___flmul
  7562     04B0  01C3               	clrf	??___flmul+1
  7563     04B1  01C4               	clrf	??___flmul+2
  7564     04B2  01C5               	clrf	??___flmul+3
  7565     04B3  0845               	movf	??___flmul+3,w
  7566     04B4  00CB               	movwf	___flmul@grs+3
  7567     04B5  0844               	movf	??___flmul+2,w
  7568     04B6  00CA               	movwf	___flmul@grs+2
  7569     04B7  0843               	movf	??___flmul+1,w
  7570     04B8  00C9               	movwf	___flmul@grs+1
  7571     04B9  0842               	movf	??___flmul,w
  7572     04BA  00C8               	movwf	___flmul@grs
  7573     04BB                     l3026:
  7574     04BB  0853               	movf	___flmul@temp+1,w
  7575     04BC  00C2               	movwf	??___flmul
  7576     04BD  01C3               	clrf	??___flmul+1
  7577     04BE  01C4               	clrf	??___flmul+2
  7578     04BF  01C5               	clrf	??___flmul+3
  7579     04C0  0845               	movf	??___flmul+3,w
  7580     04C1  00D1               	movwf	___flmul@prod+3
  7581     04C2  0844               	movf	??___flmul+2,w
  7582     04C3  00D0               	movwf	___flmul@prod+2
  7583     04C4  0843               	movf	??___flmul+1,w
  7584     04C5  00CF               	movwf	___flmul@prod+1
  7585     04C6  0842               	movf	??___flmul,w
  7586     04C7  00CE               	movwf	___flmul@prod
  7587     04C8  083B               	movf	___flmul@b+1,w
  7588     04C9  00A0               	movwf	__Umul8_16@multiplicand
  7589     04CA  083F               	movf	___flmul@a+1,w
  7590     04CB  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7591     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  7592     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  7593     04D2  0821               	movf	?__Umul8_16+1,w
  7594     04D3  00D3               	movwf	___flmul@temp+1
  7595     04D4  0820               	movf	?__Umul8_16,w
  7596     04D5  00D2               	movwf	___flmul@temp
  7597     04D6                     l3028:
  7598     04D6  0852               	movf	___flmul@temp,w
  7599     04D7  00C2               	movwf	??___flmul
  7600     04D8  01C3               	clrf	??___flmul+1
  7601     04D9  01C4               	clrf	??___flmul+2
  7602     04DA  01C5               	clrf	??___flmul+3
  7603     04DB  0842               	movf	??___flmul,w
  7604     04DC  07C8               	addwf	___flmul@grs,f
  7605     04DD  0843               	movf	??___flmul+1,w
  7606     04DE  1103               	clrz
  7607     04DF  1803               	skipnc
  7608     04E0  3E01               	addlw	1
  7609     04E1  1903               	skipnz
  7610     04E2  2CE4               	goto	u3431
  7611     04E3  07C9               	addwf	___flmul@grs+1,f
  7612     04E4                     u3431:
  7613     04E4  0844               	movf	??___flmul+2,w
  7614     04E5  1103               	clrz
  7615     04E6  1803               	skipnc
  7616     04E7  3E01               	addlw	1
  7617     04E8  1903               	skipnz
  7618     04E9  2CEB               	goto	u3432
  7619     04EA  07CA               	addwf	___flmul@grs+2,f
  7620     04EB                     u3432:
  7621     04EB  0845               	movf	??___flmul+3,w
  7622     04EC  1103               	clrz
  7623     04ED  1803               	skipnc
  7624     04EE  3E01               	addlw	1
  7625     04EF  1903               	skipnz
  7626     04F0  2CF2               	goto	u3433
  7627     04F1  07CB               	addwf	___flmul@grs+3,f
  7628     04F2                     u3433:
  7629     04F2                     l3030:
  7630     04F2  0853               	movf	___flmul@temp+1,w
  7631     04F3  00C2               	movwf	??___flmul
  7632     04F4  01C3               	clrf	??___flmul+1
  7633     04F5  01C4               	clrf	??___flmul+2
  7634     04F6  01C5               	clrf	??___flmul+3
  7635     04F7  0842               	movf	??___flmul,w
  7636     04F8  07CE               	addwf	___flmul@prod,f
  7637     04F9  0843               	movf	??___flmul+1,w
  7638     04FA  1103               	clrz
  7639     04FB  1803               	skipnc
  7640     04FC  3E01               	addlw	1
  7641     04FD  1903               	skipnz
  7642     04FE  2D00               	goto	u3441
  7643     04FF  07CF               	addwf	___flmul@prod+1,f
  7644     0500                     u3441:
  7645     0500  0844               	movf	??___flmul+2,w
  7646     0501  1103               	clrz
  7647     0502  1803               	skipnc
  7648     0503  3E01               	addlw	1
  7649     0504  1903               	skipnz
  7650     0505  2D07               	goto	u3442
  7651     0506  07D0               	addwf	___flmul@prod+2,f
  7652     0507                     u3442:
  7653     0507  0845               	movf	??___flmul+3,w
  7654     0508  1103               	clrz
  7655     0509  1803               	skipnc
  7656     050A  3E01               	addlw	1
  7657     050B  1903               	skipnz
  7658     050C  2D0E               	goto	u3443
  7659     050D  07D1               	addwf	___flmul@prod+3,f
  7660     050E                     u3443:
  7661     050E  083C               	movf	___flmul@b+2,w
  7662     050F  00A0               	movwf	__Umul8_16@multiplicand
  7663     0510  083E               	movf	___flmul@a,w
  7664     0511  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7665     0516  1283               	bcf	3,5	;RP0=0, select bank0
  7666     0517  1303               	bcf	3,6	;RP1=0, select bank0
  7667     0518  0821               	movf	?__Umul8_16+1,w
  7668     0519  00D3               	movwf	___flmul@temp+1
  7669     051A  0820               	movf	?__Umul8_16,w
  7670     051B  00D2               	movwf	___flmul@temp
  7671     051C                     l3032:
  7672     051C  0852               	movf	___flmul@temp,w
  7673     051D  00C2               	movwf	??___flmul
  7674     051E  01C3               	clrf	??___flmul+1
  7675     051F  01C4               	clrf	??___flmul+2
  7676     0520  01C5               	clrf	??___flmul+3
  7677     0521  0842               	movf	??___flmul,w
  7678     0522  07C8               	addwf	___flmul@grs,f
  7679     0523  0843               	movf	??___flmul+1,w
  7680     0524  1103               	clrz
  7681     0525  1803               	skipnc
  7682     0526  3E01               	addlw	1
  7683     0527  1903               	skipnz
  7684     0528  2D2A               	goto	u3451
  7685     0529  07C9               	addwf	___flmul@grs+1,f
  7686     052A                     u3451:
  7687     052A  0844               	movf	??___flmul+2,w
  7688     052B  1103               	clrz
  7689     052C  1803               	skipnc
  7690     052D  3E01               	addlw	1
  7691     052E  1903               	skipnz
  7692     052F  2D31               	goto	u3452
  7693     0530  07CA               	addwf	___flmul@grs+2,f
  7694     0531                     u3452:
  7695     0531  0845               	movf	??___flmul+3,w
  7696     0532  1103               	clrz
  7697     0533  1803               	skipnc
  7698     0534  3E01               	addlw	1
  7699     0535  1903               	skipnz
  7700     0536  2D38               	goto	u3453
  7701     0537  07CB               	addwf	___flmul@grs+3,f
  7702     0538                     u3453:
  7703     0538                     l3034:
  7704     0538  0853               	movf	___flmul@temp+1,w
  7705     0539  00C2               	movwf	??___flmul
  7706     053A  01C3               	clrf	??___flmul+1
  7707     053B  01C4               	clrf	??___flmul+2
  7708     053C  01C5               	clrf	??___flmul+3
  7709     053D  0842               	movf	??___flmul,w
  7710     053E  07CE               	addwf	___flmul@prod,f
  7711     053F  0843               	movf	??___flmul+1,w
  7712     0540  1103               	clrz
  7713     0541  1803               	skipnc
  7714     0542  3E01               	addlw	1
  7715     0543  1903               	skipnz
  7716     0544  2D46               	goto	u3461
  7717     0545  07CF               	addwf	___flmul@prod+1,f
  7718     0546                     u3461:
  7719     0546  0844               	movf	??___flmul+2,w
  7720     0547  1103               	clrz
  7721     0548  1803               	skipnc
  7722     0549  3E01               	addlw	1
  7723     054A  1903               	skipnz
  7724     054B  2D4D               	goto	u3462
  7725     054C  07D0               	addwf	___flmul@prod+2,f
  7726     054D                     u3462:
  7727     054D  0845               	movf	??___flmul+3,w
  7728     054E  1103               	clrz
  7729     054F  1803               	skipnc
  7730     0550  3E01               	addlw	1
  7731     0551  1903               	skipnz
  7732     0552  2D54               	goto	u3463
  7733     0553  07D1               	addwf	___flmul@prod+3,f
  7734     0554                     u3463:
  7735     0554                     l3036:
  7736     0554  3008               	movlw	8
  7737     0555  00C2               	movwf	??___flmul
  7738     0556                     u3475:
  7739     0556  1003               	clrc
  7740     0557  0DC8               	rlf	___flmul@grs,f
  7741     0558  0DC9               	rlf	___flmul@grs+1,f
  7742     0559  0DCA               	rlf	___flmul@grs+2,f
  7743     055A  0DCB               	rlf	___flmul@grs+3,f
  7744     055B  0BC2               	decfsz	??___flmul,f
  7745     055C  2D56               	goto	u3475
  7746     055D                     l3038:
  7747     055D  083B               	movf	___flmul@b+1,w
  7748     055E  00A0               	movwf	__Umul8_16@multiplicand
  7749     055F  083E               	movf	___flmul@a,w
  7750     0560  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7751     0565  1283               	bcf	3,5	;RP0=0, select bank0
  7752     0566  1303               	bcf	3,6	;RP1=0, select bank0
  7753     0567  0821               	movf	?__Umul8_16+1,w
  7754     0568  00D3               	movwf	___flmul@temp+1
  7755     0569  0820               	movf	?__Umul8_16,w
  7756     056A  00D2               	movwf	___flmul@temp
  7757     056B                     l3040:
  7758     056B  0852               	movf	___flmul@temp,w
  7759     056C  00C2               	movwf	??___flmul
  7760     056D  0853               	movf	___flmul@temp+1,w
  7761     056E  00C3               	movwf	??___flmul+1
  7762     056F  01C4               	clrf	??___flmul+2
  7763     0570  01C5               	clrf	??___flmul+3
  7764     0571  0842               	movf	??___flmul,w
  7765     0572  07C8               	addwf	___flmul@grs,f
  7766     0573  0843               	movf	??___flmul+1,w
  7767     0574  1103               	clrz
  7768     0575  1803               	skipnc
  7769     0576  3E01               	addlw	1
  7770     0577  1903               	skipnz
  7771     0578  2D7A               	goto	u3481
  7772     0579  07C9               	addwf	___flmul@grs+1,f
  7773     057A                     u3481:
  7774     057A  0844               	movf	??___flmul+2,w
  7775     057B  1103               	clrz
  7776     057C  1803               	skipnc
  7777     057D  3E01               	addlw	1
  7778     057E  1903               	skipnz
  7779     057F  2D81               	goto	u3482
  7780     0580  07CA               	addwf	___flmul@grs+2,f
  7781     0581                     u3482:
  7782     0581  0845               	movf	??___flmul+3,w
  7783     0582  1103               	clrz
  7784     0583  1803               	skipnc
  7785     0584  3E01               	addlw	1
  7786     0585  1903               	skipnz
  7787     0586  2D88               	goto	u3483
  7788     0587  07CB               	addwf	___flmul@grs+3,f
  7789     0588                     u3483:
  7790     0588                     l3042:
  7791     0588  083A               	movf	___flmul@b,w
  7792     0589  00A0               	movwf	__Umul8_16@multiplicand
  7793     058A  083F               	movf	___flmul@a+1,w
  7794     058B  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7795     0590  1283               	bcf	3,5	;RP0=0, select bank0
  7796     0591  1303               	bcf	3,6	;RP1=0, select bank0
  7797     0592  0821               	movf	?__Umul8_16+1,w
  7798     0593  00D3               	movwf	___flmul@temp+1
  7799     0594  0820               	movf	?__Umul8_16,w
  7800     0595  00D2               	movwf	___flmul@temp
  7801     0596                     l3044:
  7802     0596  0852               	movf	___flmul@temp,w
  7803     0597  00C2               	movwf	??___flmul
  7804     0598  0853               	movf	___flmul@temp+1,w
  7805     0599  00C3               	movwf	??___flmul+1
  7806     059A  01C4               	clrf	??___flmul+2
  7807     059B  01C5               	clrf	??___flmul+3
  7808     059C  0842               	movf	??___flmul,w
  7809     059D  07C8               	addwf	___flmul@grs,f
  7810     059E  0843               	movf	??___flmul+1,w
  7811     059F  1103               	clrz
  7812     05A0  1803               	skipnc
  7813     05A1  3E01               	addlw	1
  7814     05A2  1903               	skipnz
  7815     05A3  2DA5               	goto	u3491
  7816     05A4  07C9               	addwf	___flmul@grs+1,f
  7817     05A5                     u3491:
  7818     05A5  0844               	movf	??___flmul+2,w
  7819     05A6  1103               	clrz
  7820     05A7  1803               	skipnc
  7821     05A8  3E01               	addlw	1
  7822     05A9  1903               	skipnz
  7823     05AA  2DAC               	goto	u3492
  7824     05AB  07CA               	addwf	___flmul@grs+2,f
  7825     05AC                     u3492:
  7826     05AC  0845               	movf	??___flmul+3,w
  7827     05AD  1103               	clrz
  7828     05AE  1803               	skipnc
  7829     05AF  3E01               	addlw	1
  7830     05B0  1903               	skipnz
  7831     05B1  2DB3               	goto	u3493
  7832     05B2  07CB               	addwf	___flmul@grs+3,f
  7833     05B3                     u3493:
  7834     05B3                     l3046:
  7835     05B3  3008               	movlw	8
  7836     05B4  00C2               	movwf	??___flmul
  7837     05B5                     u3505:
  7838     05B5  1003               	clrc
  7839     05B6  0DC8               	rlf	___flmul@grs,f
  7840     05B7  0DC9               	rlf	___flmul@grs+1,f
  7841     05B8  0DCA               	rlf	___flmul@grs+2,f
  7842     05B9  0DCB               	rlf	___flmul@grs+3,f
  7843     05BA  0BC2               	decfsz	??___flmul,f
  7844     05BB  2DB5               	goto	u3505
  7845     05BC  083A               	movf	___flmul@b,w
  7846     05BD  00A0               	movwf	__Umul8_16@multiplicand
  7847     05BE  083E               	movf	___flmul@a,w
  7848     05BF  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7849     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  7850     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  7851     05C6  0821               	movf	?__Umul8_16+1,w
  7852     05C7  00D3               	movwf	___flmul@temp+1
  7853     05C8  0820               	movf	?__Umul8_16,w
  7854     05C9  00D2               	movwf	___flmul@temp
  7855     05CA                     l3048:
  7856     05CA  0852               	movf	___flmul@temp,w
  7857     05CB  00C2               	movwf	??___flmul
  7858     05CC  0853               	movf	___flmul@temp+1,w
  7859     05CD  00C3               	movwf	??___flmul+1
  7860     05CE  01C4               	clrf	??___flmul+2
  7861     05CF  01C5               	clrf	??___flmul+3
  7862     05D0  0842               	movf	??___flmul,w
  7863     05D1  07C8               	addwf	___flmul@grs,f
  7864     05D2  0843               	movf	??___flmul+1,w
  7865     05D3  1103               	clrz
  7866     05D4  1803               	skipnc
  7867     05D5  3E01               	addlw	1
  7868     05D6  1903               	skipnz
  7869     05D7  2DD9               	goto	u3511
  7870     05D8  07C9               	addwf	___flmul@grs+1,f
  7871     05D9                     u3511:
  7872     05D9  0844               	movf	??___flmul+2,w
  7873     05DA  1103               	clrz
  7874     05DB  1803               	skipnc
  7875     05DC  3E01               	addlw	1
  7876     05DD  1903               	skipnz
  7877     05DE  2DE0               	goto	u3512
  7878     05DF  07CA               	addwf	___flmul@grs+2,f
  7879     05E0                     u3512:
  7880     05E0  0845               	movf	??___flmul+3,w
  7881     05E1  1103               	clrz
  7882     05E2  1803               	skipnc
  7883     05E3  3E01               	addlw	1
  7884     05E4  1903               	skipnz
  7885     05E5  2DE7               	goto	u3513
  7886     05E6  07CB               	addwf	___flmul@grs+3,f
  7887     05E7                     u3513:
  7888     05E7                     l3050:
  7889     05E7  083B               	movf	___flmul@b+1,w
  7890     05E8  00A0               	movwf	__Umul8_16@multiplicand
  7891     05E9  0840               	movf	___flmul@a+2,w
  7892     05EA  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7893     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  7894     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  7895     05F1  0821               	movf	?__Umul8_16+1,w
  7896     05F2  00D3               	movwf	___flmul@temp+1
  7897     05F3  0820               	movf	?__Umul8_16,w
  7898     05F4  00D2               	movwf	___flmul@temp
  7899     05F5  0852               	movf	___flmul@temp,w
  7900     05F6  00C2               	movwf	??___flmul
  7901     05F7  0853               	movf	___flmul@temp+1,w
  7902     05F8  00C3               	movwf	??___flmul+1
  7903     05F9  01C4               	clrf	??___flmul+2
  7904     05FA  01C5               	clrf	??___flmul+3
  7905     05FB  0842               	movf	??___flmul,w
  7906     05FC  07CE               	addwf	___flmul@prod,f
  7907     05FD  0843               	movf	??___flmul+1,w
  7908     05FE  1103               	clrz
  7909     05FF  1803               	skipnc
  7910     0600  3E01               	addlw	1
  7911     0601  1903               	skipnz
  7912     0602  2E04               	goto	u3521
  7913     0603  07CF               	addwf	___flmul@prod+1,f
  7914     0604                     u3521:
  7915     0604  0844               	movf	??___flmul+2,w
  7916     0605  1103               	clrz
  7917     0606  1803               	skipnc
  7918     0607  3E01               	addlw	1
  7919     0608  1903               	skipnz
  7920     0609  2E0B               	goto	u3522
  7921     060A  07D0               	addwf	___flmul@prod+2,f
  7922     060B                     u3522:
  7923     060B  0845               	movf	??___flmul+3,w
  7924     060C  1103               	clrz
  7925     060D  1803               	skipnc
  7926     060E  3E01               	addlw	1
  7927     060F  1903               	skipnz
  7928     0610  2E12               	goto	u3523
  7929     0611  07D1               	addwf	___flmul@prod+3,f
  7930     0612                     u3523:
  7931     0612                     l3052:
  7932     0612  083C               	movf	___flmul@b+2,w
  7933     0613  00A0               	movwf	__Umul8_16@multiplicand
  7934     0614  083F               	movf	___flmul@a+1,w
  7935     0615  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7936     061A  1283               	bcf	3,5	;RP0=0, select bank0
  7937     061B  1303               	bcf	3,6	;RP1=0, select bank0
  7938     061C  0821               	movf	?__Umul8_16+1,w
  7939     061D  00D3               	movwf	___flmul@temp+1
  7940     061E  0820               	movf	?__Umul8_16,w
  7941     061F  00D2               	movwf	___flmul@temp
  7942     0620                     l3054:
  7943     0620  0852               	movf	___flmul@temp,w
  7944     0621  00C2               	movwf	??___flmul
  7945     0622  0853               	movf	___flmul@temp+1,w
  7946     0623  00C3               	movwf	??___flmul+1
  7947     0624  01C4               	clrf	??___flmul+2
  7948     0625  01C5               	clrf	??___flmul+3
  7949     0626  0842               	movf	??___flmul,w
  7950     0627  07CE               	addwf	___flmul@prod,f
  7951     0628  0843               	movf	??___flmul+1,w
  7952     0629  1103               	clrz
  7953     062A  1803               	skipnc
  7954     062B  3E01               	addlw	1
  7955     062C  1903               	skipnz
  7956     062D  2E2F               	goto	u3531
  7957     062E  07CF               	addwf	___flmul@prod+1,f
  7958     062F                     u3531:
  7959     062F  0844               	movf	??___flmul+2,w
  7960     0630  1103               	clrz
  7961     0631  1803               	skipnc
  7962     0632  3E01               	addlw	1
  7963     0633  1903               	skipnz
  7964     0634  2E36               	goto	u3532
  7965     0635  07D0               	addwf	___flmul@prod+2,f
  7966     0636                     u3532:
  7967     0636  0845               	movf	??___flmul+3,w
  7968     0637  1103               	clrz
  7969     0638  1803               	skipnc
  7970     0639  3E01               	addlw	1
  7971     063A  1903               	skipnz
  7972     063B  2E3D               	goto	u3533
  7973     063C  07D1               	addwf	___flmul@prod+3,f
  7974     063D                     u3533:
  7975     063D  083C               	movf	___flmul@b+2,w
  7976     063E  00A0               	movwf	__Umul8_16@multiplicand
  7977     063F  0840               	movf	___flmul@a+2,w
  7978     0640  160A  118A  2260  120A  118A  	fcall	__Umul8_16
  7979     0645  1283               	bcf	3,5	;RP0=0, select bank0
  7980     0646  1303               	bcf	3,6	;RP1=0, select bank0
  7981     0647  0821               	movf	?__Umul8_16+1,w
  7982     0648  00D3               	movwf	___flmul@temp+1
  7983     0649  0820               	movf	?__Umul8_16,w
  7984     064A  00D2               	movwf	___flmul@temp
  7985     064B                     l3056:
  7986     064B  0852               	movf	___flmul@temp,w
  7987     064C  00C2               	movwf	??___flmul
  7988     064D  0853               	movf	___flmul@temp+1,w
  7989     064E  00C3               	movwf	??___flmul+1
  7990     064F  01C4               	clrf	??___flmul+2
  7991     0650  01C5               	clrf	??___flmul+3
  7992     0651  3008               	movlw	8
  7993     0652                     u3545:
  7994     0652  1003               	clrc
  7995     0653  0DC2               	rlf	??___flmul,f
  7996     0654  0DC3               	rlf	??___flmul+1,f
  7997     0655  0DC4               	rlf	??___flmul+2,f
  7998     0656  0DC5               	rlf	??___flmul+3,f
  7999     0657                     u3540:
  8000     0657  3EFF               	addlw	-1
  8001     0658  1D03               	skipz
  8002     0659  2E52               	goto	u3545
  8003     065A  0842               	movf	??___flmul,w
  8004     065B  07CE               	addwf	___flmul@prod,f
  8005     065C  0843               	movf	??___flmul+1,w
  8006     065D  1103               	clrz
  8007     065E  1803               	skipnc
  8008     065F  3E01               	addlw	1
  8009     0660  1903               	skipnz
  8010     0661  2E63               	goto	u3551
  8011     0662  07CF               	addwf	___flmul@prod+1,f
  8012     0663                     u3551:
  8013     0663  0844               	movf	??___flmul+2,w
  8014     0664  1103               	clrz
  8015     0665  1803               	skipnc
  8016     0666  3E01               	addlw	1
  8017     0667  1903               	skipnz
  8018     0668  2E6A               	goto	u3552
  8019     0669  07D0               	addwf	___flmul@prod+2,f
  8020     066A                     u3552:
  8021     066A  0845               	movf	??___flmul+3,w
  8022     066B  1103               	clrz
  8023     066C  1803               	skipnc
  8024     066D  3E01               	addlw	1
  8025     066E  1903               	skipnz
  8026     066F  2E71               	goto	u3553
  8027     0670  07D1               	addwf	___flmul@prod+3,f
  8028     0671                     u3553:
  8029     0671                     l3058:
  8030     0671  0848               	movf	___flmul@grs,w
  8031     0672  00C2               	movwf	??___flmul
  8032     0673  0849               	movf	___flmul@grs+1,w
  8033     0674  00C3               	movwf	??___flmul+1
  8034     0675  084A               	movf	___flmul@grs+2,w
  8035     0676  00C4               	movwf	??___flmul+2
  8036     0677  084B               	movf	___flmul@grs+3,w
  8037     0678  00C5               	movwf	??___flmul+3
  8038     0679  3018               	movlw	24
  8039     067A                     u3565:
  8040     067A  1003               	clrc
  8041     067B  0CC5               	rrf	??___flmul+3,f
  8042     067C  0CC4               	rrf	??___flmul+2,f
  8043     067D  0CC3               	rrf	??___flmul+1,f
  8044     067E  0CC2               	rrf	??___flmul,f
  8045     067F                     u3560:
  8046     067F  3EFF               	addlw	-1
  8047     0680  1D03               	skipz
  8048     0681  2E7A               	goto	u3565
  8049     0682  0842               	movf	??___flmul,w
  8050     0683  07CE               	addwf	___flmul@prod,f
  8051     0684  0843               	movf	??___flmul+1,w
  8052     0685  1103               	clrz
  8053     0686  1803               	skipnc
  8054     0687  3E01               	addlw	1
  8055     0688  1903               	skipnz
  8056     0689  2E8B               	goto	u3571
  8057     068A  07CF               	addwf	___flmul@prod+1,f
  8058     068B                     u3571:
  8059     068B  0844               	movf	??___flmul+2,w
  8060     068C  1103               	clrz
  8061     068D  1803               	skipnc
  8062     068E  3E01               	addlw	1
  8063     068F  1903               	skipnz
  8064     0690  2E92               	goto	u3572
  8065     0691  07D0               	addwf	___flmul@prod+2,f
  8066     0692                     u3572:
  8067     0692  0845               	movf	??___flmul+3,w
  8068     0693  1103               	clrz
  8069     0694  1803               	skipnc
  8070     0695  3E01               	addlw	1
  8071     0696  1903               	skipnz
  8072     0697  2E99               	goto	u3573
  8073     0698  07D1               	addwf	___flmul@prod+3,f
  8074     0699                     u3573:
  8075     0699                     l3060:
  8076     0699  3008               	movlw	8
  8077     069A  00C2               	movwf	??___flmul
  8078     069B                     u3585:
  8079     069B  1003               	clrc
  8080     069C  0DC8               	rlf	___flmul@grs,f
  8081     069D  0DC9               	rlf	___flmul@grs+1,f
  8082     069E  0DCA               	rlf	___flmul@grs+2,f
  8083     069F  0DCB               	rlf	___flmul@grs+3,f
  8084     06A0  0BC2               	decfsz	??___flmul,f
  8085     06A1  2E9B               	goto	u3585
  8086     06A2                     l3062:
  8087     06A2  084D               	movf	___flmul@bexp,w
  8088     06A3  074C               	addwf	___flmul@aexp,w
  8089     06A4  00C2               	movwf	??___flmul
  8090     06A5  01C3               	clrf	??___flmul+1
  8091     06A6  0DC3               	rlf	??___flmul+1,f
  8092     06A7  0842               	movf	??___flmul,w
  8093     06A8  3E82               	addlw	130
  8094     06A9  00D2               	movwf	___flmul@temp
  8095     06AA  0843               	movf	??___flmul+1,w
  8096     06AB  1803               	skipnc
  8097     06AC  3E01               	addlw	1
  8098     06AD  3EFF               	addlw	255
  8099     06AE  00D3               	movwf	___flmul@temp+1
  8100     06AF  2ECD               	goto	l3074
  8101     06B0                     l3064:
  8102     06B0  3001               	movlw	1
  8103     06B1  00C2               	movwf	??___flmul
  8104     06B2                     u3595:
  8105     06B2  1003               	clrc
  8106     06B3  0DCE               	rlf	___flmul@prod,f
  8107     06B4  0DCF               	rlf	___flmul@prod+1,f
  8108     06B5  0DD0               	rlf	___flmul@prod+2,f
  8109     06B6  0DD1               	rlf	___flmul@prod+3,f
  8110     06B7  0BC2               	decfsz	??___flmul,f
  8111     06B8  2EB2               	goto	u3595
  8112     06B9                     l3066:
  8113     06B9  1FCB               	btfss	___flmul@grs+3,7
  8114     06BA  2EBC               	goto	u3601
  8115     06BB  2EBD               	goto	u3600
  8116     06BC                     u3601:
  8117     06BC  2EBE               	goto	l3070
  8118     06BD                     u3600:
  8119     06BD                     l3068:
  8120     06BD  144E               	bsf	___flmul@prod,0
  8121     06BE                     l3070:
  8122     06BE  3001               	movlw	1
  8123     06BF  00C2               	movwf	??___flmul
  8124     06C0                     u3615:
  8125     06C0  1003               	clrc
  8126     06C1  0DC8               	rlf	___flmul@grs,f
  8127     06C2  0DC9               	rlf	___flmul@grs+1,f
  8128     06C3  0DCA               	rlf	___flmul@grs+2,f
  8129     06C4  0DCB               	rlf	___flmul@grs+3,f
  8130     06C5  0BC2               	decfsz	??___flmul,f
  8131     06C6  2EC0               	goto	u3615
  8132     06C7                     l3072:
  8133     06C7  30FF               	movlw	255
  8134     06C8  07D2               	addwf	___flmul@temp,f
  8135     06C9  1803               	skipnc
  8136     06CA  0AD3               	incf	___flmul@temp+1,f
  8137     06CB  30FF               	movlw	255
  8138     06CC  07D3               	addwf	___flmul@temp+1,f
  8139     06CD                     l3074:
  8140     06CD  1FD0               	btfss	___flmul@prod+2,7
  8141     06CE  2ED0               	goto	u3621
  8142     06CF  2ED1               	goto	u3620
  8143     06D0                     u3621:
  8144     06D0  2EB0               	goto	l3064
  8145     06D1                     u3620:
  8146     06D1                     l3076:
  8147     06D1  01CC               	clrf	___flmul@aexp
  8148     06D2                     l3078:
  8149     06D2  1FCB               	btfss	___flmul@grs+3,7
  8150     06D3  2ED5               	goto	u3631
  8151     06D4  2ED6               	goto	u3630
  8152     06D5                     u3631:
  8153     06D5  2EF2               	goto	l3086
  8154     06D6                     u3630:
  8155     06D6                     l3080:
  8156     06D6  30FF               	movlw	255
  8157     06D7  0548               	andwf	___flmul@grs,w
  8158     06D8  00C2               	movwf	??___flmul
  8159     06D9  30FF               	movlw	255
  8160     06DA  0549               	andwf	___flmul@grs+1,w
  8161     06DB  00C3               	movwf	??___flmul+1
  8162     06DC  30FF               	movlw	255
  8163     06DD  054A               	andwf	___flmul@grs+2,w
  8164     06DE  00C4               	movwf	??___flmul+2
  8165     06DF  307F               	movlw	127
  8166     06E0  054B               	andwf	___flmul@grs+3,w
  8167     06E1  00C5               	movwf	??___flmul+3
  8168     06E2  0845               	movf	??___flmul+3,w
  8169     06E3  0444               	iorwf	??___flmul+2,w
  8170     06E4  0443               	iorwf	??___flmul+1,w
  8171     06E5  0442               	iorwf	??___flmul,w
  8172     06E6  1903               	skipnz
  8173     06E7  2EE9               	goto	u3641
  8174     06E8  2EEA               	goto	u3640
  8175     06E9                     u3641:
  8176     06E9  2EED               	goto	l900
  8177     06EA                     u3640:
  8178     06EA                     l3082:
  8179     06EA  01CC               	clrf	___flmul@aexp
  8180     06EB  0ACC               	incf	___flmul@aexp,f
  8181     06EC  2EF2               	goto	l3086
  8182     06ED                     l900:
  8183     06ED  1C4E               	btfss	___flmul@prod,0
  8184     06EE  2EF0               	goto	u3651
  8185     06EF  2EF1               	goto	u3650
  8186     06F0                     u3651:
  8187     06F0  2EF2               	goto	l3086
  8188     06F1                     u3650:
  8189     06F1  2EEA               	goto	l3082
  8190     06F2                     l3086:
  8191     06F2  084C               	movf	___flmul@aexp,w
  8192     06F3  1903               	btfsc	3,2
  8193     06F4  2EF6               	goto	u3661
  8194     06F5  2EF7               	goto	u3660
  8195     06F6                     u3661:
  8196     06F6  2F28               	goto	l3096
  8197     06F7                     u3660:
  8198     06F7                     l3088:
  8199     06F7  3001               	movlw	1
  8200     06F8  07CE               	addwf	___flmul@prod,f
  8201     06F9  3000               	movlw	0
  8202     06FA  1803               	skipnc
  8203     06FB  3001               	movlw	1
  8204     06FC  07CF               	addwf	___flmul@prod+1,f
  8205     06FD  3000               	movlw	0
  8206     06FE  1803               	skipnc
  8207     06FF  3001               	movlw	1
  8208     0700  07D0               	addwf	___flmul@prod+2,f
  8209     0701  3000               	movlw	0
  8210     0702  1803               	skipnc
  8211     0703  3001               	movlw	1
  8212     0704  07D1               	addwf	___flmul@prod+3,f
  8213     0705                     l3090:
  8214     0705  1C51               	btfss	___flmul@prod+3,0
  8215     0706  2F08               	goto	u3671
  8216     0707  2F09               	goto	u3670
  8217     0708                     u3671:
  8218     0708  2F28               	goto	l3096
  8219     0709                     u3670:
  8220     0709                     l3092:
  8221     0709  084E               	movf	___flmul@prod,w
  8222     070A  00C2               	movwf	??___flmul
  8223     070B  084F               	movf	___flmul@prod+1,w
  8224     070C  00C3               	movwf	??___flmul+1
  8225     070D  0850               	movf	___flmul@prod+2,w
  8226     070E  00C4               	movwf	??___flmul+2
  8227     070F  0851               	movf	___flmul@prod+3,w
  8228     0710  00C5               	movwf	??___flmul+3
  8229     0711  3001               	movlw	1
  8230     0712  00C6               	movwf	??___flmul+4
  8231     0713                     u3685:
  8232     0713  0D45               	rlf	??___flmul+3,w
  8233     0714  0CC5               	rrf	??___flmul+3,f
  8234     0715  0CC4               	rrf	??___flmul+2,f
  8235     0716  0CC3               	rrf	??___flmul+1,f
  8236     0717  0CC2               	rrf	??___flmul,f
  8237     0718                     u3680:
  8238     0718  0BC6               	decfsz	??___flmul+4,f
  8239     0719  2F13               	goto	u3685
  8240     071A  0845               	movf	??___flmul+3,w
  8241     071B  00D1               	movwf	___flmul@prod+3
  8242     071C  0844               	movf	??___flmul+2,w
  8243     071D  00D0               	movwf	___flmul@prod+2
  8244     071E  0843               	movf	??___flmul+1,w
  8245     071F  00CF               	movwf	___flmul@prod+1
  8246     0720  0842               	movf	??___flmul,w
  8247     0721  00CE               	movwf	___flmul@prod
  8248     0722                     l3094:
  8249     0722  3001               	movlw	1
  8250     0723  07D2               	addwf	___flmul@temp,f
  8251     0724  1803               	skipnc
  8252     0725  0AD3               	incf	___flmul@temp+1,f
  8253     0726  3000               	movlw	0
  8254     0727  07D3               	addwf	___flmul@temp+1,f
  8255     0728                     l3096:
  8256     0728  0853               	movf	___flmul@temp+1,w
  8257     0729  3A80               	xorlw	128
  8258     072A  00FF               	movwf	btemp+1
  8259     072B  3080               	movlw	128
  8260     072C  027F               	subwf	btemp+1,w
  8261     072D  1D03               	skipz
  8262     072E  2F31               	goto	u3695
  8263     072F  30FF               	movlw	255
  8264     0730  0252               	subwf	___flmul@temp,w
  8265     0731                     u3695:
  8266     0731  1C03               	skipc
  8267     0732  2F34               	goto	u3691
  8268     0733  2F35               	goto	u3690
  8269     0734                     u3691:
  8270     0734  2F40               	goto	l3100
  8271     0735                     u3690:
  8272     0735                     l3098:
  8273     0735  307F               	movlw	127
  8274     0736  1283               	bcf	3,5	;RP0=0, select bank0
  8275     0737  1303               	bcf	3,6	;RP1=0, select bank0
  8276     0738  00D1               	movwf	___flmul@prod+3
  8277     0739  3080               	movlw	128
  8278     073A  00D0               	movwf	___flmul@prod+2
  8279     073B  3000               	movlw	0
  8280     073C  00CF               	movwf	___flmul@prod+1
  8281     073D  3000               	movlw	0
  8282     073E  00CE               	movwf	___flmul@prod
  8283     073F  2F71               	goto	l906
  8284     0740                     l3100:
  8285     0740  1283               	bcf	3,5	;RP0=0, select bank0
  8286     0741  1303               	bcf	3,6	;RP1=0, select bank0
  8287     0742  0853               	movf	___flmul@temp+1,w
  8288     0743  3A80               	xorlw	128
  8289     0744  00FF               	movwf	btemp+1
  8290     0745  3080               	movlw	128
  8291     0746  027F               	subwf	btemp+1,w
  8292     0747  1D03               	skipz
  8293     0748  2F4B               	goto	u3705
  8294     0749  3001               	movlw	1
  8295     074A  0252               	subwf	___flmul@temp,w
  8296     074B                     u3705:
  8297     074B  1803               	skipnc
  8298     074C  2F4E               	goto	u3701
  8299     074D  2F4F               	goto	u3700
  8300     074E                     u3701:
  8301     074E  2F5B               	goto	l3106
  8302     074F                     u3700:
  8303     074F                     l3102:
  8304     074F  3000               	movlw	0
  8305     0750  1283               	bcf	3,5	;RP0=0, select bank0
  8306     0751  1303               	bcf	3,6	;RP1=0, select bank0
  8307     0752  00D1               	movwf	___flmul@prod+3
  8308     0753  3000               	movlw	0
  8309     0754  00D0               	movwf	___flmul@prod+2
  8310     0755  3000               	movlw	0
  8311     0756  00CF               	movwf	___flmul@prod+1
  8312     0757  3000               	movlw	0
  8313     0758  00CE               	movwf	___flmul@prod
  8314     0759                     l3104:
  8315     0759  01C7               	clrf	___flmul@sign
  8316     075A  2F71               	goto	l906
  8317     075B                     l3106:
  8318     075B  1283               	bcf	3,5	;RP0=0, select bank0
  8319     075C  1303               	bcf	3,6	;RP1=0, select bank0
  8320     075D  0852               	movf	___flmul@temp,w
  8321     075E  00CD               	movwf	___flmul@bexp
  8322     075F  30FF               	movlw	255
  8323     0760  05CE               	andwf	___flmul@prod,f
  8324     0761  30FF               	movlw	255
  8325     0762  05CF               	andwf	___flmul@prod+1,f
  8326     0763  307F               	movlw	127
  8327     0764  05D0               	andwf	___flmul@prod+2,f
  8328     0765  3000               	movlw	0
  8329     0766  05D1               	andwf	___flmul@prod+3,f
  8330     0767                     l3108:
  8331     0767  1C4D               	btfss	___flmul@bexp,0
  8332     0768  2F6A               	goto	u3711
  8333     0769  2F6B               	goto	u3710
  8334     076A                     u3711:
  8335     076A  2F6C               	goto	l3112
  8336     076B                     u3710:
  8337     076B                     l3110:
  8338     076B  17D0               	bsf	___flmul@prod+2,7
  8339     076C                     l3112:
  8340     076C  084D               	movf	___flmul@bexp,w
  8341     076D  00C2               	movwf	??___flmul
  8342     076E  1003               	clrc
  8343     076F  0C42               	rrf	??___flmul,w
  8344     0770  00D1               	movwf	___flmul@prod+3
  8345     0771                     l906:
  8346     0771  0847               	movf	___flmul@sign,w
  8347     0772  00C2               	movwf	??___flmul
  8348     0773  0842               	movf	??___flmul,w
  8349     0774  04D1               	iorwf	___flmul@prod+3,f
  8350     0775                     l3114:
  8351     0775  0851               	movf	___flmul@prod+3,w
  8352     0776  00BD               	movwf	?___flmul+3
  8353     0777  0850               	movf	___flmul@prod+2,w
  8354     0778  00BC               	movwf	?___flmul+2
  8355     0779  084F               	movf	___flmul@prod+1,w
  8356     077A  00BB               	movwf	?___flmul+1
  8357     077B  084E               	movf	___flmul@prod,w
  8358     077C  00BA               	movwf	?___flmul
  8359     077D                     l894:
  8360     077D  0008               	return
  8361     077E                     __end_of___flmul:
  8362                           
  8363                           	psect	text32
  8364     1260                     __ptext32:	
  8365 ;; *************** function __Umul8_16 *****************
  8366 ;; Defined at:
  8367 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  multiplier      1    wreg     unsigned char 
  8370 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8373 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8374 ;;  product         2    4[BANK0 ] unsigned int 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    0[BANK0 ] unsigned int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8384 ;;      Params:         0       2       0       0       0
  8385 ;;      Locals:         0       5       0       0       0
  8386 ;;      Temps:          0       2       0       0       0
  8387 ;;      Totals:         0       9       0       0       0
  8388 ;;Total ram usage:        9 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 4
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		___flmul
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398     1260                     __Umul8_16:	
  8399                           ;psect for function __Umul8_16
  8400                           
  8401                           
  8402                           ;incstack = 0
  8403                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8404                           ;__Umul8_16@multiplier stored from wreg
  8405     1260  1283               	bcf	3,5	;RP0=0, select bank0
  8406     1261  1303               	bcf	3,6	;RP1=0, select bank0
  8407     1262  00A8               	movwf	__Umul8_16@multiplier
  8408     1263                     l2688:
  8409     1263  01A4               	clrf	__Umul8_16@product
  8410     1264  01A5               	clrf	__Umul8_16@product+1
  8411     1265                     l2690:
  8412     1265  0820               	movf	__Umul8_16@multiplicand,w
  8413     1266  00A2               	movwf	??__Umul8_16
  8414     1267  01A3               	clrf	??__Umul8_16+1
  8415     1268  0822               	movf	??__Umul8_16,w
  8416     1269  00A6               	movwf	__Umul8_16@word_mpld
  8417     126A  0823               	movf	??__Umul8_16+1,w
  8418     126B  00A7               	movwf	__Umul8_16@word_mpld+1
  8419     126C                     l2692:
  8420     126C  1C28               	btfss	__Umul8_16@multiplier,0
  8421     126D  2A6F               	goto	u2761
  8422     126E  2A70               	goto	u2760
  8423     126F                     u2761:
  8424     126F  2A76               	goto	l913
  8425     1270                     u2760:
  8426     1270                     l2694:
  8427     1270  0826               	movf	__Umul8_16@word_mpld,w
  8428     1271  07A4               	addwf	__Umul8_16@product,f
  8429     1272  1803               	skipnc
  8430     1273  0AA5               	incf	__Umul8_16@product+1,f
  8431     1274  0827               	movf	__Umul8_16@word_mpld+1,w
  8432     1275  07A5               	addwf	__Umul8_16@product+1,f
  8433     1276                     l913:
  8434     1276  3001               	movlw	1
  8435     1277                     u2775:
  8436     1277  1003               	clrc
  8437     1278  0DA6               	rlf	__Umul8_16@word_mpld,f
  8438     1279  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8439     127A  3EFF               	addlw	-1
  8440     127B  1D03               	skipz
  8441     127C  2A77               	goto	u2775
  8442     127D  1003               	clrc
  8443     127E  0CA8               	rrf	__Umul8_16@multiplier,f
  8444     127F                     l2696:
  8445     127F  0828               	movf	__Umul8_16@multiplier,w
  8446     1280  1D03               	btfss	3,2
  8447     1281  2A83               	goto	u2781
  8448     1282  2A84               	goto	u2780
  8449     1283                     u2781:
  8450     1283  2A6C               	goto	l2692
  8451     1284                     u2780:
  8452     1284                     l2698:
  8453     1284  0825               	movf	__Umul8_16@product+1,w
  8454     1285  00A1               	movwf	?__Umul8_16+1
  8455     1286  0824               	movf	__Umul8_16@product,w
  8456     1287  00A0               	movwf	?__Umul8_16
  8457     1288                     l915:
  8458     1288  0008               	return
  8459     1289                     __end_of__Umul8_16:
  8460                           
  8461                           	psect	text33
  8462     1564                     __ptext33:	
  8463 ;; *************** function ___flge *****************
  8464 ;; Defined at:
  8465 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  ff1             4    0[BANK0 ] unsigned int 
  8468 ;;  ff2             4    4[BANK0 ] unsigned int 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;		None               void
  8473 ;; Registers used:
  8474 ;;		wreg, status,2, status,0
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8480 ;;      Params:         0       8       0       0       0
  8481 ;;      Locals:         0       0       0       0       0
  8482 ;;      Temps:          0       4       0       0       0
  8483 ;;      Totals:         0      12       0       0       0
  8484 ;;Total ram usage:       12 bytes
  8485 ;; Hardware stack levels used: 1
  8486 ;; Hardware stack levels required when called: 4
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_floattostr
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494     1564                     ___flge:	
  8495                           ;psect for function ___flge
  8496                           
  8497     1564                     l2766:	
  8498                           ;incstack = 0
  8499                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8500                           
  8501     1564  3000               	movlw	0
  8502     1565  1283               	bcf	3,5	;RP0=0, select bank0
  8503     1566  1303               	bcf	3,6	;RP1=0, select bank0
  8504     1567  0520               	andwf	___flge@ff1,w
  8505     1568  00A8               	movwf	??___flge
  8506     1569  3000               	movlw	0
  8507     156A  0521               	andwf	___flge@ff1+1,w
  8508     156B  00A9               	movwf	??___flge+1
  8509     156C  3080               	movlw	128
  8510     156D  0522               	andwf	___flge@ff1+2,w
  8511     156E  00AA               	movwf	??___flge+2
  8512     156F  307F               	movlw	127
  8513     1570  0523               	andwf	___flge@ff1+3,w
  8514     1571  00AB               	movwf	??___flge+3
  8515     1572  082B               	movf	??___flge+3,w
  8516     1573  042A               	iorwf	??___flge+2,w
  8517     1574  0429               	iorwf	??___flge+1,w
  8518     1575  0428               	iorwf	??___flge,w
  8519     1576  1D03               	skipz
  8520     1577  2D79               	goto	u2881
  8521     1578  2D7A               	goto	u2880
  8522     1579                     u2881:
  8523     1579  2D82               	goto	l679
  8524     157A                     u2880:
  8525     157A                     l2768:
  8526     157A  3000               	movlw	0
  8527     157B  00A3               	movwf	___flge@ff1+3
  8528     157C  3000               	movlw	0
  8529     157D  00A2               	movwf	___flge@ff1+2
  8530     157E  3000               	movlw	0
  8531     157F  00A1               	movwf	___flge@ff1+1
  8532     1580  3000               	movlw	0
  8533     1581  00A0               	movwf	___flge@ff1
  8534     1582                     l679:
  8535     1582  3000               	movlw	0
  8536     1583  0524               	andwf	___flge@ff2,w
  8537     1584  00A8               	movwf	??___flge
  8538     1585  3000               	movlw	0
  8539     1586  0525               	andwf	___flge@ff2+1,w
  8540     1587  00A9               	movwf	??___flge+1
  8541     1588  3080               	movlw	128
  8542     1589  0526               	andwf	___flge@ff2+2,w
  8543     158A  00AA               	movwf	??___flge+2
  8544     158B  307F               	movlw	127
  8545     158C  0527               	andwf	___flge@ff2+3,w
  8546     158D  00AB               	movwf	??___flge+3
  8547     158E  082B               	movf	??___flge+3,w
  8548     158F  042A               	iorwf	??___flge+2,w
  8549     1590  0429               	iorwf	??___flge+1,w
  8550     1591  0428               	iorwf	??___flge,w
  8551     1592  1D03               	skipz
  8552     1593  2D95               	goto	u2891
  8553     1594  2D96               	goto	u2890
  8554     1595                     u2891:
  8555     1595  2D9E               	goto	l2772
  8556     1596                     u2890:
  8557     1596                     l2770:
  8558     1596  3000               	movlw	0
  8559     1597  00A7               	movwf	___flge@ff2+3
  8560     1598  3000               	movlw	0
  8561     1599  00A6               	movwf	___flge@ff2+2
  8562     159A  3000               	movlw	0
  8563     159B  00A5               	movwf	___flge@ff2+1
  8564     159C  3000               	movlw	0
  8565     159D  00A4               	movwf	___flge@ff2
  8566     159E                     l2772:
  8567     159E  1FA3               	btfss	___flge@ff1+3,7
  8568     159F  2DA1               	goto	u2901
  8569     15A0  2DA2               	goto	u2900
  8570     15A1                     u2901:
  8571     15A1  2DC6               	goto	l2776
  8572     15A2                     u2900:
  8573     15A2                     l2774:
  8574     15A2  3000               	movlw	0
  8575     15A3  00A8               	movwf	??___flge
  8576     15A4  3000               	movlw	0
  8577     15A5  00A9               	movwf	??___flge+1
  8578     15A6  3000               	movlw	0
  8579     15A7  00AA               	movwf	??___flge+2
  8580     15A8  3080               	movlw	128
  8581     15A9  00AB               	movwf	??___flge+3
  8582     15AA  0820               	movf	___flge@ff1,w
  8583     15AB  02A8               	subwf	??___flge,f
  8584     15AC  0821               	movf	___flge@ff1+1,w
  8585     15AD  1C03               	skipc
  8586     15AE  0F21               	incfsz	___flge@ff1+1,w
  8587     15AF  2DB1               	goto	u2911
  8588     15B0  2DB2               	goto	u2912
  8589     15B1                     u2911:
  8590     15B1  02A9               	subwf	??___flge+1,f
  8591     15B2                     u2912:
  8592     15B2  0822               	movf	___flge@ff1+2,w
  8593     15B3  1C03               	skipc
  8594     15B4  0F22               	incfsz	___flge@ff1+2,w
  8595     15B5  2DB7               	goto	u2913
  8596     15B6  2DB8               	goto	u2914
  8597     15B7                     u2913:
  8598     15B7  02AA               	subwf	??___flge+2,f
  8599     15B8                     u2914:
  8600     15B8  0823               	movf	___flge@ff1+3,w
  8601     15B9  1C03               	skipc
  8602     15BA  0F23               	incfsz	___flge@ff1+3,w
  8603     15BB  2DBD               	goto	u2915
  8604     15BC  2DBE               	goto	u2916
  8605     15BD                     u2915:
  8606     15BD  02AB               	subwf	??___flge+3,f
  8607     15BE                     u2916:
  8608     15BE  082B               	movf	??___flge+3,w
  8609     15BF  00A3               	movwf	___flge@ff1+3
  8610     15C0  082A               	movf	??___flge+2,w
  8611     15C1  00A2               	movwf	___flge@ff1+2
  8612     15C2  0829               	movf	??___flge+1,w
  8613     15C3  00A1               	movwf	___flge@ff1+1
  8614     15C4  0828               	movf	??___flge,w
  8615     15C5  00A0               	movwf	___flge@ff1
  8616     15C6                     l2776:
  8617     15C6  1FA7               	btfss	___flge@ff2+3,7
  8618     15C7  2DC9               	goto	u2921
  8619     15C8  2DCA               	goto	u2920
  8620     15C9                     u2921:
  8621     15C9  2DEE               	goto	l682
  8622     15CA                     u2920:
  8623     15CA                     l2778:
  8624     15CA  3000               	movlw	0
  8625     15CB  00A8               	movwf	??___flge
  8626     15CC  3000               	movlw	0
  8627     15CD  00A9               	movwf	??___flge+1
  8628     15CE  3000               	movlw	0
  8629     15CF  00AA               	movwf	??___flge+2
  8630     15D0  3080               	movlw	128
  8631     15D1  00AB               	movwf	??___flge+3
  8632     15D2  0824               	movf	___flge@ff2,w
  8633     15D3  02A8               	subwf	??___flge,f
  8634     15D4  0825               	movf	___flge@ff2+1,w
  8635     15D5  1C03               	skipc
  8636     15D6  0F25               	incfsz	___flge@ff2+1,w
  8637     15D7  2DD9               	goto	u2931
  8638     15D8  2DDA               	goto	u2932
  8639     15D9                     u2931:
  8640     15D9  02A9               	subwf	??___flge+1,f
  8641     15DA                     u2932:
  8642     15DA  0826               	movf	___flge@ff2+2,w
  8643     15DB  1C03               	skipc
  8644     15DC  0F26               	incfsz	___flge@ff2+2,w
  8645     15DD  2DDF               	goto	u2933
  8646     15DE  2DE0               	goto	u2934
  8647     15DF                     u2933:
  8648     15DF  02AA               	subwf	??___flge+2,f
  8649     15E0                     u2934:
  8650     15E0  0827               	movf	___flge@ff2+3,w
  8651     15E1  1C03               	skipc
  8652     15E2  0F27               	incfsz	___flge@ff2+3,w
  8653     15E3  2DE5               	goto	u2935
  8654     15E4  2DE6               	goto	u2936
  8655     15E5                     u2935:
  8656     15E5  02AB               	subwf	??___flge+3,f
  8657     15E6                     u2936:
  8658     15E6  082B               	movf	??___flge+3,w
  8659     15E7  00A7               	movwf	___flge@ff2+3
  8660     15E8  082A               	movf	??___flge+2,w
  8661     15E9  00A6               	movwf	___flge@ff2+2
  8662     15EA  0829               	movf	??___flge+1,w
  8663     15EB  00A5               	movwf	___flge@ff2+1
  8664     15EC  0828               	movf	??___flge,w
  8665     15ED  00A4               	movwf	___flge@ff2
  8666     15EE                     l682:
  8667     15EE  3080               	movlw	128
  8668     15EF  06A3               	xorwf	___flge@ff1+3,f
  8669     15F0  3080               	movlw	128
  8670     15F1  06A7               	xorwf	___flge@ff2+3,f
  8671     15F2  0827               	movf	___flge@ff2+3,w
  8672     15F3  0223               	subwf	___flge@ff1+3,w
  8673     15F4  1D03               	skipz
  8674     15F5  2E00               	goto	u2945
  8675     15F6  0826               	movf	___flge@ff2+2,w
  8676     15F7  0222               	subwf	___flge@ff1+2,w
  8677     15F8  1D03               	skipz
  8678     15F9  2E00               	goto	u2945
  8679     15FA  0825               	movf	___flge@ff2+1,w
  8680     15FB  0221               	subwf	___flge@ff1+1,w
  8681     15FC  1D03               	skipz
  8682     15FD  2E00               	goto	u2945
  8683     15FE  0824               	movf	___flge@ff2,w
  8684     15FF  0220               	subwf	___flge@ff1,w
  8685     1600                     u2945:
  8686     1600  1803               	skipnc
  8687     1601  2E03               	goto	u2941
  8688     1602  2E04               	goto	u2940
  8689     1603                     u2941:
  8690     1603  2E06               	goto	l2782
  8691     1604                     u2940:
  8692     1604                     l2780:
  8693     1604  1003               	clrc
  8694     1605  2E07               	goto	l683
  8695     1606                     l2782:
  8696     1606  1403               	setc
  8697     1607                     l683:
  8698     1607  0008               	return
  8699     1608                     __end_of___flge:
  8700                           
  8701                           	psect	text34
  8702     0BD5                     __ptext34:	
  8703 ;; *************** function ___fldiv *****************
  8704 ;; Defined at:
  8705 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  a               4    0[BANK0 ] unsigned int 
  8708 ;;  b               4    4[BANK0 ] unsigned int 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  grs             4   20[BANK0 ] unsigned long 
  8711 ;;  rem             4   13[BANK0 ] unsigned long 
  8712 ;;  new_exp         2   18[BANK0 ] int 
  8713 ;;  aexp            1   25[BANK0 ] unsigned char 
  8714 ;;  bexp            1   24[BANK0 ] unsigned char 
  8715 ;;  sign            1   17[BANK0 ] unsigned char 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  4    0[BANK0 ] unsigned char 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, btemp+1
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8725 ;;      Params:         0       8       0       0       0
  8726 ;;      Locals:         0      13       0       0       0
  8727 ;;      Temps:          0       5       0       0       0
  8728 ;;      Totals:         0      26       0       0       0
  8729 ;;Total ram usage:       26 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 4
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_floattostr
  8736 ;;		_AHT10_Read
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740     0BD5                     ___fldiv:	
  8741                           ;psect for function ___fldiv
  8742                           
  8743     0BD5                     l2836:	
  8744                           ;incstack = 0
  8745                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8746                           
  8747     0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  8748     0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  8749     0BD7  0827               	movf	___fldiv@b+3,w
  8750     0BD8  3980               	andlw	128
  8751     0BD9  00B1               	movwf	___fldiv@sign
  8752     0BDA                     l2838:
  8753     0BDA  0827               	movf	___fldiv@b+3,w
  8754     0BDB  00A8               	movwf	??___fldiv
  8755     0BDC  0728               	addwf	??___fldiv,w
  8756     0BDD  00B8               	movwf	___fldiv@bexp
  8757     0BDE                     l2840:
  8758     0BDE  1FA6               	btfss	___fldiv@b+2,7
  8759     0BDF  2BE1               	goto	u3061
  8760     0BE0  2BE2               	goto	u3060
  8761     0BE1                     u3061:
  8762     0BE1  2BE3               	goto	l2844
  8763     0BE2                     u3060:
  8764     0BE2                     l2842:
  8765     0BE2  1438               	bsf	___fldiv@bexp,0
  8766     0BE3                     l2844:
  8767     0BE3  0838               	movf	___fldiv@bexp,w
  8768     0BE4  1903               	btfsc	3,2
  8769     0BE5  2BE7               	goto	u3071
  8770     0BE6  2BE8               	goto	u3070
  8771     0BE7                     u3071:
  8772     0BE7  2BF8               	goto	l2854
  8773     0BE8                     u3070:
  8774     0BE8                     l2846:
  8775     0BE8  0A38               	incf	___fldiv@bexp,w
  8776     0BE9  1D03               	btfss	3,2
  8777     0BEA  2BEC               	goto	u3081
  8778     0BEB  2BED               	goto	u3080
  8779     0BEC                     u3081:
  8780     0BEC  2BF5               	goto	l2850
  8781     0BED                     u3080:
  8782     0BED                     l2848:
  8783     0BED  3000               	movlw	0
  8784     0BEE  00A7               	movwf	___fldiv@b+3
  8785     0BEF  3000               	movlw	0
  8786     0BF0  00A6               	movwf	___fldiv@b+2
  8787     0BF1  3000               	movlw	0
  8788     0BF2  00A5               	movwf	___fldiv@b+1
  8789     0BF3  3000               	movlw	0
  8790     0BF4  00A4               	movwf	___fldiv@b
  8791     0BF5                     l2850:
  8792     0BF5  17A6               	bsf	___fldiv@b+2,7
  8793     0BF6                     l2852:
  8794     0BF6  01A7               	clrf	___fldiv@b+3
  8795     0BF7  2C00               	goto	l2856
  8796     0BF8                     l2854:
  8797     0BF8  3000               	movlw	0
  8798     0BF9  00A7               	movwf	___fldiv@b+3
  8799     0BFA  3000               	movlw	0
  8800     0BFB  00A6               	movwf	___fldiv@b+2
  8801     0BFC  3000               	movlw	0
  8802     0BFD  00A5               	movwf	___fldiv@b+1
  8803     0BFE  3000               	movlw	0
  8804     0BFF  00A4               	movwf	___fldiv@b
  8805     0C00                     l2856:
  8806     0C00  0823               	movf	___fldiv@a+3,w
  8807     0C01  3980               	andlw	128
  8808     0C02  00A8               	movwf	??___fldiv
  8809     0C03  0828               	movf	??___fldiv,w
  8810     0C04  06B1               	xorwf	___fldiv@sign,f
  8811     0C05                     l2858:
  8812     0C05  0823               	movf	___fldiv@a+3,w
  8813     0C06  00A8               	movwf	??___fldiv
  8814     0C07  0728               	addwf	??___fldiv,w
  8815     0C08  00B9               	movwf	___fldiv@aexp
  8816     0C09                     l2860:
  8817     0C09  1FA2               	btfss	___fldiv@a+2,7
  8818     0C0A  2C0C               	goto	u3091
  8819     0C0B  2C0D               	goto	u3090
  8820     0C0C                     u3091:
  8821     0C0C  2C0E               	goto	l2864
  8822     0C0D                     u3090:
  8823     0C0D                     l2862:
  8824     0C0D  1439               	bsf	___fldiv@aexp,0
  8825     0C0E                     l2864:
  8826     0C0E  0839               	movf	___fldiv@aexp,w
  8827     0C0F  1903               	btfsc	3,2
  8828     0C10  2C12               	goto	u3101
  8829     0C11  2C13               	goto	u3100
  8830     0C12                     u3101:
  8831     0C12  2C23               	goto	l2874
  8832     0C13                     u3100:
  8833     0C13                     l2866:
  8834     0C13  0A39               	incf	___fldiv@aexp,w
  8835     0C14  1D03               	btfss	3,2
  8836     0C15  2C17               	goto	u3111
  8837     0C16  2C18               	goto	u3110
  8838     0C17                     u3111:
  8839     0C17  2C20               	goto	l2870
  8840     0C18                     u3110:
  8841     0C18                     l2868:
  8842     0C18  3000               	movlw	0
  8843     0C19  00A3               	movwf	___fldiv@a+3
  8844     0C1A  3000               	movlw	0
  8845     0C1B  00A2               	movwf	___fldiv@a+2
  8846     0C1C  3000               	movlw	0
  8847     0C1D  00A1               	movwf	___fldiv@a+1
  8848     0C1E  3000               	movlw	0
  8849     0C1F  00A0               	movwf	___fldiv@a
  8850     0C20                     l2870:
  8851     0C20  17A2               	bsf	___fldiv@a+2,7
  8852     0C21                     l2872:
  8853     0C21  01A3               	clrf	___fldiv@a+3
  8854     0C22  2C2B               	goto	l854
  8855     0C23                     l2874:
  8856     0C23  3000               	movlw	0
  8857     0C24  00A3               	movwf	___fldiv@a+3
  8858     0C25  3000               	movlw	0
  8859     0C26  00A2               	movwf	___fldiv@a+2
  8860     0C27  3000               	movlw	0
  8861     0C28  00A1               	movwf	___fldiv@a+1
  8862     0C29  3000               	movlw	0
  8863     0C2A  00A0               	movwf	___fldiv@a
  8864     0C2B                     l854:
  8865     0C2B  0823               	movf	___fldiv@a+3,w
  8866     0C2C  0422               	iorwf	___fldiv@a+2,w
  8867     0C2D  0421               	iorwf	___fldiv@a+1,w
  8868     0C2E  0420               	iorwf	___fldiv@a,w
  8869     0C2F  1D03               	skipz
  8870     0C30  2C32               	goto	u3121
  8871     0C31  2C33               	goto	u3120
  8872     0C32                     u3121:
  8873     0C32  2C4C               	goto	l2884
  8874     0C33                     u3120:
  8875     0C33                     l2876:
  8876     0C33  3000               	movlw	0
  8877     0C34  00A7               	movwf	___fldiv@b+3
  8878     0C35  3000               	movlw	0
  8879     0C36  00A6               	movwf	___fldiv@b+2
  8880     0C37  3000               	movlw	0
  8881     0C38  00A5               	movwf	___fldiv@b+1
  8882     0C39  3000               	movlw	0
  8883     0C3A  00A4               	movwf	___fldiv@b
  8884     0C3B  3080               	movlw	128
  8885     0C3C  04A6               	iorwf	___fldiv@b+2,f
  8886     0C3D  307F               	movlw	127
  8887     0C3E  04A7               	iorwf	___fldiv@b+3,f
  8888     0C3F                     l2878:
  8889     0C3F  0831               	movf	___fldiv@sign,w
  8890     0C40  00A8               	movwf	??___fldiv
  8891     0C41  0828               	movf	??___fldiv,w
  8892     0C42  04A7               	iorwf	___fldiv@b+3,f
  8893     0C43                     l2880:
  8894     0C43  0827               	movf	___fldiv@b+3,w
  8895     0C44  00A3               	movwf	?___fldiv+3
  8896     0C45  0826               	movf	___fldiv@b+2,w
  8897     0C46  00A2               	movwf	?___fldiv+2
  8898     0C47  0825               	movf	___fldiv@b+1,w
  8899     0C48  00A1               	movwf	?___fldiv+1
  8900     0C49  0824               	movf	___fldiv@b,w
  8901     0C4A  00A0               	movwf	?___fldiv
  8902     0C4B  2DA7               	goto	l856
  8903     0C4C                     l2884:
  8904     0C4C  0838               	movf	___fldiv@bexp,w
  8905     0C4D  1D03               	btfss	3,2
  8906     0C4E  2C50               	goto	u3131
  8907     0C4F  2C51               	goto	u3130
  8908     0C50                     u3131:
  8909     0C50  2C5A               	goto	l2890
  8910     0C51                     u3130:
  8911     0C51                     l2886:
  8912     0C51  3000               	movlw	0
  8913     0C52  00A3               	movwf	?___fldiv+3
  8914     0C53  3000               	movlw	0
  8915     0C54  00A2               	movwf	?___fldiv+2
  8916     0C55  3000               	movlw	0
  8917     0C56  00A1               	movwf	?___fldiv+1
  8918     0C57  3000               	movlw	0
  8919     0C58  00A0               	movwf	?___fldiv
  8920     0C59  2DA7               	goto	l856
  8921     0C5A                     l2890:
  8922     0C5A  0838               	movf	___fldiv@bexp,w
  8923     0C5B  00A8               	movwf	??___fldiv
  8924     0C5C  01A9               	clrf	??___fldiv+1
  8925     0C5D  0829               	movf	??___fldiv+1,w
  8926     0C5E  00AB               	movwf	??___fldiv+3
  8927     0C5F  0839               	movf	___fldiv@aexp,w
  8928     0C60  0228               	subwf	??___fldiv,w
  8929     0C61  00AA               	movwf	??___fldiv+2
  8930     0C62  1C03               	skipc
  8931     0C63  03AB               	decf	??___fldiv+3,f
  8932     0C64  082A               	movf	??___fldiv+2,w
  8933     0C65  3E7F               	addlw	127
  8934     0C66  00B2               	movwf	___fldiv@new_exp
  8935     0C67  082B               	movf	??___fldiv+3,w
  8936     0C68  1803               	skipnc
  8937     0C69  3E01               	addlw	1
  8938     0C6A  3E00               	addlw	0
  8939     0C6B  00B3               	movwf	___fldiv@new_exp+1
  8940     0C6C                     l2892:
  8941     0C6C  0827               	movf	___fldiv@b+3,w
  8942     0C6D  00B0               	movwf	___fldiv@rem+3
  8943     0C6E  0826               	movf	___fldiv@b+2,w
  8944     0C6F  00AF               	movwf	___fldiv@rem+2
  8945     0C70  0825               	movf	___fldiv@b+1,w
  8946     0C71  00AE               	movwf	___fldiv@rem+1
  8947     0C72  0824               	movf	___fldiv@b,w
  8948     0C73  00AD               	movwf	___fldiv@rem
  8949     0C74                     l2894:
  8950     0C74  3000               	movlw	0
  8951     0C75  00A7               	movwf	___fldiv@b+3
  8952     0C76  3000               	movlw	0
  8953     0C77  00A6               	movwf	___fldiv@b+2
  8954     0C78  3000               	movlw	0
  8955     0C79  00A5               	movwf	___fldiv@b+1
  8956     0C7A  3000               	movlw	0
  8957     0C7B  00A4               	movwf	___fldiv@b
  8958     0C7C                     l2896:
  8959     0C7C  3000               	movlw	0
  8960     0C7D  00B7               	movwf	___fldiv@grs+3
  8961     0C7E  3000               	movlw	0
  8962     0C7F  00B6               	movwf	___fldiv@grs+2
  8963     0C80  3000               	movlw	0
  8964     0C81  00B5               	movwf	___fldiv@grs+1
  8965     0C82  3000               	movlw	0
  8966     0C83  00B4               	movwf	___fldiv@grs
  8967     0C84                     l2898:
  8968     0C84  01B9               	clrf	___fldiv@aexp
  8969     0C85  2CD0               	goto	l2918
  8970     0C86                     l2900:
  8971     0C86  0839               	movf	___fldiv@aexp,w
  8972     0C87  1903               	btfsc	3,2
  8973     0C88  2C8A               	goto	u3141
  8974     0C89  2C8B               	goto	u3140
  8975     0C8A                     u3141:
  8976     0C8A  2CAB               	goto	l2910
  8977     0C8B                     u3140:
  8978     0C8B                     l2902:
  8979     0C8B  3001               	movlw	1
  8980     0C8C  00A8               	movwf	??___fldiv
  8981     0C8D                     u3155:
  8982     0C8D  1003               	clrc
  8983     0C8E  0DAD               	rlf	___fldiv@rem,f
  8984     0C8F  0DAE               	rlf	___fldiv@rem+1,f
  8985     0C90  0DAF               	rlf	___fldiv@rem+2,f
  8986     0C91  0DB0               	rlf	___fldiv@rem+3,f
  8987     0C92  0BA8               	decfsz	??___fldiv,f
  8988     0C93  2C8D               	goto	u3155
  8989     0C94  3001               	movlw	1
  8990     0C95  00A8               	movwf	??___fldiv
  8991     0C96                     u3165:
  8992     0C96  1003               	clrc
  8993     0C97  0DA4               	rlf	___fldiv@b,f
  8994     0C98  0DA5               	rlf	___fldiv@b+1,f
  8995     0C99  0DA6               	rlf	___fldiv@b+2,f
  8996     0C9A  0DA7               	rlf	___fldiv@b+3,f
  8997     0C9B  0BA8               	decfsz	??___fldiv,f
  8998     0C9C  2C96               	goto	u3165
  8999     0C9D                     l2904:
  9000     0C9D  1FB7               	btfss	___fldiv@grs+3,7
  9001     0C9E  2CA0               	goto	u3171
  9002     0C9F  2CA1               	goto	u3170
  9003     0CA0                     u3171:
  9004     0CA0  2CA2               	goto	l2908
  9005     0CA1                     u3170:
  9006     0CA1                     l2906:
  9007     0CA1  1424               	bsf	___fldiv@b,0
  9008     0CA2                     l2908:
  9009     0CA2  3001               	movlw	1
  9010     0CA3  00A8               	movwf	??___fldiv
  9011     0CA4                     u3185:
  9012     0CA4  1003               	clrc
  9013     0CA5  0DB4               	rlf	___fldiv@grs,f
  9014     0CA6  0DB5               	rlf	___fldiv@grs+1,f
  9015     0CA7  0DB6               	rlf	___fldiv@grs+2,f
  9016     0CA8  0DB7               	rlf	___fldiv@grs+3,f
  9017     0CA9  0BA8               	decfsz	??___fldiv,f
  9018     0CAA  2CA4               	goto	u3185
  9019     0CAB                     l2910:
  9020     0CAB  0823               	movf	___fldiv@a+3,w
  9021     0CAC  0230               	subwf	___fldiv@rem+3,w
  9022     0CAD  1D03               	skipz
  9023     0CAE  2CB9               	goto	u3195
  9024     0CAF  0822               	movf	___fldiv@a+2,w
  9025     0CB0  022F               	subwf	___fldiv@rem+2,w
  9026     0CB1  1D03               	skipz
  9027     0CB2  2CB9               	goto	u3195
  9028     0CB3  0821               	movf	___fldiv@a+1,w
  9029     0CB4  022E               	subwf	___fldiv@rem+1,w
  9030     0CB5  1D03               	skipz
  9031     0CB6  2CB9               	goto	u3195
  9032     0CB7  0820               	movf	___fldiv@a,w
  9033     0CB8  022D               	subwf	___fldiv@rem,w
  9034     0CB9                     u3195:
  9035     0CB9  1C03               	skipc
  9036     0CBA  2CBC               	goto	u3191
  9037     0CBB  2CBD               	goto	u3190
  9038     0CBC                     u3191:
  9039     0CBC  2CCC               	goto	l2916
  9040     0CBD                     u3190:
  9041     0CBD                     l2912:
  9042     0CBD  1737               	bsf	___fldiv@grs+3,6
  9043     0CBE                     l2914:
  9044     0CBE  0820               	movf	___fldiv@a,w
  9045     0CBF  02AD               	subwf	___fldiv@rem,f
  9046     0CC0  0821               	movf	___fldiv@a+1,w
  9047     0CC1  1C03               	skipc
  9048     0CC2  0F21               	incfsz	___fldiv@a+1,w
  9049     0CC3  02AE               	subwf	___fldiv@rem+1,f
  9050     0CC4  0822               	movf	___fldiv@a+2,w
  9051     0CC5  1C03               	skipc
  9052     0CC6  0F22               	incfsz	___fldiv@a+2,w
  9053     0CC7  02AF               	subwf	___fldiv@rem+2,f
  9054     0CC8  0823               	movf	___fldiv@a+3,w
  9055     0CC9  1C03               	skipc
  9056     0CCA  0F23               	incfsz	___fldiv@a+3,w
  9057     0CCB  02B0               	subwf	___fldiv@rem+3,f
  9058     0CCC                     l2916:
  9059     0CCC  3001               	movlw	1
  9060     0CCD  00A8               	movwf	??___fldiv
  9061     0CCE  0828               	movf	??___fldiv,w
  9062     0CCF  07B9               	addwf	___fldiv@aexp,f
  9063     0CD0                     l2918:
  9064     0CD0  301A               	movlw	26
  9065     0CD1  0239               	subwf	___fldiv@aexp,w
  9066     0CD2  1C03               	skipc
  9067     0CD3  2CD5               	goto	u3201
  9068     0CD4  2CD6               	goto	u3200
  9069     0CD5                     u3201:
  9070     0CD5  2C86               	goto	l2900
  9071     0CD6                     u3200:
  9072     0CD6                     l2920:
  9073     0CD6  0830               	movf	___fldiv@rem+3,w
  9074     0CD7  042F               	iorwf	___fldiv@rem+2,w
  9075     0CD8  042E               	iorwf	___fldiv@rem+1,w
  9076     0CD9  042D               	iorwf	___fldiv@rem,w
  9077     0CDA  1903               	skipnz
  9078     0CDB  2CDD               	goto	u3211
  9079     0CDC  2CDE               	goto	u3210
  9080     0CDD                     u3211:
  9081     0CDD  2CFD               	goto	l2934
  9082     0CDE                     u3210:
  9083     0CDE                     l2922:
  9084     0CDE  1434               	bsf	___fldiv@grs,0
  9085     0CDF  2CFD               	goto	l2934
  9086     0CE0                     l2924:
  9087     0CE0  3001               	movlw	1
  9088     0CE1  00A8               	movwf	??___fldiv
  9089     0CE2                     u3225:
  9090     0CE2  1003               	clrc
  9091     0CE3  0DA4               	rlf	___fldiv@b,f
  9092     0CE4  0DA5               	rlf	___fldiv@b+1,f
  9093     0CE5  0DA6               	rlf	___fldiv@b+2,f
  9094     0CE6  0DA7               	rlf	___fldiv@b+3,f
  9095     0CE7  0BA8               	decfsz	??___fldiv,f
  9096     0CE8  2CE2               	goto	u3225
  9097     0CE9                     l2926:
  9098     0CE9  1FB7               	btfss	___fldiv@grs+3,7
  9099     0CEA  2CEC               	goto	u3231
  9100     0CEB  2CED               	goto	u3230
  9101     0CEC                     u3231:
  9102     0CEC  2CEE               	goto	l2930
  9103     0CED                     u3230:
  9104     0CED                     l2928:
  9105     0CED  1424               	bsf	___fldiv@b,0
  9106     0CEE                     l2930:
  9107     0CEE  3001               	movlw	1
  9108     0CEF  00A8               	movwf	??___fldiv
  9109     0CF0                     u3245:
  9110     0CF0  1003               	clrc
  9111     0CF1  0DB4               	rlf	___fldiv@grs,f
  9112     0CF2  0DB5               	rlf	___fldiv@grs+1,f
  9113     0CF3  0DB6               	rlf	___fldiv@grs+2,f
  9114     0CF4  0DB7               	rlf	___fldiv@grs+3,f
  9115     0CF5  0BA8               	decfsz	??___fldiv,f
  9116     0CF6  2CF0               	goto	u3245
  9117     0CF7                     l2932:
  9118     0CF7  30FF               	movlw	255
  9119     0CF8  07B2               	addwf	___fldiv@new_exp,f
  9120     0CF9  1803               	skipnc
  9121     0CFA  0AB3               	incf	___fldiv@new_exp+1,f
  9122     0CFB  30FF               	movlw	255
  9123     0CFC  07B3               	addwf	___fldiv@new_exp+1,f
  9124     0CFD                     l2934:
  9125     0CFD  1FA6               	btfss	___fldiv@b+2,7
  9126     0CFE  2D00               	goto	u3251
  9127     0CFF  2D01               	goto	u3250
  9128     0D00                     u3251:
  9129     0D00  2CE0               	goto	l2924
  9130     0D01                     u3250:
  9131     0D01                     l2936:
  9132     0D01  01B9               	clrf	___fldiv@aexp
  9133     0D02                     l2938:
  9134     0D02  1FB7               	btfss	___fldiv@grs+3,7
  9135     0D03  2D05               	goto	u3261
  9136     0D04  2D06               	goto	u3260
  9137     0D05                     u3261:
  9138     0D05  2D22               	goto	l2946
  9139     0D06                     u3260:
  9140     0D06                     l2940:
  9141     0D06  30FF               	movlw	255
  9142     0D07  0534               	andwf	___fldiv@grs,w
  9143     0D08  00A8               	movwf	??___fldiv
  9144     0D09  30FF               	movlw	255
  9145     0D0A  0535               	andwf	___fldiv@grs+1,w
  9146     0D0B  00A9               	movwf	??___fldiv+1
  9147     0D0C  30FF               	movlw	255
  9148     0D0D  0536               	andwf	___fldiv@grs+2,w
  9149     0D0E  00AA               	movwf	??___fldiv+2
  9150     0D0F  307F               	movlw	127
  9151     0D10  0537               	andwf	___fldiv@grs+3,w
  9152     0D11  00AB               	movwf	??___fldiv+3
  9153     0D12  082B               	movf	??___fldiv+3,w
  9154     0D13  042A               	iorwf	??___fldiv+2,w
  9155     0D14  0429               	iorwf	??___fldiv+1,w
  9156     0D15  0428               	iorwf	??___fldiv,w
  9157     0D16  1903               	skipnz
  9158     0D17  2D19               	goto	u3271
  9159     0D18  2D1A               	goto	u3270
  9160     0D19                     u3271:
  9161     0D19  2D1D               	goto	l870
  9162     0D1A                     u3270:
  9163     0D1A                     l2942:
  9164     0D1A  01B9               	clrf	___fldiv@aexp
  9165     0D1B  0AB9               	incf	___fldiv@aexp,f
  9166     0D1C  2D22               	goto	l2946
  9167     0D1D                     l870:
  9168     0D1D  1C24               	btfss	___fldiv@b,0
  9169     0D1E  2D20               	goto	u3281
  9170     0D1F  2D21               	goto	u3280
  9171     0D20                     u3281:
  9172     0D20  2D22               	goto	l2946
  9173     0D21                     u3280:
  9174     0D21  2D1A               	goto	l2942
  9175     0D22                     l2946:
  9176     0D22  0839               	movf	___fldiv@aexp,w
  9177     0D23  1903               	btfsc	3,2
  9178     0D24  2D26               	goto	u3291
  9179     0D25  2D27               	goto	u3290
  9180     0D26                     u3291:
  9181     0D26  2D58               	goto	l2956
  9182     0D27                     u3290:
  9183     0D27                     l2948:
  9184     0D27  3001               	movlw	1
  9185     0D28  07A4               	addwf	___fldiv@b,f
  9186     0D29  3000               	movlw	0
  9187     0D2A  1803               	skipnc
  9188     0D2B  3001               	movlw	1
  9189     0D2C  07A5               	addwf	___fldiv@b+1,f
  9190     0D2D  3000               	movlw	0
  9191     0D2E  1803               	skipnc
  9192     0D2F  3001               	movlw	1
  9193     0D30  07A6               	addwf	___fldiv@b+2,f
  9194     0D31  3000               	movlw	0
  9195     0D32  1803               	skipnc
  9196     0D33  3001               	movlw	1
  9197     0D34  07A7               	addwf	___fldiv@b+3,f
  9198     0D35                     l2950:
  9199     0D35  1C27               	btfss	___fldiv@b+3,0
  9200     0D36  2D38               	goto	u3301
  9201     0D37  2D39               	goto	u3300
  9202     0D38                     u3301:
  9203     0D38  2D58               	goto	l2956
  9204     0D39                     u3300:
  9205     0D39                     l2952:
  9206     0D39  0824               	movf	___fldiv@b,w
  9207     0D3A  00A8               	movwf	??___fldiv
  9208     0D3B  0825               	movf	___fldiv@b+1,w
  9209     0D3C  00A9               	movwf	??___fldiv+1
  9210     0D3D  0826               	movf	___fldiv@b+2,w
  9211     0D3E  00AA               	movwf	??___fldiv+2
  9212     0D3F  0827               	movf	___fldiv@b+3,w
  9213     0D40  00AB               	movwf	??___fldiv+3
  9214     0D41  3001               	movlw	1
  9215     0D42  00AC               	movwf	??___fldiv+4
  9216     0D43                     u3315:
  9217     0D43  0D2B               	rlf	??___fldiv+3,w
  9218     0D44  0CAB               	rrf	??___fldiv+3,f
  9219     0D45  0CAA               	rrf	??___fldiv+2,f
  9220     0D46  0CA9               	rrf	??___fldiv+1,f
  9221     0D47  0CA8               	rrf	??___fldiv,f
  9222     0D48                     u3310:
  9223     0D48  0BAC               	decfsz	??___fldiv+4,f
  9224     0D49  2D43               	goto	u3315
  9225     0D4A  082B               	movf	??___fldiv+3,w
  9226     0D4B  00A7               	movwf	___fldiv@b+3
  9227     0D4C  082A               	movf	??___fldiv+2,w
  9228     0D4D  00A6               	movwf	___fldiv@b+2
  9229     0D4E  0829               	movf	??___fldiv+1,w
  9230     0D4F  00A5               	movwf	___fldiv@b+1
  9231     0D50  0828               	movf	??___fldiv,w
  9232     0D51  00A4               	movwf	___fldiv@b
  9233     0D52                     l2954:
  9234     0D52  3001               	movlw	1
  9235     0D53  07B2               	addwf	___fldiv@new_exp,f
  9236     0D54  1803               	skipnc
  9237     0D55  0AB3               	incf	___fldiv@new_exp+1,f
  9238     0D56  3000               	movlw	0
  9239     0D57  07B3               	addwf	___fldiv@new_exp+1,f
  9240     0D58                     l2956:
  9241     0D58  0833               	movf	___fldiv@new_exp+1,w
  9242     0D59  3A80               	xorlw	128
  9243     0D5A  00FF               	movwf	btemp+1
  9244     0D5B  3080               	movlw	128
  9245     0D5C  027F               	subwf	btemp+1,w
  9246     0D5D  1D03               	skipz
  9247     0D5E  2D61               	goto	u3325
  9248     0D5F  30FF               	movlw	255
  9249     0D60  0232               	subwf	___fldiv@new_exp,w
  9250     0D61                     u3325:
  9251     0D61  1C03               	skipc
  9252     0D62  2D64               	goto	u3321
  9253     0D63  2D65               	goto	u3320
  9254     0D64                     u3321:
  9255     0D64  2D73               	goto	l2960
  9256     0D65                     u3320:
  9257     0D65                     l2958:
  9258     0D65  30FF               	movlw	255
  9259     0D66  1283               	bcf	3,5	;RP0=0, select bank0
  9260     0D67  1303               	bcf	3,6	;RP1=0, select bank0
  9261     0D68  00B2               	movwf	___fldiv@new_exp
  9262     0D69  3000               	movlw	0
  9263     0D6A  00B3               	movwf	___fldiv@new_exp+1
  9264     0D6B  3000               	movlw	0
  9265     0D6C  00A7               	movwf	___fldiv@b+3
  9266     0D6D  3000               	movlw	0
  9267     0D6E  00A6               	movwf	___fldiv@b+2
  9268     0D6F  3000               	movlw	0
  9269     0D70  00A5               	movwf	___fldiv@b+1
  9270     0D71  3000               	movlw	0
  9271     0D72  00A4               	movwf	___fldiv@b
  9272     0D73                     l2960:
  9273     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  9274     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  9275     0D75  0833               	movf	___fldiv@new_exp+1,w
  9276     0D76  3A80               	xorlw	128
  9277     0D77  00FF               	movwf	btemp+1
  9278     0D78  3080               	movlw	128
  9279     0D79  027F               	subwf	btemp+1,w
  9280     0D7A  1D03               	skipz
  9281     0D7B  2D7E               	goto	u3335
  9282     0D7C  3001               	movlw	1
  9283     0D7D  0232               	subwf	___fldiv@new_exp,w
  9284     0D7E                     u3335:
  9285     0D7E  1803               	skipnc
  9286     0D7F  2D81               	goto	u3331
  9287     0D80  2D82               	goto	u3330
  9288     0D81                     u3331:
  9289     0D81  2D8F               	goto	l876
  9290     0D82                     u3330:
  9291     0D82                     l2962:
  9292     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  9293     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  9294     0D84  01B2               	clrf	___fldiv@new_exp
  9295     0D85  01B3               	clrf	___fldiv@new_exp+1
  9296     0D86                     l2964:
  9297     0D86  3000               	movlw	0
  9298     0D87  00A7               	movwf	___fldiv@b+3
  9299     0D88  3000               	movlw	0
  9300     0D89  00A6               	movwf	___fldiv@b+2
  9301     0D8A  3000               	movlw	0
  9302     0D8B  00A5               	movwf	___fldiv@b+1
  9303     0D8C  3000               	movlw	0
  9304     0D8D  00A4               	movwf	___fldiv@b
  9305     0D8E                     l2966:
  9306     0D8E  01B1               	clrf	___fldiv@sign
  9307     0D8F                     l876:
  9308     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  9309     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  9310     0D91  0832               	movf	___fldiv@new_exp,w
  9311     0D92  00B8               	movwf	___fldiv@bexp
  9312     0D93                     l2968:
  9313     0D93  1C38               	btfss	___fldiv@bexp,0
  9314     0D94  2D96               	goto	u3341
  9315     0D95  2D97               	goto	u3340
  9316     0D96                     u3341:
  9317     0D96  2D99               	goto	l2972
  9318     0D97                     u3340:
  9319     0D97                     l2970:
  9320     0D97  17A6               	bsf	___fldiv@b+2,7
  9321     0D98  2D9D               	goto	l878
  9322     0D99                     l2972:
  9323     0D99  307F               	movlw	127
  9324     0D9A  00A8               	movwf	??___fldiv
  9325     0D9B  0828               	movf	??___fldiv,w
  9326     0D9C  05A6               	andwf	___fldiv@b+2,f
  9327     0D9D                     l878:
  9328     0D9D  0838               	movf	___fldiv@bexp,w
  9329     0D9E  00A8               	movwf	??___fldiv
  9330     0D9F  1003               	clrc
  9331     0DA0  0C28               	rrf	??___fldiv,w
  9332     0DA1  00A7               	movwf	___fldiv@b+3
  9333     0DA2  0831               	movf	___fldiv@sign,w
  9334     0DA3  00A8               	movwf	??___fldiv
  9335     0DA4  0828               	movf	??___fldiv,w
  9336     0DA5  04A7               	iorwf	___fldiv@b+3,f
  9337     0DA6  2C43               	goto	l2880
  9338     0DA7                     l856:
  9339     0DA7  0008               	return
  9340     0DA8                     __end_of___fldiv:
  9341                           
  9342                           	psect	text35
  9343     1427                     __ptext35:	
  9344 ;; *************** function _Lcd_Write_String *****************
  9345 ;; Defined at:
  9346 ;;		line 98 in file "LCD.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  a               2    5[BANK0 ] PTR unsigned char 
  9349 ;;		 -> buffer2(48), buffer(30), STR_1(3), 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  i               2   10[BANK0 ] int 
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9361 ;;      Params:         0       2       0       0       0
  9362 ;;      Locals:         0       2       0       0       0
  9363 ;;      Temps:          0       3       0       0       0
  9364 ;;      Totals:         0       7       0       0       0
  9365 ;;Total ram usage:        7 bytes
  9366 ;; Hardware stack levels used: 1
  9367 ;; Hardware stack levels required when called: 6
  9368 ;; This function calls:
  9369 ;;		_Lcd_Write_Char
  9370 ;; This function is called by:
  9371 ;;		_main
  9372 ;;		_AHT10_Read
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376     1427                     _Lcd_Write_String:	
  9377                           ;psect for function _Lcd_Write_String
  9378                           
  9379     1427                     l3282:	
  9380                           ;incstack = 0
  9381                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9382                           
  9383                           
  9384                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  9385     1427  1283               	bcf	3,5	;RP0=0, select bank0
  9386     1428  1303               	bcf	3,6	;RP1=0, select bank0
  9387     1429  01AA               	clrf	Lcd_Write_String@i
  9388     142A  01AB               	clrf	Lcd_Write_String@i+1
  9389     142B  2C50               	goto	l3288
  9390     142C                     l3284:
  9391                           
  9392                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  9393     142C  082A               	movf	Lcd_Write_String@i,w
  9394     142D  0725               	addwf	Lcd_Write_String@a,w
  9395     142E  00A8               	movwf	??_Lcd_Write_String+1
  9396     142F  0826               	movf	Lcd_Write_String@a+1,w
  9397     1430  00A7               	movwf	??_Lcd_Write_String
  9398     1431  1803               	skipnc
  9399     1432  0AA7               	incf	??_Lcd_Write_String,f
  9400     1433  1FAA               	btfss	Lcd_Write_String@i,7
  9401     1434  2C36               	goto	u4050
  9402     1435  03A7               	decf	??_Lcd_Write_String,f
  9403     1436                     u4050:
  9404     1436  1283               	bcf	3,5	;RP0=0, select bank0
  9405     1437  1303               	bcf	3,6	;RP1=0, select bank0
  9406     1438  0827               	movf	??_Lcd_Write_String,w
  9407     1439  00A9               	movwf	??_Lcd_Write_String+2
  9408     143A  0829               	movf	??_Lcd_Write_String+2,w
  9409     143B  00FF               	movwf	btemp+1
  9410     143C  0828               	movf	??_Lcd_Write_String+1,w
  9411     143D  0084               	movwf	4
  9412     143E  160A  118A  2000  160A  118A  	fcall	stringtab
  9413     1443  160A  118A  2374  160A  118A  	fcall	_Lcd_Write_Char
  9414     1448                     l3286:
  9415     1448  3001               	movlw	1
  9416     1449  1283               	bcf	3,5	;RP0=0, select bank0
  9417     144A  1303               	bcf	3,6	;RP1=0, select bank0
  9418     144B  07AA               	addwf	Lcd_Write_String@i,f
  9419     144C  1803               	skipnc
  9420     144D  0AAB               	incf	Lcd_Write_String@i+1,f
  9421     144E  3000               	movlw	0
  9422     144F  07AB               	addwf	Lcd_Write_String@i+1,f
  9423     1450                     l3288:
  9424     1450  082A               	movf	Lcd_Write_String@i,w
  9425     1451  0725               	addwf	Lcd_Write_String@a,w
  9426     1452  00A8               	movwf	??_Lcd_Write_String+1
  9427     1453  0826               	movf	Lcd_Write_String@a+1,w
  9428     1454  00A7               	movwf	??_Lcd_Write_String
  9429     1455  1803               	skipnc
  9430     1456  0AA7               	incf	??_Lcd_Write_String,f
  9431     1457  1FAA               	btfss	Lcd_Write_String@i,7
  9432     1458  2C5A               	goto	u4060
  9433     1459  03A7               	decf	??_Lcd_Write_String,f
  9434     145A                     u4060:
  9435     145A  1283               	bcf	3,5	;RP0=0, select bank0
  9436     145B  1303               	bcf	3,6	;RP1=0, select bank0
  9437     145C  0827               	movf	??_Lcd_Write_String,w
  9438     145D  00A9               	movwf	??_Lcd_Write_String+2
  9439     145E  0829               	movf	??_Lcd_Write_String+2,w
  9440     145F  00FF               	movwf	btemp+1
  9441     1460  0828               	movf	??_Lcd_Write_String+1,w
  9442     1461  0084               	movwf	4
  9443     1462  160A  118A  2000  160A  118A  	fcall	stringtab
  9444     1467  3A00               	xorlw	0
  9445     1468  1D03               	skipz
  9446     1469  2C6B               	goto	u4071
  9447     146A  2C6C               	goto	u4070
  9448     146B                     u4071:
  9449     146B  2C2C               	goto	l3284
  9450     146C                     u4070:
  9451     146C                     l303:
  9452     146C  0008               	return
  9453     146D                     __end_of_Lcd_Write_String:
  9454                           
  9455                           	psect	text36
  9456     1374                     __ptext36:	
  9457 ;; *************** function _Lcd_Write_Char *****************
  9458 ;; Defined at:
  9459 ;;		line 83 in file "LCD.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  a               1    wreg     unsigned char 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  a               1    4[BANK0 ] unsigned char 
  9464 ;;  y               1    3[BANK0 ] unsigned char 
  9465 ;;  temp            1    2[BANK0 ] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, pclath, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9475 ;;      Params:         0       0       0       0       0
  9476 ;;      Locals:         0       3       0       0       0
  9477 ;;      Temps:          0       1       0       0       0
  9478 ;;      Totals:         0       4       0       0       0
  9479 ;;Total ram usage:        4 bytes
  9480 ;; Hardware stack levels used: 1
  9481 ;; Hardware stack levels required when called: 5
  9482 ;; This function calls:
  9483 ;;		_Lcd_Port
  9484 ;; This function is called by:
  9485 ;;		_Lcd_Write_String
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489     1374                     _Lcd_Write_Char:	
  9490                           ;psect for function _Lcd_Write_Char
  9491                           
  9492                           
  9493                           ;incstack = 0
  9494                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9495                           ;Lcd_Write_Char@a stored from wreg
  9496     1374  1283               	bcf	3,5	;RP0=0, select bank0
  9497     1375  1303               	bcf	3,6	;RP1=0, select bank0
  9498     1376  00A4               	movwf	Lcd_Write_Char@a
  9499     1377                     l2732:
  9500                           
  9501                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  9502     1377  0824               	movf	Lcd_Write_Char@a,w
  9503     1378  390F               	andlw	15
  9504     1379  00A2               	movwf	Lcd_Write_Char@temp
  9505                           
  9506                           ;LCD.c: 86:     y = a & 0xF0;
  9507     137A  0824               	movf	Lcd_Write_Char@a,w
  9508     137B  39F0               	andlw	240
  9509     137C  00A3               	movwf	Lcd_Write_Char@y
  9510     137D                     l2734:
  9511                           
  9512                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  9513     137D  1708               	bsf	8,6	;volatile
  9514     137E                     l2736:
  9515                           
  9516                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  9517     137E  0823               	movf	Lcd_Write_Char@y,w
  9518     137F  00A1               	movwf	??_Lcd_Write_Char
  9519     1380  3004               	movlw	4
  9520     1381                     u2855:
  9521     1381  1003               	clrc
  9522     1382  0CA1               	rrf	??_Lcd_Write_Char,f
  9523     1383  3EFF               	addlw	-1
  9524     1384  1D03               	skipz
  9525     1385  2B81               	goto	u2855
  9526     1386  0821               	movf	??_Lcd_Write_Char,w
  9527     1387  160A  118A  20A5  160A  118A  	fcall	_Lcd_Port
  9528     138C                     l2738:
  9529                           
  9530                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  9531     138C  1283               	bcf	3,5	;RP0=0, select bank0
  9532     138D  1303               	bcf	3,6	;RP1=0, select bank0
  9533     138E  1788               	bsf	8,7	;volatile
  9534     138F                     l2740:
  9535                           
  9536                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9537     138F  3019               	movlw	25
  9538     1390  1283               	bcf	3,5	;RP0=0, select bank0
  9539     1391  1303               	bcf	3,6	;RP1=0, select bank0
  9540     1392  00A1               	movwf	??_Lcd_Write_Char
  9541     1393                     u4597:
  9542     1393  0BA1               	decfsz	??_Lcd_Write_Char,f
  9543     1394  2B93               	goto	u4597
  9544     1395  2B96               	nop2
  9545     1396                     l2742:
  9546                           
  9547                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  9548     1396  1283               	bcf	3,5	;RP0=0, select bank0
  9549     1397  1303               	bcf	3,6	;RP1=0, select bank0
  9550     1398  1388               	bcf	8,7	;volatile
  9551     1399                     l2744:
  9552                           
  9553                           ;LCD.c: 92:     Lcd_Port(temp);
  9554     1399  0822               	movf	Lcd_Write_Char@temp,w
  9555     139A  160A  118A  20A5  160A  118A  	fcall	_Lcd_Port
  9556     139F                     l2746:
  9557                           
  9558                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  9559     139F  1283               	bcf	3,5	;RP0=0, select bank0
  9560     13A0  1303               	bcf	3,6	;RP1=0, select bank0
  9561     13A1  1788               	bsf	8,7	;volatile
  9562     13A2                     l2748:
  9563                           
  9564                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9565     13A2  3019               	movlw	25
  9566     13A3  1283               	bcf	3,5	;RP0=0, select bank0
  9567     13A4  1303               	bcf	3,6	;RP1=0, select bank0
  9568     13A5  00A1               	movwf	??_Lcd_Write_Char
  9569     13A6                     u4607:
  9570     13A6  0BA1               	decfsz	??_Lcd_Write_Char,f
  9571     13A7  2BA6               	goto	u4607
  9572     13A8  2BA9               	nop2
  9573     13A9                     l2750:
  9574                           
  9575                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  9576     13A9  1283               	bcf	3,5	;RP0=0, select bank0
  9577     13AA  1303               	bcf	3,6	;RP1=0, select bank0
  9578     13AB  1388               	bcf	8,7	;volatile
  9579     13AC                     l297:
  9580     13AC  0008               	return
  9581     13AD                     __end_of_Lcd_Write_Char:
  9582                           
  9583                           	psect	text37
  9584     14B3                     __ptext37:	
  9585 ;; *************** function _Lcd_Set_Cursor *****************
  9586 ;; Defined at:
  9587 ;;		line 48 in file "LCD.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  a               1    wreg     unsigned char 
  9590 ;;  b               1    4[BANK0 ] unsigned char 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  a               1    6[BANK0 ] unsigned char 
  9593 ;;  temp            1    9[BANK0 ] unsigned char 
  9594 ;;  y               1    8[BANK0 ] unsigned char 
  9595 ;;  z               1    7[BANK0 ] unsigned char 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg, status,2, status,0, pclath, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9605 ;;      Params:         0       1       0       0       0
  9606 ;;      Locals:         0       4       0       0       0
  9607 ;;      Temps:          0       1       0       0       0
  9608 ;;      Totals:         0       6       0       0       0
  9609 ;;Total ram usage:        6 bytes
  9610 ;; Hardware stack levels used: 1
  9611 ;; Hardware stack levels required when called: 6
  9612 ;; This function calls:
  9613 ;;		_Lcd_Cmd
  9614 ;; This function is called by:
  9615 ;;		_main
  9616 ;;		_AHT10_Read
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620     14B3                     _Lcd_Set_Cursor:	
  9621                           ;psect for function _Lcd_Set_Cursor
  9622                           
  9623                           
  9624                           ;incstack = 0
  9625                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9626                           ;Lcd_Set_Cursor@a stored from wreg
  9627     14B3  1283               	bcf	3,5	;RP0=0, select bank0
  9628     14B4  1303               	bcf	3,6	;RP1=0, select bank0
  9629     14B5  00A6               	movwf	Lcd_Set_Cursor@a
  9630     14B6                     l3262:
  9631                           
  9632                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  9633     14B6  0326               	decf	Lcd_Set_Cursor@a,w
  9634     14B7  1D03               	btfss	3,2
  9635     14B8  2CBA               	goto	u4011
  9636     14B9  2CBB               	goto	u4010
  9637     14BA                     u4011:
  9638     14BA  2CDA               	goto	l3272
  9639     14BB                     u4010:
  9640     14BB                     l3264:
  9641                           
  9642                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  9643     14BB  0824               	movf	Lcd_Set_Cursor@b,w
  9644     14BC  3E7F               	addlw	127
  9645     14BD  00A9               	movwf	Lcd_Set_Cursor@temp
  9646                           
  9647                           ;LCD.c: 52:         z = temp >> 4;
  9648     14BE  0829               	movf	Lcd_Set_Cursor@temp,w
  9649     14BF  00A5               	movwf	??_Lcd_Set_Cursor
  9650     14C0  3004               	movlw	4
  9651     14C1                     u4025:
  9652     14C1  1003               	clrc
  9653     14C2  0CA5               	rrf	??_Lcd_Set_Cursor,f
  9654     14C3  3EFF               	addlw	-1
  9655     14C4  1D03               	skipz
  9656     14C5  2CC1               	goto	u4025
  9657     14C6  0825               	movf	??_Lcd_Set_Cursor,w
  9658     14C7  00A7               	movwf	Lcd_Set_Cursor@z
  9659     14C8                     l3266:
  9660                           
  9661                           ;LCD.c: 53:         y = temp & 0x0F;
  9662     14C8  0829               	movf	Lcd_Set_Cursor@temp,w
  9663     14C9  390F               	andlw	15
  9664     14CA  00A8               	movwf	Lcd_Set_Cursor@y
  9665     14CB                     l3268:
  9666                           
  9667                           ;LCD.c: 54:         Lcd_Cmd(z);
  9668     14CB  0827               	movf	Lcd_Set_Cursor@z,w
  9669     14CC  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  9670     14D1                     l3270:
  9671                           
  9672                           ;LCD.c: 55:         Lcd_Cmd(y);
  9673     14D1  1283               	bcf	3,5	;RP0=0, select bank0
  9674     14D2  1303               	bcf	3,6	;RP1=0, select bank0
  9675     14D3  0828               	movf	Lcd_Set_Cursor@y,w
  9676     14D4  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  9677                           
  9678                           ;LCD.c: 56:     } else if (a == 2) {
  9679     14D9  2CFE               	goto	l291
  9680     14DA                     l3272:
  9681     14DA  3002               	movlw	2
  9682     14DB  0626               	xorwf	Lcd_Set_Cursor@a,w
  9683     14DC  1D03               	btfss	3,2
  9684     14DD  2CDF               	goto	u4031
  9685     14DE  2CE0               	goto	u4030
  9686     14DF                     u4031:
  9687     14DF  2CFE               	goto	l291
  9688     14E0                     u4030:
  9689     14E0                     l3274:
  9690                           
  9691                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  9692     14E0  0824               	movf	Lcd_Set_Cursor@b,w
  9693     14E1  3EBF               	addlw	191
  9694     14E2  00A9               	movwf	Lcd_Set_Cursor@temp
  9695                           
  9696                           ;LCD.c: 58:         z = temp >> 4;
  9697     14E3  0829               	movf	Lcd_Set_Cursor@temp,w
  9698     14E4  00A5               	movwf	??_Lcd_Set_Cursor
  9699     14E5  3004               	movlw	4
  9700     14E6                     u4045:
  9701     14E6  1003               	clrc
  9702     14E7  0CA5               	rrf	??_Lcd_Set_Cursor,f
  9703     14E8  3EFF               	addlw	-1
  9704     14E9  1D03               	skipz
  9705     14EA  2CE6               	goto	u4045
  9706     14EB  0825               	movf	??_Lcd_Set_Cursor,w
  9707     14EC  00A7               	movwf	Lcd_Set_Cursor@z
  9708     14ED                     l3276:
  9709                           
  9710                           ;LCD.c: 59:         y = temp & 0x0F;
  9711     14ED  0829               	movf	Lcd_Set_Cursor@temp,w
  9712     14EE  390F               	andlw	15
  9713     14EF  00A8               	movwf	Lcd_Set_Cursor@y
  9714     14F0                     l3278:
  9715                           
  9716                           ;LCD.c: 60:         Lcd_Cmd(z);
  9717     14F0  0827               	movf	Lcd_Set_Cursor@z,w
  9718     14F1  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  9719     14F6                     l3280:
  9720                           
  9721                           ;LCD.c: 61:         Lcd_Cmd(y);
  9722     14F6  1283               	bcf	3,5	;RP0=0, select bank0
  9723     14F7  1303               	bcf	3,6	;RP1=0, select bank0
  9724     14F8  0828               	movf	Lcd_Set_Cursor@y,w
  9725     14F9  160A  118A  206D  160A  118A  	fcall	_Lcd_Cmd
  9726     14FE                     l291:
  9727     14FE  0008               	return
  9728     14FF                     __end_of_Lcd_Set_Cursor:
  9729                           
  9730                           	psect	text38
  9731     106D                     __ptext38:	
  9732 ;; *************** function _Lcd_Cmd *****************
  9733 ;; Defined at:
  9734 ;;		line 35 in file "LCD.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  a               1    wreg     unsigned char 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  a               1    3[BANK0 ] unsigned char 
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  1    wreg      void 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0, pclath, cstack
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9748 ;;      Params:         0       0       0       0       0
  9749 ;;      Locals:         0       1       0       0       0
  9750 ;;      Temps:          0       2       0       0       0
  9751 ;;      Totals:         0       3       0       0       0
  9752 ;;Total ram usage:        3 bytes
  9753 ;; Hardware stack levels used: 1
  9754 ;; Hardware stack levels required when called: 5
  9755 ;; This function calls:
  9756 ;;		_Lcd_Port
  9757 ;; This function is called by:
  9758 ;;		_Lcd_Clear
  9759 ;;		_Lcd_Set_Cursor
  9760 ;;		_Lcd_Init
  9761 ;;		_Lcd_Shift_Left
  9762 ;; This function uses a non-reentrant model
  9763 ;;
  9764                           
  9765     106D                     _Lcd_Cmd:	
  9766                           ;psect for function _Lcd_Cmd
  9767                           
  9768                           
  9769                           ;incstack = 0
  9770                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9771                           ;Lcd_Cmd@a stored from wreg
  9772     106D  1283               	bcf	3,5	;RP0=0, select bank0
  9773     106E  1303               	bcf	3,6	;RP1=0, select bank0
  9774     106F  00A3               	movwf	Lcd_Cmd@a
  9775     1070                     l2722:
  9776                           
  9777                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  9778     1070  1308               	bcf	8,6	;volatile
  9779     1071                     l2724:
  9780                           
  9781                           ;LCD.c: 37:     Lcd_Port(a);
  9782     1071  0823               	movf	Lcd_Cmd@a,w
  9783     1072  160A  118A  20A5  160A  118A  	fcall	_Lcd_Port
  9784     1077                     l2726:
  9785                           
  9786                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  9787     1077  1283               	bcf	3,5	;RP0=0, select bank0
  9788     1078  1303               	bcf	3,6	;RP1=0, select bank0
  9789     1079  1788               	bsf	8,7	;volatile
  9790     107A                     l2728:
  9791                           
  9792                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9793     107A  300B               	movlw	11
  9794     107B  1283               	bcf	3,5	;RP0=0, select bank0
  9795     107C  1303               	bcf	3,6	;RP1=0, select bank0
  9796     107D  00A2               	movwf	??_Lcd_Cmd+1
  9797     107E  3061               	movlw	97
  9798     107F  00A1               	movwf	??_Lcd_Cmd
  9799     1080                     u4617:
  9800     1080  0BA1               	decfsz	??_Lcd_Cmd,f
  9801     1081  2880               	goto	u4617
  9802     1082  0BA2               	decfsz	??_Lcd_Cmd+1,f
  9803     1083  2880               	goto	u4617
  9804     1084  2885               	nop2
  9805     1085                     l2730:
  9806                           
  9807                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  9808     1085  1283               	bcf	3,5	;RP0=0, select bank0
  9809     1086  1303               	bcf	3,6	;RP1=0, select bank0
  9810     1087  1388               	bcf	8,7	;volatile
  9811     1088                     l282:
  9812     1088  0008               	return
  9813     1089                     __end_of_Lcd_Cmd:
  9814                           
  9815                           	psect	text39
  9816     10A5                     __ptext39:	
  9817 ;; *************** function _Lcd_Port *****************
  9818 ;; Defined at:
  9819 ;;		line 13 in file "LCD.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  a               1    wreg     unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  a               1    0[BANK0 ] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9833 ;;      Params:         0       0       0       0       0
  9834 ;;      Locals:         0       1       0       0       0
  9835 ;;      Temps:          0       0       0       0       0
  9836 ;;      Totals:         0       1       0       0       0
  9837 ;;Total ram usage:        1 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 4
  9840 ;; This function calls:
  9841 ;;		Nothing
  9842 ;; This function is called by:
  9843 ;;		_Lcd_Cmd
  9844 ;;		_Lcd_Init
  9845 ;;		_Lcd_Write_Char
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849     10A5                     _Lcd_Port:	
  9850                           ;psect for function _Lcd_Port
  9851                           
  9852                           
  9853                           ;incstack = 0
  9854                           ; Regs used in _Lcd_Port: [wreg]
  9855                           ;Lcd_Port@a stored from wreg
  9856     10A5  1283               	bcf	3,5	;RP0=0, select bank0
  9857     10A6  1303               	bcf	3,6	;RP1=0, select bank0
  9858     10A7  00A0               	movwf	Lcd_Port@a
  9859     10A8                     l2484:
  9860                           
  9861                           ;LCD.c: 14:     if (a & 1)
  9862     10A8  1C20               	btfss	Lcd_Port@a,0
  9863     10A9  28AB               	goto	u2261
  9864     10AA  28AC               	goto	u2260
  9865     10AB                     u2261:
  9866     10AB  28AE               	goto	l271
  9867     10AC                     u2260:
  9868     10AC                     l2486:
  9869                           
  9870                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  9871     10AC  1606               	bsf	6,4	;volatile
  9872     10AD  28AF               	goto	l272
  9873     10AE                     l271:	
  9874                           ;LCD.c: 16:     else
  9875                           
  9876                           
  9877                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  9878     10AE  1206               	bcf	6,4	;volatile
  9879     10AF                     l272:
  9880                           
  9881                           ;LCD.c: 19:     if (a & 2)
  9882     10AF  1CA0               	btfss	Lcd_Port@a,1
  9883     10B0  28B2               	goto	u2271
  9884     10B1  28B3               	goto	u2270
  9885     10B2                     u2271:
  9886     10B2  28B5               	goto	l273
  9887     10B3                     u2270:
  9888     10B3                     l2488:
  9889                           
  9890                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  9891     10B3  1686               	bsf	6,5	;volatile
  9892     10B4  28B6               	goto	l274
  9893     10B5                     l273:	
  9894                           ;LCD.c: 21:     else
  9895                           
  9896                           
  9897                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  9898     10B5  1286               	bcf	6,5	;volatile
  9899     10B6                     l274:
  9900                           
  9901                           ;LCD.c: 24:     if (a & 4)
  9902     10B6  1D20               	btfss	Lcd_Port@a,2
  9903     10B7  28B9               	goto	u2281
  9904     10B8  28BA               	goto	u2280
  9905     10B9                     u2281:
  9906     10B9  28BC               	goto	l275
  9907     10BA                     u2280:
  9908     10BA                     l2490:
  9909                           
  9910                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  9911     10BA  1706               	bsf	6,6	;volatile
  9912     10BB  28BD               	goto	l276
  9913     10BC                     l275:	
  9914                           ;LCD.c: 26:     else
  9915                           
  9916                           
  9917                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  9918     10BC  1306               	bcf	6,6	;volatile
  9919     10BD                     l276:
  9920                           
  9921                           ;LCD.c: 29:     if (a & 8)
  9922     10BD  1DA0               	btfss	Lcd_Port@a,3
  9923     10BE  28C0               	goto	u2291
  9924     10BF  28C1               	goto	u2290
  9925     10C0                     u2291:
  9926     10C0  28C3               	goto	l277
  9927     10C1                     u2290:
  9928     10C1                     l2492:
  9929                           
  9930                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  9931     10C1  1786               	bsf	6,7	;volatile
  9932     10C2  28C4               	goto	l279
  9933     10C3                     l277:	
  9934                           ;LCD.c: 31:     else
  9935                           
  9936                           
  9937                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  9938     10C3  1386               	bcf	6,7	;volatile
  9939     10C4                     l279:
  9940     10C4  0008               	return
  9941     10C5                     __end_of_Lcd_Port:
  9942                           
  9943                           	psect	text40
  9944     1FA3                     __ptext40:	
  9945 ;; *************** function _I2C_Ack *****************
  9946 ;; Defined at:
  9947 ;;		line 48 in file "i2c.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		None
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9961 ;;      Params:         0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 4
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_AHT10_Read
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975     1FA3                     _I2C_Ack:	
  9976                           ;psect for function _I2C_Ack
  9977                           
  9978     1FA3                     l3346:	
  9979                           ;incstack = 0
  9980                           ; Regs used in _I2C_Ack: []
  9981                           
  9982                           
  9983                           ;i2c.c: 50:     SSPCON2bits.ACKDT = 0;
  9984     1FA3  1683               	bsf	3,5	;RP0=1, select bank1
  9985     1FA4  1303               	bcf	3,6	;RP1=0, select bank1
  9986     1FA5  1291               	bcf	17,5	;volatile
  9987                           
  9988                           ;i2c.c: 51:  SSPCON2bits.ACKEN = 1;
  9989     1FA6  1611               	bsf	17,4	;volatile
  9990     1FA7                     l352:	
  9991                           ;i2c.c: 52:  while(PIR1bits.SSPIF == 0);
  9992                           
  9993     1FA7  1283               	bcf	3,5	;RP0=0, select bank0
  9994     1FA8  1D8C               	btfss	12,3	;volatile
  9995     1FA9  2FAB               	goto	u4121
  9996     1FAA  2FAC               	goto	u4120
  9997     1FAB                     u4121:
  9998     1FAB  2FA7               	goto	l352
  9999     1FAC                     u4120:
 10000     1FAC                     l354:
 10001                           
 10002                           ;i2c.c: 53:     PIR1bits.SSPIF = 0;
 10003     1FAC  118C               	bcf	12,3	;volatile
 10004     1FAD                     l355:
 10005     1FAD  0008               	return
 10006     1FAE                     __end_of_I2C_Ack:
 10007                           
 10008                           	psect	text41
 10009     0813                     __ptext41:	
 10010 ;; *************** function _AHT10_Init *****************
 10011 ;; Defined at:
 10012 ;;		line 264 in file "main_master.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;		None
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  status          1    3[BANK0 ] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg, status,2, status,0, pclath, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10026 ;;      Params:         0       0       0       0       0
 10027 ;;      Locals:         0       1       0       0       0
 10028 ;;      Temps:          0       2       0       0       0
 10029 ;;      Totals:         0       3       0       0       0
 10030 ;;Total ram usage:        3 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 5
 10033 ;; This function calls:
 10034 ;;		_I2C_Nack
 10035 ;;		_I2C_Read
 10036 ;;		_I2C_Restart
 10037 ;;		_I2C_Start
 10038 ;;		_I2C_Stop
 10039 ;;		_I2C_Write
 10040 ;; This function is called by:
 10041 ;;		_main
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045     0813                     _AHT10_Init:	
 10046                           ;psect for function _AHT10_Init
 10047                           
 10048     0813                     l3484:	
 10049                           ;incstack = 0
 10050                           ; Regs used in _AHT10_Init: [wreg+status,2+status,0+pclath+cstack]
 10051                           
 10052                           
 10053                           ;main_master.c: 265:     _delay((unsigned long)((40)*(8000000/4000.0)));
 10054     0813  3068               	movlw	104
 10055     0814  1283               	bcf	3,5	;RP0=0, select bank0
 10056     0815  1303               	bcf	3,6	;RP1=0, select bank0
 10057     0816  00A2               	movwf	??_AHT10_Init+1
 10058     0817  30E3               	movlw	227
 10059     0818  00A1               	movwf	??_AHT10_Init
 10060     0819                     u4627:
 10061     0819  0BA1               	decfsz	??_AHT10_Init,f
 10062     081A  2819               	goto	u4627
 10063     081B  0BA2               	decfsz	??_AHT10_Init+1,f
 10064     081C  2819               	goto	u4627
 10065     081D  281E               	nop2
 10066     081E                     l3486:
 10067                           
 10068                           ;main_master.c: 266:     uint8_t status;;main_master.c: 267:     I2C_Start();
 10069     081E  160A  158A  2783  120A  158A  	fcall	_I2C_Start
 10070                           
 10071                           ;main_master.c: 268:     I2C_Write(0x70);
 10072     0823  3070               	movlw	112
 10073     0824  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10074                           
 10075                           ;main_master.c: 269:     I2C_Write(0x71);
 10076     0829  3071               	movlw	113
 10077     082A  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10078     082F                     l3488:
 10079                           
 10080                           ;main_master.c: 270:     I2C_Restart();
 10081     082F  160A  158A  2779  120A  158A  	fcall	_I2C_Restart
 10082     0834                     l3490:
 10083                           
 10084                           ;main_master.c: 271:     I2C_Write(0x71);
 10085     0834  3071               	movlw	113
 10086     0835  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10087     083A                     l3492:
 10088                           
 10089                           ;main_master.c: 272:     status = I2C_Read();
 10090     083A  160A  158A  2798  120A  158A  	fcall	_I2C_Read
 10091     083F  1283               	bcf	3,5	;RP0=0, select bank0
 10092     0840  1303               	bcf	3,6	;RP1=0, select bank0
 10093     0841  00A3               	movwf	AHT10_Init@status
 10094     0842                     l3494:
 10095                           
 10096                           ;main_master.c: 273:     I2C_Nack();
 10097     0842  160A  158A  278D  120A  158A  	fcall	_I2C_Nack
 10098     0847                     l3496:
 10099                           
 10100                           ;main_master.c: 274:     I2C_Stop();
 10101     0847  120A  118A  27F6  120A  158A  	fcall	_I2C_Stop
 10102     084C                     l3498:
 10103                           
 10104                           ;main_master.c: 276:     status = status & 0b00001000;
 10105     084C  1283               	bcf	3,5	;RP0=0, select bank0
 10106     084D  1303               	bcf	3,6	;RP1=0, select bank0
 10107     084E  0823               	movf	AHT10_Init@status,w
 10108     084F  3908               	andlw	8
 10109     0850  00A3               	movwf	AHT10_Init@status
 10110     0851                     l3500:
 10111                           
 10112                           ;main_master.c: 279:         I2C_Start();
 10113     0851  160A  158A  2783  120A  158A  	fcall	_I2C_Start
 10114     0856                     l3502:
 10115                           
 10116                           ;main_master.c: 280:         I2C_Write(0x70);
 10117     0856  3070               	movlw	112
 10118     0857  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10119     085C                     l3504:
 10120                           
 10121                           ;main_master.c: 281:         I2C_Write(0xE1);
 10122     085C  30E1               	movlw	225
 10123     085D  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10124     0862                     l3506:
 10125                           
 10126                           ;main_master.c: 282:         I2C_Write(0x08);
 10127     0862  3008               	movlw	8
 10128     0863  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10129     0868                     l3508:
 10130                           
 10131                           ;main_master.c: 283:         I2C_Write(0x00);
 10132     0868  3000               	movlw	0
 10133     0869  120A  158A  2005  120A  158A  	fcall	_I2C_Write
 10134     086E                     l3510:
 10135                           
 10136                           ;main_master.c: 284:         I2C_Stop();
 10137     086E  120A  118A  27F6  120A  158A  	fcall	_I2C_Stop
 10138     0873                     l3512:
 10139                           
 10140                           ;main_master.c: 286:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10141     0873  301A               	movlw	26
 10142     0874  1283               	bcf	3,5	;RP0=0, select bank0
 10143     0875  1303               	bcf	3,6	;RP1=0, select bank0
 10144     0876  00A2               	movwf	??_AHT10_Init+1
 10145     0877  30F7               	movlw	247
 10146     0878  00A1               	movwf	??_AHT10_Init
 10147     0879                     u4637:
 10148     0879  0BA1               	decfsz	??_AHT10_Init,f
 10149     087A  2879               	goto	u4637
 10150     087B  0BA2               	decfsz	??_AHT10_Init+1,f
 10151     087C  2879               	goto	u4637
 10152     087D  287E               	nop2
 10153     087E                     l232:
 10154     087E  0008               	return
 10155     087F                     __end_of_AHT10_Init:
 10156                           
 10157                           	psect	text42
 10158     0805                     __ptext42:	
 10159 ;; *************** function _I2C_Write *****************
 10160 ;; Defined at:
 10161 ;;		line 64 in file "i2c.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  data            1    wreg     unsigned char 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  data            1    0[BANK0 ] unsigned char 
 10166 ;;  b_ok            2    0        short 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  2   74[None  ] short 
 10169 ;; Registers used:
 10170 ;;		wreg
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10176 ;;      Params:         0       0       0       0       0
 10177 ;;      Locals:         0       1       0       0       0
 10178 ;;      Temps:          0       0       0       0       0
 10179 ;;      Totals:         0       1       0       0       0
 10180 ;;Total ram usage:        1 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 4
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_Read
 10187 ;;		_Set_sec
 10188 ;;		_Set_min
 10189 ;;		_Set_hour
 10190 ;;		_Set_day
 10191 ;;		_Set_month
 10192 ;;		_Set_year
 10193 ;;		_AHT10_Init
 10194 ;;		_AHT10_Read
 10195 ;;		_AHT10_Soft_Reset
 10196 ;;		_Slave1_Total
 10197 ;;		_Set_day_week
 10198 ;;		_Slave1_Red
 10199 ;;		_Slave1_Green
 10200 ;;		_Slave1_Blue
 10201 ;;		_Slave1_Overheat
 10202 ;;		_Slave1_Normal_Temperature
 10203 ;;		_Slave2
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207     0805                     _I2C_Write:	
 10208                           ;psect for function _I2C_Write
 10209                           
 10210                           
 10211                           ;incstack = 0
 10212                           ; Regs used in _I2C_Write: [wreg]
 10213                           ;I2C_Write@data stored from wreg
 10214     0805  1283               	bcf	3,5	;RP0=0, select bank0
 10215     0806  1303               	bcf	3,6	;RP1=0, select bank0
 10216     0807  00A0               	movwf	I2C_Write@data
 10217     0808                     l2704:
 10218                           
 10219                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
 10220     0808  0820               	movf	I2C_Write@data,w
 10221     0809  0093               	movwf	19	;volatile
 10222     080A                     l364:	
 10223                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
 10224                           
 10225     080A  1D8C               	btfss	12,3	;volatile
 10226     080B  280D               	goto	u2801
 10227     080C  280E               	goto	u2800
 10228     080D                     u2801:
 10229     080D  280A               	goto	l364
 10230     080E                     u2800:
 10231     080E                     l366:
 10232                           
 10233                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
 10234     080E  118C               	bcf	12,3	;volatile
 10235     080F                     l2706:
 10236     080F  1683               	bsf	3,5	;RP0=1, select bank1
 10237     0810  1303               	bcf	3,6	;RP1=0, select bank1
 10238     0811  0811               	movf	17,w	;volatile
 10239     0812                     l367:
 10240     0812  0008               	return
 10241     0813                     __end_of_I2C_Write:
 10242                           
 10243                           	psect	text43
 10244     07F6                     __ptext43:	
 10245 ;; *************** function _I2C_Stop *****************
 10246 ;; Defined at:
 10247 ;;		line 34 in file "i2c.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		None
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10261 ;;      Params:         0       0       0       0       0
 10262 ;;      Locals:         0       0       0       0       0
 10263 ;;      Temps:          0       0       0       0       0
 10264 ;;      Totals:         0       0       0       0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used: 1
 10267 ;; Hardware stack levels required when called: 4
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_Read
 10272 ;;		_Set_sec
 10273 ;;		_Set_min
 10274 ;;		_Set_hour
 10275 ;;		_Set_day
 10276 ;;		_Set_month
 10277 ;;		_Set_year
 10278 ;;		_AHT10_Init
 10279 ;;		_AHT10_Read
 10280 ;;		_AHT10_Soft_Reset
 10281 ;;		_Slave1_Total
 10282 ;;		_Set_day_week
 10283 ;;		_Slave1_Red
 10284 ;;		_Slave1_Green
 10285 ;;		_Slave1_Blue
 10286 ;;		_Slave1_Overheat
 10287 ;;		_Slave1_Normal_Temperature
 10288 ;;		_Slave2
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292     07F6                     _I2C_Stop:	
 10293                           ;psect for function _I2C_Stop
 10294                           
 10295     07F6                     l2720:	
 10296                           ;incstack = 0
 10297                           ; Regs used in _I2C_Stop: []
 10298                           
 10299                           
 10300                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
 10301     07F6  1683               	bsf	3,5	;RP0=1, select bank1
 10302     07F7  1303               	bcf	3,6	;RP1=0, select bank1
 10303     07F8  1511               	bsf	17,2	;volatile
 10304     07F9                     l340:	
 10305                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
 10306                           
 10307     07F9  1283               	bcf	3,5	;RP0=0, select bank0
 10308     07FA  1D8C               	btfss	12,3	;volatile
 10309     07FB  2FFD               	goto	u2841
 10310     07FC  2FFE               	goto	u2840
 10311     07FD                     u2841:
 10312     07FD  2FF9               	goto	l340
 10313     07FE                     u2840:
 10314     07FE                     l342:
 10315                           
 10316                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
 10317     07FE  118C               	bcf	12,3	;volatile
 10318     07FF                     l343:
 10319     07FF  0008               	return
 10320     0800                     __end_of_I2C_Stop:
 10321                           
 10322                           	psect	text44
 10323     1F83                     __ptext44:	
 10324 ;; *************** function _I2C_Start *****************
 10325 ;; Defined at:
 10326 ;;		line 27 in file "i2c.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		None
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10340 ;;      Params:         0       0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0
 10343 ;;      Totals:         0       0       0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used: 1
 10346 ;; Hardware stack levels required when called: 4
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		_Read
 10351 ;;		_Set_sec
 10352 ;;		_Set_min
 10353 ;;		_Set_hour
 10354 ;;		_Set_day
 10355 ;;		_Set_month
 10356 ;;		_Set_year
 10357 ;;		_AHT10_Init
 10358 ;;		_AHT10_Read
 10359 ;;		_AHT10_Soft_Reset
 10360 ;;		_Slave1_Total
 10361 ;;		_Set_day_week
 10362 ;;		_Slave1_Red
 10363 ;;		_Slave1_Green
 10364 ;;		_Slave1_Blue
 10365 ;;		_Slave1_Overheat
 10366 ;;		_Slave1_Normal_Temperature
 10367 ;;		_Slave2
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371     1F83                     _I2C_Start:	
 10372                           ;psect for function _I2C_Start
 10373                           
 10374     1F83                     l2702:	
 10375                           ;incstack = 0
 10376                           ; Regs used in _I2C_Start: []
 10377                           
 10378                           
 10379                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
 10380     1F83  1683               	bsf	3,5	;RP0=1, select bank1
 10381     1F84  1303               	bcf	3,6	;RP1=0, select bank1
 10382     1F85  1411               	bsf	17,0	;volatile
 10383     1F86                     l334:	
 10384                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
 10385                           
 10386     1F86  1283               	bcf	3,5	;RP0=0, select bank0
 10387     1F87  1D8C               	btfss	12,3	;volatile
 10388     1F88  2F8A               	goto	u2791
 10389     1F89  2F8B               	goto	u2790
 10390     1F8A                     u2791:
 10391     1F8A  2F86               	goto	l334
 10392     1F8B                     u2790:
 10393     1F8B                     l336:
 10394                           
 10395                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
 10396     1F8B  118C               	bcf	12,3	;volatile
 10397     1F8C                     l337:
 10398     1F8C  0008               	return
 10399     1F8D                     __end_of_I2C_Start:
 10400                           
 10401                           	psect	text45
 10402     1F79                     __ptext45:	
 10403 ;; *************** function _I2C_Restart *****************
 10404 ;; Defined at:
 10405 ;;		line 41 in file "i2c.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;		None
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;		None
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      void 
 10412 ;; Registers used:
 10413 ;;		None
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10419 ;;      Params:         0       0       0       0       0
 10420 ;;      Locals:         0       0       0       0       0
 10421 ;;      Temps:          0       0       0       0       0
 10422 ;;      Totals:         0       0       0       0       0
 10423 ;;Total ram usage:        0 bytes
 10424 ;; Hardware stack levels used: 1
 10425 ;; Hardware stack levels required when called: 4
 10426 ;; This function calls:
 10427 ;;		Nothing
 10428 ;; This function is called by:
 10429 ;;		_Read
 10430 ;;		_AHT10_Init
 10431 ;;		_AHT10_Read
 10432 ;;		_Slave1_Red
 10433 ;;		_Slave1_Green
 10434 ;;		_Slave1_Blue
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438     1F79                     _I2C_Restart:	
 10439                           ;psect for function _I2C_Restart
 10440                           
 10441     1F79                     l2710:	
 10442                           ;incstack = 0
 10443                           ; Regs used in _I2C_Restart: []
 10444                           
 10445                           
 10446                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
 10447     1F79  1683               	bsf	3,5	;RP0=1, select bank1
 10448     1F7A  1303               	bcf	3,6	;RP1=0, select bank1
 10449     1F7B  1491               	bsf	17,1	;volatile
 10450     1F7C                     l346:	
 10451                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
 10452                           
 10453     1F7C  1283               	bcf	3,5	;RP0=0, select bank0
 10454     1F7D  1D8C               	btfss	12,3	;volatile
 10455     1F7E  2F80               	goto	u2811
 10456     1F7F  2F81               	goto	u2810
 10457     1F80                     u2811:
 10458     1F80  2F7C               	goto	l346
 10459     1F81                     u2810:
 10460     1F81                     l348:
 10461                           
 10462                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
 10463     1F81  118C               	bcf	12,3	;volatile
 10464     1F82                     l349:
 10465     1F82  0008               	return
 10466     1F83                     __end_of_I2C_Restart:
 10467                           
 10468                           	psect	text46
 10469     1F98                     __ptext46:	
 10470 ;; *************** function _I2C_Read *****************
 10471 ;; Defined at:
 10472 ;;		line 73 in file "i2c.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      unsigned char 
 10479 ;; Registers used:
 10480 ;;		wreg
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10486 ;;      Params:         0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used: 1
 10492 ;; Hardware stack levels required when called: 4
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_Read
 10497 ;;		_AHT10_Init
 10498 ;;		_AHT10_Read
 10499 ;;		_Slave1_Total
 10500 ;;		_Slave1_Red
 10501 ;;		_Slave1_Green
 10502 ;;		_Slave1_Blue
 10503 ;;		_Slave2
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507     1F98                     _I2C_Read:	
 10508                           ;psect for function _I2C_Read
 10509                           
 10510     1F98                     l2712:	
 10511                           ;incstack = 0
 10512                           ; Regs used in _I2C_Read: [wreg]
 10513                           
 10514                           
 10515                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
 10516     1F98  1683               	bsf	3,5	;RP0=1, select bank1
 10517     1F99  1303               	bcf	3,6	;RP1=0, select bank1
 10518     1F9A  1591               	bsf	17,3	;volatile
 10519     1F9B                     l370:	
 10520                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
 10521                           
 10522     1F9B  1283               	bcf	3,5	;RP0=0, select bank0
 10523     1F9C  1D8C               	btfss	12,3	;volatile
 10524     1F9D  2F9F               	goto	u2821
 10525     1F9E  2FA0               	goto	u2820
 10526     1F9F                     u2821:
 10527     1F9F  2F9B               	goto	l370
 10528     1FA0                     u2820:
 10529     1FA0                     l372:
 10530                           
 10531                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
 10532     1FA0  118C               	bcf	12,3	;volatile
 10533     1FA1                     l2714:
 10534                           
 10535                           ;i2c.c: 78:     return SSPBUF;
 10536     1FA1  0813               	movf	19,w	;volatile
 10537     1FA2                     l373:
 10538     1FA2  0008               	return
 10539     1FA3                     __end_of_I2C_Read:
 10540                           
 10541                           	psect	text47
 10542     1F8D                     __ptext47:	
 10543 ;; *************** function _I2C_Nack *****************
 10544 ;; Defined at:
 10545 ;;		line 56 in file "i2c.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		None
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10559 ;;      Params:         0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0
 10562 ;;      Totals:         0       0       0       0       0
 10563 ;;Total ram usage:        0 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 4
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_Read
 10570 ;;		_AHT10_Init
 10571 ;;		_AHT10_Read
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575     1F8D                     _I2C_Nack:	
 10576                           ;psect for function _I2C_Nack
 10577                           
 10578     1F8D                     l2718:	
 10579                           ;incstack = 0
 10580                           ; Regs used in _I2C_Nack: []
 10581                           
 10582                           
 10583                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
 10584     1F8D  1683               	bsf	3,5	;RP0=1, select bank1
 10585     1F8E  1303               	bcf	3,6	;RP1=0, select bank1
 10586     1F8F  1691               	bsf	17,5	;volatile
 10587                           
 10588                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
 10589     1F90  1611               	bsf	17,4	;volatile
 10590     1F91                     l358:	
 10591                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
 10592                           
 10593     1F91  1283               	bcf	3,5	;RP0=0, select bank0
 10594     1F92  1D8C               	btfss	12,3	;volatile
 10595     1F93  2F95               	goto	u2831
 10596     1F94  2F96               	goto	u2830
 10597     1F95                     u2831:
 10598     1F95  2F91               	goto	l358
 10599     1F96                     u2830:
 10600     1F96                     l360:
 10601                           
 10602                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
 10603     1F96  118C               	bcf	12,3	;volatile
 10604     1F97                     l361:
 10605     1F97  0008               	return
 10606     1F98                     __end_of_I2C_Nack:
 10607                           
 10608                           	psect	text48
 10609     1107                     __ptext48:	
 10610 ;; *************** function _isr *****************
 10611 ;; Defined at:
 10612 ;;		line 114 in file "main_master.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;		None
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  contador        1    7[COMMON] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0, pclath, cstack
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10626 ;;      Params:         0       0       0       0       0
 10627 ;;      Locals:         1       0       0       0       0
 10628 ;;      Temps:          3       0       0       0       0
 10629 ;;      Totals:         4       0       0       0       0
 10630 ;;Total ram usage:        4 bytes
 10631 ;; Hardware stack levels used: 1
 10632 ;; Hardware stack levels required when called: 3
 10633 ;; This function calls:
 10634 ;;		_Lcd_Shift_Right
 10635 ;; This function is called by:
 10636 ;;		Interrupt level 1
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640     1107                     _isr:	
 10641                           ;psect for function _isr
 10642                           
 10643     1107                     i1l3800:
 10644                           
 10645                           ;main_master.c: 115:     if (PIR1bits.TMR1IF == 1){
 10646     1107  1283               	bcf	3,5	;RP0=0, select bank0
 10647     1108  1303               	bcf	3,6	;RP1=0, select bank0
 10648     1109  1C0C               	btfss	12,0	;volatile
 10649     110A  290C               	goto	u448_21
 10650     110B  290D               	goto	u448_20
 10651     110C                     u448_21:
 10652     110C  2924               	goto	i1l185
 10653     110D                     u448_20:
 10654     110D                     i1l3802:
 10655                           
 10656                           ;main_master.c: 116:         unsigned char contador = 0;
 10657     110D  01F7               	clrf	isr@contador
 10658     110E                     i1l3804:
 10659                           
 10660                           ;main_master.c: 117:         contador++;
 10661     110E  3001               	movlw	1
 10662     110F  00F4               	movwf	??_isr
 10663     1110  0874               	movf	??_isr,w
 10664     1111  07F7               	addwf	isr@contador,f
 10665     1112                     i1l3806:
 10666                           
 10667                           ;main_master.c: 118:         if (contador == 2){
 10668     1112  3002               	movlw	2
 10669     1113  0677               	xorwf	isr@contador,w
 10670     1114  1D03               	btfss	3,2
 10671     1115  2917               	goto	u449_21
 10672     1116  2918               	goto	u449_20
 10673     1117                     u449_21:
 10674     1117  291D               	goto	i1l3812
 10675     1118                     u449_20:
 10676     1118                     i1l3808:
 10677     1118                     i1l3810:
 10678                           
 10679                           ;main_master.c: 120:             Lcd_Shift_Right();
 10680     1118  160A  158A  27AE  160A  118A  	fcall	_Lcd_Shift_Right
 10681     111D                     i1l3812:
 10682                           
 10683                           ;main_master.c: 122:         PIR1bits.TMR1IF = 0;
 10684     111D  1283               	bcf	3,5	;RP0=0, select bank0
 10685     111E  1303               	bcf	3,6	;RP1=0, select bank0
 10686     111F  100C               	bcf	12,0	;volatile
 10687     1120                     i1l3814:
 10688                           
 10689                           ;main_master.c: 123:         TMR1H = 0x3C;
 10690     1120  303C               	movlw	60
 10691     1121  008F               	movwf	15	;volatile
 10692     1122                     i1l3816:
 10693                           
 10694                           ;main_master.c: 124:         TMR1L = 0xB0;
 10695     1122  30B0               	movlw	176
 10696     1123  008E               	movwf	14	;volatile
 10697     1124                     i1l185:
 10698     1124  0876               	movf	??_isr+2,w
 10699     1125  008A               	movwf	10
 10700     1126  0E75               	swapf	??_isr+1,w
 10701     1127  0083               	movwf	3
 10702     1128  0EFE               	swapf	btemp,f
 10703     1129  0E7E               	swapf	btemp,w
 10704     112A  0009               	retfie
 10705     112B                     __end_of_isr:
 10706                           
 10707                           	psect	intentry
 10708     0004                     __pintentry:	
 10709                           ;incstack = 0
 10710                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10711                           
 10712     0004                     interrupt_function:
 10713     007E                     saved_w	set	btemp
 10714     0004  00FE               	movwf	btemp
 10715     0005  0E03               	swapf	3,w
 10716     0006  00F5               	movwf	??_isr+1
 10717     0007  080A               	movf	10,w
 10718     0008  00F6               	movwf	??_isr+2
 10719     0009  160A  118A  2907   	ljmp	_isr
 10720                           
 10721                           	psect	text49
 10722     1FAE                     __ptext49:	
 10723 ;; *************** function _Lcd_Shift_Right *****************
 10724 ;; Defined at:
 10725 ;;		line 104 in file "LCD.c"
 10726 ;; Parameters:    Size  Location     Type
 10727 ;;		None
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;		None
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  1    wreg      void 
 10732 ;; Registers used:
 10733 ;;		wreg, status,2, status,0, pclath, cstack
 10734 ;; Tracked objects:
 10735 ;;		On entry : 0/0
 10736 ;;		On exit  : 0/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10739 ;;      Params:         0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0
 10742 ;;      Totals:         0       0       0       0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used: 1
 10745 ;; Hardware stack levels required when called: 2
 10746 ;; This function calls:
 10747 ;;		i1_Lcd_Cmd
 10748 ;; This function is called by:
 10749 ;;		_isr
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753     1FAE                     _Lcd_Shift_Right:	
 10754                           ;psect for function _Lcd_Shift_Right
 10755                           
 10756     1FAE                     i1l3760:	
 10757                           ;incstack = 0
 10758                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
 10759                           
 10760                           
 10761                           ;LCD.c: 105:     Lcd_Cmd(0x01);
 10762     1FAE  3001               	movlw	1
 10763     1FAF  160A  118A  2053  160A  158A  	fcall	i1_Lcd_Cmd
 10764                           
 10765                           ;LCD.c: 106:     Lcd_Cmd(0x0C);
 10766     1FB4  300C               	movlw	12
 10767     1FB5  160A  118A  2053  160A  158A  	fcall	i1_Lcd_Cmd
 10768     1FBA                     i1l306:
 10769     1FBA  0008               	return
 10770     1FBB                     __end_of_Lcd_Shift_Right:
 10771                           
 10772                           	psect	text50
 10773     1053                     __ptext50:	
 10774 ;; *************** function i1_Lcd_Cmd *****************
 10775 ;; Defined at:
 10776 ;;		line 35 in file "LCD.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  a               1    wreg     unsigned char 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  a               1    3[COMMON] unsigned char 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  1    wreg      void 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0, pclath, cstack
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10790 ;;      Params:         0       0       0       0       0
 10791 ;;      Locals:         1       0       0       0       0
 10792 ;;      Temps:          2       0       0       0       0
 10793 ;;      Totals:         3       0       0       0       0
 10794 ;;Total ram usage:        3 bytes
 10795 ;; Hardware stack levels used: 1
 10796 ;; Hardware stack levels required when called: 1
 10797 ;; This function calls:
 10798 ;;		i1_Lcd_Port
 10799 ;; This function is called by:
 10800 ;;		_Lcd_Shift_Right
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804     1053                     i1_Lcd_Cmd:	
 10805                           ;psect for function i1_Lcd_Cmd
 10806                           
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10810                           ;i1Lcd_Cmd@a stored from wreg
 10811     1053  00F3               	movwf	i1Lcd_Cmd@a
 10812     1054                     i1l3422:
 10813                           
 10814                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
 10815     1054  1283               	bcf	3,5	;RP0=0, select bank0
 10816     1055  1303               	bcf	3,6	;RP1=0, select bank0
 10817     1056  1308               	bcf	8,6	;volatile
 10818     1057                     i1l3424:
 10819                           
 10820                           ;LCD.c: 37:     Lcd_Port(a);
 10821     1057  0873               	movf	i1Lcd_Cmd@a,w
 10822     1058  160A  118A  20E5  160A  118A  	fcall	i1_Lcd_Port
 10823     105D                     i1l3426:
 10824                           
 10825                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
 10826     105D  1283               	bcf	3,5	;RP0=0, select bank0
 10827     105E  1303               	bcf	3,6	;RP1=0, select bank0
 10828     105F  1788               	bsf	8,7	;volatile
 10829     1060                     i1l3428:
 10830                           
 10831                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10832     1060  300B               	movlw	11
 10833     1061  00F2               	movwf	??i1_Lcd_Cmd+1
 10834     1062  3062               	movlw	98
 10835     1063  00F1               	movwf	??i1_Lcd_Cmd
 10836     1064                     u464_27:
 10837     1064  0BF1               	decfsz	??i1_Lcd_Cmd,f
 10838     1065  2864               	goto	u464_27
 10839     1066  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
 10840     1067  2864               	goto	u464_27
 10841     1068  0000               	nop
 10842     1069                     i1l3430:
 10843                           
 10844                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
 10845     1069  1283               	bcf	3,5	;RP0=0, select bank0
 10846     106A  1303               	bcf	3,6	;RP1=0, select bank0
 10847     106B  1388               	bcf	8,7	;volatile
 10848     106C                     i1l282:
 10849     106C  0008               	return
 10850     106D                     __end_ofi1_Lcd_Cmd:
 10851                           
 10852                           	psect	text51
 10853     10E5                     __ptext51:	
 10854 ;; *************** function i1_Lcd_Port *****************
 10855 ;; Defined at:
 10856 ;;		line 13 in file "LCD.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  a               1    wreg     unsigned char 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  a               1    0[COMMON] unsigned char 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		wreg
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10870 ;;      Params:         0       0       0       0       0
 10871 ;;      Locals:         1       0       0       0       0
 10872 ;;      Temps:          0       0       0       0       0
 10873 ;;      Totals:         1       0       0       0       0
 10874 ;;Total ram usage:        1 bytes
 10875 ;; Hardware stack levels used: 1
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		i1_Lcd_Cmd
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883     10E5                     i1_Lcd_Port:	
 10884                           ;psect for function i1_Lcd_Port
 10885                           
 10886                           
 10887                           ;incstack = 0
 10888                           ; Regs used in i1_Lcd_Port: [wreg]
 10889                           ;i1Lcd_Port@a stored from wreg
 10890     10E5  00F0               	movwf	i1Lcd_Port@a
 10891     10E6                     i1l3162:
 10892                           
 10893                           ;LCD.c: 14:     if (a & 1)
 10894     10E6  1C70               	btfss	i1Lcd_Port@a,0
 10895     10E7  28E9               	goto	u386_21
 10896     10E8  28EA               	goto	u386_20
 10897     10E9                     u386_21:
 10898     10E9  28EE               	goto	i1l271
 10899     10EA                     u386_20:
 10900     10EA                     i1l3164:
 10901                           
 10902                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
 10903     10EA  1283               	bcf	3,5	;RP0=0, select bank0
 10904     10EB  1303               	bcf	3,6	;RP1=0, select bank0
 10905     10EC  1606               	bsf	6,4	;volatile
 10906     10ED  28F1               	goto	i1l272
 10907     10EE                     i1l271:	
 10908                           ;LCD.c: 16:     else
 10909                           
 10910                           
 10911                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
 10912     10EE  1283               	bcf	3,5	;RP0=0, select bank0
 10913     10EF  1303               	bcf	3,6	;RP1=0, select bank0
 10914     10F0  1206               	bcf	6,4	;volatile
 10915     10F1                     i1l272:
 10916                           
 10917                           ;LCD.c: 19:     if (a & 2)
 10918     10F1  1CF0               	btfss	i1Lcd_Port@a,1
 10919     10F2  28F4               	goto	u387_21
 10920     10F3  28F5               	goto	u387_20
 10921     10F4                     u387_21:
 10922     10F4  28F7               	goto	i1l273
 10923     10F5                     u387_20:
 10924     10F5                     i1l3166:
 10925                           
 10926                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
 10927     10F5  1686               	bsf	6,5	;volatile
 10928     10F6  28F8               	goto	i1l274
 10929     10F7                     i1l273:	
 10930                           ;LCD.c: 21:     else
 10931                           
 10932                           
 10933                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
 10934     10F7  1286               	bcf	6,5	;volatile
 10935     10F8                     i1l274:
 10936                           
 10937                           ;LCD.c: 24:     if (a & 4)
 10938     10F8  1D70               	btfss	i1Lcd_Port@a,2
 10939     10F9  28FB               	goto	u388_21
 10940     10FA  28FC               	goto	u388_20
 10941     10FB                     u388_21:
 10942     10FB  28FE               	goto	i1l275
 10943     10FC                     u388_20:
 10944     10FC                     i1l3168:
 10945                           
 10946                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
 10947     10FC  1706               	bsf	6,6	;volatile
 10948     10FD  28FF               	goto	i1l276
 10949     10FE                     i1l275:	
 10950                           ;LCD.c: 26:     else
 10951                           
 10952                           
 10953                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
 10954     10FE  1306               	bcf	6,6	;volatile
 10955     10FF                     i1l276:
 10956                           
 10957                           ;LCD.c: 29:     if (a & 8)
 10958     10FF  1DF0               	btfss	i1Lcd_Port@a,3
 10959     1100  2902               	goto	u389_21
 10960     1101  2903               	goto	u389_20
 10961     1102                     u389_21:
 10962     1102  2905               	goto	i1l277
 10963     1103                     u389_20:
 10964     1103                     i1l3170:
 10965                           
 10966                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
 10967     1103  1786               	bsf	6,7	;volatile
 10968     1104  2906               	goto	i1l279
 10969     1105                     i1l277:	
 10970                           ;LCD.c: 31:     else
 10971                           
 10972                           
 10973                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
 10974     1105  1386               	bcf	6,7	;volatile
 10975     1106                     i1l279:
 10976     1106  0008               	return
 10977     1107                     __end_ofi1_Lcd_Port:
 10978     007E                     btemp	set	126	;btemp
 10979     007E                     wtemp0	set	126
 10980                           
 10981                           	psect	idloc
 10982                           
 10983                           ;Config register IDLOC0 @ 0x2000
 10984                           ;	unspecified, using default values
 10985     2000                     	org	8192
 10986     2000  3FFF               	dw	16383
 10987                           
 10988                           ;Config register IDLOC1 @ 0x2001
 10989                           ;	unspecified, using default values
 10990     2001                     	org	8193
 10991     2001  3FFF               	dw	16383
 10992                           
 10993                           ;Config register IDLOC2 @ 0x2002
 10994                           ;	unspecified, using default values
 10995     2002                     	org	8194
 10996     2002  3FFF               	dw	16383
 10997                           
 10998                           ;Config register IDLOC3 @ 0x2003
 10999                           ;	unspecified, using default values
 11000     2003                     	org	8195
 11001     2003  3FFF               	dw	16383
 11002                           
 11003                           	psect	config
 11004                           
 11005                           ;Config register CONFIG1 @ 0x2007
 11006                           ;	Oscillator Selection bits
 11007                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11008                           ;	Watchdog Timer Enable bit
 11009                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11010                           ;	Power-up Timer Enable bit
 11011                           ;	PWRTE = OFF, PWRT disabled
 11012                           ;	RE3/MCLR pin function select bit
 11013                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11014                           ;	Code Protection bit
 11015                           ;	CP = OFF, Program memory code protection is disabled
 11016                           ;	Data Code Protection bit
 11017                           ;	CPD = OFF, Data memory code protection is disabled
 11018                           ;	Brown Out Reset Selection bits
 11019                           ;	BOREN = OFF, BOR disabled
 11020                           ;	Internal External Switchover bit
 11021                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11022                           ;	Fail-Safe Clock Monitor Enabled bit
 11023                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11024                           ;	Low Voltage Programming Enable bit
 11025                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11026                           ;	In-Circuit Debugger Mode bit
 11027                           ;	DEBUG = 0x1, unprogramme 11028     2007                     	org	8199
 11029     2007  20D4               	dw	8404
 11030                           
 11031                           ;Config register CONFIG2 @ 0x2008
 11032                           ;	Brown-out Reset Selection bit
 11033                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11034                           ;	Flash Program Memory Self Write Enable bits
 11035                           ;	WRT = OFF, Write protection off
 11036     2008                     	org	8200
 11037     2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    10
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     50      80
    BANK3            96      0      50
    BANK2            96      0      48

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[5]), STR_3(CODE[17]), STR_2(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 48
		 -> buffer2(BANK2[48]), buffer(BANK3[30]), STR_1(CODE[3]), 

    Read_Fecha@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK1[1]), 

    Read_Fecha@mo	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK1[1]), 

    Read_Fecha@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK1[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> horas(BANK1[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minutos(BANK1[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundos(BANK1[1]), 

    floattostr@cadena_	PTR unsigned char  size(1) Largest target is 48
		 -> buffer2(BANK2[48]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _Lcd_Shift_Right->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    _Slave1_Total->_I2C_Write
    _Set_year->_Dec_to_Bcd
    _Set_sec->_Dec_to_Bcd
    _Set_month->_Dec_to_Bcd
    _Set_min->_Dec_to_Bcd
    _Set_hour->_Dec_to_Bcd
    _Set_day->_Dec_to_Bcd
    _Read_Time->_Bcd_to_Dec
    _Read_Fecha->_Bcd_to_Dec
    _Read->_I2C_Write
    _Bcd_to_Dec->___bmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _AHT10_Soft_Reset->_I2C_Write
    _floattostr->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___fldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _AHT10_Init->_I2C_Write

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_AHT10_Read
    _AHT10_Read->_floattostr

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   27829
                                             44 BANK1      6     6      0
                         _AHT10_Init
                         _AHT10_Read
                   _AHT10_Soft_Reset
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Read_Fecha
                          _Read_Time
                            _Set_day
                           _Set_hour
                            _Set_min
                          _Set_month
                            _Set_sec
                           _Set_year
                       _Slave1_Total
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    1992
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Slave1_Total                                         1     1      0      29
                                              1 BANK0      1     1      0
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_min                                              1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              1     1      0     187
                                              2 BANK0      1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2     561
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Fecha                                           3     1      2     561
                                              8 BANK0      3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 3     3      0      75
                                              1 BANK0      3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              4 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _AHT10_Soft_Reset                                     2     2      0      29
                                              1 BANK0      2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _AHT10_Read                                          26    26      0   21700
                                             19 BANK1     25    25      0
                            _I2C_Ack
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                         _floattostr
 ---------------------------------------------------------------------------------
 (2) _floattostr                                          19    13      6   12539
                                              0 BANK1     19    13      6
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2637
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2440
                                             52 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2721
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     942
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1729
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     648
                                              5 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     760
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AHT10_Init                                           3     3      0      53
                                              1 BANK0      3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      29
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     135
                                              4 COMMON     4     4      0
                    _Lcd_Shift_Right
 ---------------------------------------------------------------------------------
 (6) _Lcd_Shift_Right                                      0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AHT10_Init
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _AHT10_Read
     _I2C_Ack
     _I2C_Nack
     _I2C_Read
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _floattostr
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
   _AHT10_Soft_Reset
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _Read_Fecha
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_min
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Slave1_Total
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)
   _Lcd_Shift_Right
     i1_Lcd_Cmd
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     110       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     32      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      32       9       52.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      30      11       50.0%
DATA                 0      0     110      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 23 14:34:46 2023

            ___fldiv@aexp 0039              ___fldiv@bexp 0038                         _h 0194  
                       _t 0198                         pc 0002              ___fldiv@sign 0031  
          ___bmul@product 0022                _Bcd_to_Dec 1089                        _th 01A0  
                      fsr 0004       ___wmul@multiplicand 0022       __Umul8_16@word_mpld 0026  
                     l200 1211                       l114 0438                       l203 11C3  
                     l212 1175                       l206 119C                       l303 146C  
                     l215 11EA                       l232 087E                       l241 1309  
                     l226 1052                       l218 1238                       l331 12DC  
                     l340 07F9                       l244 10E4                       l229 10A4  
                     l501 0A04                       l334 1F86                       l342 07FE  
                     l238 0BD4                       l343 07FF                       l271 10AE  
                     l191 1426                       l360 1F96                       l336 1F8B  
                     l352 1FA7                       l272 10AF                       l361 1F97  
                     l337 1F8C                       l273 10B5                       l505 1247  
                     l370 1F9B                       l346 1F7C                       l354 1FAC  
                     l274 10B6                       l282 1088                       l194 1373  
                     l355 1FAD                       l275 10BC                       l291 14FE  
                     l531 1FFF                       l507 125F                       l372 1FA0  
                     l348 1F81                       l364 080A                       l276 10BD  
                     l188 12B1                       l373 1FA2                       l349 1F82  
                     l277 10C3                       l701 07F5                       l285 1FD4  
                     l197 133E                       l358 1F91                       l366 080E  
                     l294 1563                       l367 0812                       l279 10C4  
                     l471 0899                       l297 13AC                       l802 0E86  
                     l811 0FFF                       l900 06ED                       l804 0E5F  
                     l823 0F73                       l840 0FF5                       l832 0FD3  
                     l913 1276                       l841 0FFF                       l682 15EE  
                     l906 0771                       l683 1607                       l915 1288  
                     l819 0F4F                       l691 07F5                       l844 114E  
                     l940 16C1                       l829 0F95                       l870 0D1D  
                     l854 0C2B                       l679 1582                       l687 1FC7  
                     l951 168B                       l856 0DA7                       l952 1697  
                     l944 166F                       l777 14B2                       l698 07E0  
                     l938 162C                       l787 13E8                       l876 0D8F  
                     l878 0D9D                       l894 077D                       l798 0E03  
                     l958 1FE8                       _dia 00EC                       _ano 00EA  
         __end_of_I2C_Ack 1FAE                       _mes 00EB                       _isr 1107  
                     fsr0 0004                       indf 0000              ___flmul@aexp 004C  
            ___flmul@bexp 004D              ___flmul@sign 0047              ___flmul@temp 0052  
            ___flmul@prod 004E                _Dec_to_Bcd 103D       floattostr@tempo_int 00A7  
            ___fltol@exp1 0029                      l3000 046C                      l3010 0483  
                    l3002 0470                      l3100 0740                      l3012 0485  
                    l3004 0471                      l3110 076B                      l3102 074F  
                    l3030 04F2                      l3022 04A0                      l3014 048D  
                    l3006 0476                      l3112 076C                      l3104 0759  
                    l3040 056B                      l3032 051C                      l3024 04AE  
                    l3016 0492                      l3008 047B                      l3120 1610  
                    l3200 01AC                      l3114 0775                      l3106 075B  
                    l3050 05E7                      l3042 0588                      l3034 0538  
                    l3026 04BB                      l3018 0497                      l3130 163D  
                    l3122 1614                      l3210 023B                      l3202 01B6  
                    l3108 0767                      l3060 0699                      l3052 0612  
                    l3044 0596                      l3036 0554                      l3028 04D6  
                    l2500 0DB5                      l3140 1666                      l3132 1640  
                    l3124 1624                      l3220 02E1                      l3212 029F  
                    l3204 01E8                      l3300 12D3                      l3070 06BE  
                    l3062 06A2                      l3054 0620                      l3046 05B3  
                    l3038 055D                      l2510 0DC9                      l2502 0DB6  
                    l3150 1699                      l3142 1676                      l3134 164D  
                    l3126 1634                      l3118 160B                      l3230 02FE  
                    l3222 02E5                      l3214 02C6                      l3206 0227  
                    l3310 13F7                      l3302 12D8                      l3080 06D6  
                    l3072 06C7                      l3064 06B0                      l3056 064B  
                    l3048 05CA                      l2600 0EAF                      l2520 0DDD  
                    l2504 0DBB                      l2512 0DCB                      l3152 16AF  
                    l3144 1681                      l3136 1654                      l3240 0322  
                    l3232 0305                      l3224 02ED                      l3216 02D6  
                    l3208 022D                      l3320 1417                      l3312 13FF  
                    l3304 13EC                      l3400 13AD                      l3090 0705  
                    l3082 06EA                      l3066 06B9                      l3074 06CD  
                    l3058 0671                      l2610 0EC4                      l2602 0EB3  
                    l2530 0DF0                      l2522 0DE1                      l2514 0DD3  
                    l2506 0DC0                      l3154 16B4                      l3146 1685  
                    l3138 1658                      l3250 0363                      l3242 034B  
                    l3234 0309                      l3226 02F1                      l3218 02DC  
                    l3330 10A3                      l3322 141C                      l3314 1404  
                    l3306 13EC                      l3410 13C7                      l3402 13B5  
                    l3500 0851                      l3092 0709                      l3076 06D1  
                    l3068 06BD                      l2620 0F27                      l2612 0EC5  
                    l2604 0EB7                      l2540 0E0D                      l2532 0DF8  
                    l2524 0DE5                      l2516 0DD6                      l2508 0DC8  
                    l3156 16B8                      l3148 168F                      l3260 0432  
                    l3252 0367                      l3244 0351                      l3236 030F  
                    l3228 02F9                      l3180 006C                      l3172 0033  
                    l3324 1423                      l3316 140A                      l3308 13F1  
                    l3340 104E                      l3412 13D1                      l3404 13B8  
                    l2710 1F79                      l2702 1F83                      l3510 086E  
                    l3502 0856                      l3270 14D1                      l3262 14B6  
                    l3094 0722                      l3086 06F2                      l3078 06D2  
                    l2630 0F5C                      l2622 0F2D                      l2614 0ECE  
                    l2606 0EBE                      l2550 0E19                      l2542 0E11  
                    l2534 0DF9                      l2526 0DE6                      l2518 0DDC  
                    l3158 16B9                      l3254 03DF                      l3246 0355  
                    l3238 031D                      l3190 010E                      l3182 0070  
                    l3174 003C                      l3318 1412                      l3342 1051  
                    l3334 1040                      l3414 13D7                      l3406 13BF  
                    l3350 1FD9                      l2712 1F98                      l2720 07F6  
                    l2704 0808                      l3512 0873                      l3504 085C  
                    l3280 14F6                      l3264 14BB                      l3272 14DA  
                    l3088 06F7                      l3096 0728                      l2640 0F77  
                    l2624 0F32                      l2608 0EC0                      l2616 0ED3  
                    l2560 0E23                      l2552 0E1B                      l2544 0E13  
                    l2528 0DEB                      l2536 0DFB                      l2800 0792  
                    l3256 041E                      l3248 035F                      l3192 0114  
                    l3184 00A3                      l3176 003E                      l3600 0A52  
                    l3328 108C                      l3336 1041                      l3520 11FF  
                    l3440 129C                      l3432 1289                      l3416 13DE  
                    l3408 13C3                      l3360 1239                      l3352 1FDF  
                    l2714 1FA1                      l2706 080F                      l3506 0862  
                    l3346 1FA3                      l2490 10BA                      l2730 1085  
                    l2722 1070                      l3274 14E0                      l3266 14C8  
                    l3282 1427                      l3098 0735                      l2642 0F7A  
                    l2634 0F65                      l2618 0EE9                      l2626 0F41  
                    l2650 0F87                      l2570 0E2D                      l2562 0E25  
                    l2554 0E1D                      l2546 0E15                      l2538 0E09  
                    l2810 07B4                      l2802 07A5                      l3258 0424  
                    l3194 013E                      l3178 0065                      l3610 0A61  
                    l3602 0A57                      l3338 1047                      l3530 11B1  
                    l3522 120C                      l3514 11EE                      l3290 12B5  
                    l3450 12A3                      l3442 129D                      l3434 1297  
                    l3418 13E4                      l3370 125B                      l3362 123D  
                    l3354 1FE5                      l3508 0868                      l2492 10C1  
                    l2484 10A8                      l2724 1071                      l3276 14ED  
                    l3268 14CB                      l2740 138F                      l2732 1377  
                    l3284 142C                      l2900 0C86                      l2660 0F9A  
                    l2652 0F88                      l2644 0F7C                      l2636 0F6E  
                    l2628 0F57                      l2580 0E6A                      l2564 0E27  
                    l2556 0E1F                      l2548 0E17                      l2572 0E2F  
                    l2804 07A6                      l3196 017D                      l3188 00CF  
                    l3620 0A81                      l3612 0A67                      l3604 0A5C  
                    l3540 118A                      l3532 11BE                      l3524 11A0  
                    l3516 11F3                      l3292 12B9                      l3460 12A9  
                    l3452 12A4                      l3444 129E                      l3436 129A  
                    l3380 147A                      l3364 1241                      l3356 1FE7  
                    l3348 1FD8                      l3700 092F                      l2718 1F8D  
                    l2486 10AC                      l2726 1077                      l3278 14F0  
                    l2750 13A9                      l2742 1396                      l2734 137D  
                    l3286 1448                      l2902 0C8B                      l2910 0CAB  
                    l2670 0FD8                      l2662 0F9F                      l2654 0F8C  
                    l2646 0F81                      l2638 0F72                      l2582 0E6C  
                    l2590 0E7E                      l2574 0E30                      l2566 0E29  
                    l2558 0E21                      l2494 0DA8                      l2830 112B  
                    l2806 07AE                      l3198 0183                      l3630 0AA3  
                    l3622 0A89                      l3614 0A6F                      l3606 0A5C  
                    l3470 151F                      l3550 1163                      l3542 1197  
                    l3534 1179                      l3526 11A5                      l3518 11F9  
                    l3294 12C3                      l3462 12AB                      l3454 12A5  
                    l3446 129F                      l3438 129B                      l3390 14A0  
                    l3382 1481                      l3374 146D                      l3366 124E  
                    l3710 094D                      l2488 10B3                      l2728 107A  
                    l2744 1399                      l2736 137E                      l3288 1450  
                    l2920 0CD6                      l2912 0CBD                      l2904 0C9D  
                    l2840 0BDE                      l2680 0FEF                      l2672 0FDD  
                    l2664 0FAD                      l2656 0F92                      l2648 0F83  
                    l2592 0E8A                      l2584 0E70                      l2576 0E47  
                    l2568 0E2B                      l2496 0DAD                      l2832 112F  
                    l2824 07D5                      l2816 07BC                      l2808 07B0  
                    l3640 0AC2                      l3632 0AA8                      l3624 0A8E  
                    l3616 0A74                      l3608 0A5C                      l3480 12E8  
                    l3472 1525                      l3464 14FF                      l2760 1FF7  
                    l2752 1FEC                      l3552 1170                      l3544 1152  
                    l3536 117E                      l3528 11AB                      l3560 11D8  
                    l3296 12C6                      l3456 12A6                      l3448 12A0  
                    l3392 14A1                      l3384 1485                      l3376 1471  
                    l3368 1255                      l3720 0976                      l3712 0957  
                    l3490 0834                      l2746 139F                      l2738 138C  
                    l2930 0CEE                      l2922 0CDE                      l2914 0CBE  
                    l2906 0CA1                      l2850 0BF5                      l2842 0BE2  
                    l2770 1596                      l2690 1265                      l2682 0FF1  
                    l2674 0FE5                      l2666 0FB1                      l2594 0E8F  
                    l2586 0E71                      l2578 0E63                      l2498 0DB1  
                    l2826 07E5                      l2818 07CE                      l3650 0BC9  
                    l3642 0AC7                      l3634 0AB0                      l3626 0A96  
                    l3618 0A7C                      l3482 12F9                      l3474 155C  
                    l3466 1505                      l2762 1FFE                      l2754 1FED  
                    l3546 1157                      l3538 1184                      l3562 11E5  
                    l3554 11C7                      l3570 1226                      l3298 12CE  
                    l3458 12A7                      l3394 14A8                      l3386 1489  
                    l3378 1477                      l3730 0998                      l3722 097C  
                    l3714 0962                      l3706 0931                      l3492 083A  
                    l3484 0813                      l2748 13A2                      l2940 0D06  
                    l2932 0CF7                      l2924 0CE0                      l2916 0CCC  
                    l2908 0CA2                      l2860 0C09                      l2852 0BF6  
                    l2844 0BE3                      l2836 0BD5                      l2780 1604  
                    l2772 159E                      l2692 126C                      l2684 0FFA  
                    l2676 0FEA                      l2668 0FCF                      l2588 0E7A  
                    l2828 07EA                      l3644 0B41                      l3636 0AB5  
                    l3628 0A9B                      l3580 0A0A                      l3476 1FC8  
                    l3468 150F                      l2756 1FF1                      l3548 115D  
                    l3556 11CC                      l3572 1233                      l3564 1215  
                    l3660 10DD                      l3652 10C5                      l3388 149A  
                    l3396 14AE                      l3740 09DE                      l3732 099D  
                    l3724 0981                      l3716 096E                      l3494 0842  
                    l3486 081E                      l2950 0D35                      l2942 0D1A  
                    l2926 0CE9                      l2934 0CFD                      l2918 0CD0  
                    l2870 0C20                      l2862 0C0D                      l2846 0BE8  
                    l2854 0BF8                      l2838 0BDA                      l2782 1606  
                    l2774 15A2                      l2766 1564                      l2694 1270  
                    l2790 1FC7                      l2686 0FFE                      l2678 0FEB  
                    l2598 0E98                      l3646 0BAE                      l3638 0ABD  
                    l3590 0A31                      l3582 0A10                      l3478 12DD  
                    l2758 1FF5                      l3574 1342                      l3558 11D2  
                    l3566 121A                      l3654 10CA                      l3742 09E3  
                    l3734 09A1                      l3726 0985                      l3718 0972  
                    l3670 0895                      l3662 0882                      l3496 0847  
                    l3488 082F                      l2960 0D73                      l2952 0D39  
                    l2936 0D01                      l2928 0CED                      l2880 0C43  
                    l2872 0C21                      l2864 0C0E                      l2856 0C00  
                    l2848 0BED                      l2776 15C6                      l2768 157A  
                    l2696 127F                      l2688 1263                      l3648 0BBF  
                    l3592 0A36                      l3584 0A16                      l3576 130D  
                    l3568 1220                      l3656 10D0                      l3744 09E7  
                    l3736 09AD                      l3728 0992                      l3680 08C1  
                    l3672 089A                      l3664 0885                      l3498 084C  
                    l2970 0D97                      l2962 0D82                      l2954 0D52  
                    l2946 0D22                      l2938 0D02                      l2890 0C5A  
                    l2866 0C13                      l2874 0C23                      l2858 0C05  
                    l2778 15CA                      l2698 1284                      l2786 1FBB  
                    l2794 077E                      l3594 0A3C                      l3586 0A1C  
                    l3578 0A05                      l3658 10D8                      l3738 09B0  
                    l3690 0902                      l3682 08C5                      l3666 088B  
                    l3746 09F0                      l3770 16F0                      l3762 16C2  
                    l2972 0D99                      l2964 0D86                      l2948 0D27  
                    l2956 0D58                      l2892 0C6C                      l2876 0C33  
                    l2884 0C4C                      l2868 0C18                      l2980 043E  
                    l2788 1FC5                      l2796 0789                      l3596 0A42  
                    l3588 0A27                      l3748 0A00                      l3684 08DA  
                    l3676 089E                      l3668 0890                      l3780 170E  
                    l3772 16F6                      l3764 16DB                      l2966 0D8E  
                    l2958 0D65                      l2894 0C74                      l2886 0C51  
                    l2878 0C3F                      l2990 0451                      l2982 0442  
                    l3598 0A4D                      l3686 08ED                      l3694 0907  
                    l3678 08B1                      l3790 1777                      l3782 1714  
                    l3774 16FC                      l3766 16E6                      l2968 0D93  
                    l2896 0C7C                      l2992 0459                      l2984 0446  
                    l3696 0923                      l3688 08F1                      l3936 08AC  
                    l3792 178C                      l3784 1720                      l3776 1702  
                    l3768 16EB                      l2898 0C84                      l2994 045B  
                    l2986 0447                      l2978 0439                      l3698 092B  
                    l3938 091B                      l3794 17C3                      l3786 172C  
                    l3778 1708                      l2996 0463                      l2988 044C  
                    l3796 17D8                      l3788 1740                      l2998 0468  
                    l3798 17F1                      ?_isr 0070                      STR_1 103A  
                    STR_2 102B                      STR_3 101A                      STR_4 1026  
                    u3010 07CD                      u3011 07CC                      u3100 0C13  
                    u2300 0DB5                      u3020 07D4                      u3101 0C12  
                    u2301 0DB4                      u3021 07D3                      u3005 07BD  
                    u3110 0C18                      u2310 0DBB                      u3111 0C17  
                    u2311 0DBA                      u3200 0CD6                      u3120 0C33  
                    u2400 0E52                      u2320 0DC0                      u3040 07E5  
                    u4000 0432                      u3201 0CD5                      u3121 0C32  
                    u2401 0E50                      u2321 0DBF                      u3041 07E4  
                    u4001 0431                      u4010 14BB                      u3210 0CDE  
                    u3130 0C51                      u2410 0E53                      u2330 0DDC  
                    u3050 07EA                      u4011 14BA                      u3211 0CDD  
                    u3131 0C50                      u2331 0DDB                      u3051 07E9  
                    u3035 07D7                      u2260 10AC                      u3300 0D39  
                    u3140 0C8B                      u3060 0BE2                      u2500 0EB7  
                    u2420 0E63                      u2340 0DE5                      u2261 10AB  
                    u3301 0D38                      u3141 0C8A                      u3061 0BE1  
                    u2501 0EB6                      u2421 0E62                      u2341 0DE4  
                    u4005 042E                      u2270 10B3                      u4030 14E0  
                    u3310 0D48                      u3230 0CED                      u3070 0BE8  
                    u2510 0EC4                      u2430 0E70                      u2350 0DEB  
                    u4110 1047                      u2271 10B2                      u4031 14DF  
                    u3231 0CEC                      u3071 0BE7                      u2511 0EC3  
                    u2431 0E6F                      u2351 0DEA                      u4111 1046  
                    u4120 1FAC                      u2280 10BA                      u3320 0D65  
                    u3080 0BED                      u3400 047B                      u2600 0F72  
                    u2360 0DF0                      u4121 1FAB                      u2281 10B9  
                    u4025 14C1                      u3321 0D64                      u3225 0CE2  
                    u3081 0BEC                      u3401 047A                      u2601 0F71  
                    u2361 0DEF                      u4105 1094                      u2290 10C1  
                    u4050 1436                      u3330 0D82                      u3250 0D01  
                    u3170 0CA1                      u3090 0C0D                      u3410 0492  
                    u2610 0F77                      u2530 0EE9                      u2450 0E86  
                    u2370 0E09                      u4210 1489                      u4130 1FDF  
                    u2291 10C0                      u3331 0D81                      u3315 0D43  
                    u3251 0D00                      u3171 0CA0                      u3155 0C8D  
                    u3091 0C0C                      u3411 0491                      u2611 0F76  
                    u2531 0EE8                      u2451 0E85                      u2371 0E08  
                    u4211 1488                      u4131 1FDE                      u4060 145A  
                    u3340 0D97                      u3260 0D06                      u3420 0497  
                    u2700 0FCF                      u2620 0F81                      u2460 0E8A  
                    u2380 0E0D                      u4140 1FE5                      u4045 14E6  
                    u3341 0D96                      u3325 0D61                      u3261 0D05  
                    u3245 0CF0                      u3165 0C96                      u3421 0496  
                    u2701 0FCE                      u2621 0F80                      u2541 0F00  
                    u2533 0EE5                      u2525 0EC7                      u2461 0E89  
                    u2445 0E73                      u2381 0E0C                      u4205 147B  
                    u4141 1FE4                      u4070 146C                      u3270 0D1A  
                    u3190 0CBD                      u3350 0446                      u2710 0FD8  
                    u2630 0F87                      u2550 0F14                      u2542 0F01  
                    u2470 0E8F                      u2390 0E47                      u4230 149A  
                    u4310 13E4                      u4150 1241                      u4071 146B  
                    u3335 0D7E                      u3271 0D19                      u3191 0CBC  
                    u3511 05D9                      u3431 04E4                      u3351 0445  
                    u2711 0FD7                      u2631 0F86                      u2551 0F15  
                    u2543 0F06                      u2471 0E8E                      u2391 0E46  
                    u4231 1499                      u4311 13E3                      u4151 1240  
                    u2800 080E                      u3280 0D21                      u3600 06BD  
                    u3512 05E0                      u3432 04EB                      u3360 044C  
                    u2720 0FDD                      u2640 0F8C                      u2560 0F32  
                    u2552 0F1A                      u2544 0F07                      u4320 0AE6  
                    u4080 12CE                      u4400 0962                      u2801 080D  
                    u3281 0D20                      u3185 0CA4                      u3601 06BC  
                    u3521 0604                      u3513 05E7                      u3505 05B5  
                    u3441 0500                      u3433 04F2                      u3361 044B  
                    u2721 0FDC                      u2641 0F8B                      u2561 0F31  
                    u2553 0F1B                      u2545 0F0C                      u2481 0EA1  
                    u4081 12CD                      u4225 148A                      u4305 13D8  
                    u4401 0961                      u2810 1F81                      u3290 0D27  
                    u3522 060B                      u3442 0507                      u3370 0451  
                    u2730 0FEA                      u2650 0F92                      u2570 0F57  
                    u2546 0F0D                      u2490 0EB3                      u2482 0EA8  
                    u4330 0AF0                      u4090 12D8                      u4250 14AE  
                    u4410 0976                      u2811 1F80                      u3291 0D26  
                    u3195 0CB9                      u3531 062F                      u3523 0612  
                    u3451 052A                      u3443 050E                      u3371 0450  
                    u2731 0FE9                      u2651 0F91                      u2571 0F56  
                    u2491 0EB2                      u2483 0EAF                      u2395 0E43  
                    u4331 0AF1                      u4091 12D7                      u4251 14AD  
                    u4235 1496                      u4411 0975                      u2820 1FA0  
                    u2900 15A2                      u3700 074F                      u3620 06D1  
                    u3540 0657                      u3532 0636                      u3452 0531  
                    u3380 0470                      u2740 0FEF                      u2660 0F99  
                    u2580 0F5C                      u4340 0B02                      u4332 0AF6  
                    u4260 13B5                      u4180 125B                      u4420 097C  
                    u2821 1F9F                      u2901 15A1                      u3701 074E  
                    u3621 06D0                      u3533 063D                      u3461 0546  
                    u3453 0538                      u3381 046F                      u2741 0FEE  
                    u2661 0F98                      u2581 0F5B                      u4341 0B03  
                    u4333 0AF7                      u4325 0AE1                      u4245 14A2  
                    u4261 13B4                      u4181 125A                      u4165 1248  
                    u4421 097B                      u4405 095E                      u2830 1F96  
                    u3710 076B                      u3630 06D6                      u3462 054D  
                    u3390 0476                      u2750 0FFE                      u2670 0F9F  
                    u4342 0B08                      u4190 1477                      u4430 0991  
                    u4350 088B                      u2831 1F95                      u2911 15B1  
                    u3711 076A                      u3631 06D5                      u3615 06C0  
                    u3551 0663                      u3463 0554                      u3391 0475  
                    u2751 0FFD                      u2671 0F9E                      u4343 0B09  
                    u4191 1476                      u4175 124F                      u4431 0990  
                    u4351 088A                      u2840 07FE                      u2920 15CA  
                    u2912 15B2                      u2760 1270                      u3640 06EA  
                    u3560 067F                      u3552 066A                      u2680 0FB1  
                    u3800 1685                      u3720 1610                      u4280 13C7  
                    u4440 0998                      u4360 08C1                      u2841 07FD  
                    u2921 15C9                      u2913 15B7                      u2761 126F  
                    u3705 074B                      u3641 06E9                      u3553 0671  
                    u3545 0652                      u3481 057A                      u2681 0FB0  
                    u3801 1684                      u3721 160F                      u4281 13C6  
                    u4441 0997                      u4361 08C0                      u2914 15B8  
                    u3650 06F1                      u3482 0581                      u2690 0FC0  
                    u3810 168B                      u3730 1614                      u4290 13D1  
                    u4450 09AD                      u4370 0901                      u2931 15D9  
                    u2915 15BD                      u3651 06F0                      u3571 068B  
                    u3491 05A5                      u3483 0588                      u3475 0556  
                    u2595 0F67                      u3811 168A                      u3731 1613  
                    u4507 10E1                      u4291 13D0                      u4275 13B9  
                    u4451 09AC                      u4371 0900                      u2940 1604  
                    u2932 15DA                      u2916 15BE                      u2780 1284  
                    u3660 06F7                      u3572 0692                      u3492 05AC  
                    u3820 168F                      u3740 1634                      u3900 0065  
                    u2860 1FF1                      u4460 09F0                      u4380 094C  
                    u2941 1603                      u2933 15DF                      u2781 1283  
                    u3661 06F6                      u3573 0699                      u3565 067A  
                    u3493 05B3                      u3821 168E                      u3741 1633  
                    u3901 0064                      u2861 1FF0                      u4517 1420  
                    u4461 09EF                      u4381 094B                      u2790 1F8B  
                    u2934 15E0                      u3670 0709                      u2950 1FC5  
                    u3830 16A4                      u3910 00CE                      u2870 1FFE  
                    u4470 0A00                      u4390 0957                      u2791 1F8A  
                    u4607 13A6                      u2855 1381                      u2935 15E5  
                    u2775 1277                      u3671 0708                      u2951 1FC4  
                    u2695 0FBB                      u3911 00CD                      u4527 150B  
                    u2871 1FFD                      u4295 13CD                      u4471 09FF  
                    u4391 0956                      u2936 15E6                      u2880 157A  
                    u3680 0718                      u2960 0789                      u3840 16B4  
                    u3760 1653                      u3920 013D                      u4617 1080  
                    u2945 1600                      u2881 1579                      u3585 069B  
                    u2961 0788                      u3841 16B3                      u3761 1652  
                    u3921 013C                      u4537 151B                      u4385 0948  
                    u2890 1596                      u3690 0735                      u2970 07A0  
                    u3850 16B8                      u3930 01AC                      u4627 0819  
                    u2891 1595                      u3691 0734                      u3595 06B2  
                    u3851 16B7                      u3835 169F                      u3755 1645  
                    u3931 01AB                      u4547 1529                      u2980 07B4  
                    u3780 1675                      u3940 023B                      u4637 0879  
                    u3685 0713                      u2981 07B3                      u3781 1674  
                    u3941 023A                      u4557 1560                      u2990 07BB  
                    u3950 02C6                      u3695 0731                      u2991 07BA  
                    u2975 079B                      u3775 1667                      u3951 02C5  
                    u4567 12E3                      u3960 02DC                      u3961 02DB  
                    u3945 0237                      u4577 1304                      u3970 02F1  
                    u3795 167A                      u3971 02F0                      u4587 0A2D  
                    u3980 031D                      u4597 1393                      u3981 031C  
                    u3990 035F                      u3991 035E                      u3985 0319  
                    u3995 035B                      _Read 13E9                      _dec2 007C  
       ?_Lcd_Write_String 0025                      _hum1 00D6                      _hum2 00D2  
                    _cont 00E6                      _main 16C2          __end_of_I2C_Nack 1F98  
                    _uni2 007B                      _tmp1 00DE                      _tmp2 00DA  
                    _tmp3 019C          __end_of_I2C_Read 1FA3                      btemp 007E  
        __end_of_I2C_Stop 0800                      start 000C        ??_Lcd_Write_String 0027  
        ?_I2C_Init_Master 0070           ___fldiv@new_exp 0032           __end_of_Lcd_Cmd 1089  
              Read_Time@h 0029                Read_Time@m 0028                Read_Time@s 002A  
       ___bmul@multiplier 0023               Read@address 0022                     ??_isr 0074  
          AHT10_Read@data 00C1           __end_of_Set_day 1176           __end_of_Set_min 11C4  
         __end_of_Set_sec 1212                     ?_Read 0070             ___fltol@sign1 0028  
         __end_of___fladd 1000                     ?_main 0070           __end_of___fldiv 0DA8  
         __end_of___flneg 1FC8           __end_of___flmul 077E           __end_of___flsub 114F  
         __end_of___fltol 07F6                     _ANSEL 0188           __end_of___lwdiv 14B3  
                   i1l306 1FBA                     i1l271 10EE                     i1l272 10F1  
                   i1l273 10F7                     i1l185 1124           __end_of___lwmod 13E9  
                   i1l274 10F8                     i1l282 106C                     i1l275 10FE  
                   i1l276 10FF                     i1l277 1105                     i1l279 1106  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088               ?i1_Lcd_Port 0070  
                   _deci2 007A                     _cent2 0079           __end_of_dpowers 101A  
                   _contb 00E7                     _contg 00E8                     _contr 00E9  
                   _horas 00ED           __end_of_isdigit 1FE9                     _setup 1289  
             Read_Fecha@d 002A               Read_Fecha@y 0029         __end_of_I2C_Start 1F8D  
       __end_of_I2C_Write 0813                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0A05          __end_of_Lcd_Init 1564  
        __end_of_Lcd_Port 10C5           __initialization 000F              __end_of_Read 1427  
              _Read_Fecha 130A              __end_of_main 1800               ?_Bcd_to_Dec 0070  
               ??_I2C_Ack 0020                    ??_Read 0021     floattostr@tempo_float 00A9  
                  ??_main 00CC          __end_of_Set_hour 119D          __end_of_Set_year 1239  
              Set_day@day 0022              ??_AHT10_Init 0021              ??_AHT10_Read 00B3  
        _AHT10_Soft_Reset 12DD               ?_Dec_to_Bcd 0070                Set_min@min 0022  
              Set_sec@sec 0022                    ?_setup 0070                    _ANSELH 0189  
             isr@contador 0077                    i1l3170 1103                    i1l3162 10E6  
                  i1l3164 10EA                    i1l3166 10F5                    i1l3430 1069  
                  i1l3422 1054                    i1l3168 10FC                    i1l3424 1057  
                  i1l3426 105D                    i1l3428 1060                    i1l3800 1107  
                  i1l3810 1118                    i1l3802 110D                    i1l3812 111D  
                  i1l3804 110E                    i1l3814 1120                    i1l3806 1112  
                  i1l3760 1FAE                    i1l3816 1122                    i1l3808 1118  
                  u448_20 110D                    u448_21 110C                    u464_27 1064  
                  u449_20 1118                    u449_21 1117                    u386_20 10EA  
                  u386_21 10E9                    u387_20 10F5                    u387_21 10F4  
                  u388_20 10FC                    u388_21 10FB                    u389_20 1103  
                  u389_21 1102                 ??_Lcd_Cmd 0021                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 16C2  
               ??_Set_day 0022                 ??_Set_min 0022                 ??_Set_sec 0022  
       __end_ofi1_Lcd_Cmd 106D                    ___flge 1564                    ___bmul 1FE9  
               ??___fladd 005C                    ___wmul 1239                 ??___fldiv 0028  
               ??___flneg 0024                 ??___flmul 0042                 ??___flsub 0070  
               ??___fltol 0024        __end_of_AHT10_Init 087F        __end_of_AHT10_Read 0BD5  
               ??___lwdiv 0024                 ??___lwmod 002C                    _buffer 01A4  
                  _estado 007D              Read_Fecha@mo 0028      Dec_to_Bcd@bcd_number 0021  
               ?_I2C_Nack 0070                 ??_isdigit 0020                 ?_I2C_Read 0070  
               ?_I2C_Stop 0070                    saved_w 007E                 ??_sprintf 0035  
         Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024           Lcd_Set_Cursor@y 0028  
         Lcd_Set_Cursor@z 0027                ___flge@ff1 0020                ___flge@ff2 0024  
            ___xxtofl@arg 002A              ___xxtofl@exp 0029              ___xxtofl@val 0020  
    Dec_to_Bcd@dec_number 0020   __end_of__initialization 002F                ___flneg@f1 0020  
       __end_of_Lcd_Clear 1FD5                ___fltol@f1 0020       ___bmul@multiplicand 0020  
             ?_Read_Fecha 0028            __pcstackCOMMON 0070             __end_of_setup 12B2  
           ?_Slave1_Total 0070         __end_of_Read_Time 1374            _Lcd_Set_Cursor 14B3  
              ??_I2C_Nack 0020                ??_I2C_Read 0020                ??_I2C_Stop 0020  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070     AHT10_Read@temperatura 00C8  
            sprintf@width 003E                   ??_setup 0021                __pbssBANK1 00D2  
              __pbssBANK2 0110                __pbssBANK3 0190          AHT10_Init@status 0023  
       __end_of_Set_month 11EB         __end_of__Umul8_16 1289                 ?_Set_hour 0070  
              __pmaintext 16C2                 ?_Set_year 0070                   ?___flge 0020  
                 ?___bmul 0020                   ?___wmul 0020                __pintentry 0004  
                 _I2C_Ack 1FA3    __end_of_Lcd_Set_Cursor 14FF            ??_Slave1_Total 0021  
           ??_I2C_Restart 0020         ??_Lcd_Shift_Right 0074                 ?___xxtofl 0020  
            ??i1_Lcd_Port 0070                ??_Lcd_Init 0024                ??_Lcd_Port 0020  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 1000  
          _Lcd_Write_Char 1374                   _Lcd_Cmd 106D                _floattostr 0033  
               _I2C_Start 1F83                 _I2C_Write 0805                   _Set_day 114F  
              ??_Set_hour 0022                   _Set_min 119D                   _Set_sec 11EB  
              ??_Set_year 0022  __end_of_AHT10_Soft_Reset 130A        __end_ofi1_Lcd_Port 1107  
                 ___fladd 0DA8                   ___fldiv 0BD5                   ___flneg 1FBB  
                 ___flmul 0439                   ___flsub 112B                   ___fltol 077E  
                 ___lwdiv 146D                   ___lwmod 13AD              ??_Bcd_to_Dec 0024  
         ?_Lcd_Set_Cursor 0024                   __ptext1 087F                   __ptext2 1FD5  
                 __ptext3 1239                   __ptext4 13AD                   __ptext5 146D  
                 __ptext6 1289                   __ptext7 12B2                   __ptext8 10C5  
                 __ptext9 1212                   _buffer2 0110                 _T1CONbits 0010  
                 _dpowers 1010                   _isdigit 1FD5                ??___xxtofl 0024  
                 _humedad 0190                   _minutos 00EE              ??_Dec_to_Bcd 0020  
                 _sprintf 087F                   clrloop0 1F72       __end_of_I2C_Restart 1F83  
  __end_of_Lcd_Write_Char 13AD      end_of_initialization 002F        __end_of_Bcd_to_Dec 10A5  
              ?_I2C_Start 0070                ?_I2C_Write 0070             Bcd_to_Dec@bcd 0027  
           Bcd_to_Dec@dec 0026                 Lcd_Port@a 0020        __end_of_Dec_to_Bcd 1053  
               i1_Lcd_Cmd 1053         floattostr@cadena_ 00A4                 _PORTBbits 0006  
               _PORTDbits 0008               ___fladd@grs 0067             ___xxtofl@sign 0028  
       floattostr@largo_n 00AD                 _TRISCbits 0087               ___fldiv@grs 0034  
             ___fldiv@rem 002D           ?_Lcd_Write_Char 0070         floattostr@numero_ 00A0  
       Lcd_Write_String@a 0025         Lcd_Write_String@i 002A               ___flmul@grs 0048  
             ?_floattostr 00A0      __end_of_Slave1_Total 10E5              ??_Read_Fecha 002A  
               _Lcd_Clear 1FC8            __end_of___flge 1608            __end_of___bmul 2000  
          __end_of___wmul 1260                ?i1_Lcd_Cmd 0070          _Lcd_Write_String 1427  
             _I2C_Restart 1F79       start_initialization 000F         ??_I2C_Init_Master 0020  
             __end_of_isr 112B                 _Read_Time 133F     I2C_Init_Master@sp_i2c 0020  
      __end_of_Read_Fecha 133F               ??_I2C_Start 0020               ??_I2C_Write 0020  
               _Set_month 11C4                ?_Lcd_Clear 0070                  ??___flge 0028  
                ??___bmul 0021           _Lcd_Shift_Right 1FAE                  ??___wmul 0024  
               __Umul8_16 1260                  ?_I2C_Ack 0070           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023                 ___fladd@a 0058                 ___fladd@b 0054  
               ___fldiv@a 0020                 ___fldiv@b 0024                 ___flmul@a 003E  
               ___flmul@b 003A               __pbssCOMMON 0078                 ___flsub@a 0068  
               ___flsub@b 006C                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                ?_Read_Time 0028              _isdigit$1081 0020  
                ?_Lcd_Cmd 0070               sprintf@flag 0039               sprintf@prec 003C  
        ___lwdiv@dividend 0022                  ?_Set_day 0070                  ?_Set_min 0070  
                ?_Set_sec 0070                ?_Set_month 0070          ??_Lcd_Set_Cursor 0025  
       ?_AHT10_Soft_Reset 0070                  ?___fladd 0054                  ?___fldiv 0020  
                ?___flneg 0020                  ?___flmul 003A                  ?___flsub 0068  
                ?___fltol 0020                ?__Umul8_16 0020                  ?___lwdiv 0020  
                ?___lwmod 0028        ??_AHT10_Soft_Reset 0021               ??i1_Lcd_Cmd 0071  
               __pstrings 1000                 _distancia 0078                  _I2C_Nack 1F8D  
                ?_isdigit 0070                  _I2C_Read 1F98                  _I2C_Stop 07F6  
        ___lwdiv@quotient 0025                  ?_sprintf 002E              Set_hour@hour 0022  
       interrupt_function 0004            ___wmul@product 0024   __end_of_Lcd_Shift_Right 1FBB  
               clear_ram0 1F71                  _PIE1bits 008C                  Lcd_Cmd@a 0023  
                _PIR1bits 000C               ??_Lcd_Clear 0024              Set_year@year 0022  
             __stringbase 100F         ___wmul@multiplier 0020              _Slave1_Total 10C5  
                Read@dato 0023          ??_Lcd_Write_Char 0021                _AHT10_Init 0813  
              _AHT10_Read 0A05                  _Lcd_Init 14FF               ??_Read_Time 002A  
                _Lcd_Port 10A5  __end_of_Lcd_Write_String 146D              ??_floattostr 00A6  
             ??_Set_month 0022                  _Set_hour 1176                  _Set_year 1212  
         _I2C_Init_Master 12B2             I2C_Write@data 0020               ??__Umul8_16 0022  
      __end_of__stringtab 1010              ?_I2C_Restart 0070                sprintf@val 003A  
                ___xxtofl 1608        __end_of_floattostr 0439           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0027                  __ptext10 11EB                  __ptext11 11C4  
                __ptext20 1FE9                  __ptext12 119D                  __ptext21 14FF  
                __ptext13 1176                  __ptext30 1FBB                  __ptext22 1FC8  
                __ptext14 114F                  __ptext31 0439                  __ptext23 12DD  
                __ptext15 103D                  __ptext40 1FA3                  __ptext32 1260  
                __ptext24 0A05                  __ptext16 133F                  __ptext41 0813  
                __ptext33 1564                  __ptext25 0033                  __ptext17 130A  
                __ptext50 1053                  __ptext42 0805                  __ptext34 0BD5  
                __ptext26 1608                  __ptext18 13E9                  __ptext51 10E5  
                __ptext43 07F6                  __ptext35 1427                  __ptext27 077E  
                __ptext19 1089                  __ptext44 1F83                  __ptext36 1374  
                __ptext28 112B                  __ptext45 1F79                  __ptext37 14B3  
                __ptext29 0DA8                  __ptext46 1F98                  __ptext38 106D  
                __ptext47 1F8D                  __ptext39 10A5                  __ptext48 1107  
                __ptext49 1FAE          ?_Lcd_Shift_Right 0070               i1Lcd_Port@a 0070  
                _segundos 00EF                  _temporal 00E2                _INTCONbits 000B  
             ?_AHT10_Init 0070               ?_AHT10_Read 0070                  isdigit@c 0021  
      Lcd_Write_Char@temp 0022      floattostr@decimales_ 00A5                  intlevel1 0000  
               sprintf@ap 0038                 sprintf@sp 003D          ___lwmod@dividend 002A  
              i1Lcd_Cmd@a 0073   __end_of_I2C_Init_Master 12DD            Set_month@month 0022  
               stringcode 100A                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0029  
  __Umul8_16@multiplicand 0020                  sprintf@c 0040                  sprintf@f 002E  
         ___lwmod@divisor 0028           ___lwmod@counter 002D                i1_Lcd_Port 10E5  
                stringdir 100A                  stringtab 1000    floattostr@largo_entera 00B1  
             _SSPCON2bits 0091             ___fladd@signs 0064              ___fladd@aexp 0065  
            ___fladd@bexp 0066      __Umul8_16@multiplier 0028        floattostr@cont_for 00AF  
       __Umul8_16@product 0024  
