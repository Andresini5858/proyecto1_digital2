

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 22 12:47:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	dabs	1,0x7E,2
    61     0000                     
    62                           ; Version 2.40
    63                           ; Generated 17/11/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F887 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97     0000                     	;# 
    98     0001                     	;# 
    99     0002                     	;# 
   100     0003                     	;# 
   101     0004                     	;# 
   102     0005                     	;# 
   103     0006                     	;# 
   104     0007                     	;# 
   105     0008                     	;# 
   106     0009                     	;# 
   107     000A                     	;# 
   108     000B                     	;# 
   109     000C                     	;# 
   110     000D                     	;# 
   111     000E                     	;# 
   112     000E                     	;# 
   113     000F                     	;# 
   114     0010                     	;# 
   115     0011                     	;# 
   116     0012                     	;# 
   117     0013                     	;# 
   118     0014                     	;# 
   119     0015                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0017                     	;# 
   123     0018                     	;# 
   124     0019                     	;# 
   125     001A                     	;# 
   126     001B                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001D                     	;# 
   130     001E                     	;# 
   131     001F                     	;# 
   132     0081                     	;# 
   133     0085                     	;# 
   134     0086                     	;# 
   135     0087                     	;# 
   136     0088                     	;# 
   137     0089                     	;# 
   138     008C                     	;# 
   139     008D                     	;# 
   140     008E                     	;# 
   141     008F                     	;# 
   142     0090                     	;# 
   143     0091                     	;# 
   144     0092                     	;# 
   145     0093                     	;# 
   146     0093                     	;# 
   147     0093                     	;# 
   148     0094                     	;# 
   149     0095                     	;# 
   150     0096                     	;# 
   151     0097                     	;# 
   152     0098                     	;# 
   153     0099                     	;# 
   154     009A                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     0105                     	;# 
   161     0107                     	;# 
   162     0108                     	;# 
   163     0109                     	;# 
   164     010C                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     0185                     	;# 
   170     0187                     	;# 
   171     0188                     	;# 
   172     0189                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0000                     	;# 
   176     0001                     	;# 
   177     0002                     	;# 
   178     0003                     	;# 
   179     0004                     	;# 
   180     0005                     	;# 
   181     0006                     	;# 
   182     0007                     	;# 
   183     0008                     	;# 
   184     0009                     	;# 
   185     000A                     	;# 
   186     000B                     	;# 
   187     000C                     	;# 
   188     000D                     	;# 
   189     000E                     	;# 
   190     000E                     	;# 
   191     000F                     	;# 
   192     0010                     	;# 
   193     0011                     	;# 
   194     0012                     	;# 
   195     0013                     	;# 
   196     0014                     	;# 
   197     0015                     	;# 
   198     0015                     	;# 
   199     0016                     	;# 
   200     0017                     	;# 
   201     0018                     	;# 
   202     0019                     	;# 
   203     001A                     	;# 
   204     001B                     	;# 
   205     001B                     	;# 
   206     001C                     	;# 
   207     001D                     	;# 
   208     001E                     	;# 
   209     001F                     	;# 
   210     0081                     	;# 
   211     0085                     	;# 
   212     0086                     	;# 
   213     0087                     	;# 
   214     0088                     	;# 
   215     0089                     	;# 
   216     008C                     	;# 
   217     008D                     	;# 
   218     008E                     	;# 
   219     008F                     	;# 
   220     0090                     	;# 
   221     0091                     	;# 
   222     0092                     	;# 
   223     0093                     	;# 
   224     0093                     	;# 
   225     0093                     	;# 
   226     0094                     	;# 
   227     0095                     	;# 
   228     0096                     	;# 
   229     0097                     	;# 
   230     0098                     	;# 
   231     0099                     	;# 
   232     009A                     	;# 
   233     009B                     	;# 
   234     009C                     	;# 
   235     009D                     	;# 
   236     009E                     	;# 
   237     009F                     	;# 
   238     0105                     	;# 
   239     0107                     	;# 
   240     0108                     	;# 
   241     0109                     	;# 
   242     010C                     	;# 
   243     010C                     	;# 
   244     010D                     	;# 
   245     010E                     	;# 
   246     010F                     	;# 
   247     0185                     	;# 
   248     0187                     	;# 
   249     0188                     	;# 
   250     0189                     	;# 
   251     018C                     	;# 
   252     018D                     	;# 
   253     0000                     	;# 
   254     0001                     	;# 
   255     0002                     	;# 
   256     0003                     	;# 
   257     0004                     	;# 
   258     0005                     	;# 
   259     0006                     	;# 
   260     0007                     	;# 
   261     0008                     	;# 
   262     0009                     	;# 
   263     000A                     	;# 
   264     000B                     	;# 
   265     000C                     	;# 
   266     000D                     	;# 
   267     000E                     	;# 
   268     000E                     	;# 
   269     000F                     	;# 
   270     0010                     	;# 
   271     0011                     	;# 
   272     0012                     	;# 
   273     0013                     	;# 
   274     0014                     	;# 
   275     0015                     	;# 
   276     0015                     	;# 
   277     0016                     	;# 
   278     0017                     	;# 
   279     0018                     	;# 
   280     0019                     	;# 
   281     001A                     	;# 
   282     001B                     	;# 
   283     001B                     	;# 
   284     001C                     	;# 
   285     001D                     	;# 
   286     001E                     	;# 
   287     001F                     	;# 
   288     0081                     	;# 
   289     0085                     	;# 
   290     0086                     	;# 
   291     0087                     	;# 
   292     0088                     	;# 
   293     0089                     	;# 
   294     008C                     	;# 
   295     008D                     	;# 
   296     008E                     	;# 
   297     008F                     	;# 
   298     0090                     	;# 
   299     0091                     	;# 
   300     0092                     	;# 
   301     0093                     	;# 
   302     0093                     	;# 
   303     0093                     	;# 
   304     0094                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009A                     	;# 
   311     009B                     	;# 
   312     009C                     	;# 
   313     009D                     	;# 
   314     009E                     	;# 
   315     009F                     	;# 
   316     0105                     	;# 
   317     0107                     	;# 
   318     0108                     	;# 
   319     0109                     	;# 
   320     010C                     	;# 
   321     010C                     	;# 
   322     010D                     	;# 
   323     010E                     	;# 
   324     010F                     	;# 
   325     0185                     	;# 
   326     0187                     	;# 
   327     0188                     	;# 
   328     0189                     	;# 
   329     018C                     	;# 
   330     018D                     	;# 
   331     0000                     	;# 
   332     0001                     	;# 
   333     0002                     	;# 
   334     0003                     	;# 
   335     0004                     	;# 
   336     0005                     	;# 
   337     0006                     	;# 
   338     0007                     	;# 
   339     0008                     	;# 
   340     0009                     	;# 
   341     000A                     	;# 
   342     000B                     	;# 
   343     000C                     	;# 
   344     000D                     	;# 
   345     000E                     	;# 
   346     000E                     	;# 
   347     000F                     	;# 
   348     0010                     	;# 
   349     0011                     	;# 
   350     0012                     	;# 
   351     0013                     	;# 
   352     0014                     	;# 
   353     0015                     	;# 
   354     0015                     	;# 
   355     0016                     	;# 
   356     0017                     	;# 
   357     0018                     	;# 
   358     0019                     	;# 
   359     001A                     	;# 
   360     001B                     	;# 
   361     001B                     	;# 
   362     001C                     	;# 
   363     001D                     	;# 
   364     001E                     	;# 
   365     001F                     	;# 
   366     0081                     	;# 
   367     0085                     	;# 
   368     0086                     	;# 
   369     0087                     	;# 
   370     0088                     	;# 
   371     0089                     	;# 
   372     008C                     	;# 
   373     008D                     	;# 
   374     008E                     	;# 
   375     008F                     	;# 
   376     0090                     	;# 
   377     0091                     	;# 
   378     0092                     	;# 
   379     0093                     	;# 
   380     0093                     	;# 
   381     0093                     	;# 
   382     0094                     	;# 
   383     0095                     	;# 
   384     0096                     	;# 
   385     0097                     	;# 
   386     0098                     	;# 
   387     0099                     	;# 
   388     009A                     	;# 
   389     009B                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     0105                     	;# 
   395     0107                     	;# 
   396     0108                     	;# 
   397     0109                     	;# 
   398     010C                     	;# 
   399     010C                     	;# 
   400     010D                     	;# 
   401     010E                     	;# 
   402     010F                     	;# 
   403     0185                     	;# 
   404     0187                     	;# 
   405     0188                     	;# 
   406     0189                     	;# 
   407     018C                     	;# 
   408     018D                     	;# 
   409                           
   410                           	psect	strings
   411     0800                     __pstrings:
   412     0800                     stringtab:
   413     0800                     __stringtab:
   414                           
   415                           ;	String table - string pointers are 1 byte each
   416     0800  1BFF               	btfsc	btemp+1,7
   417     0801  280A               	ljmp	stringcode
   418     0802  1383               	bcf	3,7
   419     0803  187F               	btfsc	btemp+1,0
   420     0804  1783               	bsf	3,7
   421     0805  0800               	movf	0,w
   422     0806  0A84               	incf	4,f
   423     0807  1903               	skipnz
   424     0808  0AFF               	incf	btemp+1,f
   425     0809  0008               	return
   426     080A                     stringcode:
   427     080A                     stringdir:
   428     080A  3008               	movlw	high stringdir
   429     080B  008A               	movwf	10
   430     080C  0804               	movf	4,w
   431     080D  0A84               	incf	4,f
   432     080E  0782               	addwf	2,f
   433     080F                     __stringbase:
   434     080F  3400               	retlw	0
   435     0810                     __end_of__stringtab:
   436     0810                     _dpowers:
   437     0810  3401               	retlw	1
   438     0811  3400               	retlw	0
   439     0812  340A               	retlw	10
   440     0813  3400               	retlw	0
   441     0814  3464               	retlw	100
   442     0815  3400               	retlw	0
   443     0816  34E8               	retlw	232
   444     0817  3403               	retlw	3
   445     0818  3410               	retlw	16
   446     0819  3427               	retlw	39
   447     081A                     __end_of_dpowers:
   448     0013                     _SSPBUF	set	19
   449     000C                     _PIR1bits	set	12
   450     0014                     _SSPCON	set	20
   451     0008                     _PORTDbits	set	8
   452     0006                     _PORTBbits	set	6
   453     0008                     _PORTD	set	8
   454     0007                     _PORTC	set	7
   455     0006                     _PORTB	set	6
   456     0005                     _PORTA	set	5
   457     0091                     _SSPCON2bits	set	145
   458     0093                     _SSPADD	set	147
   459     0091                     _SSPCON2	set	145
   460     0094                     _SSPSTAT	set	148
   461     0087                     _TRISCbits	set	135
   462     008F                     _OSCCONbits	set	143
   463     0088                     _TRISD	set	136
   464     0086                     _TRISB	set	134
   465     0189                     _ANSELH	set	393
   466     0188                     _ANSEL	set	392
   467     081A                     STR_4:
   468     081A  3425               	retlw	37	;'%'
   469     081B  3430               	retlw	48	;'0'
   470     081C  3432               	retlw	50	;'2'
   471     081D  3475               	retlw	117	;'u'
   472     081E  342F               	retlw	47	;'/'
   473     081F  3425               	retlw	37	;'%'
   474     0820  3430               	retlw	48	;'0'
   475     0821  3432               	retlw	50	;'2'
   476     0822  3475               	retlw	117	;'u'
   477     0823  342F               	retlw	47	;'/'
   478     0824  3432               	retlw	50	;'2'
   479     0825  3430               	retlw	48	;'0'
   480     0826  3425               	retlw	37	;'%'
   481     0827  3430               	retlw	48	;'0'
   482     0828  3432               	retlw	50	;'2'
   483     0829  3475               	retlw	117	;'u'
   484     082A  3420               	retlw	32	;' '
   485     082B  3400               	retlw	0
   486     082C                     STR_3:
   487     082C  3425               	retlw	37	;'%'
   488     082D  3430               	retlw	48	;'0'
   489     082E  3432               	retlw	50	;'2'
   490     082F  3475               	retlw	117	;'u'
   491     0830  343A               	retlw	58	;':'
   492     0831  3425               	retlw	37	;'%'
   493     0832  3430               	retlw	48	;'0'
   494     0833  3432               	retlw	50	;'2'
   495     0834  3475               	retlw	117	;'u'
   496     0835  343A               	retlw	58	;':'
   497     0836  3425               	retlw	37	;'%'
   498     0837  3430               	retlw	48	;'0'
   499     0838  3432               	retlw	50	;'2'
   500     0839  3475               	retlw	117	;'u'
   501     083A  3400               	retlw	0
   502     083B                     STR_2:
   503     083B  3425               	retlw	37	;'%'
   504     083C  3475               	retlw	117	;'u'
   505     083D  3420               	retlw	32	;' '
   506     083E  3400               	retlw	0
   507     083F                     STR_1:
   508     083F  3454               	retlw	84	;'T'
   509     0840  343A               	retlw	58	;':'
   510     0841  3400               	retlw	0
   511                           
   512                           	psect	cinit
   513     07EB                     start_initialization:	
   514                           ; #config settings
   515                           
   516     07EB                     __initialization:
   517                           
   518                           ; Clear objects allocated to BANK0
   519     07EB  1383               	bcf	3,7	;select IRP bank0
   520     07EC  305F               	movlw	low __pbssBANK0
   521     07ED  0084               	movwf	4
   522     07EE  3070               	movlw	low (__pbssBANK0+17)
   523     07EF  160A  118A  2500  120A  118A  	fcall	clear_ram0
   524                           
   525                           ; Clear objects allocated to BANK1
   526     07F4  30A0               	movlw	low __pbssBANK1
   527     07F5  0084               	movwf	4
   528     07F6  30E5               	movlw	low (__pbssBANK1+69)
   529     07F7  160A  118A  2500  120A  118A  	fcall	clear_ram0
   530     07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533     07FC                     __end_of__initialization:
   534     07FC  0183               	clrf	3
   535     07FD  120A  118A  2A4C   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538     005F                     __pbssBANK0:
   539     005F                     _temperatura1:
   540     005F                     	ds	4
   541     0063                     _distancia:
   542     0063                     	ds	1
   543     0064                     _cent:
   544     0064                     	ds	1
   545     0065                     _deci:
   546     0065                     	ds	1
   547     0066                     _uni:
   548     0066                     	ds	1
   549     0067                     _dec:
   550     0067                     	ds	1
   551     0068                     _crc:
   552     0068                     	ds	1
   553     0069                     _estado:
   554     0069                     	ds	1
   555     006A                     _ano:
   556     006A                     	ds	1
   557     006B                     _mes:
   558     006B                     	ds	1
   559     006C                     _dia:
   560     006C                     	ds	1
   561     006D                     _horas:
   562     006D                     	ds	1
   563     006E                     _minutos:
   564     006E                     	ds	1
   565     006F                     _segundos:
   566     006F                     	ds	1
   567                           
   568                           	psect	bssBANK1
   569     00A0                     __pbssBANK1:
   570     00A0                     _temp:
   571     00A0                     	ds	5
   572     00A5                     _humedad:
   573     00A5                     	ds	4
   574     00A9                     _temperatura:
   575     00A9                     	ds	4
   576     00AD                     _tmp3:
   577     00AD                     	ds	4
   578     00B1                     _th:
   579     00B1                     	ds	4
   580     00B5                     _hum2:
   581     00B5                     	ds	4
   582     00B9                     _hum1:
   583     00B9                     	ds	4
   584     00BD                     _tmp2:
   585     00BD                     	ds	4
   586     00C1                     _tmp1:
   587     00C1                     	ds	4
   588     00C5                     _temporal:
   589     00C5                     	ds	4
   590     00C9                     _cont:
   591     00C9                     	ds	1
   592     00CA                     _contb:
   593     00CA                     	ds	1
   594     00CB                     _contg:
   595     00CB                     	ds	1
   596     00CC                     _contr:
   597     00CC                     	ds	1
   598     00CD                     _cent2:
   599     00CD                     	ds	1
   600     00CE                     _deci2:
   601     00CE                     	ds	1
   602     00CF                     _uni2:
   603     00CF                     	ds	1
   604     00D0                     _dec2:
   605     00D0                     	ds	1
   606     00D1                     _buffer:
   607     00D1                     	ds	20
   608                           
   609                           	psect	clrtext
   610     1500                     clear_ram0:	
   611                           ;	Called with FSR containing the base address, and
   612                           ;	W with the last address+1
   613                           
   614     1500  0064               	clrwdt	;clear the watchdog before getting into this loop
   615     1501                     clrloop0:
   616     1501  0180               	clrf	0	;clear RAM location pointed to by FSR
   617     1502  0A84               	incf	4,f	;increment pointer
   618     1503  0604               	xorwf	4,w	;XOR with final address
   619     1504  1903               	btfsc	3,2	;have we reached the end yet?
   620     1505  3400               	retlw	0	;all done for this memory range, return
   621     1506  0604               	xorwf	4,w	;XOR again to restore value
   622     1507  2D01               	goto	clrloop0	;do the next byte
   623                           
   624                           	psect	cstackCOMMON
   625     0070                     __pcstackCOMMON:
   626     0070                     ?_isdigit:
   627     0070                     ?_setup:	
   628                           ; 1 bit 
   629                           
   630     0070                     ?_Lcd_Init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Lcd_Clear:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_Set_sec:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_Set_min:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_Set_hour:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_Set_day:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_Set_month:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_Set_year:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_AHT10_Init:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_AHT10_Soft_Reset:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_AHT10_Trigger:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_AHT10_Read:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_I2C_Init_Master:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ??_I2C_Init_Master:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_I2C_Start:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??_I2C_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ??_I2C_Write:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_I2C_Restart:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ??_I2C_Restart:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_I2C_Read:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ??_I2C_Read:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_I2C_Nack:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ??_I2C_Nack:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_I2C_Stop:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ??_I2C_Stop:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_Bcd_to_Dec:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ?_Dec_to_Bcd:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ??_Dec_to_Bcd:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ??_isdigit:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ?_main:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ?_Read:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ?_Lcd_Port:	
   724                           ; 1 bytes @ 0x0
   725                           
   726     0070                     ??_Lcd_Port:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0070                     ?_Lcd_Cmd:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0070                     ?_Lcd_Write_Char:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0070                     ?___bmul:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_I2C_Write:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?__Umul8_16:	
   742                           ; 2 bytes @ 0x0
   743                           
   744     0070                     ?___wmul:	
   745                           ; 2 bytes @ 0x0
   746                           
   747     0070                     ?___awdiv:	
   748                           ; 2 bytes @ 0x0
   749                           
   750     0070                     ?___lwdiv:	
   751                           ; 2 bytes @ 0x0
   752                           
   753     0070                     ?___lmul:	
   754                           ; 2 bytes @ 0x0
   755                           
   756     0070                     ?___lldiv:	
   757                           ; 4 bytes @ 0x0
   758                           
   759     0070                     Dec_to_Bcd@dec_number:	
   760                           ; 4 bytes @ 0x0
   761                           
   762     0070                     Lcd_Port@a:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     I2C_Init_Master@sp_i2c:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     I2C_Write@data:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ___bmul@multiplicand:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     __Umul8_16@multiplicand:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     _isdigit$944:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ___wmul@multiplier:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ___awdiv@divisor:	
   784                           ; 2 bytes @ 0x0
   785                           
   786     0070                     ___lwdiv@divisor:	
   787                           ; 2 bytes @ 0x0
   788                           
   789     0070                     ___lmul@multiplier:	
   790                           ; 2 bytes @ 0x0
   791                           
   792     0070                     ___lldiv@divisor:	
   793                           ; 4 bytes @ 0x0
   794                           
   795                           
   796                           ; 4 bytes @ 0x0
   797     0070                     	ds	1
   798     0071                     ??_setup:
   799     0071                     ??_AHT10_Init:	
   800                           ; 1 bytes @ 0x1
   801                           
   802     0071                     ??_AHT10_Soft_Reset:	
   803                           ; 1 bytes @ 0x1
   804                           
   805     0071                     ??_AHT10_Trigger:	
   806                           ; 1 bytes @ 0x1
   807                           
   808     0071                     ??_Read:	
   809                           ; 1 bytes @ 0x1
   810                           
   811     0071                     ??_Lcd_Cmd:	
   812                           ; 1 bytes @ 0x1
   813                           
   814     0071                     ??_Lcd_Write_Char:	
   815                           ; 1 bytes @ 0x1
   816                           
   817     0071                     ??___bmul:	
   818                           ; 1 bytes @ 0x1
   819                           
   820     0071                     Dec_to_Bcd@bcd_number:	
   821                           ; 1 bytes @ 0x1
   822                           
   823     0071                     isdigit@c:	
   824                           ; 1 bytes @ 0x1
   825                           
   826                           
   827                           ; 1 bytes @ 0x1
   828     0071                     	ds	1
   829     0072                     ??_Set_sec:
   830     0072                     ??_Set_min:	
   831                           ; 1 bytes @ 0x2
   832                           
   833     0072                     ??_Set_hour:	
   834                           ; 1 bytes @ 0x2
   835                           
   836     0072                     ??_Set_day:	
   837                           ; 1 bytes @ 0x2
   838                           
   839     0072                     ??_Set_month:	
   840                           ; 1 bytes @ 0x2
   841                           
   842     0072                     ??_Set_year:	
   843                           ; 1 bytes @ 0x2
   844                           
   845     0072                     ??__Umul8_16:	
   846                           ; 1 bytes @ 0x2
   847                           
   848     0072                     Read@address:	
   849                           ; 1 bytes @ 0x2
   850                           
   851     0072                     Set_sec@sec:	
   852                           ; 1 bytes @ 0x2
   853                           
   854     0072                     Set_min@min:	
   855                           ; 1 bytes @ 0x2
   856                           
   857     0072                     Set_hour@hour:	
   858                           ; 1 bytes @ 0x2
   859                           
   860     0072                     Set_day@day:	
   861                           ; 1 bytes @ 0x2
   862                           
   863     0072                     Set_month@month:	
   864                           ; 1 bytes @ 0x2
   865                           
   866     0072                     Set_year@year:	
   867                           ; 1 bytes @ 0x2
   868                           
   869     0072                     Lcd_Write_Char@temp:	
   870                           ; 1 bytes @ 0x2
   871                           
   872     0072                     ___bmul@product:	
   873                           ; 1 bytes @ 0x2
   874                           
   875     0072                     ___wmul@multiplicand:	
   876                           ; 1 bytes @ 0x2
   877                           
   878     0072                     ___awdiv@dividend:	
   879                           ; 2 bytes @ 0x2
   880                           
   881     0072                     ___lwdiv@dividend:	
   882                           ; 2 bytes @ 0x2
   883                           
   884                           
   885                           ; 2 bytes @ 0x2
   886     0072                     	ds	1
   887     0073                     Read@dato:
   888     0073                     Lcd_Cmd@a:	
   889                           ; 1 bytes @ 0x3
   890                           
   891     0073                     Lcd_Write_Char@y:	
   892                           ; 1 bytes @ 0x3
   893                           
   894     0073                     ___bmul@multiplier:	
   895                           ; 1 bytes @ 0x3
   896                           
   897                           
   898                           ; 1 bytes @ 0x3
   899     0073                     	ds	1
   900     0074                     ??_Lcd_Init:
   901     0074                     ??_Lcd_Clear:	
   902                           ; 1 bytes @ 0x4
   903                           
   904     0074                     ?_Lcd_Set_Cursor:	
   905                           ; 1 bytes @ 0x4
   906                           
   907     0074                     ??_Bcd_to_Dec:	
   908                           ; 1 bytes @ 0x4
   909                           
   910     0074                     ??___wmul:	
   911                           ; 1 bytes @ 0x4
   912                           
   913     0074                     ??___awdiv:	
   914                           ; 1 bytes @ 0x4
   915                           
   916     0074                     ??___lwdiv:	
   917                           ; 1 bytes @ 0x4
   918                           
   919     0074                     Lcd_Set_Cursor@b:	
   920                           ; 1 bytes @ 0x4
   921                           
   922     0074                     Lcd_Write_Char@a:	
   923                           ; 1 bytes @ 0x4
   924                           
   925     0074                     ___wmul@product:	
   926                           ; 1 bytes @ 0x4
   927                           
   928     0074                     __Umul8_16@product:	
   929                           ; 2 bytes @ 0x4
   930                           
   931     0074                     ___lmul@multiplicand:	
   932                           ; 2 bytes @ 0x4
   933                           
   934     0074                     ___lldiv@dividend:	
   935                           ; 4 bytes @ 0x4
   936                           
   937                           
   938                           ; 4 bytes @ 0x4
   939     0074                     	ds	1
   940     0075                     ??_Lcd_Set_Cursor:
   941     0075                     ?_Lcd_Write_String:	
   942                           ; 1 bytes @ 0x5
   943                           
   944     0075                     ___awdiv@counter:	
   945                           ; 1 bytes @ 0x5
   946                           
   947     0075                     Lcd_Write_String@a:	
   948                           ; 1 bytes @ 0x5
   949                           
   950     0075                     ___lwdiv@quotient:	
   951                           ; 2 bytes @ 0x5
   952                           
   953                           
   954                           ; 2 bytes @ 0x5
   955     0075                     	ds	1
   956     0076                     Bcd_to_Dec@dec:
   957     0076                     Lcd_Set_Cursor@a:	
   958                           ; 1 bytes @ 0x6
   959                           
   960     0076                     ___awdiv@sign:	
   961                           ; 1 bytes @ 0x6
   962                           
   963     0076                     __Umul8_16@word_mpld:	
   964                           ; 1 bytes @ 0x6
   965                           
   966                           
   967                           ; 2 bytes @ 0x6
   968     0076                     	ds	1
   969     0077                     ??_Lcd_Write_String:
   970     0077                     Bcd_to_Dec@bcd:	
   971                           ; 1 bytes @ 0x7
   972                           
   973     0077                     Lcd_Set_Cursor@z:	
   974                           ; 1 bytes @ 0x7
   975                           
   976     0077                     ___lwdiv@counter:	
   977                           ; 1 bytes @ 0x7
   978                           
   979     0077                     ___awdiv@quotient:	
   980                           ; 1 bytes @ 0x7
   981                           
   982                           
   983                           ; 2 bytes @ 0x7
   984     0077                     	ds	1
   985     0078                     ?_Read_Time:
   986     0078                     ?_Read_Fecha:	
   987                           ; 1 bytes @ 0x8
   988                           
   989     0078                     ??___lmul:	
   990                           ; 1 bytes @ 0x8
   991                           
   992     0078                     ??___lldiv:	
   993                           ; 1 bytes @ 0x8
   994                           
   995     0078                     ?___lwmod:	
   996                           ; 1 bytes @ 0x8
   997                           
   998     0078                     Read_Time@m:	
   999                           ; 2 bytes @ 0x8
  1000                           
  1001     0078                     Read_Fecha@mo:	
  1002                           ; 1 bytes @ 0x8
  1003                           
  1004     0078                     Lcd_Set_Cursor@y:	
  1005                           ; 1 bytes @ 0x8
  1006                           
  1007     0078                     __Umul8_16@multiplier:	
  1008                           ; 1 bytes @ 0x8
  1009                           
  1010     0078                     ___lwmod@divisor:	
  1011                           ; 1 bytes @ 0x8
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x8
  1015     0078                     	ds	1
  1016     0079                     ??___flmul:
  1017     0079                     ?___awmod:	
  1018                           ; 1 bytes @ 0x9
  1019                           
  1020     0079                     Read_Time@h:	
  1021                           ; 2 bytes @ 0x9
  1022                           
  1023     0079                     Read_Fecha@y:	
  1024                           ; 1 bytes @ 0x9
  1025                           
  1026     0079                     Lcd_Set_Cursor@temp:	
  1027                           ; 1 bytes @ 0x9
  1028                           
  1029     0079                     ___awmod@divisor:	
  1030                           ; 1 bytes @ 0x9
  1031                           
  1032     0079                     ___lmul@product:	
  1033                           ; 2 bytes @ 0x9
  1034                           
  1035     0079                     ___lldiv@quotient:	
  1036                           ; 4 bytes @ 0x9
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x9
  1040     0079                     	ds	1
  1041     007A                     ??_Read_Time:
  1042     007A                     ??_Read_Fecha:	
  1043                           ; 1 bytes @ 0xA
  1044                           
  1045     007A                     Read_Time@s:	
  1046                           ; 1 bytes @ 0xA
  1047                           
  1048     007A                     Read_Fecha@d:	
  1049                           ; 1 bytes @ 0xA
  1050                           
  1051     007A                     Lcd_Write_String@i:	
  1052                           ; 1 bytes @ 0xA
  1053                           
  1054     007A                     ___lwmod@dividend:	
  1055                           ; 2 bytes @ 0xA
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0xA
  1059     007A                     	ds	1
  1060     007B                     ___awmod@dividend:
  1061                           
  1062                           ; 2 bytes @ 0xB
  1063     007B                     	ds	1
  1064     007C                     ??___lwmod:
  1065                           
  1066                           ; 1 bytes @ 0xC
  1067     007C                     	ds	1
  1068     007D                     ??___awmod:
  1069     007D                     ___lldiv@counter:	
  1070                           ; 1 bytes @ 0xD
  1071                           
  1072     007D                     ___lwmod@counter:	
  1073                           ; 1 bytes @ 0xD
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0xD
  1077     007D                     	ds	1
  1078                           
  1079                           	psect	cstackBANK0
  1080     0020                     __pcstackBANK0:
  1081     0020                     ?_sprintf:
  1082     0020                     ?___llmod:	
  1083                           ; 2 bytes @ 0x0
  1084                           
  1085     0020                     ?___flmul:	
  1086                           ; 4 bytes @ 0x0
  1087                           
  1088     0020                     ?___xxtofl:	
  1089                           ; 4 bytes @ 0x0
  1090                           
  1091     0020                     sprintf@f:	
  1092                           ; 4 bytes @ 0x0
  1093                           
  1094     0020                     ___awmod@counter:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097     0020                     ___llmod@divisor:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100     0020                     ___flmul@b:	
  1101                           ; 4 bytes @ 0x0
  1102                           
  1103     0020                     ___xxtofl@val:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x0
  1108     0020                     	ds	1
  1109     0021                     ___awmod@sign:
  1110                           
  1111                           ; 1 bytes @ 0x1
  1112     0021                     	ds	3
  1113     0024                     ??___xxtofl:
  1114     0024                     ___llmod@dividend:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117     0024                     ___flmul@a:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120                           
  1121                           ; 4 bytes @ 0x4
  1122     0024                     	ds	3
  1123     0027                     ??_sprintf:
  1124                           
  1125                           ; 1 bytes @ 0x7
  1126     0027                     	ds	1
  1127     0028                     ??___llmod:
  1128     0028                     ___flmul@sign:	
  1129                           ; 1 bytes @ 0x8
  1130                           
  1131     0028                     ___xxtofl@sign:	
  1132                           ; 1 bytes @ 0x8
  1133                           
  1134                           
  1135                           ; 1 bytes @ 0x8
  1136     0028                     	ds	1
  1137     0029                     ___llmod@counter:
  1138     0029                     ___xxtofl@exp:	
  1139                           ; 1 bytes @ 0x9
  1140                           
  1141     0029                     ___flmul@grs:	
  1142                           ; 1 bytes @ 0x9
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x9
  1146     0029                     	ds	1
  1147     002A                     sprintf@ap:
  1148     002A                     ___xxtofl@arg:	
  1149                           ; 1 bytes @ 0xA
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xA
  1153     002A                     	ds	1
  1154     002B                     sprintf@flag:
  1155                           
  1156                           ; 1 bytes @ 0xB
  1157     002B                     	ds	1
  1158     002C                     sprintf@val:
  1159                           
  1160                           ; 2 bytes @ 0xC
  1161     002C                     	ds	1
  1162     002D                     ___flmul@aexp:
  1163                           
  1164                           ; 1 bytes @ 0xD
  1165     002D                     	ds	1
  1166     002E                     ??_AHT10_Read:
  1167     002E                     sprintf@prec:	
  1168                           ; 1 bytes @ 0xE
  1169                           
  1170     002E                     ___flmul@bexp:	
  1171                           ; 1 bytes @ 0xE
  1172                           
  1173                           
  1174                           ; 1 bytes @ 0xE
  1175     002E                     	ds	1
  1176     002F                     sprintf@sp:
  1177     002F                     ___flmul@prod:	
  1178                           ; 1 bytes @ 0xF
  1179                           
  1180                           
  1181                           ; 4 bytes @ 0xF
  1182     002F                     	ds	1
  1183     0030                     sprintf@width:
  1184                           
  1185                           ; 2 bytes @ 0x10
  1186     0030                     	ds	2
  1187     0032                     sprintf@c:
  1188                           
  1189                           ; 1 bytes @ 0x12
  1190     0032                     	ds	1
  1191     0033                     ___flmul@temp:
  1192                           
  1193                           ; 2 bytes @ 0x13
  1194     0033                     	ds	2
  1195     0035                     ?___fldiv:
  1196     0035                     ___fldiv@a:	
  1197                           ; 4 bytes @ 0x15
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x15
  1201     0035                     	ds	4
  1202     0039                     ___fldiv@b:
  1203                           
  1204                           ; 4 bytes @ 0x19
  1205     0039                     	ds	4
  1206     003D                     ??___fldiv:
  1207                           
  1208                           ; 1 bytes @ 0x1D
  1209     003D                     	ds	5
  1210     0042                     ___fldiv@rem:
  1211                           
  1212                           ; 4 bytes @ 0x22
  1213     0042                     	ds	4
  1214     0046                     ___fldiv@sign:
  1215                           
  1216                           ; 1 bytes @ 0x26
  1217     0046                     	ds	1
  1218     0047                     ___fldiv@new_exp:
  1219                           
  1220                           ; 2 bytes @ 0x27
  1221     0047                     	ds	2
  1222     0049                     ___fldiv@grs:
  1223                           
  1224                           ; 4 bytes @ 0x29
  1225     0049                     	ds	4
  1226     004D                     ___fldiv@bexp:
  1227                           
  1228                           ; 1 bytes @ 0x2D
  1229     004D                     	ds	1
  1230     004E                     ___fldiv@aexp:
  1231                           
  1232                           ; 1 bytes @ 0x2E
  1233     004E                     	ds	1
  1234     004F                     ?___fltol:
  1235     004F                     ___fltol@f1:	
  1236                           ; 4 bytes @ 0x2F
  1237                           
  1238                           
  1239                           ; 4 bytes @ 0x2F
  1240     004F                     	ds	4
  1241     0053                     ??___fltol:
  1242                           
  1243                           ; 1 bytes @ 0x33
  1244     0053                     	ds	4
  1245     0057                     ___fltol@sign1:
  1246                           
  1247                           ; 1 bytes @ 0x37
  1248     0057                     	ds	1
  1249     0058                     ___fltol@exp1:
  1250                           
  1251                           ; 1 bytes @ 0x38
  1252     0058                     	ds	1
  1253     0059                     ??_main:
  1254                           
  1255                           ; 1 bytes @ 0x39
  1256     0059                     	ds	6
  1257                           
  1258                           	psect	maintext
  1259     024C                     __pmaintext:	
  1260 ;;
  1261 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1262 ;;
  1263 ;; *************** function _main *****************
  1264 ;; Defined at:
  1265 ;;		line 70 in file "main_master.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : B00/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0
  1281 ;;      Temps:          0       6       0       0       0
  1282 ;;      Totals:         0       6       0       0       0
  1283 ;;Total ram usage:        6 bytes
  1284 ;; Hardware stack levels required when called: 3
  1285 ;; This function calls:
  1286 ;;		_AHT10_Init
  1287 ;;		_AHT10_Read
  1288 ;;		_AHT10_Soft_Reset
  1289 ;;		_AHT10_Trigger
  1290 ;;		_Lcd_Clear
  1291 ;;		_Lcd_Init
  1292 ;;		_Lcd_Set_Cursor
  1293 ;;		_Lcd_Write_String
  1294 ;;		_Read_Fecha
  1295 ;;		_Read_Time
  1296 ;;		_Set_day
  1297 ;;		_Set_hour
  1298 ;;		_Set_min
  1299 ;;		_Set_month
  1300 ;;		_Set_sec
  1301 ;;		_Set_year
  1302 ;;		___awdiv
  1303 ;;		___awmod
  1304 ;;		___fldiv
  1305 ;;		___flmul
  1306 ;;		___fltol
  1307 ;;		___lldiv
  1308 ;;		___llmod
  1309 ;;		_setup
  1310 ;;		_sprintf
  1311 ;; This function is called by:
  1312 ;;		Startup code after reset
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316     024C                     _main:	
  1317                           ;psect for function _main
  1318                           
  1319     024C                     l3154:	
  1320                           ;incstack = 0
  1321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1322                           
  1323                           
  1324                           ;main_master.c: 71:     setup();
  1325     024C  160A  118A  25D0  120A  118A  	fcall	_setup
  1326                           
  1327                           ;main_master.c: 72:     Lcd_Init();
  1328     0251  120A  158A  22B3  120A  118A  	fcall	_Lcd_Init
  1329                           
  1330                           ;main_master.c: 73:     Lcd_Clear();
  1331     0256  160A  118A  2531  120A  118A  	fcall	_Lcd_Clear
  1332                           
  1333                           ;main_master.c: 74:     Lcd_Set_Cursor(1,10);
  1334     025B  300A               	movlw	10
  1335     025C  00F4               	movwf	Lcd_Set_Cursor@b
  1336     025D  3001               	movlw	1
  1337     025E  120A  158A  21BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1338     0263                     l3156:
  1339                           
  1340                           ;main_master.c: 75:     Lcd_Write_String("T:");
  1341     0263  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1342     0264  00F5               	movwf	Lcd_Write_String@a
  1343     0265  3080               	movlw	128
  1344     0266  00F6               	movwf	Lcd_Write_String@a+1
  1345     0267  120A  158A  20F0  120A  118A  	fcall	_Lcd_Write_String
  1346     026C                     l3158:
  1347                           
  1348                           ;main_master.c: 76:     Set_sec(0);
  1349     026C  3000               	movlw	0
  1350     026D  160A  118A  26B8  120A  118A  	fcall	_Set_sec
  1351     0272                     l3160:
  1352                           
  1353                           ;main_master.c: 77:     Set_min(0);
  1354     0272  3000               	movlw	0
  1355     0273  160A  118A  2672  120A  118A  	fcall	_Set_min
  1356     0278                     l3162:
  1357                           
  1358                           ;main_master.c: 78:     Set_hour(0);
  1359     0278  3000               	movlw	0
  1360     0279  160A  118A  264F  120A  118A  	fcall	_Set_hour
  1361     027E                     l3164:
  1362                           
  1363                           ;main_master.c: 79:     Set_day(20);
  1364     027E  3014               	movlw	20
  1365     027F  160A  118A  262C  120A  118A  	fcall	_Set_day
  1366     0284                     l3166:
  1367                           
  1368                           ;main_master.c: 80:     Set_month(2);
  1369     0284  3002               	movlw	2
  1370     0285  160A  118A  2695  120A  118A  	fcall	_Set_month
  1371     028A                     l3168:
  1372                           
  1373                           ;main_master.c: 81:     Set_year(23);
  1374     028A  3017               	movlw	23
  1375     028B  160A  118A  26DB  120A  118A  	fcall	_Set_year
  1376     0290                     l3170:
  1377                           
  1378                           ;main_master.c: 82:     AHT10_Init();
  1379     0290  160A  118A  274A  120A  118A  	fcall	_AHT10_Init
  1380     0295                     l3172:
  1381                           
  1382                           ;main_master.c: 85:         Read_Time(&segundos, &minutos, &horas);
  1383     0295  306E               	movlw	(low (_minutos| 0))& (0+255)
  1384     0296  00F8               	movwf	Read_Time@m
  1385     0297  306D               	movlw	(low (_horas| 0))& (0+255)
  1386     0298  00F9               	movwf	Read_Time@h
  1387     0299  306F               	movlw	(low (_segundos| 0))& (0+255)
  1388     029A  160A  118A  27D1  120A  118A  	fcall	_Read_Time
  1389     029F                     l3174:
  1390                           
  1391                           ;main_master.c: 86:         Read_Fecha(&dia, &mes, &ano);
  1392     029F  306B               	movlw	(low (_mes| 0))& (0+255)
  1393     02A0  00F8               	movwf	Read_Fecha@mo
  1394     02A1  306A               	movlw	(low (_ano| 0))& (0+255)
  1395     02A2  00F9               	movwf	Read_Fecha@y
  1396     02A3  306C               	movlw	(low (_dia| 0))& (0+255)
  1397     02A4  160A  118A  27A2  120A  118A  	fcall	_Read_Fecha
  1398     02A9                     l3176:
  1399                           
  1400                           ;main_master.c: 87:         AHT10_Soft_Reset();
  1401     02A9  160A  118A  2587  120A  118A  	fcall	_AHT10_Soft_Reset
  1402     02AE                     l3178:
  1403                           
  1404                           ;main_master.c: 89:         AHT10_Trigger();
  1405     02AE  160A  118A  2776  120A  118A  	fcall	_AHT10_Trigger
  1406     02B3                     l3180:
  1407                           
  1408                           ;main_master.c: 90:         AHT10_Read();
  1409     02B3  120A  118A  206B  120A  118A  	fcall	_AHT10_Read
  1410     02B8                     l3182:
  1411                           
  1412                           ;main_master.c: 92:         Lcd_Set_Cursor(1, 11);
  1413     02B8  300B               	movlw	11
  1414     02B9  00F4               	movwf	Lcd_Set_Cursor@b
  1415     02BA  3001               	movlw	1
  1416     02BB  120A  158A  21BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1417     02C0                     l3184:
  1418                           
  1419                           ;main_master.c: 94:         temperatura1 = (temperatura * 100) / 1;
  1420     02C0  1683               	bsf	3,5	;RP0=1, select bank1
  1421     02C1  1303               	bcf	3,6	;RP1=0, select bank1
  1422     02C2  082C               	movf	(_temperatura+3)^(0+128),w
  1423     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1424     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1425     02C5  00A7               	movwf	___flmul@a+3
  1426     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1427     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  1428     02C8  082B               	movf	(_temperatura+2)^(0+128),w
  1429     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1430     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1431     02CB  00A6               	movwf	___flmul@a+2
  1432     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  1433     02CD  1303               	bcf	3,6	;RP1=0, select bank1
  1434     02CE  082A               	movf	(_temperatura+1)^(0+128),w
  1435     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1436     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1437     02D1  00A5               	movwf	___flmul@a+1
  1438     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1439     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1440     02D4  0829               	movf	_temperatura^(0+128),w
  1441     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1442     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1443     02D7  00A4               	movwf	___flmul@a
  1444     02D8  3042               	movlw	66
  1445     02D9  00A3               	movwf	___flmul@b+3
  1446     02DA  30C8               	movlw	200
  1447     02DB  00A2               	movwf	___flmul@b+2
  1448     02DC  3000               	movlw	0
  1449     02DD  00A1               	movwf	___flmul@b+1
  1450     02DE  3000               	movlw	0
  1451     02DF  00A0               	movwf	___flmul@b
  1452     02E0  120A  118A  24A6  120A  118A  	fcall	___flmul
  1453     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1454     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1455     02E7  0823               	movf	?___flmul+3,w
  1456     02E8  00BC               	movwf	___fldiv@b+3
  1457     02E9  0822               	movf	?___flmul+2,w
  1458     02EA  00BB               	movwf	___fldiv@b+2
  1459     02EB  0821               	movf	?___flmul+1,w
  1460     02EC  00BA               	movwf	___fldiv@b+1
  1461     02ED  0820               	movf	?___flmul,w
  1462     02EE  00B9               	movwf	___fldiv@b
  1463     02EF  303F               	movlw	63
  1464     02F0  00B8               	movwf	___fldiv@a+3
  1465     02F1  3080               	movlw	128
  1466     02F2  00B7               	movwf	___fldiv@a+2
  1467     02F3  3000               	movlw	0
  1468     02F4  00B6               	movwf	___fldiv@a+1
  1469     02F5  3000               	movlw	0
  1470     02F6  00B5               	movwf	___fldiv@a
  1471     02F7  120A  158A  262D  120A  118A  	fcall	___fldiv
  1472     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1473     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1474     02FE  0838               	movf	?___fldiv+3,w
  1475     02FF  00D2               	movwf	___fltol@f1+3
  1476     0300  0837               	movf	?___fldiv+2,w
  1477     0301  00D1               	movwf	___fltol@f1+2
  1478     0302  0836               	movf	?___fldiv+1,w
  1479     0303  00D0               	movwf	___fltol@f1+1
  1480     0304  0835               	movf	?___fldiv,w
  1481     0305  00CF               	movwf	___fltol@f1
  1482     0306  120A  158A  2377  120A  118A  	fcall	___fltol
  1483     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1484     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1485     030D  0852               	movf	?___fltol+3,w
  1486     030E  00E2               	movwf	_temperatura1+3
  1487     030F  0851               	movf	?___fltol+2,w
  1488     0310  00E1               	movwf	_temperatura1+2
  1489     0311  0850               	movf	?___fltol+1,w
  1490     0312  00E0               	movwf	_temperatura1+1
  1491     0313  084F               	movf	?___fltol,w
  1492     0314  00DF               	movwf	_temperatura1
  1493     0315                     l3186:
  1494                           
  1495                           ;main_master.c: 95:         dec = temperatura1 / 1000;
  1496     0315  3000               	movlw	0
  1497     0316  00F3               	movwf	___lldiv@divisor+3
  1498     0317  3000               	movlw	0
  1499     0318  00F2               	movwf	___lldiv@divisor+2
  1500     0319  3003               	movlw	3
  1501     031A  00F1               	movwf	___lldiv@divisor+1
  1502     031B  30E8               	movlw	232
  1503     031C  00F0               	movwf	___lldiv@divisor
  1504     031D  0862               	movf	_temperatura1+3,w
  1505     031E  00F7               	movwf	___lldiv@dividend+3
  1506     031F  0861               	movf	_temperatura1+2,w
  1507     0320  00F6               	movwf	___lldiv@dividend+2
  1508     0321  0860               	movf	_temperatura1+1,w
  1509     0322  00F5               	movwf	___lldiv@dividend+1
  1510     0323  085F               	movf	_temperatura1,w
  1511     0324  00F4               	movwf	___lldiv@dividend
  1512     0325  120A  158A  2311  120A  118A  	fcall	___lldiv
  1513     032A  0870               	movf	?___lldiv,w
  1514     032B  1283               	bcf	3,5	;RP0=0, select bank0
  1515     032C  1303               	bcf	3,6	;RP1=0, select bank0
  1516     032D  00E7               	movwf	_dec
  1517     032E                     l3188:
  1518                           
  1519                           ;main_master.c: 96:         uni = (temperatura1 / 100) % 10;
  1520     032E  3000               	movlw	0
  1521     032F  00A3               	movwf	___llmod@divisor+3
  1522     0330  3000               	movlw	0
  1523     0331  00A2               	movwf	___llmod@divisor+2
  1524     0332  3000               	movlw	0
  1525     0333  00A1               	movwf	___llmod@divisor+1
  1526     0334  300A               	movlw	10
  1527     0335  00A0               	movwf	___llmod@divisor
  1528     0336  3000               	movlw	0
  1529     0337  00F3               	movwf	___lldiv@divisor+3
  1530     0338  3000               	movlw	0
  1531     0339  00F2               	movwf	___lldiv@divisor+2
  1532     033A  3000               	movlw	0
  1533     033B  00F1               	movwf	___lldiv@divisor+1
  1534     033C  3064               	movlw	100
  1535     033D  00F0               	movwf	___lldiv@divisor
  1536     033E  0862               	movf	_temperatura1+3,w
  1537     033F  00F7               	movwf	___lldiv@dividend+3
  1538     0340  0861               	movf	_temperatura1+2,w
  1539     0341  00F6               	movwf	___lldiv@dividend+2
  1540     0342  0860               	movf	_temperatura1+1,w
  1541     0343  00F5               	movwf	___lldiv@dividend+1
  1542     0344  085F               	movf	_temperatura1,w
  1543     0345  00F4               	movwf	___lldiv@dividend
  1544     0346  120A  158A  2311  120A  118A  	fcall	___lldiv
  1545     034B  0873               	movf	?___lldiv+3,w
  1546     034C  1283               	bcf	3,5	;RP0=0, select bank0
  1547     034D  1303               	bcf	3,6	;RP1=0, select bank0
  1548     034E  00A7               	movwf	___llmod@dividend+3
  1549     034F  0872               	movf	?___lldiv+2,w
  1550     0350  00A6               	movwf	___llmod@dividend+2
  1551     0351  0871               	movf	?___lldiv+1,w
  1552     0352  00A5               	movwf	___llmod@dividend+1
  1553     0353  0870               	movf	?___lldiv,w
  1554     0354  00A4               	movwf	___llmod@dividend
  1555     0355  120A  158A  2202  120A  118A  	fcall	___llmod
  1556     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1557     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1558     035C  0820               	movf	?___llmod,w
  1559     035D  00E6               	movwf	_uni
  1560     035E                     l3190:
  1561                           
  1562                           ;main_master.c: 97:         deci = (temperatura1 / 10) % 10;
  1563     035E  3000               	movlw	0
  1564     035F  00A3               	movwf	___llmod@divisor+3
  1565     0360  3000               	movlw	0
  1566     0361  00A2               	movwf	___llmod@divisor+2
  1567     0362  3000               	movlw	0
  1568     0363  00A1               	movwf	___llmod@divisor+1
  1569     0364  300A               	movlw	10
  1570     0365  00A0               	movwf	___llmod@divisor
  1571     0366  3000               	movlw	0
  1572     0367  00F3               	movwf	___lldiv@divisor+3
  1573     0368  3000               	movlw	0
  1574     0369  00F2               	movwf	___lldiv@divisor+2
  1575     036A  3000               	movlw	0
  1576     036B  00F1               	movwf	___lldiv@divisor+1
  1577     036C  300A               	movlw	10
  1578     036D  00F0               	movwf	___lldiv@divisor
  1579     036E  0862               	movf	_temperatura1+3,w
  1580     036F  00F7               	movwf	___lldiv@dividend+3
  1581     0370  0861               	movf	_temperatura1+2,w
  1582     0371  00F6               	movwf	___lldiv@dividend+2
  1583     0372  0860               	movf	_temperatura1+1,w
  1584     0373  00F5               	movwf	___lldiv@dividend+1
  1585     0374  085F               	movf	_temperatura1,w
  1586     0375  00F4               	movwf	___lldiv@dividend
  1587     0376  120A  158A  2311  120A  118A  	fcall	___lldiv
  1588     037B  0873               	movf	?___lldiv+3,w
  1589     037C  1283               	bcf	3,5	;RP0=0, select bank0
  1590     037D  1303               	bcf	3,6	;RP1=0, select bank0
  1591     037E  00A7               	movwf	___llmod@dividend+3
  1592     037F  0872               	movf	?___lldiv+2,w
  1593     0380  00A6               	movwf	___llmod@dividend+2
  1594     0381  0871               	movf	?___lldiv+1,w
  1595     0382  00A5               	movwf	___llmod@dividend+1
  1596     0383  0870               	movf	?___lldiv,w
  1597     0384  00A4               	movwf	___llmod@dividend
  1598     0385  120A  158A  2202  120A  118A  	fcall	___llmod
  1599     038A  1283               	bcf	3,5	;RP0=0, select bank0
  1600     038B  1303               	bcf	3,6	;RP1=0, select bank0
  1601     038C  0820               	movf	?___llmod,w
  1602     038D  00E5               	movwf	_deci
  1603     038E                     l3192:
  1604                           
  1605                           ;main_master.c: 98:         cent = (temperatura1 % 10);
  1606     038E  3000               	movlw	0
  1607     038F  00A3               	movwf	___llmod@divisor+3
  1608     0390  3000               	movlw	0
  1609     0391  00A2               	movwf	___llmod@divisor+2
  1610     0392  3000               	movlw	0
  1611     0393  00A1               	movwf	___llmod@divisor+1
  1612     0394  300A               	movlw	10
  1613     0395  00A0               	movwf	___llmod@divisor
  1614     0396  0862               	movf	_temperatura1+3,w
  1615     0397  00A7               	movwf	___llmod@dividend+3
  1616     0398  0861               	movf	_temperatura1+2,w
  1617     0399  00A6               	movwf	___llmod@dividend+2
  1618     039A  0860               	movf	_temperatura1+1,w
  1619     039B  00A5               	movwf	___llmod@dividend+1
  1620     039C  085F               	movf	_temperatura1,w
  1621     039D  00A4               	movwf	___llmod@dividend
  1622     039E  120A  158A  2202  120A  118A  	fcall	___llmod
  1623     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1624     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1625     03A5  0820               	movf	?___llmod,w
  1626     03A6  00E4               	movwf	_cent
  1627     03A7                     l3194:
  1628                           
  1629                           ;main_master.c: 99:         sprintf(buffer, "%u ", temperatura);
  1630     03A7  302C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1631     03A8  00A0               	movwf	sprintf@f
  1632     03A9  1683               	bsf	3,5	;RP0=1, select bank1
  1633     03AA  1303               	bcf	3,6	;RP1=0, select bank1
  1634     03AB  082C               	movf	(_temperatura+3)^(0+128),w
  1635     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1636     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1637     03AE  00A4               	movwf	?_sprintf+4
  1638     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1639     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1640     03B1  082B               	movf	(_temperatura+2)^(0+128),w
  1641     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1642     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1643     03B4  00A3               	movwf	?_sprintf+3
  1644     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  1645     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  1646     03B7  082A               	movf	(_temperatura+1)^(0+128),w
  1647     03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1648     03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1649     03BA  00A2               	movwf	?_sprintf+2
  1650     03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1651     03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1652     03BD  0829               	movf	_temperatura^(0+128),w
  1653     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1654     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1655     03C0  00A1               	movwf	?_sprintf+1
  1656     03C1  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1657     03C2  120A  158A  24A9  120A  118A  	fcall	_sprintf
  1658     03C7                     l3196:
  1659                           
  1660                           ;main_master.c: 100:         Lcd_Write_String(buffer);
  1661     03C7  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1662     03C8  00F5               	movwf	Lcd_Write_String@a
  1663     03C9  3000               	movlw	0
  1664     03CA  00F6               	movwf	Lcd_Write_String@a+1
  1665     03CB  120A  158A  20F0  120A  118A  	fcall	_Lcd_Write_String
  1666     03D0                     l3198:
  1667                           
  1668                           ;main_master.c: 103:         dec2 = distancia/1000;
  1669     03D0  30E8               	movlw	232
  1670     03D1  00F0               	movwf	___awdiv@divisor
  1671     03D2  3003               	movlw	3
  1672     03D3  00F1               	movwf	___awdiv@divisor+1
  1673     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1674     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1675     03D6  0863               	movf	_distancia,w
  1676     03D7  00D9               	movwf	??_main
  1677     03D8  01DA               	clrf	??_main+1
  1678     03D9  0859               	movf	??_main,w
  1679     03DA  00F2               	movwf	___awdiv@dividend
  1680     03DB  085A               	movf	??_main+1,w
  1681     03DC  00F3               	movwf	___awdiv@dividend+1
  1682     03DD  120A  118A  2004  120A  118A  	fcall	___awdiv
  1683     03E2  0870               	movf	?___awdiv,w
  1684     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  1685     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  1686     03E5  00D0               	movwf	_dec2^(0+128)
  1687     03E6                     l3200:
  1688                           
  1689                           ;main_master.c: 104:         uni2 = (distancia / 100) % 10;
  1690     03E6  300A               	movlw	10
  1691     03E7  00F9               	movwf	___awmod@divisor
  1692     03E8  3000               	movlw	0
  1693     03E9  00FA               	movwf	___awmod@divisor+1
  1694     03EA  3064               	movlw	100
  1695     03EB  00F0               	movwf	___awdiv@divisor
  1696     03EC  3000               	movlw	0
  1697     03ED  00F1               	movwf	___awdiv@divisor+1
  1698     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1699     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1700     03F0  0863               	movf	_distancia,w
  1701     03F1  00D9               	movwf	??_main
  1702     03F2  01DA               	clrf	??_main+1
  1703     03F3  0859               	movf	??_main,w
  1704     03F4  00F2               	movwf	___awdiv@dividend
  1705     03F5  085A               	movf	??_main+1,w
  1706     03F6  00F3               	movwf	___awdiv@dividend+1
  1707     03F7  120A  118A  2004  120A  118A  	fcall	___awdiv
  1708     03FC  0871               	movf	?___awdiv+1,w
  1709     03FD  00FC               	movwf	___awmod@dividend+1
  1710     03FE  0870               	movf	?___awdiv,w
  1711     03FF  00FB               	movwf	___awmod@dividend
  1712     0400  120A  158A  2258  120A  118A  	fcall	___awmod
  1713     0405  0879               	movf	?___awmod,w
  1714     0406  1683               	bsf	3,5	;RP0=1, select bank1
  1715     0407  1303               	bcf	3,6	;RP1=0, select bank1
  1716     0408  00CF               	movwf	_uni2^(0+128)
  1717     0409                     l3202:
  1718                           
  1719                           ;main_master.c: 105:         deci2 = (distancia / 10) % 10;
  1720     0409  300A               	movlw	10
  1721     040A  00F9               	movwf	___awmod@divisor
  1722     040B  3000               	movlw	0
  1723     040C  00FA               	movwf	___awmod@divisor+1
  1724     040D  300A               	movlw	10
  1725     040E  00F0               	movwf	___awdiv@divisor
  1726     040F  3000               	movlw	0
  1727     0410  00F1               	movwf	___awdiv@divisor+1
  1728     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1730     0413  0863               	movf	_distancia,w
  1731     0414  00D9               	movwf	??_main
  1732     0415  01DA               	clrf	??_main+1
  1733     0416  0859               	movf	??_main,w
  1734     0417  00F2               	movwf	___awdiv@dividend
  1735     0418  085A               	movf	??_main+1,w
  1736     0419  00F3               	movwf	___awdiv@dividend+1
  1737     041A  120A  118A  2004  120A  118A  	fcall	___awdiv
  1738     041F  0871               	movf	?___awdiv+1,w
  1739     0420  00FC               	movwf	___awmod@dividend+1
  1740     0421  0870               	movf	?___awdiv,w
  1741     0422  00FB               	movwf	___awmod@dividend
  1742     0423  120A  158A  2258  120A  118A  	fcall	___awmod
  1743     0428  0879               	movf	?___awmod,w
  1744     0429  1683               	bsf	3,5	;RP0=1, select bank1
  1745     042A  1303               	bcf	3,6	;RP1=0, select bank1
  1746     042B  00CE               	movwf	_deci2^(0+128)
  1747     042C                     l3204:
  1748                           
  1749                           ;main_master.c: 106:         cent2 = (distancia % 10);
  1750     042C  300A               	movlw	10
  1751     042D  00F9               	movwf	___awmod@divisor
  1752     042E  3000               	movlw	0
  1753     042F  00FA               	movwf	___awmod@divisor+1
  1754     0430  1283               	bcf	3,5	;RP0=0, select bank0
  1755     0431  1303               	bcf	3,6	;RP1=0, select bank0
  1756     0432  0863               	movf	_distancia,w
  1757     0433  00D9               	movwf	??_main
  1758     0434  01DA               	clrf	??_main+1
  1759     0435  0859               	movf	??_main,w
  1760     0436  00FB               	movwf	___awmod@dividend
  1761     0437  085A               	movf	??_main+1,w
  1762     0438  00FC               	movwf	___awmod@dividend+1
  1763     0439  120A  158A  2258  120A  118A  	fcall	___awmod
  1764     043E  0879               	movf	?___awmod,w
  1765     043F  1683               	bsf	3,5	;RP0=1, select bank1
  1766     0440  1303               	bcf	3,6	;RP1=0, select bank1
  1767     0441  00CD               	movwf	_cent2^(0+128)
  1768     0442                     l3206:
  1769                           
  1770                           ;main_master.c: 112:         Lcd_Set_Cursor(1,1);
  1771     0442  01F4               	clrf	Lcd_Set_Cursor@b
  1772     0443  0AF4               	incf	Lcd_Set_Cursor@b,f
  1773     0444  3001               	movlw	1
  1774     0445  120A  158A  21BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1775     044A                     l3208:
  1776                           
  1777                           ;main_master.c: 113:         sprintf(buffer, "%02u:%02u:%02u", horas, minutos, segundos)
      +                          ;
  1778     044A  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1779     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1780     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1781     044D  00A0               	movwf	sprintf@f
  1782     044E  086D               	movf	_horas,w
  1783     044F  00D9               	movwf	??_main
  1784     0450  01DA               	clrf	??_main+1
  1785     0451  0859               	movf	??_main,w
  1786     0452  00A1               	movwf	?_sprintf+1
  1787     0453  085A               	movf	??_main+1,w
  1788     0454  00A2               	movwf	?_sprintf+2
  1789     0455  086E               	movf	_minutos,w
  1790     0456  00DB               	movwf	??_main+2
  1791     0457  01DC               	clrf	??_main+3
  1792     0458  085B               	movf	??_main+2,w
  1793     0459  00A3               	movwf	?_sprintf+3
  1794     045A  085C               	movf	??_main+3,w
  1795     045B  00A4               	movwf	?_sprintf+4
  1796     045C  086F               	movf	_segundos,w
  1797     045D  00DD               	movwf	??_main+4
  1798     045E  01DE               	clrf	??_main+5
  1799     045F  085D               	movf	??_main+4,w
  1800     0460  00A5               	movwf	?_sprintf+5
  1801     0461  085E               	movf	??_main+5,w
  1802     0462  00A6               	movwf	?_sprintf+6
  1803     0463  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1804     0464  120A  158A  24A9  120A  118A  	fcall	_sprintf
  1805     0469                     l3210:
  1806                           
  1807                           ;main_master.c: 114:         Lcd_Write_String(buffer);
  1808     0469  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1809     046A  00F5               	movwf	Lcd_Write_String@a
  1810     046B  3000               	movlw	0
  1811     046C  00F6               	movwf	Lcd_Write_String@a+1
  1812     046D  120A  158A  20F0  120A  118A  	fcall	_Lcd_Write_String
  1813     0472                     l3212:
  1814                           
  1815                           ;main_master.c: 116:         Lcd_Set_Cursor(2,1);
  1816     0472  01F4               	clrf	Lcd_Set_Cursor@b
  1817     0473  0AF4               	incf	Lcd_Set_Cursor@b,f
  1818     0474  3002               	movlw	2
  1819     0475  120A  158A  21BC  120A  118A  	fcall	_Lcd_Set_Cursor
  1820     047A                     l3214:
  1821                           
  1822                           ;main_master.c: 117:         sprintf(buffer, "%02u/%02u/20%02u ", dia, mes, ano);
  1823     047A  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1824     047B  1283               	bcf	3,5	;RP0=0, select bank0
  1825     047C  1303               	bcf	3,6	;RP1=0, select bank0
  1826     047D  00A0               	movwf	sprintf@f
  1827     047E  086C               	movf	_dia,w
  1828     047F  00D9               	movwf	??_main
  1829     0480  01DA               	clrf	??_main+1
  1830     0481  0859               	movf	??_main,w
  1831     0482  00A1               	movwf	?_sprintf+1
  1832     0483  085A               	movf	??_main+1,w
  1833     0484  00A2               	movwf	?_sprintf+2
  1834     0485  086B               	movf	_mes,w
  1835     0486  00DB               	movwf	??_main+2
  1836     0487  01DC               	clrf	??_main+3
  1837     0488  085B               	movf	??_main+2,w
  1838     0489  00A3               	movwf	?_sprintf+3
  1839     048A  085C               	movf	??_main+3,w
  1840     048B  00A4               	movwf	?_sprintf+4
  1841     048C  086A               	movf	_ano,w
  1842     048D  00DD               	movwf	??_main+4
  1843     048E  01DE               	clrf	??_main+5
  1844     048F  085D               	movf	??_main+4,w
  1845     0490  00A5               	movwf	?_sprintf+5
  1846     0491  085E               	movf	??_main+5,w
  1847     0492  00A6               	movwf	?_sprintf+6
  1848     0493  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1849     0494  120A  158A  24A9  120A  118A  	fcall	_sprintf
  1850     0499                     l3216:
  1851                           
  1852                           ;main_master.c: 118:         Lcd_Write_String(buffer);
  1853     0499  30D1               	movlw	(low (_buffer| 0))& (0+255)
  1854     049A  00F5               	movwf	Lcd_Write_String@a
  1855     049B  3000               	movlw	0
  1856     049C  00F6               	movwf	Lcd_Write_String@a+1
  1857     049D  120A  158A  20F0  120A  118A  	fcall	_Lcd_Write_String
  1858     04A2  2A95               	goto	l3172
  1859     04A3  120A  118A  2800   	ljmp	start
  1860     04A6                     __end_of_main:
  1861                           
  1862                           	psect	text1
  1863     0CA9                     __ptext1:	
  1864 ;; *************** function _sprintf *****************
  1865 ;; Defined at:
  1866 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  sp              1    wreg     PTR unsigned char 
  1869 ;;		 -> buffer(20), 
  1870 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1871 ;;		 -> STR_4(18), STR_3(15), STR_2(4), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1874 ;;		 -> buffer(20), 
  1875 ;;  tmpval          4    0        struct .
  1876 ;;  width           2   16[BANK0 ] int 
  1877 ;;  val             2   12[BANK0 ] unsigned int 
  1878 ;;  cp              2    0        PTR const unsigned char 
  1879 ;;  len             2    0        unsigned int 
  1880 ;;  c               1   18[BANK0 ] unsigned char 
  1881 ;;  prec            1   14[BANK0 ] char 
  1882 ;;  flag            1   11[BANK0 ] unsigned char 
  1883 ;;  ap              1   10[BANK0 ] PTR void [1]
  1884 ;;		 -> ?_sprintf(2), 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2    0[BANK0 ] int 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       7       0       0       0
  1895 ;;      Locals:         0       9       0       0       0
  1896 ;;      Temps:          0       3       0       0       0
  1897 ;;      Totals:         0      19       0       0       0
  1898 ;;Total ram usage:       19 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 1
  1901 ;; This function calls:
  1902 ;;		___lwdiv
  1903 ;;		___lwmod
  1904 ;;		___wmul
  1905 ;;		_isdigit
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911     0CA9                     _sprintf:	
  1912                           ;psect for function _sprintf
  1913                           
  1914                           
  1915                           ;incstack = 0
  1916                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1917                           ;sprintf@sp stored from wreg
  1918     0CA9  1283               	bcf	3,5	;RP0=0, select bank0
  1919     0CAA  1303               	bcf	3,6	;RP1=0, select bank0
  1920     0CAB  00AF               	movwf	sprintf@sp
  1921     0CAC                     l2612:
  1922                           
  1923                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1924     0CAC  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1925     0CAD  00AA               	movwf	sprintf@ap
  1926                           
  1927                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1928     0CAE  2E18               	goto	l2696
  1929     0CAF                     l2614:
  1930                           
  1931                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1932     0CAF  3025               	movlw	37
  1933     0CB0  0632               	xorwf	sprintf@c,w
  1934     0CB1  1903               	btfsc	3,2
  1935     0CB2  2CB4               	goto	u2611
  1936     0CB3  2CB5               	goto	u2610
  1937     0CB4                     u2611:
  1938     0CB4  2CBF               	goto	l2620
  1939     0CB5                     u2610:
  1940     0CB5                     l2616:
  1941                           
  1942                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1943     0CB5  082F               	movf	sprintf@sp,w
  1944     0CB6  0084               	movwf	4
  1945     0CB7  0832               	movf	sprintf@c,w
  1946     0CB8  1383               	bcf	3,7	;select IRP bank0
  1947     0CB9  0080               	movwf	0
  1948     0CBA                     l2618:
  1949     0CBA  3001               	movlw	1
  1950     0CBB  00A7               	movwf	??_sprintf
  1951     0CBC  0827               	movf	??_sprintf,w
  1952     0CBD  07AF               	addwf	sprintf@sp,f
  1953                           
  1954                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1955     0CBE  2E18               	goto	l2696
  1956     0CBF                     l2620:
  1957                           
  1958                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1959     0CBF  01B0               	clrf	sprintf@width
  1960     0CC0  01B1               	clrf	sprintf@width+1
  1961                           
  1962                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1963     0CC1  01AB               	clrf	sprintf@flag
  1964     0CC2  2CC8               	goto	l2626
  1965     0CC3                     l431:	
  1966                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1967                           
  1968                           
  1969                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1970     0CC3  152B               	bsf	sprintf@flag,2
  1971     0CC4                     l2622:
  1972                           
  1973                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1974     0CC4  3001               	movlw	1
  1975     0CC5  00A7               	movwf	??_sprintf
  1976     0CC6  0827               	movf	??_sprintf,w
  1977     0CC7  07A0               	addwf	sprintf@f,f
  1978     0CC8                     l2626:	
  1979                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1980                           
  1981     0CC8  0820               	movf	sprintf@f,w
  1982     0CC9  0084               	movwf	4
  1983     0CCA  120A  158A  200A  120A  158A  	fcall	stringdir
  1984     0CCF  00A7               	movwf	??_sprintf
  1985     0CD0  01A8               	clrf	??_sprintf+1
  1986                           
  1987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1988                           ; Switch size 1, requested type "simple"
  1989                           ; Number of cases is 1, Range of values is 0 to 0
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte            4     3 (average)
  1993                           ; direct_byte           11     8 (fixed)
  1994                           ; jumptable            260     6 (fixed)
  1995                           ;	Chosen strategy is simple_byte
  1996     0CD1  0828               	movf	??_sprintf+1,w
  1997     0CD2  3A00               	xorlw	0	; case 0
  1998     0CD3  1903               	skipnz
  1999     0CD4  2CD6               	goto	l3346
  2000     0CD5  2CDB               	goto	l2628
  2001     0CD6                     l3346:
  2002                           
  2003                           ; Switch size 1, requested type "simple"
  2004                           ; Number of cases is 1, Range of values is 48 to 48
  2005                           ; switch strategies available:
  2006                           ; Name         Instructions Cycles
  2007                           ; simple_byte            4     3 (average)
  2008                           ; direct_byte           14    11 (fixed)
  2009                           ; jumptable            263     9 (fixed)
  2010                           ;	Chosen strategy is simple_byte
  2011     0CD6  0827               	movf	??_sprintf,w
  2012     0CD7  3A30               	xorlw	48	; case 48
  2013     0CD8  1903               	skipnz
  2014     0CD9  2CC3               	goto	l431
  2015     0CDA  2CDB               	goto	l2628
  2016     0CDB                     l2628:
  2017                           
  2018                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2019     0CDB  0820               	movf	sprintf@f,w
  2020     0CDC  0084               	movwf	4
  2021     0CDD  120A  158A  200A  120A  158A  	fcall	stringdir
  2022     0CE2  160A  118A  254C  120A  158A  	fcall	_isdigit
  2023     0CE7  1C03               	btfss	3,0
  2024     0CE8  2CEA               	goto	u2621
  2025     0CE9  2CEB               	goto	u2620
  2026     0CEA                     u2621:
  2027     0CEA  2D31               	goto	l2644
  2028     0CEB                     u2620:
  2029     0CEB                     l2630:
  2030                           
  2031                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2032     0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2033     0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2034     0CED  01B0               	clrf	sprintf@width
  2035     0CEE  01B1               	clrf	sprintf@width+1
  2036     0CEF                     l2632:
  2037                           
  2038                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2039     0CEF  300A               	movlw	10
  2040     0CF0  00F0               	movwf	___wmul@multiplier
  2041     0CF1  3000               	movlw	0
  2042     0CF2  00F1               	movwf	___wmul@multiplier+1
  2043     0CF3  1283               	bcf	3,5	;RP0=0, select bank0
  2044     0CF4  1303               	bcf	3,6	;RP1=0, select bank0
  2045     0CF5  0831               	movf	sprintf@width+1,w
  2046     0CF6  00F3               	movwf	___wmul@multiplicand+1
  2047     0CF7  0830               	movf	sprintf@width,w
  2048     0CF8  00F2               	movwf	___wmul@multiplicand
  2049     0CF9  160A  118A  26FE  120A  158A  	fcall	___wmul
  2050     0CFE  0871               	movf	?___wmul+1,w
  2051     0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  2052     0D00  1303               	bcf	3,6	;RP1=0, select bank0
  2053     0D01  00B1               	movwf	sprintf@width+1
  2054     0D02  0870               	movf	?___wmul,w
  2055     0D03  00B0               	movwf	sprintf@width
  2056     0D04                     l2634:
  2057                           
  2058                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2059     0D04  0820               	movf	sprintf@f,w
  2060     0D05  0084               	movwf	4
  2061     0D06  120A  158A  200A  120A  158A  	fcall	stringdir
  2062     0D0B  3ED0               	addlw	208
  2063     0D0C  00A7               	movwf	??_sprintf
  2064     0D0D  30FF               	movlw	255
  2065     0D0E  1803               	skipnc
  2066     0D0F  3000               	movlw	0
  2067     0D10  00A8               	movwf	??_sprintf+1
  2068     0D11  0827               	movf	??_sprintf,w
  2069     0D12  07B0               	addwf	sprintf@width,f
  2070     0D13  1803               	skipnc
  2071     0D14  0AB1               	incf	sprintf@width+1,f
  2072     0D15  0828               	movf	??_sprintf+1,w
  2073     0D16  07B1               	addwf	sprintf@width+1,f
  2074     0D17                     l2636:
  2075     0D17  3001               	movlw	1
  2076     0D18  00A7               	movwf	??_sprintf
  2077     0D19  0827               	movf	??_sprintf,w
  2078     0D1A  07A0               	addwf	sprintf@f,f
  2079     0D1B                     l2638:
  2080                           
  2081                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2082     0D1B  0820               	movf	sprintf@f,w
  2083     0D1C  0084               	movwf	4
  2084     0D1D  120A  158A  200A  120A  158A  	fcall	stringdir
  2085     0D22  160A  118A  254C  120A  158A  	fcall	_isdigit
  2086     0D27  1803               	btfsc	3,0
  2087     0D28  2D2A               	goto	u2631
  2088     0D29  2D2B               	goto	u2630
  2089     0D2A                     u2631:
  2090     0D2A  2CEF               	goto	l2632
  2091     0D2B                     u2630:
  2092     0D2B  2D31               	goto	l2644
  2093     0D2C                     l2640:
  2094                           
  2095                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2096     0D2C  30C0               	movlw	192
  2097     0D2D  00A7               	movwf	??_sprintf
  2098     0D2E  0827               	movf	??_sprintf,w
  2099     0D2F  04AB               	iorwf	sprintf@flag,f
  2100                           
  2101                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2102     0D30  2D4D               	goto	l2646
  2103     0D31                     l2644:
  2104     0D31  3001               	movlw	1
  2105     0D32  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0D33  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0D34  07A0               	addwf	sprintf@f,f
  2108     0D35  30FF               	movlw	-1
  2109     0D36  0720               	addwf	sprintf@f,w
  2110     0D37  0084               	movwf	4
  2111     0D38  120A  158A  200A  120A  158A  	fcall	stringdir
  2112     0D3D  00B2               	movwf	sprintf@c
  2113     0D3E  00A7               	movwf	??_sprintf
  2114     0D3F  01A8               	clrf	??_sprintf+1
  2115                           
  2116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2117                           ; Switch size 1, requested type "simple"
  2118                           ; Number of cases is 1, Range of values is 0 to 0
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte            4     3 (average)
  2122                           ; direct_byte           11     8 (fixed)
  2123                           ; jumptable            260     6 (fixed)
  2124                           ;	Chosen strategy is simple_byte
  2125     0D40  0828               	movf	??_sprintf+1,w
  2126     0D41  3A00               	xorlw	0	; case 0
  2127     0D42  1903               	skipnz
  2128     0D43  2D45               	goto	l3348
  2129     0D44  2E18               	goto	l2696
  2130     0D45                     l3348:
  2131                           
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 2, Range of values is 0 to 117
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            7     4 (average)
  2137                           ; jumptable            260     6 (fixed)
  2138                           ;	Chosen strategy is simple_byte
  2139     0D45  0827               	movf	??_sprintf,w
  2140     0D46  3A00               	xorlw	0	; case 0
  2141     0D47  1903               	skipnz
  2142     0D48  2E28               	goto	l2698
  2143     0D49  3A75               	xorlw	117	; case 117
  2144     0D4A  1903               	skipnz
  2145     0D4B  2D2C               	goto	l2640
  2146     0D4C  2E18               	goto	l2696
  2147     0D4D                     l2646:
  2148                           
  2149                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2150     0D4D  082A               	movf	sprintf@ap,w
  2151     0D4E  0084               	movwf	4
  2152     0D4F  1383               	bcf	3,7	;select IRP bank0
  2153     0D50  0800               	movf	0,w
  2154     0D51  00AC               	movwf	sprintf@val
  2155     0D52  0A84               	incf	4,f
  2156     0D53  0800               	movf	0,w
  2157     0D54  00AD               	movwf	sprintf@val+1
  2158     0D55                     l2648:
  2159     0D55  3002               	movlw	2
  2160     0D56  00A7               	movwf	??_sprintf
  2161     0D57  0827               	movf	??_sprintf,w
  2162     0D58  07AA               	addwf	sprintf@ap,f
  2163     0D59                     l2650:
  2164                           
  2165                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2166     0D59  01B2               	clrf	sprintf@c
  2167     0D5A  0AB2               	incf	sprintf@c,f
  2168     0D5B                     l2656:
  2169                           
  2170                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2171     0D5B  0832               	movf	sprintf@c,w
  2172     0D5C  00A7               	movwf	??_sprintf
  2173     0D5D  0727               	addwf	??_sprintf,w
  2174     0D5E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2175     0D5F  0084               	movwf	4
  2176     0D60  120A  158A  200A  120A  158A  	fcall	stringdir
  2177     0D65  00A8               	movwf	??_sprintf+1
  2178     0D66  120A  158A  200A  120A  158A  	fcall	stringdir
  2179     0D6B  00A9               	movwf	??_sprintf+2
  2180     0D6C  0829               	movf	??_sprintf+2,w
  2181     0D6D  022D               	subwf	sprintf@val+1,w
  2182     0D6E  1D03               	skipz
  2183     0D6F  2D72               	goto	u2645
  2184     0D70  0828               	movf	??_sprintf+1,w
  2185     0D71  022C               	subwf	sprintf@val,w
  2186     0D72                     u2645:
  2187     0D72  1803               	skipnc
  2188     0D73  2D75               	goto	u2641
  2189     0D74  2D76               	goto	u2640
  2190     0D75                     u2641:
  2191     0D75  2D77               	goto	l2660
  2192     0D76                     u2640:
  2193     0D76  2D81               	goto	l2662
  2194     0D77                     l2660:
  2195     0D77  3001               	movlw	1
  2196     0D78  00A7               	movwf	??_sprintf
  2197     0D79  0827               	movf	??_sprintf,w
  2198     0D7A  07B2               	addwf	sprintf@c,f
  2199     0D7B  3005               	movlw	5
  2200     0D7C  0632               	xorwf	sprintf@c,w
  2201     0D7D  1D03               	btfss	3,2
  2202     0D7E  2D80               	goto	u2651
  2203     0D7F  2D81               	goto	u2650
  2204     0D80                     u2651:
  2205     0D80  2D5B               	goto	l2656
  2206     0D81                     u2650:
  2207     0D81                     l2662:
  2208                           
  2209                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2210     0D81  0831               	movf	sprintf@width+1,w
  2211     0D82  3A80               	xorlw	128
  2212     0D83  3C80               	sublw	128
  2213     0D84  1D03               	skipz
  2214     0D85  2D88               	goto	u2665
  2215     0D86  0830               	movf	sprintf@width,w
  2216     0D87  0232               	subwf	sprintf@c,w
  2217     0D88                     u2665:
  2218     0D88  1803               	skipnc
  2219     0D89  2D8B               	goto	u2661
  2220     0D8A  2D8C               	goto	u2660
  2221     0D8B                     u2661:
  2222     0D8B  2D98               	goto	l2666
  2223     0D8C                     u2660:
  2224     0D8C                     l2664:
  2225                           
  2226                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2227     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2228     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2229     0D8E  0832               	movf	sprintf@c,w
  2230     0D8F  00A7               	movwf	??_sprintf
  2231     0D90  01A8               	clrf	??_sprintf+1
  2232     0D91  0827               	movf	??_sprintf,w
  2233     0D92  02B0               	subwf	sprintf@width,f
  2234     0D93  0828               	movf	??_sprintf+1,w
  2235     0D94  1C03               	skipc
  2236     0D95  03B1               	decf	sprintf@width+1,f
  2237     0D96  02B1               	subwf	sprintf@width+1,f
  2238     0D97  2D9C               	goto	l2668
  2239     0D98                     l2666:
  2240                           
  2241                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2242     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  2243     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  2244     0D9A  01B0               	clrf	sprintf@width
  2245     0D9B  01B1               	clrf	sprintf@width+1
  2246     0D9C                     l2668:
  2247                           
  2248                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  2249     0D9C  1D2B               	btfss	sprintf@flag,2
  2250     0D9D  2D9F               	goto	u2671
  2251     0D9E  2DA0               	goto	u2670
  2252     0D9F                     u2671:
  2253     0D9F  2DBC               	goto	l2678
  2254     0DA0                     u2670:
  2255     0DA0                     l2670:
  2256                           
  2257                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  2258     0DA0  0830               	movf	sprintf@width,w
  2259     0DA1  0431               	iorwf	sprintf@width+1,w
  2260     0DA2  1903               	btfsc	3,2
  2261     0DA3  2DA5               	goto	u2681
  2262     0DA4  2DA6               	goto	u2680
  2263     0DA5                     u2681:
  2264     0DA5  2DD7               	goto	l2686
  2265     0DA6                     u2680:
  2266     0DA6                     l2672:
  2267                           
  2268                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  2269     0DA6  082F               	movf	sprintf@sp,w
  2270     0DA7  0084               	movwf	4
  2271     0DA8  3030               	movlw	48
  2272     0DA9  1383               	bcf	3,7	;select IRP bank0
  2273     0DAA  0080               	movwf	0
  2274     0DAB                     l2674:
  2275     0DAB  3001               	movlw	1
  2276     0DAC  00A7               	movwf	??_sprintf
  2277     0DAD  0827               	movf	??_sprintf,w
  2278     0DAE  07AF               	addwf	sprintf@sp,f
  2279     0DAF                     l2676:
  2280     0DAF  30FF               	movlw	255
  2281     0DB0  07B0               	addwf	sprintf@width,f
  2282     0DB1  1803               	skipnc
  2283     0DB2  0AB1               	incf	sprintf@width+1,f
  2284     0DB3  30FF               	movlw	255
  2285     0DB4  07B1               	addwf	sprintf@width+1,f
  2286     0DB5  0830               	movf	sprintf@width,w
  2287     0DB6  0431               	iorwf	sprintf@width+1,w
  2288     0DB7  1D03               	btfss	3,2
  2289     0DB8  2DBA               	goto	u2691
  2290     0DB9  2DBB               	goto	u2690
  2291     0DBA                     u2691:
  2292     0DBA  2DA6               	goto	l2672
  2293     0DBB                     u2690:
  2294     0DBB  2DD7               	goto	l2686
  2295     0DBC                     l2678:
  2296                           
  2297                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2298     0DBC  0830               	movf	sprintf@width,w
  2299     0DBD  0431               	iorwf	sprintf@width+1,w
  2300     0DBE  1903               	btfsc	3,2
  2301     0DBF  2DC1               	goto	u2701
  2302     0DC0  2DC2               	goto	u2700
  2303     0DC1                     u2701:
  2304     0DC1  2DD7               	goto	l2686
  2305     0DC2                     u2700:
  2306     0DC2                     l2680:
  2307                           
  2308                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2309     0DC2  082F               	movf	sprintf@sp,w
  2310     0DC3  0084               	movwf	4
  2311     0DC4  3020               	movlw	32
  2312     0DC5  1383               	bcf	3,7	;select IRP bank0
  2313     0DC6  0080               	movwf	0
  2314     0DC7                     l2682:
  2315     0DC7  3001               	movlw	1
  2316     0DC8  00A7               	movwf	??_sprintf
  2317     0DC9  0827               	movf	??_sprintf,w
  2318     0DCA  07AF               	addwf	sprintf@sp,f
  2319     0DCB                     l2684:
  2320     0DCB  30FF               	movlw	255
  2321     0DCC  07B0               	addwf	sprintf@width,f
  2322     0DCD  1803               	skipnc
  2323     0DCE  0AB1               	incf	sprintf@width+1,f
  2324     0DCF  30FF               	movlw	255
  2325     0DD0  07B1               	addwf	sprintf@width+1,f
  2326     0DD1  0830               	movf	sprintf@width,w
  2327     0DD2  0431               	iorwf	sprintf@width+1,w
  2328     0DD3  1D03               	btfss	3,2
  2329     0DD4  2DD6               	goto	u2711
  2330     0DD5  2DD7               	goto	u2710
  2331     0DD6                     u2711:
  2332     0DD6  2DC2               	goto	l2680
  2333     0DD7                     u2710:
  2334     0DD7                     l2686:
  2335                           
  2336                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2337     0DD7  0832               	movf	sprintf@c,w
  2338     0DD8  00AE               	movwf	sprintf@prec
  2339                           
  2340                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2341     0DD9  2E0F               	goto	l2694
  2342     0DDA                     l2688:
  2343                           
  2344                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2345     0DDA  300A               	movlw	10
  2346     0DDB  00F8               	movwf	___lwmod@divisor
  2347     0DDC  3000               	movlw	0
  2348     0DDD  00F9               	movwf	___lwmod@divisor+1
  2349     0DDE  082E               	movf	sprintf@prec,w
  2350     0DDF  00A7               	movwf	??_sprintf
  2351     0DE0  0727               	addwf	??_sprintf,w
  2352     0DE1  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2353     0DE2  0084               	movwf	4
  2354     0DE3  120A  158A  200A  120A  158A  	fcall	stringdir
  2355     0DE8  00F0               	movwf	___lwdiv@divisor
  2356     0DE9  120A  158A  200A  120A  158A  	fcall	stringdir
  2357     0DEE  00F1               	movwf	___lwdiv@divisor+1
  2358     0DEF  082D               	movf	sprintf@val+1,w
  2359     0DF0  00F3               	movwf	___lwdiv@dividend+1
  2360     0DF1  082C               	movf	sprintf@val,w
  2361     0DF2  00F2               	movwf	___lwdiv@dividend
  2362     0DF3  120A  158A  2132  120A  158A  	fcall	___lwdiv
  2363     0DF8  0871               	movf	?___lwdiv+1,w
  2364     0DF9  00FB               	movwf	___lwmod@dividend+1
  2365     0DFA  0870               	movf	?___lwdiv,w
  2366     0DFB  00FA               	movwf	___lwmod@dividend
  2367     0DFC  120A  158A  20B6  120A  158A  	fcall	___lwmod
  2368     0E01  0878               	movf	?___lwmod,w
  2369     0E02  3E30               	addlw	48
  2370     0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2372     0E05  00B2               	movwf	sprintf@c
  2373     0E06                     l2690:
  2374                           
  2375                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2376     0E06  082F               	movf	sprintf@sp,w
  2377     0E07  0084               	movwf	4
  2378     0E08  0832               	movf	sprintf@c,w
  2379     0E09  1383               	bcf	3,7	;select IRP bank0
  2380     0E0A  0080               	movwf	0
  2381     0E0B                     l2692:
  2382     0E0B  3001               	movlw	1
  2383     0E0C  00A7               	movwf	??_sprintf
  2384     0E0D  0827               	movf	??_sprintf,w
  2385     0E0E  07AF               	addwf	sprintf@sp,f
  2386     0E0F                     l2694:
  2387                           
  2388                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2389     0E0F  30FF               	movlw	255
  2390     0E10  00A7               	movwf	??_sprintf
  2391     0E11  0827               	movf	??_sprintf,w
  2392     0E12  07AE               	addwf	sprintf@prec,f
  2393     0E13  0A2E               	incf	sprintf@prec,w
  2394     0E14  1D03               	btfss	3,2
  2395     0E15  2E17               	goto	u2721
  2396     0E16  2E18               	goto	u2720
  2397     0E17                     u2721:
  2398     0E17  2DDA               	goto	l2688
  2399     0E18                     u2720:
  2400     0E18                     l2696:
  2401                           
  2402                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2403     0E18  3001               	movlw	1
  2404     0E19  07A0               	addwf	sprintf@f,f
  2405     0E1A  30FF               	movlw	-1
  2406     0E1B  0720               	addwf	sprintf@f,w
  2407     0E1C  0084               	movwf	4
  2408     0E1D  120A  158A  200A  120A  158A  	fcall	stringdir
  2409     0E22  00B2               	movwf	sprintf@c
  2410     0E23  0832               	movf	sprintf@c,w
  2411     0E24  1D03               	btfss	3,2
  2412     0E25  2E27               	goto	u2731
  2413     0E26  2E28               	goto	u2730
  2414     0E27                     u2731:
  2415     0E27  2CAF               	goto	l2614
  2416     0E28                     u2730:
  2417     0E28                     l2698:
  2418                           
  2419                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2420     0E28  082F               	movf	sprintf@sp,w
  2421     0E29  0084               	movwf	4
  2422     0E2A  1383               	bcf	3,7	;select IRP bank0
  2423     0E2B  0180               	clrf	0
  2424     0E2C                     l461:
  2425     0E2C  0008               	return
  2426     0E2D                     __end_of_sprintf:
  2427                           
  2428                           	psect	text2
  2429     154C                     __ptext2:	
  2430 ;; *************** function _isdigit *****************
  2431 ;; Defined at:
  2432 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  c               1    wreg     unsigned char 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  c               1    1[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;		None               void
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         2       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0
  2449 ;;      Totals:         2       0       0       0       0
  2450 ;;Total ram usage:        2 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; This function calls:
  2453 ;;		Nothing
  2454 ;; This function is called by:
  2455 ;;		_sprintf
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     154C                     _isdigit:	
  2460                           ;psect for function _isdigit
  2461                           
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2465                           ;isdigit@c stored from wreg
  2466     154C  00F1               	movwf	isdigit@c
  2467     154D                     l2292:
  2468     154D  01F0               	clrf	_isdigit$944
  2469     154E                     l2294:
  2470     154E  303A               	movlw	58
  2471     154F  0271               	subwf	isdigit@c,w
  2472     1550  1803               	skipnc
  2473     1551  2D53               	goto	u2091
  2474     1552  2D54               	goto	u2090
  2475     1553                     u2091:
  2476     1553  2D5C               	goto	l2300
  2477     1554                     u2090:
  2478     1554                     l2296:
  2479     1554  3030               	movlw	48
  2480     1555  0271               	subwf	isdigit@c,w
  2481     1556  1C03               	skipc
  2482     1557  2D59               	goto	u2101
  2483     1558  2D5A               	goto	u2100
  2484     1559                     u2101:
  2485     1559  2D5C               	goto	l2300
  2486     155A                     u2100:
  2487     155A                     l2298:
  2488     155A  01F0               	clrf	_isdigit$944
  2489     155B  0AF0               	incf	_isdigit$944,f
  2490     155C                     l2300:
  2491     155C  0C70               	rrf	_isdigit$944,w
  2492     155D                     l918:
  2493     155D  0008               	return
  2494     155E                     __end_of_isdigit:
  2495                           
  2496                           	psect	text3
  2497     16FE                     __ptext3:	
  2498 ;; *************** function ___wmul *****************
  2499 ;; Defined at:
  2500 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  multiplier      2    0[COMMON] unsigned int 
  2503 ;;  multiplicand    2    2[COMMON] unsigned int 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  product         2    4[COMMON] unsigned int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2    0[COMMON] unsigned int 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         4       0       0       0       0
  2516 ;;      Locals:         2       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         6       0       0       0       0
  2519 ;;Total ram usage:        6 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_sprintf
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528     16FE                     ___wmul:	
  2529                           ;psect for function ___wmul
  2530                           
  2531     16FE                     l2304:	
  2532                           ;incstack = 0
  2533                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2534                           
  2535     16FE  01F4               	clrf	___wmul@product
  2536     16FF  01F5               	clrf	___wmul@product+1
  2537     1700                     l2306:
  2538     1700  1C70               	btfss	___wmul@multiplier,0
  2539     1701  2F03               	goto	u2111
  2540     1702  2F04               	goto	u2110
  2541     1703                     u2111:
  2542     1703  2F0A               	goto	l465
  2543     1704                     u2110:
  2544     1704                     l2308:
  2545     1704  0872               	movf	___wmul@multiplicand,w
  2546     1705  07F4               	addwf	___wmul@product,f
  2547     1706  1803               	skipnc
  2548     1707  0AF5               	incf	___wmul@product+1,f
  2549     1708  0873               	movf	___wmul@multiplicand+1,w
  2550     1709  07F5               	addwf	___wmul@product+1,f
  2551     170A                     l465:
  2552     170A  3001               	movlw	1
  2553     170B                     u2125:
  2554     170B  1003               	clrc
  2555     170C  0DF2               	rlf	___wmul@multiplicand,f
  2556     170D  0DF3               	rlf	___wmul@multiplicand+1,f
  2557     170E  3EFF               	addlw	-1
  2558     170F  1D03               	skipz
  2559     1710  2F0B               	goto	u2125
  2560     1711                     l2310:
  2561     1711  3001               	movlw	1
  2562     1712                     u2135:
  2563     1712  1003               	clrc
  2564     1713  0CF1               	rrf	___wmul@multiplier+1,f
  2565     1714  0CF0               	rrf	___wmul@multiplier,f
  2566     1715  3EFF               	addlw	-1
  2567     1716  1D03               	skipz
  2568     1717  2F12               	goto	u2135
  2569     1718                     l2312:
  2570     1718  0870               	movf	___wmul@multiplier,w
  2571     1719  0471               	iorwf	___wmul@multiplier+1,w
  2572     171A  1D03               	btfss	3,2
  2573     171B  2F1D               	goto	u2141
  2574     171C  2F1E               	goto	u2140
  2575     171D                     u2141:
  2576     171D  2F00               	goto	l2306
  2577     171E                     u2140:
  2578     171E                     l2314:
  2579     171E  0875               	movf	___wmul@product+1,w
  2580     171F  00F1               	movwf	?___wmul+1
  2581     1720  0874               	movf	___wmul@product,w
  2582     1721  00F0               	movwf	?___wmul
  2583     1722                     l467:
  2584     1722  0008               	return
  2585     1723                     __end_of___wmul:
  2586                           
  2587                           	psect	text4
  2588     08B6                     __ptext4:	
  2589 ;; *************** function ___lwmod *****************
  2590 ;; Defined at:
  2591 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  divisor         2    8[COMMON] unsigned int 
  2594 ;;  dividend        2   10[COMMON] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  counter         1   13[COMMON] unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  2    8[COMMON] unsigned int 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         4       0       0       0       0
  2607 ;;      Locals:         1       0       0       0       0
  2608 ;;      Temps:          1       0       0       0       0
  2609 ;;      Totals:         6       0       0       0       0
  2610 ;;Total ram usage:        6 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_sprintf
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619     08B6                     ___lwmod:	
  2620                           ;psect for function ___lwmod
  2621                           
  2622     08B6                     l2358:	
  2623                           ;incstack = 0
  2624                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2625                           
  2626     08B6  0878               	movf	___lwmod@divisor,w
  2627     08B7  0479               	iorwf	___lwmod@divisor+1,w
  2628     08B8  1903               	btfsc	3,2
  2629     08B9  28BB               	goto	u2271
  2630     08BA  28BC               	goto	u2270
  2631     08BB                     u2271:
  2632     08BB  28EB               	goto	l2376
  2633     08BC                     u2270:
  2634     08BC                     l2360:
  2635     08BC  01FD               	clrf	___lwmod@counter
  2636     08BD  0AFD               	incf	___lwmod@counter,f
  2637     08BE  28CA               	goto	l2366
  2638     08BF                     l2362:
  2639     08BF  3001               	movlw	1
  2640     08C0                     u2285:
  2641     08C0  1003               	clrc
  2642     08C1  0DF8               	rlf	___lwmod@divisor,f
  2643     08C2  0DF9               	rlf	___lwmod@divisor+1,f
  2644     08C3  3EFF               	addlw	-1
  2645     08C4  1D03               	skipz
  2646     08C5  28C0               	goto	u2285
  2647     08C6                     l2364:
  2648     08C6  3001               	movlw	1
  2649     08C7  00FC               	movwf	??___lwmod
  2650     08C8  087C               	movf	??___lwmod,w
  2651     08C9  07FD               	addwf	___lwmod@counter,f
  2652     08CA                     l2366:
  2653     08CA  1FF9               	btfss	___lwmod@divisor+1,7
  2654     08CB  28CD               	goto	u2291
  2655     08CC  28CE               	goto	u2290
  2656     08CD                     u2291:
  2657     08CD  28BF               	goto	l2362
  2658     08CE                     u2290:
  2659     08CE                     l2368:
  2660     08CE  0879               	movf	___lwmod@divisor+1,w
  2661     08CF  027B               	subwf	___lwmod@dividend+1,w
  2662     08D0  1D03               	skipz
  2663     08D1  28D4               	goto	u2305
  2664     08D2  0878               	movf	___lwmod@divisor,w
  2665     08D3  027A               	subwf	___lwmod@dividend,w
  2666     08D4                     u2305:
  2667     08D4  1C03               	skipc
  2668     08D5  28D7               	goto	u2301
  2669     08D6  28D8               	goto	u2300
  2670     08D7                     u2301:
  2671     08D7  28DE               	goto	l2372
  2672     08D8                     u2300:
  2673     08D8                     l2370:
  2674     08D8  0878               	movf	___lwmod@divisor,w
  2675     08D9  02FA               	subwf	___lwmod@dividend,f
  2676     08DA  0879               	movf	___lwmod@divisor+1,w
  2677     08DB  1C03               	skipc
  2678     08DC  03FB               	decf	___lwmod@dividend+1,f
  2679     08DD  02FB               	subwf	___lwmod@dividend+1,f
  2680     08DE                     l2372:
  2681     08DE  3001               	movlw	1
  2682     08DF                     u2315:
  2683     08DF  1003               	clrc
  2684     08E0  0CF9               	rrf	___lwmod@divisor+1,f
  2685     08E1  0CF8               	rrf	___lwmod@divisor,f
  2686     08E2  3EFF               	addlw	-1
  2687     08E3  1D03               	skipz
  2688     08E4  28DF               	goto	u2315
  2689     08E5                     l2374:
  2690     08E5  3001               	movlw	1
  2691     08E6  02FD               	subwf	___lwmod@counter,f
  2692     08E7  1D03               	btfss	3,2
  2693     08E8  28EA               	goto	u2321
  2694     08E9  28EB               	goto	u2320
  2695     08EA                     u2321:
  2696     08EA  28CE               	goto	l2368
  2697     08EB                     u2320:
  2698     08EB                     l2376:
  2699     08EB  087B               	movf	___lwmod@dividend+1,w
  2700     08EC  00F9               	movwf	?___lwmod+1
  2701     08ED  087A               	movf	___lwmod@dividend,w
  2702     08EE  00F8               	movwf	?___lwmod
  2703     08EF                     l747:
  2704     08EF  0008               	return
  2705     08F0                     __end_of___lwmod:
  2706                           
  2707                           	psect	text5
  2708     0932                     __ptext5:	
  2709 ;; *************** function ___lwdiv *****************
  2710 ;; Defined at:
  2711 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  divisor         2    0[COMMON] unsigned int 
  2714 ;;  dividend        2    2[COMMON] unsigned int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  quotient        2    5[COMMON] unsigned int 
  2717 ;;  counter         1    7[COMMON] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2    0[COMMON] unsigned int 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         4       0       0       0       0
  2728 ;;      Locals:         3       0       0       0       0
  2729 ;;      Temps:          1       0       0       0       0
  2730 ;;      Totals:         8       0       0       0       0
  2731 ;;Total ram usage:        8 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_sprintf
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740     0932                     ___lwdiv:	
  2741                           ;psect for function ___lwdiv
  2742                           
  2743     0932                     l2332:	
  2744                           ;incstack = 0
  2745                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2746                           
  2747     0932  01F5               	clrf	___lwdiv@quotient
  2748     0933  01F6               	clrf	___lwdiv@quotient+1
  2749     0934                     l2334:
  2750     0934  0870               	movf	___lwdiv@divisor,w
  2751     0935  0471               	iorwf	___lwdiv@divisor+1,w
  2752     0936  1903               	btfsc	3,2
  2753     0937  2939               	goto	u2201
  2754     0938  293A               	goto	u2200
  2755     0939                     u2201:
  2756     0939  2971               	goto	l2354
  2757     093A                     u2200:
  2758     093A                     l2336:
  2759     093A  01F7               	clrf	___lwdiv@counter
  2760     093B  0AF7               	incf	___lwdiv@counter,f
  2761     093C  2948               	goto	l2342
  2762     093D                     l2338:
  2763     093D  3001               	movlw	1
  2764     093E                     u2215:
  2765     093E  1003               	clrc
  2766     093F  0DF0               	rlf	___lwdiv@divisor,f
  2767     0940  0DF1               	rlf	___lwdiv@divisor+1,f
  2768     0941  3EFF               	addlw	-1
  2769     0942  1D03               	skipz
  2770     0943  293E               	goto	u2215
  2771     0944                     l2340:
  2772     0944  3001               	movlw	1
  2773     0945  00F4               	movwf	??___lwdiv
  2774     0946  0874               	movf	??___lwdiv,w
  2775     0947  07F7               	addwf	___lwdiv@counter,f
  2776     0948                     l2342:
  2777     0948  1FF1               	btfss	___lwdiv@divisor+1,7
  2778     0949  294B               	goto	u2221
  2779     094A  294C               	goto	u2220
  2780     094B                     u2221:
  2781     094B  293D               	goto	l2338
  2782     094C                     u2220:
  2783     094C                     l2344:
  2784     094C  3001               	movlw	1
  2785     094D                     u2235:
  2786     094D  1003               	clrc
  2787     094E  0DF5               	rlf	___lwdiv@quotient,f
  2788     094F  0DF6               	rlf	___lwdiv@quotient+1,f
  2789     0950  3EFF               	addlw	-1
  2790     0951  1D03               	skipz
  2791     0952  294D               	goto	u2235
  2792     0953  0871               	movf	___lwdiv@divisor+1,w
  2793     0954  0273               	subwf	___lwdiv@dividend+1,w
  2794     0955  1D03               	skipz
  2795     0956  2959               	goto	u2245
  2796     0957  0870               	movf	___lwdiv@divisor,w
  2797     0958  0272               	subwf	___lwdiv@dividend,w
  2798     0959                     u2245:
  2799     0959  1C03               	skipc
  2800     095A  295C               	goto	u2241
  2801     095B  295D               	goto	u2240
  2802     095C                     u2241:
  2803     095C  2964               	goto	l2350
  2804     095D                     u2240:
  2805     095D                     l2346:
  2806     095D  0870               	movf	___lwdiv@divisor,w
  2807     095E  02F2               	subwf	___lwdiv@dividend,f
  2808     095F  0871               	movf	___lwdiv@divisor+1,w
  2809     0960  1C03               	skipc
  2810     0961  03F3               	decf	___lwdiv@dividend+1,f
  2811     0962  02F3               	subwf	___lwdiv@dividend+1,f
  2812     0963                     l2348:
  2813     0963  1475               	bsf	___lwdiv@quotient,0
  2814     0964                     l2350:
  2815     0964  3001               	movlw	1
  2816     0965                     u2255:
  2817     0965  1003               	clrc
  2818     0966  0CF1               	rrf	___lwdiv@divisor+1,f
  2819     0967  0CF0               	rrf	___lwdiv@divisor,f
  2820     0968  3EFF               	addlw	-1
  2821     0969  1D03               	skipz
  2822     096A  2965               	goto	u2255
  2823     096B                     l2352:
  2824     096B  3001               	movlw	1
  2825     096C  02F7               	subwf	___lwdiv@counter,f
  2826     096D  1D03               	btfss	3,2
  2827     096E  2970               	goto	u2261
  2828     096F  2971               	goto	u2260
  2829     0970                     u2261:
  2830     0970  294C               	goto	l2344
  2831     0971                     u2260:
  2832     0971                     l2354:
  2833     0971  0876               	movf	___lwdiv@quotient+1,w
  2834     0972  00F1               	movwf	?___lwdiv+1
  2835     0973  0875               	movf	___lwdiv@quotient,w
  2836     0974  00F0               	movwf	?___lwdiv
  2837     0975                     l737:
  2838     0975  0008               	return
  2839     0976                     __end_of___lwdiv:
  2840                           
  2841                           	psect	text6
  2842     15D0                     __ptext6:	
  2843 ;; *************** function _setup *****************
  2844 ;; Defined at:
  2845 ;;		line 122 in file "main_master.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 1
  2866 ;; This function calls:
  2867 ;;		_I2C_Init_Master
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873     15D0                     _setup:	
  2874                           ;psect for function _setup
  2875                           
  2876     15D0                     l2438:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2879                           
  2880                           
  2881                           ;main_master.c: 123:     ANSEL = 0;
  2882     15D0  1683               	bsf	3,5	;RP0=1, select bank3
  2883     15D1  1703               	bsf	3,6	;RP1=1, select bank3
  2884     15D2  0188               	clrf	8	;volatile
  2885                           
  2886                           ;main_master.c: 124:     ANSELH = 0;
  2887     15D3  0189               	clrf	9	;volatile
  2888                           
  2889                           ;main_master.c: 126:     TRISB = 0;
  2890     15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2891     15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2892     15D6  0186               	clrf	6	;volatile
  2893                           
  2894                           ;main_master.c: 127:     TRISD = 0;
  2895     15D7  0188               	clrf	8	;volatile
  2896                           
  2897                           ;main_master.c: 129:     PORTA = 0;
  2898     15D8  1283               	bcf	3,5	;RP0=0, select bank0
  2899     15D9  1303               	bcf	3,6	;RP1=0, select bank0
  2900     15DA  0185               	clrf	5	;volatile
  2901                           
  2902                           ;main_master.c: 130:     PORTB = 0;
  2903     15DB  0186               	clrf	6	;volatile
  2904                           
  2905                           ;main_master.c: 131:     PORTC = 0;
  2906     15DC  0187               	clrf	7	;volatile
  2907                           
  2908                           ;main_master.c: 132:     PORTD = 0;
  2909     15DD  0188               	clrf	8	;volatile
  2910     15DE                     l2440:
  2911                           
  2912                           ;main_master.c: 134:     OSCCONbits.IRCF2 = 1;
  2913     15DE  1683               	bsf	3,5	;RP0=1, select bank1
  2914     15DF  1303               	bcf	3,6	;RP1=0, select bank1
  2915     15E0  170F               	bsf	15,6	;volatile
  2916     15E1                     l2442:
  2917                           
  2918                           ;main_master.c: 135:     OSCCONbits.IRCF1 = 1;
  2919     15E1  168F               	bsf	15,5	;volatile
  2920     15E2                     l2444:
  2921                           
  2922                           ;main_master.c: 136:     OSCCONbits.IRCF0 = 1;
  2923     15E2  160F               	bsf	15,4	;volatile
  2924     15E3                     l2446:
  2925                           
  2926                           ;main_master.c: 138:     OSCCONbits.SCS = 1;
  2927     15E3  140F               	bsf	15,0	;volatile
  2928     15E4                     l2448:
  2929                           
  2930                           ;main_master.c: 139:     I2C_Init_Master(0x80);
  2931     15E4  3080               	movlw	128
  2932     15E5  160A  118A  25EB  160A  118A  	fcall	_I2C_Init_Master
  2933     15EA                     l151:
  2934     15EA  0008               	return
  2935     15EB                     __end_of_setup:
  2936                           
  2937                           	psect	text7
  2938     15EB                     __ptext7:	
  2939 ;; *************** function _I2C_Init_Master *****************
  2940 ;; Defined at:
  2941 ;;		line 12 in file "i2c.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  sp_i2c          1    wreg     unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  sp_i2c          1    0[COMMON] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         1       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         1       0       0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_setup
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968     15EB                     _I2C_Init_Master:	
  2969                           ;psect for function _I2C_Init_Master
  2970                           
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _I2C_Init_Master: [wreg+status,2+status,0]
  2974                           ;I2C_Init_Master@sp_i2c stored from wreg
  2975     15EB  00F0               	movwf	I2C_Init_Master@sp_i2c
  2976     15EC                     l2206:
  2977                           
  2978                           ;i2c.c: 12: void I2C_Init_Master(unsigned char sp_i2c);i2c.c: 13: {;i2c.c: 14:     TRISC
      +                          bits.TRISC3 = 1;
  2979     15EC  1683               	bsf	3,5	;RP0=1, select bank1
  2980     15ED  1303               	bcf	3,6	;RP1=0, select bank1
  2981     15EE  1587               	bsf	7,3	;volatile
  2982                           
  2983                           ;i2c.c: 15:     TRISCbits.TRISC4 = 1;
  2984     15EF  1607               	bsf	7,4	;volatile
  2985     15F0                     l2208:
  2986                           
  2987                           ;i2c.c: 16:     SSPSTAT = sp_i2c;
  2988     15F0  0870               	movf	I2C_Init_Master@sp_i2c,w
  2989     15F1  0094               	movwf	20	;volatile
  2990                           
  2991                           ;i2c.c: 17:  SSPCON = 0x28;
  2992     15F2  3028               	movlw	40
  2993     15F3  1283               	bcf	3,5	;RP0=0, select bank0
  2994     15F4  1303               	bcf	3,6	;RP1=0, select bank0
  2995     15F5  0094               	movwf	20	;volatile
  2996     15F6                     l2210:
  2997                           
  2998                           ;i2c.c: 18:     SSPCON2 = 0x00;
  2999     15F6  1683               	bsf	3,5	;RP0=1, select bank1
  3000     15F7  1303               	bcf	3,6	;RP1=0, select bank1
  3001     15F8  0191               	clrf	17	;volatile
  3002     15F9                     l2212:
  3003                           
  3004                           ;i2c.c: 19:     if(sp_i2c == 0x80){
  3005     15F9  3080               	movlw	128
  3006     15FA  0670               	xorwf	I2C_Init_Master@sp_i2c,w
  3007     15FB  1D03               	btfss	3,2
  3008     15FC  2DFE               	goto	u2041
  3009     15FD  2DFF               	goto	u2040
  3010     15FE                     u2041:
  3011     15FE  2E02               	goto	l2216
  3012     15FF                     u2040:
  3013     15FF                     l2214:
  3014                           
  3015                           ;i2c.c: 20:         SSPADD = 19;
  3016     15FF  3013               	movlw	19
  3017     1600  0093               	movwf	19	;volatile
  3018                           
  3019                           ;i2c.c: 21:     }
  3020     1601  2E09               	goto	l291
  3021     1602                     l2216:
  3022     1602  0870               	movf	I2C_Init_Master@sp_i2c,w
  3023     1603  1D03               	btfss	3,2
  3024     1604  2E06               	goto	u2051
  3025     1605  2E07               	goto	u2050
  3026     1606                     u2051:
  3027     1606  2E09               	goto	l291
  3028     1607                     u2050:
  3029     1607                     l2218:
  3030                           
  3031                           ;i2c.c: 23:         SSPADD = 29;
  3032     1607  301D               	movlw	29
  3033     1608  0093               	movwf	19	;volatile
  3034     1609                     l291:
  3035     1609  0008               	return
  3036     160A                     __end_of_I2C_Init_Master:
  3037                           
  3038                           	psect	text8
  3039     0A02                     __ptext8:	
  3040 ;; *************** function ___llmod *****************
  3041 ;; Defined at:
  3042 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  divisor         4    0[BANK0 ] unsigned long 
  3045 ;;  dividend        4    4[BANK0 ] unsigned long 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  counter         1    9[BANK0 ] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  4    0[BANK0 ] unsigned long 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       8       0       0       0
  3058 ;;      Locals:         0       1       0       0       0
  3059 ;;      Temps:          0       1       0       0       0
  3060 ;;      Totals:         0      10       0       0       0
  3061 ;;Total ram usage:       10 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     0A02                     ___llmod:	
  3071                           ;psect for function ___llmod
  3072                           
  3073     0A02                     l2852:	
  3074                           ;incstack = 0
  3075                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3076                           
  3077     0A02  1283               	bcf	3,5	;RP0=0, select bank0
  3078     0A03  1303               	bcf	3,6	;RP1=0, select bank0
  3079     0A04  0823               	movf	___llmod@divisor+3,w
  3080     0A05  0422               	iorwf	___llmod@divisor+2,w
  3081     0A06  0421               	iorwf	___llmod@divisor+1,w
  3082     0A07  0420               	iorwf	___llmod@divisor,w
  3083     0A08  1903               	skipnz
  3084     0A09  2A0B               	goto	u3101
  3085     0A0A  2A0C               	goto	u3100
  3086     0A0B                     u3101:
  3087     0A0B  2A4F               	goto	l2868
  3088     0A0C                     u3100:
  3089     0A0C                     l2854:
  3090     0A0C  01A9               	clrf	___llmod@counter
  3091     0A0D  0AA9               	incf	___llmod@counter,f
  3092     0A0E  2A1C               	goto	l2858
  3093     0A0F                     l2856:
  3094     0A0F  3001               	movlw	1
  3095     0A10  00A8               	movwf	??___llmod
  3096     0A11                     u3115:
  3097     0A11  1003               	clrc
  3098     0A12  0DA0               	rlf	___llmod@divisor,f
  3099     0A13  0DA1               	rlf	___llmod@divisor+1,f
  3100     0A14  0DA2               	rlf	___llmod@divisor+2,f
  3101     0A15  0DA3               	rlf	___llmod@divisor+3,f
  3102     0A16  0BA8               	decfsz	??___llmod,f
  3103     0A17  2A11               	goto	u3115
  3104     0A18  3001               	movlw	1
  3105     0A19  00A8               	movwf	??___llmod
  3106     0A1A  0828               	movf	??___llmod,w
  3107     0A1B  07A9               	addwf	___llmod@counter,f
  3108     0A1C                     l2858:
  3109     0A1C  1FA3               	btfss	___llmod@divisor+3,7
  3110     0A1D  2A1F               	goto	u3121
  3111     0A1E  2A20               	goto	u3120
  3112     0A1F                     u3121:
  3113     0A1F  2A0F               	goto	l2856
  3114     0A20                     u3120:
  3115     0A20                     l2860:
  3116     0A20  0823               	movf	___llmod@divisor+3,w
  3117     0A21  0227               	subwf	___llmod@dividend+3,w
  3118     0A22  1D03               	skipz
  3119     0A23  2A2E               	goto	u3135
  3120     0A24  0822               	movf	___llmod@divisor+2,w
  3121     0A25  0226               	subwf	___llmod@dividend+2,w
  3122     0A26  1D03               	skipz
  3123     0A27  2A2E               	goto	u3135
  3124     0A28  0821               	movf	___llmod@divisor+1,w
  3125     0A29  0225               	subwf	___llmod@dividend+1,w
  3126     0A2A  1D03               	skipz
  3127     0A2B  2A2E               	goto	u3135
  3128     0A2C  0820               	movf	___llmod@divisor,w
  3129     0A2D  0224               	subwf	___llmod@dividend,w
  3130     0A2E                     u3135:
  3131     0A2E  1C03               	skipc
  3132     0A2F  2A31               	goto	u3131
  3133     0A30  2A32               	goto	u3130
  3134     0A31                     u3131:
  3135     0A31  2A40               	goto	l2864
  3136     0A32                     u3130:
  3137     0A32                     l2862:
  3138     0A32  0820               	movf	___llmod@divisor,w
  3139     0A33  02A4               	subwf	___llmod@dividend,f
  3140     0A34  0821               	movf	___llmod@divisor+1,w
  3141     0A35  1C03               	skipc
  3142     0A36  0F21               	incfsz	___llmod@divisor+1,w
  3143     0A37  02A5               	subwf	___llmod@dividend+1,f
  3144     0A38  0822               	movf	___llmod@divisor+2,w
  3145     0A39  1C03               	skipc
  3146     0A3A  0F22               	incfsz	___llmod@divisor+2,w
  3147     0A3B  02A6               	subwf	___llmod@dividend+2,f
  3148     0A3C  0823               	movf	___llmod@divisor+3,w
  3149     0A3D  1C03               	skipc
  3150     0A3E  0F23               	incfsz	___llmod@divisor+3,w
  3151     0A3F  02A7               	subwf	___llmod@dividend+3,f
  3152     0A40                     l2864:
  3153     0A40  3001               	movlw	1
  3154     0A41                     u3145:
  3155     0A41  1003               	clrc
  3156     0A42  0CA3               	rrf	___llmod@divisor+3,f
  3157     0A43  0CA2               	rrf	___llmod@divisor+2,f
  3158     0A44  0CA1               	rrf	___llmod@divisor+1,f
  3159     0A45  0CA0               	rrf	___llmod@divisor,f
  3160     0A46  3EFF               	addlw	-1
  3161     0A47  1D03               	skipz
  3162     0A48  2A41               	goto	u3145
  3163     0A49                     l2866:
  3164     0A49  3001               	movlw	1
  3165     0A4A  02A9               	subwf	___llmod@counter,f
  3166     0A4B  1D03               	btfss	3,2
  3167     0A4C  2A4E               	goto	u3151
  3168     0A4D  2A4F               	goto	u3150
  3169     0A4E                     u3151:
  3170     0A4E  2A20               	goto	l2860
  3171     0A4F                     u3150:
  3172     0A4F                     l2868:
  3173     0A4F  0827               	movf	___llmod@dividend+3,w
  3174     0A50  00A3               	movwf	?___llmod+3
  3175     0A51  0826               	movf	___llmod@dividend+2,w
  3176     0A52  00A2               	movwf	?___llmod+2
  3177     0A53  0825               	movf	___llmod@dividend+1,w
  3178     0A54  00A1               	movwf	?___llmod+1
  3179     0A55  0824               	movf	___llmod@dividend,w
  3180     0A56  00A0               	movwf	?___llmod
  3181     0A57                     l687:
  3182     0A57  0008               	return
  3183     0A58                     __end_of___llmod:
  3184                           
  3185                           	psect	text9
  3186     0B11                     __ptext9:	
  3187 ;; *************** function ___lldiv *****************
  3188 ;; Defined at:
  3189 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  divisor         4    0[COMMON] unsigned long 
  3192 ;;  dividend        4    4[COMMON] unsigned long 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  quotient        4    9[COMMON] unsigned long 
  3195 ;;  counter         1   13[COMMON] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  4    0[COMMON] unsigned long 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         8       0       0       0       0
  3206 ;;      Locals:         5       0       0       0       0
  3207 ;;      Temps:          1       0       0       0       0
  3208 ;;      Totals:        14       0       0       0       0
  3209 ;;Total ram usage:       14 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218     0B11                     ___lldiv:	
  3219                           ;psect for function ___lldiv
  3220                           
  3221     0B11                     l2710:	
  3222                           ;incstack = 0
  3223                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3224                           
  3225     0B11  3000               	movlw	0
  3226     0B12  00FC               	movwf	___lldiv@quotient+3
  3227     0B13  3000               	movlw	0
  3228     0B14  00FB               	movwf	___lldiv@quotient+2
  3229     0B15  3000               	movlw	0
  3230     0B16  00FA               	movwf	___lldiv@quotient+1
  3231     0B17  3000               	movlw	0
  3232     0B18  00F9               	movwf	___lldiv@quotient
  3233     0B19  0873               	movf	___lldiv@divisor+3,w
  3234     0B1A  0472               	iorwf	___lldiv@divisor+2,w
  3235     0B1B  0471               	iorwf	___lldiv@divisor+1,w
  3236     0B1C  0470               	iorwf	___lldiv@divisor,w
  3237     0B1D  1903               	skipnz
  3238     0B1E  2B20               	goto	u2741
  3239     0B1F  2B21               	goto	u2740
  3240     0B20                     u2741:
  3241     0B20  2B6E               	goto	l2730
  3242     0B21                     u2740:
  3243     0B21                     l2712:
  3244     0B21  01FD               	clrf	___lldiv@counter
  3245     0B22  0AFD               	incf	___lldiv@counter,f
  3246     0B23  2B31               	goto	l2716
  3247     0B24                     l2714:
  3248     0B24  3001               	movlw	1
  3249     0B25  00F8               	movwf	??___lldiv
  3250     0B26                     u2755:
  3251     0B26  1003               	clrc
  3252     0B27  0DF0               	rlf	___lldiv@divisor,f
  3253     0B28  0DF1               	rlf	___lldiv@divisor+1,f
  3254     0B29  0DF2               	rlf	___lldiv@divisor+2,f
  3255     0B2A  0DF3               	rlf	___lldiv@divisor+3,f
  3256     0B2B  0BF8               	decfsz	??___lldiv,f
  3257     0B2C  2B26               	goto	u2755
  3258     0B2D  3001               	movlw	1
  3259     0B2E  00F8               	movwf	??___lldiv
  3260     0B2F  0878               	movf	??___lldiv,w
  3261     0B30  07FD               	addwf	___lldiv@counter,f
  3262     0B31                     l2716:
  3263     0B31  1FF3               	btfss	___lldiv@divisor+3,7
  3264     0B32  2B34               	goto	u2761
  3265     0B33  2B35               	goto	u2760
  3266     0B34                     u2761:
  3267     0B34  2B24               	goto	l2714
  3268     0B35                     u2760:
  3269     0B35                     l2718:
  3270     0B35  3001               	movlw	1
  3271     0B36  00F8               	movwf	??___lldiv
  3272     0B37                     u2775:
  3273     0B37  1003               	clrc
  3274     0B38  0DF9               	rlf	___lldiv@quotient,f
  3275     0B39  0DFA               	rlf	___lldiv@quotient+1,f
  3276     0B3A  0DFB               	rlf	___lldiv@quotient+2,f
  3277     0B3B  0DFC               	rlf	___lldiv@quotient+3,f
  3278     0B3C  0BF8               	decfsz	??___lldiv,f
  3279     0B3D  2B37               	goto	u2775
  3280     0B3E                     l2720:
  3281     0B3E  0873               	movf	___lldiv@divisor+3,w
  3282     0B3F  0277               	subwf	___lldiv@dividend+3,w
  3283     0B40  1D03               	skipz
  3284     0B41  2B4C               	goto	u2785
  3285     0B42  0872               	movf	___lldiv@divisor+2,w
  3286     0B43  0276               	subwf	___lldiv@dividend+2,w
  3287     0B44  1D03               	skipz
  3288     0B45  2B4C               	goto	u2785
  3289     0B46  0871               	movf	___lldiv@divisor+1,w
  3290     0B47  0275               	subwf	___lldiv@dividend+1,w
  3291     0B48  1D03               	skipz
  3292     0B49  2B4C               	goto	u2785
  3293     0B4A  0870               	movf	___lldiv@divisor,w
  3294     0B4B  0274               	subwf	___lldiv@dividend,w
  3295     0B4C                     u2785:
  3296     0B4C  1C03               	skipc
  3297     0B4D  2B4F               	goto	u2781
  3298     0B4E  2B50               	goto	u2780
  3299     0B4F                     u2781:
  3300     0B4F  2B5F               	goto	l2726
  3301     0B50                     u2780:
  3302     0B50                     l2722:
  3303     0B50  0870               	movf	___lldiv@divisor,w
  3304     0B51  02F4               	subwf	___lldiv@dividend,f
  3305     0B52  0871               	movf	___lldiv@divisor+1,w
  3306     0B53  1C03               	skipc
  3307     0B54  0F71               	incfsz	___lldiv@divisor+1,w
  3308     0B55  02F5               	subwf	___lldiv@dividend+1,f
  3309     0B56  0872               	movf	___lldiv@divisor+2,w
  3310     0B57  1C03               	skipc
  3311     0B58  0F72               	incfsz	___lldiv@divisor+2,w
  3312     0B59  02F6               	subwf	___lldiv@dividend+2,f
  3313     0B5A  0873               	movf	___lldiv@divisor+3,w
  3314     0B5B  1C03               	skipc
  3315     0B5C  0F73               	incfsz	___lldiv@divisor+3,w
  3316     0B5D  02F7               	subwf	___lldiv@dividend+3,f
  3317     0B5E                     l2724:
  3318     0B5E  1479               	bsf	___lldiv@quotient,0
  3319     0B5F                     l2726:
  3320     0B5F  3001               	movlw	1
  3321     0B60                     u2795:
  3322     0B60  1003               	clrc
  3323     0B61  0CF3               	rrf	___lldiv@divisor+3,f
  3324     0B62  0CF2               	rrf	___lldiv@divisor+2,f
  3325     0B63  0CF1               	rrf	___lldiv@divisor+1,f
  3326     0B64  0CF0               	rrf	___lldiv@divisor,f
  3327     0B65  3EFF               	addlw	-1
  3328     0B66  1D03               	skipz
  3329     0B67  2B60               	goto	u2795
  3330     0B68                     l2728:
  3331     0B68  3001               	movlw	1
  3332     0B69  02FD               	subwf	___lldiv@counter,f
  3333     0B6A  1D03               	btfss	3,2
  3334     0B6B  2B6D               	goto	u2801
  3335     0B6C  2B6E               	goto	u2800
  3336     0B6D                     u2801:
  3337     0B6D  2B35               	goto	l2718
  3338     0B6E                     u2800:
  3339     0B6E                     l2730:
  3340     0B6E  087C               	movf	___lldiv@quotient+3,w
  3341     0B6F  00F3               	movwf	?___lldiv+3
  3342     0B70  087B               	movf	___lldiv@quotient+2,w
  3343     0B71  00F2               	movwf	?___lldiv+2
  3344     0B72  087A               	movf	___lldiv@quotient+1,w
  3345     0B73  00F1               	movwf	?___lldiv+1
  3346     0B74  0879               	movf	___lldiv@quotient,w
  3347     0B75  00F0               	movwf	?___lldiv
  3348     0B76                     l501:
  3349     0B76  0008               	return
  3350     0B77                     __end_of___lldiv:
  3351                           
  3352                           	psect	text10
  3353     0B77                     __ptext10:	
  3354 ;; *************** function ___fltol *****************
  3355 ;; Defined at:
  3356 ;;		line 43 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  f1              4   47[BANK0 ] unsigned long 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  exp1            1   56[BANK0 ] unsigned char 
  3361 ;;  sign1           1   55[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  4   47[BANK0 ] long 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         0       4       0       0       0
  3372 ;;      Locals:         0       2       0       0       0
  3373 ;;      Temps:          0       4       0       0       0
  3374 ;;      Totals:         0      10       0       0       0
  3375 ;;Total ram usage:       10 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_main
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384     0B77                     ___fltol:	
  3385                           ;psect for function ___fltol
  3386                           
  3387     0B77                     l2816:	
  3388                           ;incstack = 0
  3389                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3390                           
  3391     0B77  1003               	clrc
  3392     0B78  1283               	bcf	3,5	;RP0=0, select bank0
  3393     0B79  1303               	bcf	3,6	;RP1=0, select bank0
  3394     0B7A  0D51               	rlf	___fltol@f1+2,w
  3395     0B7B  0D52               	rlf	___fltol@f1+3,w
  3396     0B7C  00D8               	movwf	___fltol@exp1
  3397     0B7D  0858               	movf	___fltol@exp1,w
  3398     0B7E  1D03               	btfss	3,2
  3399     0B7F  2B81               	goto	u3001
  3400     0B80  2B82               	goto	u3000
  3401     0B81                     u3001:
  3402     0B81  2B8B               	goto	l2822
  3403     0B82                     u3000:
  3404     0B82                     l2818:
  3405     0B82  3000               	movlw	0
  3406     0B83  00D2               	movwf	?___fltol+3
  3407     0B84  3000               	movlw	0
  3408     0B85  00D1               	movwf	?___fltol+2
  3409     0B86  3000               	movlw	0
  3410     0B87  00D0               	movwf	?___fltol+1
  3411     0B88  3000               	movlw	0
  3412     0B89  00CF               	movwf	?___fltol
  3413     0B8A  2BEE               	goto	l651
  3414     0B8B                     l2822:
  3415     0B8B  084F               	movf	___fltol@f1,w
  3416     0B8C  00D3               	movwf	??___fltol
  3417     0B8D  0850               	movf	___fltol@f1+1,w
  3418     0B8E  00D4               	movwf	??___fltol+1
  3419     0B8F  0851               	movf	___fltol@f1+2,w
  3420     0B90  00D5               	movwf	??___fltol+2
  3421     0B91  0852               	movf	___fltol@f1+3,w
  3422     0B92  00D6               	movwf	??___fltol+3
  3423     0B93  301F               	movlw	31
  3424     0B94                     u3015:
  3425     0B94  1003               	clrc
  3426     0B95  0CD6               	rrf	??___fltol+3,f
  3427     0B96  0CD5               	rrf	??___fltol+2,f
  3428     0B97  0CD4               	rrf	??___fltol+1,f
  3429     0B98  0CD3               	rrf	??___fltol,f
  3430     0B99                     u3010:
  3431     0B99  3EFF               	addlw	-1
  3432     0B9A  1D03               	skipz
  3433     0B9B  2B94               	goto	u3015
  3434     0B9C  0853               	movf	??___fltol,w
  3435     0B9D  00D7               	movwf	___fltol@sign1
  3436     0B9E                     l2824:
  3437     0B9E  17D1               	bsf	___fltol@f1+2,7
  3438     0B9F                     l2826:
  3439     0B9F  30FF               	movlw	255
  3440     0BA0  05CF               	andwf	___fltol@f1,f
  3441     0BA1  30FF               	movlw	255
  3442     0BA2  05D0               	andwf	___fltol@f1+1,f
  3443     0BA3  30FF               	movlw	255
  3444     0BA4  05D1               	andwf	___fltol@f1+2,f
  3445     0BA5  3000               	movlw	0
  3446     0BA6  05D2               	andwf	___fltol@f1+3,f
  3447     0BA7                     l2828:
  3448     0BA7  3096               	movlw	150
  3449     0BA8  02D8               	subwf	___fltol@exp1,f
  3450     0BA9                     l2830:
  3451     0BA9  1FD8               	btfss	___fltol@exp1,7
  3452     0BAA  2BAC               	goto	u3021
  3453     0BAB  2BAD               	goto	u3020
  3454     0BAC                     u3021:
  3455     0BAC  2BC7               	goto	l2840
  3456     0BAD                     u3020:
  3457     0BAD                     l2832:
  3458     0BAD  0858               	movf	___fltol@exp1,w
  3459     0BAE  3A80               	xorlw	128
  3460     0BAF  3E97               	addlw	151
  3461     0BB0  1803               	skipnc
  3462     0BB1  2BB3               	goto	u3031
  3463     0BB2  2BB4               	goto	u3030
  3464     0BB3                     u3031:
  3465     0BB3  2BB5               	goto	l2838
  3466     0BB4                     u3030:
  3467     0BB4  2B82               	goto	l2818
  3468     0BB5                     l2838:
  3469     0BB5  3001               	movlw	1
  3470     0BB6                     u3045:
  3471     0BB6  1003               	clrc
  3472     0BB7  0CD2               	rrf	___fltol@f1+3,f
  3473     0BB8  0CD1               	rrf	___fltol@f1+2,f
  3474     0BB9  0CD0               	rrf	___fltol@f1+1,f
  3475     0BBA  0CCF               	rrf	___fltol@f1,f
  3476     0BBB  3EFF               	addlw	-1
  3477     0BBC  1D03               	skipz
  3478     0BBD  2BB6               	goto	u3045
  3479     0BBE  3001               	movlw	1
  3480     0BBF  00D3               	movwf	??___fltol
  3481     0BC0  0853               	movf	??___fltol,w
  3482     0BC1  07D8               	addwf	___fltol@exp1,f
  3483     0BC2  1D03               	btfss	3,2
  3484     0BC3  2BC5               	goto	u3051
  3485     0BC4  2BC6               	goto	u3050
  3486     0BC5                     u3051:
  3487     0BC5  2BB5               	goto	l2838
  3488     0BC6                     u3050:
  3489     0BC6  2BDE               	goto	l2848
  3490     0BC7                     l2840:
  3491     0BC7  3020               	movlw	32
  3492     0BC8  0258               	subwf	___fltol@exp1,w
  3493     0BC9  1C03               	skipc
  3494     0BCA  2BCC               	goto	u3061
  3495     0BCB  2BCD               	goto	u3060
  3496     0BCC                     u3061:
  3497     0BCC  2BD9               	goto	l658
  3498     0BCD                     u3060:
  3499     0BCD  2B82               	goto	l2818
  3500     0BCE                     l2846:
  3501     0BCE  3001               	movlw	1
  3502     0BCF  00D3               	movwf	??___fltol
  3503     0BD0                     u3075:
  3504     0BD0  1003               	clrc
  3505     0BD1  0DCF               	rlf	___fltol@f1,f
  3506     0BD2  0DD0               	rlf	___fltol@f1+1,f
  3507     0BD3  0DD1               	rlf	___fltol@f1+2,f
  3508     0BD4  0DD2               	rlf	___fltol@f1+3,f
  3509     0BD5  0BD3               	decfsz	??___fltol,f
  3510     0BD6  2BD0               	goto	u3075
  3511     0BD7  3001               	movlw	1
  3512     0BD8  02D8               	subwf	___fltol@exp1,f
  3513     0BD9                     l658:
  3514     0BD9  0858               	movf	___fltol@exp1,w
  3515     0BDA  1D03               	btfss	3,2
  3516     0BDB  2BDD               	goto	u3081
  3517     0BDC  2BDE               	goto	u3080
  3518     0BDD                     u3081:
  3519     0BDD  2BCE               	goto	l2846
  3520     0BDE                     u3080:
  3521     0BDE                     l2848:
  3522     0BDE  0857               	movf	___fltol@sign1,w
  3523     0BDF  1903               	btfsc	3,2
  3524     0BE0  2BE2               	goto	u3091
  3525     0BE1  2BE3               	goto	u3090
  3526     0BE2                     u3091:
  3527     0BE2  2BEE               	goto	l661
  3528     0BE3                     u3090:
  3529     0BE3                     l2850:
  3530     0BE3  09CF               	comf	___fltol@f1,f
  3531     0BE4  09D0               	comf	___fltol@f1+1,f
  3532     0BE5  09D1               	comf	___fltol@f1+2,f
  3533     0BE6  09D2               	comf	___fltol@f1+3,f
  3534     0BE7  0ACF               	incf	___fltol@f1,f
  3535     0BE8  1903               	skipnz
  3536     0BE9  0AD0               	incf	___fltol@f1+1,f
  3537     0BEA  1903               	skipnz
  3538     0BEB  0AD1               	incf	___fltol@f1+2,f
  3539     0BEC  1903               	skipnz
  3540     0BED  0AD2               	incf	___fltol@f1+3,f
  3541     0BEE                     l661:
  3542     0BEE                     l651:
  3543     0BEE  0008               	return
  3544     0BEF                     __end_of___fltol:
  3545                           
  3546                           	psect	text11
  3547     04A6                     __ptext11:	
  3548 ;; *************** function ___flmul *****************
  3549 ;; Defined at:
  3550 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  b               4    0[BANK0 ] long 
  3553 ;;  a               4    4[BANK0 ] long 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  prod            4   15[BANK0 ] struct .
  3556 ;;  grs             4    9[BANK0 ] unsigned long 
  3557 ;;  temp            2   19[BANK0 ] struct .
  3558 ;;  bexp            1   14[BANK0 ] unsigned char 
  3559 ;;  aexp            1   13[BANK0 ] unsigned char 
  3560 ;;  sign            1    8[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  4    0[BANK0 ] unsigned char 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         0       8       0       0       0
  3571 ;;      Locals:         0      13       0       0       0
  3572 ;;      Temps:          5       0       0       0       0
  3573 ;;      Totals:         5      21       0       0       0
  3574 ;;Total ram usage:       26 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 1
  3577 ;; This function calls:
  3578 ;;		__Umul8_16
  3579 ;; This function is called by:
  3580 ;;		_main
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584     04A6                     ___flmul:	
  3585                           ;psect for function ___flmul
  3586                           
  3587     04A6                     l3014:	
  3588                           ;incstack = 0
  3589                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3590                           
  3591     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3592     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3593     04A8  0823               	movf	___flmul@b+3,w
  3594     04A9  3980               	andlw	128
  3595     04AA  00A8               	movwf	___flmul@sign
  3596     04AB                     l3016:
  3597     04AB  0823               	movf	___flmul@b+3,w
  3598     04AC  00F9               	movwf	??___flmul
  3599     04AD  0779               	addwf	??___flmul,w
  3600     04AE  00AE               	movwf	___flmul@bexp
  3601     04AF                     l3018:
  3602     04AF  1FA2               	btfss	___flmul@b+2,7
  3603     04B0  2CB2               	goto	u3451
  3604     04B1  2CB3               	goto	u3450
  3605     04B2                     u3451:
  3606     04B2  2CB4               	goto	l3022
  3607     04B3                     u3450:
  3608     04B3                     l3020:
  3609     04B3  142E               	bsf	___flmul@bexp,0
  3610     04B4                     l3022:
  3611     04B4  082E               	movf	___flmul@bexp,w
  3612     04B5  1903               	btfsc	3,2
  3613     04B6  2CB8               	goto	u3461
  3614     04B7  2CB9               	goto	u3460
  3615     04B8                     u3461:
  3616     04B8  2CC8               	goto	l3030
  3617     04B9                     u3460:
  3618     04B9                     l3024:
  3619     04B9  0A2E               	incf	___flmul@bexp,w
  3620     04BA  1D03               	btfss	3,2
  3621     04BB  2CBD               	goto	u3471
  3622     04BC  2CBE               	goto	u3470
  3623     04BD                     u3471:
  3624     04BD  2CC6               	goto	l3028
  3625     04BE                     u3470:
  3626     04BE                     l3026:
  3627     04BE  3000               	movlw	0
  3628     04BF  00A3               	movwf	___flmul@b+3
  3629     04C0  3000               	movlw	0
  3630     04C1  00A2               	movwf	___flmul@b+2
  3631     04C2  3000               	movlw	0
  3632     04C3  00A1               	movwf	___flmul@b+1
  3633     04C4  3000               	movlw	0
  3634     04C5  00A0               	movwf	___flmul@b
  3635     04C6                     l3028:
  3636     04C6  17A2               	bsf	___flmul@b+2,7
  3637     04C7  2CD0               	goto	l3032
  3638     04C8                     l3030:
  3639     04C8  3000               	movlw	0
  3640     04C9  00A3               	movwf	___flmul@b+3
  3641     04CA  3000               	movlw	0
  3642     04CB  00A2               	movwf	___flmul@b+2
  3643     04CC  3000               	movlw	0
  3644     04CD  00A1               	movwf	___flmul@b+1
  3645     04CE  3000               	movlw	0
  3646     04CF  00A0               	movwf	___flmul@b
  3647     04D0                     l3032:
  3648     04D0  0827               	movf	___flmul@a+3,w
  3649     04D1  3980               	andlw	128
  3650     04D2  00F9               	movwf	??___flmul
  3651     04D3  0879               	movf	??___flmul,w
  3652     04D4  06A8               	xorwf	___flmul@sign,f
  3653     04D5                     l3034:
  3654     04D5  0827               	movf	___flmul@a+3,w
  3655     04D6  00F9               	movwf	??___flmul
  3656     04D7  0779               	addwf	??___flmul,w
  3657     04D8  00AD               	movwf	___flmul@aexp
  3658     04D9                     l3036:
  3659     04D9  1FA6               	btfss	___flmul@a+2,7
  3660     04DA  2CDC               	goto	u3481
  3661     04DB  2CDD               	goto	u3480
  3662     04DC                     u3481:
  3663     04DC  2CDE               	goto	l3040
  3664     04DD                     u3480:
  3665     04DD                     l3038:
  3666     04DD  142D               	bsf	___flmul@aexp,0
  3667     04DE                     l3040:
  3668     04DE  082D               	movf	___flmul@aexp,w
  3669     04DF  1903               	btfsc	3,2
  3670     04E0  2CE2               	goto	u3491
  3671     04E1  2CE3               	goto	u3490
  3672     04E2                     u3491:
  3673     04E2  2CF2               	goto	l3048
  3674     04E3                     u3490:
  3675     04E3                     l3042:
  3676     04E3  0A2D               	incf	___flmul@aexp,w
  3677     04E4  1D03               	btfss	3,2
  3678     04E5  2CE7               	goto	u3501
  3679     04E6  2CE8               	goto	u3500
  3680     04E7                     u3501:
  3681     04E7  2CF0               	goto	l3046
  3682     04E8                     u3500:
  3683     04E8                     l3044:
  3684     04E8  3000               	movlw	0
  3685     04E9  00A7               	movwf	___flmul@a+3
  3686     04EA  3000               	movlw	0
  3687     04EB  00A6               	movwf	___flmul@a+2
  3688     04EC  3000               	movlw	0
  3689     04ED  00A5               	movwf	___flmul@a+1
  3690     04EE  3000               	movlw	0
  3691     04EF  00A4               	movwf	___flmul@a
  3692     04F0                     l3046:
  3693     04F0  17A6               	bsf	___flmul@a+2,7
  3694     04F1  2CFA               	goto	l3050
  3695     04F2                     l3048:
  3696     04F2  3000               	movlw	0
  3697     04F3  00A7               	movwf	___flmul@a+3
  3698     04F4  3000               	movlw	0
  3699     04F5  00A6               	movwf	___flmul@a+2
  3700     04F6  3000               	movlw	0
  3701     04F7  00A5               	movwf	___flmul@a+1
  3702     04F8  3000               	movlw	0
  3703     04F9  00A4               	movwf	___flmul@a
  3704     04FA                     l3050:
  3705     04FA  082D               	movf	___flmul@aexp,w
  3706     04FB  1903               	btfsc	3,2
  3707     04FC  2CFE               	goto	u3511
  3708     04FD  2CFF               	goto	u3510
  3709     04FE                     u3511:
  3710     04FE  2D04               	goto	l3054
  3711     04FF                     u3510:
  3712     04FF                     l3052:
  3713     04FF  082E               	movf	___flmul@bexp,w
  3714     0500  1D03               	btfss	3,2
  3715     0501  2D03               	goto	u3521
  3716     0502  2D04               	goto	u3520
  3717     0503                     u3521:
  3718     0503  2D0D               	goto	l3058
  3719     0504                     u3520:
  3720     0504                     l3054:
  3721     0504  3000               	movlw	0
  3722     0505  00A3               	movwf	?___flmul+3
  3723     0506  3000               	movlw	0
  3724     0507  00A2               	movwf	?___flmul+2
  3725     0508  3000               	movlw	0
  3726     0509  00A1               	movwf	?___flmul+1
  3727     050A  3000               	movlw	0
  3728     050B  00A0               	movwf	?___flmul
  3729     050C  2FEA               	goto	l854
  3730     050D                     l3058:
  3731     050D  0820               	movf	___flmul@b,w
  3732     050E  00F0               	movwf	__Umul8_16@multiplicand
  3733     050F  0826               	movf	___flmul@a+2,w
  3734     0510  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  3735     0515  0871               	movf	?__Umul8_16+1,w
  3736     0516  1283               	bcf	3,5	;RP0=0, select bank0
  3737     0517  1303               	bcf	3,6	;RP1=0, select bank0
  3738     0518  00B4               	movwf	___flmul@temp+1
  3739     0519  0870               	movf	?__Umul8_16,w
  3740     051A  00B3               	movwf	___flmul@temp
  3741     051B                     l3060:
  3742     051B  0833               	movf	___flmul@temp,w
  3743     051C  00F9               	movwf	??___flmul
  3744     051D  01FA               	clrf	??___flmul+1
  3745     051E  01FB               	clrf	??___flmul+2
  3746     051F  01FC               	clrf	??___flmul+3
  3747     0520  087C               	movf	??___flmul+3,w
  3748     0521  00AC               	movwf	___flmul@grs+3
  3749     0522  087B               	movf	??___flmul+2,w
  3750     0523  00AB               	movwf	___flmul@grs+2
  3751     0524  087A               	movf	??___flmul+1,w
  3752     0525  00AA               	movwf	___flmul@grs+1
  3753     0526  0879               	movf	??___flmul,w
  3754     0527  00A9               	movwf	___flmul@grs
  3755     0528                     l3062:
  3756     0528  0834               	movf	___flmul@temp+1,w
  3757     0529  00F9               	movwf	??___flmul
  3758     052A  01FA               	clrf	??___flmul+1
  3759     052B  01FB               	clrf	??___flmul+2
  3760     052C  01FC               	clrf	??___flmul+3
  3761     052D  087C               	movf	??___flmul+3,w
  3762     052E  00B2               	movwf	___flmul@prod+3
  3763     052F  087B               	movf	??___flmul+2,w
  3764     0530  00B1               	movwf	___flmul@prod+2
  3765     0531  087A               	movf	??___flmul+1,w
  3766     0532  00B0               	movwf	___flmul@prod+1
  3767     0533  0879               	movf	??___flmul,w
  3768     0534  00AF               	movwf	___flmul@prod
  3769     0535  0821               	movf	___flmul@b+1,w
  3770     0536  00F0               	movwf	__Umul8_16@multiplicand
  3771     0537  0825               	movf	___flmul@a+1,w
  3772     0538  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  3773     053D  0871               	movf	?__Umul8_16+1,w
  3774     053E  1283               	bcf	3,5	;RP0=0, select bank0
  3775     053F  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0540  00B4               	movwf	___flmul@temp+1
  3777     0541  0870               	movf	?__Umul8_16,w
  3778     0542  00B3               	movwf	___flmul@temp
  3779     0543                     l3064:
  3780     0543  0833               	movf	___flmul@temp,w
  3781     0544  00F9               	movwf	??___flmul
  3782     0545  01FA               	clrf	??___flmul+1
  3783     0546  01FB               	clrf	??___flmul+2
  3784     0547  01FC               	clrf	??___flmul+3
  3785     0548  0879               	movf	??___flmul,w
  3786     0549  07A9               	addwf	___flmul@grs,f
  3787     054A  087A               	movf	??___flmul+1,w
  3788     054B  1103               	clrz
  3789     054C  1803               	skipnc
  3790     054D  3E01               	addlw	1
  3791     054E  1903               	skipnz
  3792     054F  2D51               	goto	u3531
  3793     0550  07AA               	addwf	___flmul@grs+1,f
  3794     0551                     u3531:
  3795     0551  087B               	movf	??___flmul+2,w
  3796     0552  1103               	clrz
  3797     0553  1803               	skipnc
  3798     0554  3E01               	addlw	1
  3799     0555  1903               	skipnz
  3800     0556  2D58               	goto	u3532
  3801     0557  07AB               	addwf	___flmul@grs+2,f
  3802     0558                     u3532:
  3803     0558  087C               	movf	??___flmul+3,w
  3804     0559  1103               	clrz
  3805     055A  1803               	skipnc
  3806     055B  3E01               	addlw	1
  3807     055C  1903               	skipnz
  3808     055D  2D5F               	goto	u3533
  3809     055E  07AC               	addwf	___flmul@grs+3,f
  3810     055F                     u3533:
  3811     055F                     l3066:
  3812     055F  0834               	movf	___flmul@temp+1,w
  3813     0560  00F9               	movwf	??___flmul
  3814     0561  01FA               	clrf	??___flmul+1
  3815     0562  01FB               	clrf	??___flmul+2
  3816     0563  01FC               	clrf	??___flmul+3
  3817     0564  0879               	movf	??___flmul,w
  3818     0565  07AF               	addwf	___flmul@prod,f
  3819     0566  087A               	movf	??___flmul+1,w
  3820     0567  1103               	clrz
  3821     0568  1803               	skipnc
  3822     0569  3E01               	addlw	1
  3823     056A  1903               	skipnz
  3824     056B  2D6D               	goto	u3541
  3825     056C  07B0               	addwf	___flmul@prod+1,f
  3826     056D                     u3541:
  3827     056D  087B               	movf	??___flmul+2,w
  3828     056E  1103               	clrz
  3829     056F  1803               	skipnc
  3830     0570  3E01               	addlw	1
  3831     0571  1903               	skipnz
  3832     0572  2D74               	goto	u3542
  3833     0573  07B1               	addwf	___flmul@prod+2,f
  3834     0574                     u3542:
  3835     0574  087C               	movf	??___flmul+3,w
  3836     0575  1103               	clrz
  3837     0576  1803               	skipnc
  3838     0577  3E01               	addlw	1
  3839     0578  1903               	skipnz
  3840     0579  2D7B               	goto	u3543
  3841     057A  07B2               	addwf	___flmul@prod+3,f
  3842     057B                     u3543:
  3843     057B  0822               	movf	___flmul@b+2,w
  3844     057C  00F0               	movwf	__Umul8_16@multiplicand
  3845     057D  0824               	movf	___flmul@a,w
  3846     057E  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  3847     0583  0871               	movf	?__Umul8_16+1,w
  3848     0584  1283               	bcf	3,5	;RP0=0, select bank0
  3849     0585  1303               	bcf	3,6	;RP1=0, select bank0
  3850     0586  00B4               	movwf	___flmul@temp+1
  3851     0587  0870               	movf	?__Umul8_16,w
  3852     0588  00B3               	movwf	___flmul@temp
  3853     0589                     l3068:
  3854     0589  0833               	movf	___flmul@temp,w
  3855     058A  00F9               	movwf	??___flmul
  3856     058B  01FA               	clrf	??___flmul+1
  3857     058C  01FB               	clrf	??___flmul+2
  3858     058D  01FC               	clrf	??___flmul+3
  3859     058E  0879               	movf	??___flmul,w
  3860     058F  07A9               	addwf	___flmul@grs,f
  3861     0590  087A               	movf	??___flmul+1,w
  3862     0591  1103               	clrz
  3863     0592  1803               	skipnc
  3864     0593  3E01               	addlw	1
  3865     0594  1903               	skipnz
  3866     0595  2D97               	goto	u3551
  3867     0596  07AA               	addwf	___flmul@grs+1,f
  3868     0597                     u3551:
  3869     0597  087B               	movf	??___flmul+2,w
  3870     0598  1103               	clrz
  3871     0599  1803               	skipnc
  3872     059A  3E01               	addlw	1
  3873     059B  1903               	skipnz
  3874     059C  2D9E               	goto	u3552
  3875     059D  07AB               	addwf	___flmul@grs+2,f
  3876     059E                     u3552:
  3877     059E  087C               	movf	??___flmul+3,w
  3878     059F  1103               	clrz
  3879     05A0  1803               	skipnc
  3880     05A1  3E01               	addlw	1
  3881     05A2  1903               	skipnz
  3882     05A3  2DA5               	goto	u3553
  3883     05A4  07AC               	addwf	___flmul@grs+3,f
  3884     05A5                     u3553:
  3885     05A5                     l3070:
  3886     05A5  0834               	movf	___flmul@temp+1,w
  3887     05A6  00F9               	movwf	??___flmul
  3888     05A7  01FA               	clrf	??___flmul+1
  3889     05A8  01FB               	clrf	??___flmul+2
  3890     05A9  01FC               	clrf	??___flmul+3
  3891     05AA  0879               	movf	??___flmul,w
  3892     05AB  07AF               	addwf	___flmul@prod,f
  3893     05AC  087A               	movf	??___flmul+1,w
  3894     05AD  1103               	clrz
  3895     05AE  1803               	skipnc
  3896     05AF  3E01               	addlw	1
  3897     05B0  1903               	skipnz
  3898     05B1  2DB3               	goto	u3561
  3899     05B2  07B0               	addwf	___flmul@prod+1,f
  3900     05B3                     u3561:
  3901     05B3  087B               	movf	??___flmul+2,w
  3902     05B4  1103               	clrz
  3903     05B5  1803               	skipnc
  3904     05B6  3E01               	addlw	1
  3905     05B7  1903               	skipnz
  3906     05B8  2DBA               	goto	u3562
  3907     05B9  07B1               	addwf	___flmul@prod+2,f
  3908     05BA                     u3562:
  3909     05BA  087C               	movf	??___flmul+3,w
  3910     05BB  1103               	clrz
  3911     05BC  1803               	skipnc
  3912     05BD  3E01               	addlw	1
  3913     05BE  1903               	skipnz
  3914     05BF  2DC1               	goto	u3563
  3915     05C0  07B2               	addwf	___flmul@prod+3,f
  3916     05C1                     u3563:
  3917     05C1                     l3072:
  3918     05C1  3008               	movlw	8
  3919     05C2  00F9               	movwf	??___flmul
  3920     05C3                     u3575:
  3921     05C3  1003               	clrc
  3922     05C4  0DA9               	rlf	___flmul@grs,f
  3923     05C5  0DAA               	rlf	___flmul@grs+1,f
  3924     05C6  0DAB               	rlf	___flmul@grs+2,f
  3925     05C7  0DAC               	rlf	___flmul@grs+3,f
  3926     05C8  0BF9               	decfsz	??___flmul,f
  3927     05C9  2DC3               	goto	u3575
  3928     05CA                     l3074:
  3929     05CA  0821               	movf	___flmul@b+1,w
  3930     05CB  00F0               	movwf	__Umul8_16@multiplicand
  3931     05CC  0824               	movf	___flmul@a,w
  3932     05CD  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  3933     05D2  0871               	movf	?__Umul8_16+1,w
  3934     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3935     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3936     05D5  00B4               	movwf	___flmul@temp+1
  3937     05D6  0870               	movf	?__Umul8_16,w
  3938     05D7  00B3               	movwf	___flmul@temp
  3939     05D8                     l3076:
  3940     05D8  0833               	movf	___flmul@temp,w
  3941     05D9  00F9               	movwf	??___flmul
  3942     05DA  0834               	movf	___flmul@temp+1,w
  3943     05DB  00FA               	movwf	??___flmul+1
  3944     05DC  01FB               	clrf	??___flmul+2
  3945     05DD  01FC               	clrf	??___flmul+3
  3946     05DE  0879               	movf	??___flmul,w
  3947     05DF  07A9               	addwf	___flmul@grs,f
  3948     05E0  087A               	movf	??___flmul+1,w
  3949     05E1  1103               	clrz
  3950     05E2  1803               	skipnc
  3951     05E3  3E01               	addlw	1
  3952     05E4  1903               	skipnz
  3953     05E5  2DE7               	goto	u3581
  3954     05E6  07AA               	addwf	___flmul@grs+1,f
  3955     05E7                     u3581:
  3956     05E7  087B               	movf	??___flmul+2,w
  3957     05E8  1103               	clrz
  3958     05E9  1803               	skipnc
  3959     05EA  3E01               	addlw	1
  3960     05EB  1903               	skipnz
  3961     05EC  2DEE               	goto	u3582
  3962     05ED  07AB               	addwf	___flmul@grs+2,f
  3963     05EE                     u3582:
  3964     05EE  087C               	movf	??___flmul+3,w
  3965     05EF  1103               	clrz
  3966     05F0  1803               	skipnc
  3967     05F1  3E01               	addlw	1
  3968     05F2  1903               	skipnz
  3969     05F3  2DF5               	goto	u3583
  3970     05F4  07AC               	addwf	___flmul@grs+3,f
  3971     05F5                     u3583:
  3972     05F5                     l3078:
  3973     05F5  0820               	movf	___flmul@b,w
  3974     05F6  00F0               	movwf	__Umul8_16@multiplicand
  3975     05F7  0825               	movf	___flmul@a+1,w
  3976     05F8  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  3977     05FD  0871               	movf	?__Umul8_16+1,w
  3978     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3979     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3980     0600  00B4               	movwf	___flmul@temp+1
  3981     0601  0870               	movf	?__Umul8_16,w
  3982     0602  00B3               	movwf	___flmul@temp
  3983     0603                     l3080:
  3984     0603  0833               	movf	___flmul@temp,w
  3985     0604  00F9               	movwf	??___flmul
  3986     0605  0834               	movf	___flmul@temp+1,w
  3987     0606  00FA               	movwf	??___flmul+1
  3988     0607  01FB               	clrf	??___flmul+2
  3989     0608  01FC               	clrf	??___flmul+3
  3990     0609  0879               	movf	??___flmul,w
  3991     060A  07A9               	addwf	___flmul@grs,f
  3992     060B  087A               	movf	??___flmul+1,w
  3993     060C  1103               	clrz
  3994     060D  1803               	skipnc
  3995     060E  3E01               	addlw	1
  3996     060F  1903               	skipnz
  3997     0610  2E12               	goto	u3591
  3998     0611  07AA               	addwf	___flmul@grs+1,f
  3999     0612                     u3591:
  4000     0612  087B               	movf	??___flmul+2,w
  4001     0613  1103               	clrz
  4002     0614  1803               	skipnc
  4003     0615  3E01               	addlw	1
  4004     0616  1903               	skipnz
  4005     0617  2E19               	goto	u3592
  4006     0618  07AB               	addwf	___flmul@grs+2,f
  4007     0619                     u3592:
  4008     0619  087C               	movf	??___flmul+3,w
  4009     061A  1103               	clrz
  4010     061B  1803               	skipnc
  4011     061C  3E01               	addlw	1
  4012     061D  1903               	skipnz
  4013     061E  2E20               	goto	u3593
  4014     061F  07AC               	addwf	___flmul@grs+3,f
  4015     0620                     u3593:
  4016     0620                     l3082:
  4017     0620  3008               	movlw	8
  4018     0621  00F9               	movwf	??___flmul
  4019     0622                     u3605:
  4020     0622  1003               	clrc
  4021     0623  0DA9               	rlf	___flmul@grs,f
  4022     0624  0DAA               	rlf	___flmul@grs+1,f
  4023     0625  0DAB               	rlf	___flmul@grs+2,f
  4024     0626  0DAC               	rlf	___flmul@grs+3,f
  4025     0627  0BF9               	decfsz	??___flmul,f
  4026     0628  2E22               	goto	u3605
  4027     0629  0820               	movf	___flmul@b,w
  4028     062A  00F0               	movwf	__Umul8_16@multiplicand
  4029     062B  0824               	movf	___flmul@a,w
  4030     062C  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  4031     0631  0871               	movf	?__Umul8_16+1,w
  4032     0632  1283               	bcf	3,5	;RP0=0, select bank0
  4033     0633  1303               	bcf	3,6	;RP1=0, select bank0
  4034     0634  00B4               	movwf	___flmul@temp+1
  4035     0635  0870               	movf	?__Umul8_16,w
  4036     0636  00B3               	movwf	___flmul@temp
  4037     0637                     l3084:
  4038     0637  0833               	movf	___flmul@temp,w
  4039     0638  00F9               	movwf	??___flmul
  4040     0639  0834               	movf	___flmul@temp+1,w
  4041     063A  00FA               	movwf	??___flmul+1
  4042     063B  01FB               	clrf	??___flmul+2
  4043     063C  01FC               	clrf	??___flmul+3
  4044     063D  0879               	movf	??___flmul,w
  4045     063E  07A9               	addwf	___flmul@grs,f
  4046     063F  087A               	movf	??___flmul+1,w
  4047     0640  1103               	clrz
  4048     0641  1803               	skipnc
  4049     0642  3E01               	addlw	1
  4050     0643  1903               	skipnz
  4051     0644  2E46               	goto	u3611
  4052     0645  07AA               	addwf	___flmul@grs+1,f
  4053     0646                     u3611:
  4054     0646  087B               	movf	??___flmul+2,w
  4055     0647  1103               	clrz
  4056     0648  1803               	skipnc
  4057     0649  3E01               	addlw	1
  4058     064A  1903               	skipnz
  4059     064B  2E4D               	goto	u3612
  4060     064C  07AB               	addwf	___flmul@grs+2,f
  4061     064D                     u3612:
  4062     064D  087C               	movf	??___flmul+3,w
  4063     064E  1103               	clrz
  4064     064F  1803               	skipnc
  4065     0650  3E01               	addlw	1
  4066     0651  1903               	skipnz
  4067     0652  2E54               	goto	u3613
  4068     0653  07AC               	addwf	___flmul@grs+3,f
  4069     0654                     u3613:
  4070     0654                     l3086:
  4071     0654  0821               	movf	___flmul@b+1,w
  4072     0655  00F0               	movwf	__Umul8_16@multiplicand
  4073     0656  0826               	movf	___flmul@a+2,w
  4074     0657  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  4075     065C  0871               	movf	?__Umul8_16+1,w
  4076     065D  1283               	bcf	3,5	;RP0=0, select bank0
  4077     065E  1303               	bcf	3,6	;RP1=0, select bank0
  4078     065F  00B4               	movwf	___flmul@temp+1
  4079     0660  0870               	movf	?__Umul8_16,w
  4080     0661  00B3               	movwf	___flmul@temp
  4081     0662  0833               	movf	___flmul@temp,w
  4082     0663  00F9               	movwf	??___flmul
  4083     0664  0834               	movf	___flmul@temp+1,w
  4084     0665  00FA               	movwf	??___flmul+1
  4085     0666  01FB               	clrf	??___flmul+2
  4086     0667  01FC               	clrf	??___flmul+3
  4087     0668  0879               	movf	??___flmul,w
  4088     0669  07AF               	addwf	___flmul@prod,f
  4089     066A  087A               	movf	??___flmul+1,w
  4090     066B  1103               	clrz
  4091     066C  1803               	skipnc
  4092     066D  3E01               	addlw	1
  4093     066E  1903               	skipnz
  4094     066F  2E71               	goto	u3621
  4095     0670  07B0               	addwf	___flmul@prod+1,f
  4096     0671                     u3621:
  4097     0671  087B               	movf	??___flmul+2,w
  4098     0672  1103               	clrz
  4099     0673  1803               	skipnc
  4100     0674  3E01               	addlw	1
  4101     0675  1903               	skipnz
  4102     0676  2E78               	goto	u3622
  4103     0677  07B1               	addwf	___flmul@prod+2,f
  4104     0678                     u3622:
  4105     0678  087C               	movf	??___flmul+3,w
  4106     0679  1103               	clrz
  4107     067A  1803               	skipnc
  4108     067B  3E01               	addlw	1
  4109     067C  1903               	skipnz
  4110     067D  2E7F               	goto	u3623
  4111     067E  07B2               	addwf	___flmul@prod+3,f
  4112     067F                     u3623:
  4113     067F                     l3088:
  4114     067F  0822               	movf	___flmul@b+2,w
  4115     0680  00F0               	movwf	__Umul8_16@multiplicand
  4116     0681  0825               	movf	___flmul@a+1,w
  4117     0682  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  4118     0687  0871               	movf	?__Umul8_16+1,w
  4119     0688  1283               	bcf	3,5	;RP0=0, select bank0
  4120     0689  1303               	bcf	3,6	;RP1=0, select bank0
  4121     068A  00B4               	movwf	___flmul@temp+1
  4122     068B  0870               	movf	?__Umul8_16,w
  4123     068C  00B3               	movwf	___flmul@temp
  4124     068D                     l3090:
  4125     068D  0833               	movf	___flmul@temp,w
  4126     068E  00F9               	movwf	??___flmul
  4127     068F  0834               	movf	___flmul@temp+1,w
  4128     0690  00FA               	movwf	??___flmul+1
  4129     0691  01FB               	clrf	??___flmul+2
  4130     0692  01FC               	clrf	??___flmul+3
  4131     0693  0879               	movf	??___flmul,w
  4132     0694  07AF               	addwf	___flmul@prod,f
  4133     0695  087A               	movf	??___flmul+1,w
  4134     0696  1103               	clrz
  4135     0697  1803               	skipnc
  4136     0698  3E01               	addlw	1
  4137     0699  1903               	skipnz
  4138     069A  2E9C               	goto	u3631
  4139     069B  07B0               	addwf	___flmul@prod+1,f
  4140     069C                     u3631:
  4141     069C  087B               	movf	??___flmul+2,w
  4142     069D  1103               	clrz
  4143     069E  1803               	skipnc
  4144     069F  3E01               	addlw	1
  4145     06A0  1903               	skipnz
  4146     06A1  2EA3               	goto	u3632
  4147     06A2  07B1               	addwf	___flmul@prod+2,f
  4148     06A3                     u3632:
  4149     06A3  087C               	movf	??___flmul+3,w
  4150     06A4  1103               	clrz
  4151     06A5  1803               	skipnc
  4152     06A6  3E01               	addlw	1
  4153     06A7  1903               	skipnz
  4154     06A8  2EAA               	goto	u3633
  4155     06A9  07B2               	addwf	___flmul@prod+3,f
  4156     06AA                     u3633:
  4157     06AA  0822               	movf	___flmul@b+2,w
  4158     06AB  00F0               	movwf	__Umul8_16@multiplicand
  4159     06AC  0826               	movf	___flmul@a+2,w
  4160     06AD  160A  118A  2723  120A  118A  	fcall	__Umul8_16
  4161     06B2  0871               	movf	?__Umul8_16+1,w
  4162     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  4163     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  4164     06B5  00B4               	movwf	___flmul@temp+1
  4165     06B6  0870               	movf	?__Umul8_16,w
  4166     06B7  00B3               	movwf	___flmul@temp
  4167     06B8                     l3092:
  4168     06B8  0833               	movf	___flmul@temp,w
  4169     06B9  00F9               	movwf	??___flmul
  4170     06BA  0834               	movf	___flmul@temp+1,w
  4171     06BB  00FA               	movwf	??___flmul+1
  4172     06BC  01FB               	clrf	??___flmul+2
  4173     06BD  01FC               	clrf	??___flmul+3
  4174     06BE  3008               	movlw	8
  4175     06BF                     u3645:
  4176     06BF  1003               	clrc
  4177     06C0  0DF9               	rlf	??___flmul,f
  4178     06C1  0DFA               	rlf	??___flmul+1,f
  4179     06C2  0DFB               	rlf	??___flmul+2,f
  4180     06C3  0DFC               	rlf	??___flmul+3,f
  4181     06C4                     u3640:
  4182     06C4  3EFF               	addlw	-1
  4183     06C5  1D03               	skipz
  4184     06C6  2EBF               	goto	u3645
  4185     06C7  0879               	movf	??___flmul,w
  4186     06C8  07AF               	addwf	___flmul@prod,f
  4187     06C9  087A               	movf	??___flmul+1,w
  4188     06CA  1103               	clrz
  4189     06CB  1803               	skipnc
  4190     06CC  3E01               	addlw	1
  4191     06CD  1903               	skipnz
  4192     06CE  2ED0               	goto	u3651
  4193     06CF  07B0               	addwf	___flmul@prod+1,f
  4194     06D0                     u3651:
  4195     06D0  087B               	movf	??___flmul+2,w
  4196     06D1  1103               	clrz
  4197     06D2  1803               	skipnc
  4198     06D3  3E01               	addlw	1
  4199     06D4  1903               	skipnz
  4200     06D5  2ED7               	goto	u3652
  4201     06D6  07B1               	addwf	___flmul@prod+2,f
  4202     06D7                     u3652:
  4203     06D7  087C               	movf	??___flmul+3,w
  4204     06D8  1103               	clrz
  4205     06D9  1803               	skipnc
  4206     06DA  3E01               	addlw	1
  4207     06DB  1903               	skipnz
  4208     06DC  2EDE               	goto	u3653
  4209     06DD  07B2               	addwf	___flmul@prod+3,f
  4210     06DE                     u3653:
  4211     06DE                     l3094:
  4212     06DE  0829               	movf	___flmul@grs,w
  4213     06DF  00F9               	movwf	??___flmul
  4214     06E0  082A               	movf	___flmul@grs+1,w
  4215     06E1  00FA               	movwf	??___flmul+1
  4216     06E2  082B               	movf	___flmul@grs+2,w
  4217     06E3  00FB               	movwf	??___flmul+2
  4218     06E4  082C               	movf	___flmul@grs+3,w
  4219     06E5  00FC               	movwf	??___flmul+3
  4220     06E6  3018               	movlw	24
  4221     06E7                     u3665:
  4222     06E7  1003               	clrc
  4223     06E8  0CFC               	rrf	??___flmul+3,f
  4224     06E9  0CFB               	rrf	??___flmul+2,f
  4225     06EA  0CFA               	rrf	??___flmul+1,f
  4226     06EB  0CF9               	rrf	??___flmul,f
  4227     06EC                     u3660:
  4228     06EC  3EFF               	addlw	-1
  4229     06ED  1D03               	skipz
  4230     06EE  2EE7               	goto	u3665
  4231     06EF  0879               	movf	??___flmul,w
  4232     06F0  07AF               	addwf	___flmul@prod,f
  4233     06F1  087A               	movf	??___flmul+1,w
  4234     06F2  1103               	clrz
  4235     06F3  1803               	skipnc
  4236     06F4  3E01               	addlw	1
  4237     06F5  1903               	skipnz
  4238     06F6  2EF8               	goto	u3671
  4239     06F7  07B0               	addwf	___flmul@prod+1,f
  4240     06F8                     u3671:
  4241     06F8  087B               	movf	??___flmul+2,w
  4242     06F9  1103               	clrz
  4243     06FA  1803               	skipnc
  4244     06FB  3E01               	addlw	1
  4245     06FC  1903               	skipnz
  4246     06FD  2EFF               	goto	u3672
  4247     06FE  07B1               	addwf	___flmul@prod+2,f
  4248     06FF                     u3672:
  4249     06FF  087C               	movf	??___flmul+3,w
  4250     0700  1103               	clrz
  4251     0701  1803               	skipnc
  4252     0702  3E01               	addlw	1
  4253     0703  1903               	skipnz
  4254     0704  2F06               	goto	u3673
  4255     0705  07B2               	addwf	___flmul@prod+3,f
  4256     0706                     u3673:
  4257     0706                     l3096:
  4258     0706  3008               	movlw	8
  4259     0707  00F9               	movwf	??___flmul
  4260     0708                     u3685:
  4261     0708  1003               	clrc
  4262     0709  0DA9               	rlf	___flmul@grs,f
  4263     070A  0DAA               	rlf	___flmul@grs+1,f
  4264     070B  0DAB               	rlf	___flmul@grs+2,f
  4265     070C  0DAC               	rlf	___flmul@grs+3,f
  4266     070D  0BF9               	decfsz	??___flmul,f
  4267     070E  2F08               	goto	u3685
  4268     070F                     l3098:
  4269     070F  082E               	movf	___flmul@bexp,w
  4270     0710  072D               	addwf	___flmul@aexp,w
  4271     0711  00F9               	movwf	??___flmul
  4272     0712  01FA               	clrf	??___flmul+1
  4273     0713  0DFA               	rlf	??___flmul+1,f
  4274     0714  0879               	movf	??___flmul,w
  4275     0715  3E82               	addlw	130
  4276     0716  00B3               	movwf	___flmul@temp
  4277     0717  087A               	movf	??___flmul+1,w
  4278     0718  1803               	skipnc
  4279     0719  3E01               	addlw	1
  4280     071A  3EFF               	addlw	255
  4281     071B  00B4               	movwf	___flmul@temp+1
  4282     071C  2F3A               	goto	l3110
  4283     071D                     l3100:
  4284     071D  3001               	movlw	1
  4285     071E  00F9               	movwf	??___flmul
  4286     071F                     u3695:
  4287     071F  1003               	clrc
  4288     0720  0DAF               	rlf	___flmul@prod,f
  4289     0721  0DB0               	rlf	___flmul@prod+1,f
  4290     0722  0DB1               	rlf	___flmul@prod+2,f
  4291     0723  0DB2               	rlf	___flmul@prod+3,f
  4292     0724  0BF9               	decfsz	??___flmul,f
  4293     0725  2F1F               	goto	u3695
  4294     0726                     l3102:
  4295     0726  1FAC               	btfss	___flmul@grs+3,7
  4296     0727  2F29               	goto	u3701
  4297     0728  2F2A               	goto	u3700
  4298     0729                     u3701:
  4299     0729  2F2B               	goto	l3106
  4300     072A                     u3700:
  4301     072A                     l3104:
  4302     072A  142F               	bsf	___flmul@prod,0
  4303     072B                     l3106:
  4304     072B  3001               	movlw	1
  4305     072C  00F9               	movwf	??___flmul
  4306     072D                     u3715:
  4307     072D  1003               	clrc
  4308     072E  0DA9               	rlf	___flmul@grs,f
  4309     072F  0DAA               	rlf	___flmul@grs+1,f
  4310     0730  0DAB               	rlf	___flmul@grs+2,f
  4311     0731  0DAC               	rlf	___flmul@grs+3,f
  4312     0732  0BF9               	decfsz	??___flmul,f
  4313     0733  2F2D               	goto	u3715
  4314     0734                     l3108:
  4315     0734  30FF               	movlw	255
  4316     0735  07B3               	addwf	___flmul@temp,f
  4317     0736  1803               	skipnc
  4318     0737  0AB4               	incf	___flmul@temp+1,f
  4319     0738  30FF               	movlw	255
  4320     0739  07B4               	addwf	___flmul@temp+1,f
  4321     073A                     l3110:
  4322     073A  1FB1               	btfss	___flmul@prod+2,7
  4323     073B  2F3D               	goto	u3721
  4324     073C  2F3E               	goto	u3720
  4325     073D                     u3721:
  4326     073D  2F1D               	goto	l3100
  4327     073E                     u3720:
  4328     073E                     l3112:
  4329     073E  01AD               	clrf	___flmul@aexp
  4330     073F                     l3114:
  4331     073F  1FAC               	btfss	___flmul@grs+3,7
  4332     0740  2F42               	goto	u3731
  4333     0741  2F43               	goto	u3730
  4334     0742                     u3731:
  4335     0742  2F5F               	goto	l3122
  4336     0743                     u3730:
  4337     0743                     l3116:
  4338     0743  30FF               	movlw	255
  4339     0744  0529               	andwf	___flmul@grs,w
  4340     0745  00F9               	movwf	??___flmul
  4341     0746  30FF               	movlw	255
  4342     0747  052A               	andwf	___flmul@grs+1,w
  4343     0748  00FA               	movwf	??___flmul+1
  4344     0749  30FF               	movlw	255
  4345     074A  052B               	andwf	___flmul@grs+2,w
  4346     074B  00FB               	movwf	??___flmul+2
  4347     074C  307F               	movlw	127
  4348     074D  052C               	andwf	___flmul@grs+3,w
  4349     074E  00FC               	movwf	??___flmul+3
  4350     074F  087C               	movf	??___flmul+3,w
  4351     0750  047B               	iorwf	??___flmul+2,w
  4352     0751  047A               	iorwf	??___flmul+1,w
  4353     0752  0479               	iorwf	??___flmul,w
  4354     0753  1903               	skipnz
  4355     0754  2F56               	goto	u3741
  4356     0755  2F57               	goto	u3740
  4357     0756                     u3741:
  4358     0756  2F5A               	goto	l860
  4359     0757                     u3740:
  4360     0757                     l3118:
  4361     0757  01AD               	clrf	___flmul@aexp
  4362     0758  0AAD               	incf	___flmul@aexp,f
  4363     0759  2F5F               	goto	l3122
  4364     075A                     l860:
  4365     075A  1C2F               	btfss	___flmul@prod,0
  4366     075B  2F5D               	goto	u3751
  4367     075C  2F5E               	goto	u3750
  4368     075D                     u3751:
  4369     075D  2F5F               	goto	l3122
  4370     075E                     u3750:
  4371     075E  2F57               	goto	l3118
  4372     075F                     l3122:
  4373     075F  082D               	movf	___flmul@aexp,w
  4374     0760  1903               	btfsc	3,2
  4375     0761  2F63               	goto	u3761
  4376     0762  2F64               	goto	u3760
  4377     0763                     u3761:
  4378     0763  2F95               	goto	l3132
  4379     0764                     u3760:
  4380     0764                     l3124:
  4381     0764  3001               	movlw	1
  4382     0765  07AF               	addwf	___flmul@prod,f
  4383     0766  3000               	movlw	0
  4384     0767  1803               	skipnc
  4385     0768  3001               	movlw	1
  4386     0769  07B0               	addwf	___flmul@prod+1,f
  4387     076A  3000               	movlw	0
  4388     076B  1803               	skipnc
  4389     076C  3001               	movlw	1
  4390     076D  07B1               	addwf	___flmul@prod+2,f
  4391     076E  3000               	movlw	0
  4392     076F  1803               	skipnc
  4393     0770  3001               	movlw	1
  4394     0771  07B2               	addwf	___flmul@prod+3,f
  4395     0772                     l3126:
  4396     0772  1C32               	btfss	___flmul@prod+3,0
  4397     0773  2F75               	goto	u3771
  4398     0774  2F76               	goto	u3770
  4399     0775                     u3771:
  4400     0775  2F95               	goto	l3132
  4401     0776                     u3770:
  4402     0776                     l3128:
  4403     0776  082F               	movf	___flmul@prod,w
  4404     0777  00F9               	movwf	??___flmul
  4405     0778  0830               	movf	___flmul@prod+1,w
  4406     0779  00FA               	movwf	??___flmul+1
  4407     077A  0831               	movf	___flmul@prod+2,w
  4408     077B  00FB               	movwf	??___flmul+2
  4409     077C  0832               	movf	___flmul@prod+3,w
  4410     077D  00FC               	movwf	??___flmul+3
  4411     077E  3001               	movlw	1
  4412     077F  00FD               	movwf	??___flmul+4
  4413     0780                     u3785:
  4414     0780  0D7C               	rlf	??___flmul+3,w
  4415     0781  0CFC               	rrf	??___flmul+3,f
  4416     0782  0CFB               	rrf	??___flmul+2,f
  4417     0783  0CFA               	rrf	??___flmul+1,f
  4418     0784  0CF9               	rrf	??___flmul,f
  4419     0785                     u3780:
  4420     0785  0BFD               	decfsz	??___flmul+4,f
  4421     0786  2F80               	goto	u3785
  4422     0787  087C               	movf	??___flmul+3,w
  4423     0788  00B2               	movwf	___flmul@prod+3
  4424     0789  087B               	movf	??___flmul+2,w
  4425     078A  00B1               	movwf	___flmul@prod+2
  4426     078B  087A               	movf	??___flmul+1,w
  4427     078C  00B0               	movwf	___flmul@prod+1
  4428     078D  0879               	movf	??___flmul,w
  4429     078E  00AF               	movwf	___flmul@prod
  4430     078F                     l3130:
  4431     078F  3001               	movlw	1
  4432     0790  07B3               	addwf	___flmul@temp,f
  4433     0791  1803               	skipnc
  4434     0792  0AB4               	incf	___flmul@temp+1,f
  4435     0793  3000               	movlw	0
  4436     0794  07B4               	addwf	___flmul@temp+1,f
  4437     0795                     l3132:
  4438     0795  0834               	movf	___flmul@temp+1,w
  4439     0796  3A80               	xorlw	128
  4440     0797  00FF               	movwf	btemp+1
  4441     0798  3080               	movlw	128
  4442     0799  027F               	subwf	btemp+1,w
  4443     079A  1D03               	skipz
  4444     079B  2F9E               	goto	u3795
  4445     079C  30FF               	movlw	255
  4446     079D  0233               	subwf	___flmul@temp,w
  4447     079E                     u3795:
  4448     079E  1C03               	skipc
  4449     079F  2FA1               	goto	u3791
  4450     07A0  2FA2               	goto	u3790
  4451     07A1                     u3791:
  4452     07A1  2FAD               	goto	l3136
  4453     07A2                     u3790:
  4454     07A2                     l3134:
  4455     07A2  307F               	movlw	127
  4456     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4457     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4458     07A5  00B2               	movwf	___flmul@prod+3
  4459     07A6  3080               	movlw	128
  4460     07A7  00B1               	movwf	___flmul@prod+2
  4461     07A8  3000               	movlw	0
  4462     07A9  00B0               	movwf	___flmul@prod+1
  4463     07AA  3000               	movlw	0
  4464     07AB  00AF               	movwf	___flmul@prod
  4465     07AC  2FDE               	goto	l866
  4466     07AD                     l3136:
  4467     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4468     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  4469     07AF  0834               	movf	___flmul@temp+1,w
  4470     07B0  3A80               	xorlw	128
  4471     07B1  00FF               	movwf	btemp+1
  4472     07B2  3080               	movlw	128
  4473     07B3  027F               	subwf	btemp+1,w
  4474     07B4  1D03               	skipz
  4475     07B5  2FB8               	goto	u3805
  4476     07B6  3001               	movlw	1
  4477     07B7  0233               	subwf	___flmul@temp,w
  4478     07B8                     u3805:
  4479     07B8  1803               	skipnc
  4480     07B9  2FBB               	goto	u3801
  4481     07BA  2FBC               	goto	u3800
  4482     07BB                     u3801:
  4483     07BB  2FC8               	goto	l3142
  4484     07BC                     u3800:
  4485     07BC                     l3138:
  4486     07BC  3000               	movlw	0
  4487     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  4488     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  4489     07BF  00B2               	movwf	___flmul@prod+3
  4490     07C0  3000               	movlw	0
  4491     07C1  00B1               	movwf	___flmul@prod+2
  4492     07C2  3000               	movlw	0
  4493     07C3  00B0               	movwf	___flmul@prod+1
  4494     07C4  3000               	movlw	0
  4495     07C5  00AF               	movwf	___flmul@prod
  4496     07C6                     l3140:
  4497     07C6  01A8               	clrf	___flmul@sign
  4498     07C7  2FDE               	goto	l866
  4499     07C8                     l3142:
  4500     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4501     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4502     07CA  0833               	movf	___flmul@temp,w
  4503     07CB  00AE               	movwf	___flmul@bexp
  4504     07CC  30FF               	movlw	255
  4505     07CD  05AF               	andwf	___flmul@prod,f
  4506     07CE  30FF               	movlw	255
  4507     07CF  05B0               	andwf	___flmul@prod+1,f
  4508     07D0  307F               	movlw	127
  4509     07D1  05B1               	andwf	___flmul@prod+2,f
  4510     07D2  3000               	movlw	0
  4511     07D3  05B2               	andwf	___flmul@prod+3,f
  4512     07D4                     l3144:
  4513     07D4  1C2E               	btfss	___flmul@bexp,0
  4514     07D5  2FD7               	goto	u3811
  4515     07D6  2FD8               	goto	u3810
  4516     07D7                     u3811:
  4517     07D7  2FD9               	goto	l3148
  4518     07D8                     u3810:
  4519     07D8                     l3146:
  4520     07D8  17B1               	bsf	___flmul@prod+2,7
  4521     07D9                     l3148:
  4522     07D9  082E               	movf	___flmul@bexp,w
  4523     07DA  00F9               	movwf	??___flmul
  4524     07DB  1003               	clrc
  4525     07DC  0C79               	rrf	??___flmul,w
  4526     07DD  00B2               	movwf	___flmul@prod+3
  4527     07DE                     l866:
  4528     07DE  0828               	movf	___flmul@sign,w
  4529     07DF  00F9               	movwf	??___flmul
  4530     07E0  0879               	movf	??___flmul,w
  4531     07E1  04B2               	iorwf	___flmul@prod+3,f
  4532     07E2                     l3150:
  4533     07E2  0832               	movf	___flmul@prod+3,w
  4534     07E3  00A3               	movwf	?___flmul+3
  4535     07E4  0831               	movf	___flmul@prod+2,w
  4536     07E5  00A2               	movwf	?___flmul+2
  4537     07E6  0830               	movf	___flmul@prod+1,w
  4538     07E7  00A1               	movwf	?___flmul+1
  4539     07E8  082F               	movf	___flmul@prod,w
  4540     07E9  00A0               	movwf	?___flmul
  4541     07EA                     l854:
  4542     07EA  0008               	return
  4543     07EB                     __end_of___flmul:
  4544                           
  4545                           	psect	text12
  4546     1723                     __ptext12:	
  4547 ;; *************** function __Umul8_16 *****************
  4548 ;; Defined at:
  4549 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  multiplier      1    wreg     unsigned char 
  4552 ;;  multiplicand    1    0[COMMON] unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  multiplier      1    8[COMMON] unsigned char 
  4555 ;;  word_mpld       2    6[COMMON] unsigned int 
  4556 ;;  product         2    4[COMMON] unsigned int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2    0[COMMON] unsigned int 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4566 ;;      Params:         2       0       0       0       0
  4567 ;;      Locals:         5       0       0       0       0
  4568 ;;      Temps:          2       0       0       0       0
  4569 ;;      Totals:         9       0       0       0       0
  4570 ;;Total ram usage:        9 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		___flmul
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579     1723                     __Umul8_16:	
  4580                           ;psect for function __Umul8_16
  4581                           
  4582                           
  4583                           ;incstack = 0
  4584                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4585                           ;__Umul8_16@multiplier stored from wreg
  4586     1723  00F8               	movwf	__Umul8_16@multiplier
  4587     1724                     l2380:
  4588     1724  01F4               	clrf	__Umul8_16@product
  4589     1725  01F5               	clrf	__Umul8_16@product+1
  4590     1726                     l2382:
  4591     1726  0870               	movf	__Umul8_16@multiplicand,w
  4592     1727  00F2               	movwf	??__Umul8_16
  4593     1728  01F3               	clrf	??__Umul8_16+1
  4594     1729  0872               	movf	??__Umul8_16,w
  4595     172A  00F6               	movwf	__Umul8_16@word_mpld
  4596     172B  0873               	movf	??__Umul8_16+1,w
  4597     172C  00F7               	movwf	__Umul8_16@word_mpld+1
  4598     172D                     l2384:
  4599     172D  1C78               	btfss	__Umul8_16@multiplier,0
  4600     172E  2F30               	goto	u2331
  4601     172F  2F31               	goto	u2330
  4602     1730                     u2331:
  4603     1730  2F37               	goto	l873
  4604     1731                     u2330:
  4605     1731                     l2386:
  4606     1731  0876               	movf	__Umul8_16@word_mpld,w
  4607     1732  07F4               	addwf	__Umul8_16@product,f
  4608     1733  1803               	skipnc
  4609     1734  0AF5               	incf	__Umul8_16@product+1,f
  4610     1735  0877               	movf	__Umul8_16@word_mpld+1,w
  4611     1736  07F5               	addwf	__Umul8_16@product+1,f
  4612     1737                     l873:
  4613     1737  3001               	movlw	1
  4614     1738                     u2345:
  4615     1738  1003               	clrc
  4616     1739  0DF6               	rlf	__Umul8_16@word_mpld,f
  4617     173A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4618     173B  3EFF               	addlw	-1
  4619     173C  1D03               	skipz
  4620     173D  2F38               	goto	u2345
  4621     173E  1003               	clrc
  4622     173F  0CF8               	rrf	__Umul8_16@multiplier,f
  4623     1740                     l2388:
  4624     1740  0878               	movf	__Umul8_16@multiplier,w
  4625     1741  1D03               	btfss	3,2
  4626     1742  2F44               	goto	u2351
  4627     1743  2F45               	goto	u2350
  4628     1744                     u2351:
  4629     1744  2F2D               	goto	l2384
  4630     1745                     u2350:
  4631     1745                     l2390:
  4632     1745  0875               	movf	__Umul8_16@product+1,w
  4633     1746  00F1               	movwf	?__Umul8_16+1
  4634     1747  0874               	movf	__Umul8_16@product,w
  4635     1748  00F0               	movwf	?__Umul8_16
  4636     1749                     l875:
  4637     1749  0008               	return
  4638     174A                     __end_of__Umul8_16:
  4639                           
  4640                           	psect	text13
  4641     0E2D                     __ptext13:	
  4642 ;; *************** function ___fldiv *****************
  4643 ;; Defined at:
  4644 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcdiv.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  a               4   21[BANK0 ] unsigned int 
  4647 ;;  b               4   25[BANK0 ] unsigned int 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  grs             4   41[BANK0 ] unsigned long 
  4650 ;;  rem             4   34[BANK0 ] unsigned long 
  4651 ;;  new_exp         2   39[BANK0 ] int 
  4652 ;;  aexp            1   46[BANK0 ] unsigned char 
  4653 ;;  bexp            1   45[BANK0 ] unsigned char 
  4654 ;;  sign            1   38[BANK0 ] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  4   21[BANK0 ] unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, btemp+1
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       8       0       0       0
  4665 ;;      Locals:         0      13       0       0       0
  4666 ;;      Temps:          0       5       0       0       0
  4667 ;;      Totals:         0      26       0       0       0
  4668 ;;Total ram usage:       26 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677     0E2D                     ___fldiv:	
  4678                           ;psect for function ___fldiv
  4679                           
  4680     0E2D                     l2872:	
  4681                           ;incstack = 0
  4682                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4683                           
  4684     0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4685     0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4686     0E2F  083C               	movf	___fldiv@b+3,w
  4687     0E30  3980               	andlw	128
  4688     0E31  00C6               	movwf	___fldiv@sign
  4689     0E32                     l2874:
  4690     0E32  083C               	movf	___fldiv@b+3,w
  4691     0E33  00BD               	movwf	??___fldiv
  4692     0E34  073D               	addwf	??___fldiv,w
  4693     0E35  00CD               	movwf	___fldiv@bexp
  4694     0E36                     l2876:
  4695     0E36  1FBB               	btfss	___fldiv@b+2,7
  4696     0E37  2E39               	goto	u3161
  4697     0E38  2E3A               	goto	u3160
  4698     0E39                     u3161:
  4699     0E39  2E3B               	goto	l2880
  4700     0E3A                     u3160:
  4701     0E3A                     l2878:
  4702     0E3A  144D               	bsf	___fldiv@bexp,0
  4703     0E3B                     l2880:
  4704     0E3B  084D               	movf	___fldiv@bexp,w
  4705     0E3C  1903               	btfsc	3,2
  4706     0E3D  2E3F               	goto	u3171
  4707     0E3E  2E40               	goto	u3170
  4708     0E3F                     u3171:
  4709     0E3F  2E50               	goto	l2890
  4710     0E40                     u3170:
  4711     0E40                     l2882:
  4712     0E40  0A4D               	incf	___fldiv@bexp,w
  4713     0E41  1D03               	btfss	3,2
  4714     0E42  2E44               	goto	u3181
  4715     0E43  2E45               	goto	u3180
  4716     0E44                     u3181:
  4717     0E44  2E4D               	goto	l2886
  4718     0E45                     u3180:
  4719     0E45                     l2884:
  4720     0E45  3000               	movlw	0
  4721     0E46  00BC               	movwf	___fldiv@b+3
  4722     0E47  3000               	movlw	0
  4723     0E48  00BB               	movwf	___fldiv@b+2
  4724     0E49  3000               	movlw	0
  4725     0E4A  00BA               	movwf	___fldiv@b+1
  4726     0E4B  3000               	movlw	0
  4727     0E4C  00B9               	movwf	___fldiv@b
  4728     0E4D                     l2886:
  4729     0E4D  17BB               	bsf	___fldiv@b+2,7
  4730     0E4E                     l2888:
  4731     0E4E  01BC               	clrf	___fldiv@b+3
  4732     0E4F  2E58               	goto	l2892
  4733     0E50                     l2890:
  4734     0E50  3000               	movlw	0
  4735     0E51  00BC               	movwf	___fldiv@b+3
  4736     0E52  3000               	movlw	0
  4737     0E53  00BB               	movwf	___fldiv@b+2
  4738     0E54  3000               	movlw	0
  4739     0E55  00BA               	movwf	___fldiv@b+1
  4740     0E56  3000               	movlw	0
  4741     0E57  00B9               	movwf	___fldiv@b
  4742     0E58                     l2892:
  4743     0E58  0838               	movf	___fldiv@a+3,w
  4744     0E59  3980               	andlw	128
  4745     0E5A  00BD               	movwf	??___fldiv
  4746     0E5B  083D               	movf	??___fldiv,w
  4747     0E5C  06C6               	xorwf	___fldiv@sign,f
  4748     0E5D                     l2894:
  4749     0E5D  0838               	movf	___fldiv@a+3,w
  4750     0E5E  00BD               	movwf	??___fldiv
  4751     0E5F  073D               	addwf	??___fldiv,w
  4752     0E60  00CE               	movwf	___fldiv@aexp
  4753     0E61                     l2896:
  4754     0E61  1FB7               	btfss	___fldiv@a+2,7
  4755     0E62  2E64               	goto	u3191
  4756     0E63  2E65               	goto	u3190
  4757     0E64                     u3191:
  4758     0E64  2E66               	goto	l2900
  4759     0E65                     u3190:
  4760     0E65                     l2898:
  4761     0E65  144E               	bsf	___fldiv@aexp,0
  4762     0E66                     l2900:
  4763     0E66  084E               	movf	___fldiv@aexp,w
  4764     0E67  1903               	btfsc	3,2
  4765     0E68  2E6A               	goto	u3201
  4766     0E69  2E6B               	goto	u3200
  4767     0E6A                     u3201:
  4768     0E6A  2E7B               	goto	l2910
  4769     0E6B                     u3200:
  4770     0E6B                     l2902:
  4771     0E6B  0A4E               	incf	___fldiv@aexp,w
  4772     0E6C  1D03               	btfss	3,2
  4773     0E6D  2E6F               	goto	u3211
  4774     0E6E  2E70               	goto	u3210
  4775     0E6F                     u3211:
  4776     0E6F  2E78               	goto	l2906
  4777     0E70                     u3210:
  4778     0E70                     l2904:
  4779     0E70  3000               	movlw	0
  4780     0E71  00B8               	movwf	___fldiv@a+3
  4781     0E72  3000               	movlw	0
  4782     0E73  00B7               	movwf	___fldiv@a+2
  4783     0E74  3000               	movlw	0
  4784     0E75  00B6               	movwf	___fldiv@a+1
  4785     0E76  3000               	movlw	0
  4786     0E77  00B5               	movwf	___fldiv@a
  4787     0E78                     l2906:
  4788     0E78  17B7               	bsf	___fldiv@a+2,7
  4789     0E79                     l2908:
  4790     0E79  01B8               	clrf	___fldiv@a+3
  4791     0E7A  2E83               	goto	l814
  4792     0E7B                     l2910:
  4793     0E7B  3000               	movlw	0
  4794     0E7C  00B8               	movwf	___fldiv@a+3
  4795     0E7D  3000               	movlw	0
  4796     0E7E  00B7               	movwf	___fldiv@a+2
  4797     0E7F  3000               	movlw	0
  4798     0E80  00B6               	movwf	___fldiv@a+1
  4799     0E81  3000               	movlw	0
  4800     0E82  00B5               	movwf	___fldiv@a
  4801     0E83                     l814:
  4802     0E83  0838               	movf	___fldiv@a+3,w
  4803     0E84  0437               	iorwf	___fldiv@a+2,w
  4804     0E85  0436               	iorwf	___fldiv@a+1,w
  4805     0E86  0435               	iorwf	___fldiv@a,w
  4806     0E87  1D03               	skipz
  4807     0E88  2E8A               	goto	u3221
  4808     0E89  2E8B               	goto	u3220
  4809     0E8A                     u3221:
  4810     0E8A  2EA4               	goto	l2920
  4811     0E8B                     u3220:
  4812     0E8B                     l2912:
  4813     0E8B  3000               	movlw	0
  4814     0E8C  00BC               	movwf	___fldiv@b+3
  4815     0E8D  3000               	movlw	0
  4816     0E8E  00BB               	movwf	___fldiv@b+2
  4817     0E8F  3000               	movlw	0
  4818     0E90  00BA               	movwf	___fldiv@b+1
  4819     0E91  3000               	movlw	0
  4820     0E92  00B9               	movwf	___fldiv@b
  4821     0E93  3080               	movlw	128
  4822     0E94  04BB               	iorwf	___fldiv@b+2,f
  4823     0E95  307F               	movlw	127
  4824     0E96  04BC               	iorwf	___fldiv@b+3,f
  4825     0E97                     l2914:
  4826     0E97  0846               	movf	___fldiv@sign,w
  4827     0E98  00BD               	movwf	??___fldiv
  4828     0E99  083D               	movf	??___fldiv,w
  4829     0E9A  04BC               	iorwf	___fldiv@b+3,f
  4830     0E9B                     l2916:
  4831     0E9B  083C               	movf	___fldiv@b+3,w
  4832     0E9C  00B8               	movwf	?___fldiv+3
  4833     0E9D  083B               	movf	___fldiv@b+2,w
  4834     0E9E  00B7               	movwf	?___fldiv+2
  4835     0E9F  083A               	movf	___fldiv@b+1,w
  4836     0EA0  00B6               	movwf	?___fldiv+1
  4837     0EA1  0839               	movf	___fldiv@b,w
  4838     0EA2  00B5               	movwf	?___fldiv
  4839     0EA3  2FFF               	goto	l816
  4840     0EA4                     l2920:
  4841     0EA4  084D               	movf	___fldiv@bexp,w
  4842     0EA5  1D03               	btfss	3,2
  4843     0EA6  2EA8               	goto	u3231
  4844     0EA7  2EA9               	goto	u3230
  4845     0EA8                     u3231:
  4846     0EA8  2EB2               	goto	l2926
  4847     0EA9                     u3230:
  4848     0EA9                     l2922:
  4849     0EA9  3000               	movlw	0
  4850     0EAA  00B8               	movwf	?___fldiv+3
  4851     0EAB  3000               	movlw	0
  4852     0EAC  00B7               	movwf	?___fldiv+2
  4853     0EAD  3000               	movlw	0
  4854     0EAE  00B6               	movwf	?___fldiv+1
  4855     0EAF  3000               	movlw	0
  4856     0EB0  00B5               	movwf	?___fldiv
  4857     0EB1  2FFF               	goto	l816
  4858     0EB2                     l2926:
  4859     0EB2  084D               	movf	___fldiv@bexp,w
  4860     0EB3  00BD               	movwf	??___fldiv
  4861     0EB4  01BE               	clrf	??___fldiv+1
  4862     0EB5  083E               	movf	??___fldiv+1,w
  4863     0EB6  00C0               	movwf	??___fldiv+3
  4864     0EB7  084E               	movf	___fldiv@aexp,w
  4865     0EB8  023D               	subwf	??___fldiv,w
  4866     0EB9  00BF               	movwf	??___fldiv+2
  4867     0EBA  1C03               	skipc
  4868     0EBB  03C0               	decf	??___fldiv+3,f
  4869     0EBC  083F               	movf	??___fldiv+2,w
  4870     0EBD  3E7F               	addlw	127
  4871     0EBE  00C7               	movwf	___fldiv@new_exp
  4872     0EBF  0840               	movf	??___fldiv+3,w
  4873     0EC0  1803               	skipnc
  4874     0EC1  3E01               	addlw	1
  4875     0EC2  3E00               	addlw	0
  4876     0EC3  00C8               	movwf	___fldiv@new_exp+1
  4877     0EC4                     l2928:
  4878     0EC4  083C               	movf	___fldiv@b+3,w
  4879     0EC5  00C5               	movwf	___fldiv@rem+3
  4880     0EC6  083B               	movf	___fldiv@b+2,w
  4881     0EC7  00C4               	movwf	___fldiv@rem+2
  4882     0EC8  083A               	movf	___fldiv@b+1,w
  4883     0EC9  00C3               	movwf	___fldiv@rem+1
  4884     0ECA  0839               	movf	___fldiv@b,w
  4885     0ECB  00C2               	movwf	___fldiv@rem
  4886     0ECC                     l2930:
  4887     0ECC  3000               	movlw	0
  4888     0ECD  00BC               	movwf	___fldiv@b+3
  4889     0ECE  3000               	movlw	0
  4890     0ECF  00BB               	movwf	___fldiv@b+2
  4891     0ED0  3000               	movlw	0
  4892     0ED1  00BA               	movwf	___fldiv@b+1
  4893     0ED2  3000               	movlw	0
  4894     0ED3  00B9               	movwf	___fldiv@b
  4895     0ED4                     l2932:
  4896     0ED4  3000               	movlw	0
  4897     0ED5  00CC               	movwf	___fldiv@grs+3
  4898     0ED6  3000               	movlw	0
  4899     0ED7  00CB               	movwf	___fldiv@grs+2
  4900     0ED8  3000               	movlw	0
  4901     0ED9  00CA               	movwf	___fldiv@grs+1
  4902     0EDA  3000               	movlw	0
  4903     0EDB  00C9               	movwf	___fldiv@grs
  4904     0EDC                     l2934:
  4905     0EDC  01CE               	clrf	___fldiv@aexp
  4906     0EDD  2F28               	goto	l2954
  4907     0EDE                     l2936:
  4908     0EDE  084E               	movf	___fldiv@aexp,w
  4909     0EDF  1903               	btfsc	3,2
  4910     0EE0  2EE2               	goto	u3241
  4911     0EE1  2EE3               	goto	u3240
  4912     0EE2                     u3241:
  4913     0EE2  2F03               	goto	l2946
  4914     0EE3                     u3240:
  4915     0EE3                     l2938:
  4916     0EE3  3001               	movlw	1
  4917     0EE4  00BD               	movwf	??___fldiv
  4918     0EE5                     u3255:
  4919     0EE5  1003               	clrc
  4920     0EE6  0DC2               	rlf	___fldiv@rem,f
  4921     0EE7  0DC3               	rlf	___fldiv@rem+1,f
  4922     0EE8  0DC4               	rlf	___fldiv@rem+2,f
  4923     0EE9  0DC5               	rlf	___fldiv@rem+3,f
  4924     0EEA  0BBD               	decfsz	??___fldiv,f
  4925     0EEB  2EE5               	goto	u3255
  4926     0EEC  3001               	movlw	1
  4927     0EED  00BD               	movwf	??___fldiv
  4928     0EEE                     u3265:
  4929     0EEE  1003               	clrc
  4930     0EEF  0DB9               	rlf	___fldiv@b,f
  4931     0EF0  0DBA               	rlf	___fldiv@b+1,f
  4932     0EF1  0DBB               	rlf	___fldiv@b+2,f
  4933     0EF2  0DBC               	rlf	___fldiv@b+3,f
  4934     0EF3  0BBD               	decfsz	??___fldiv,f
  4935     0EF4  2EEE               	goto	u3265
  4936     0EF5                     l2940:
  4937     0EF5  1FCC               	btfss	___fldiv@grs+3,7
  4938     0EF6  2EF8               	goto	u3271
  4939     0EF7  2EF9               	goto	u3270
  4940     0EF8                     u3271:
  4941     0EF8  2EFA               	goto	l2944
  4942     0EF9                     u3270:
  4943     0EF9                     l2942:
  4944     0EF9  1439               	bsf	___fldiv@b,0
  4945     0EFA                     l2944:
  4946     0EFA  3001               	movlw	1
  4947     0EFB  00BD               	movwf	??___fldiv
  4948     0EFC                     u3285:
  4949     0EFC  1003               	clrc
  4950     0EFD  0DC9               	rlf	___fldiv@grs,f
  4951     0EFE  0DCA               	rlf	___fldiv@grs+1,f
  4952     0EFF  0DCB               	rlf	___fldiv@grs+2,f
  4953     0F00  0DCC               	rlf	___fldiv@grs+3,f
  4954     0F01  0BBD               	decfsz	??___fldiv,f
  4955     0F02  2EFC               	goto	u3285
  4956     0F03                     l2946:
  4957     0F03  0838               	movf	___fldiv@a+3,w
  4958     0F04  0245               	subwf	___fldiv@rem+3,w
  4959     0F05  1D03               	skipz
  4960     0F06  2F11               	goto	u3295
  4961     0F07  0837               	movf	___fldiv@a+2,w
  4962     0F08  0244               	subwf	___fldiv@rem+2,w
  4963     0F09  1D03               	skipz
  4964     0F0A  2F11               	goto	u3295
  4965     0F0B  0836               	movf	___fldiv@a+1,w
  4966     0F0C  0243               	subwf	___fldiv@rem+1,w
  4967     0F0D  1D03               	skipz
  4968     0F0E  2F11               	goto	u3295
  4969     0F0F  0835               	movf	___fldiv@a,w
  4970     0F10  0242               	subwf	___fldiv@rem,w
  4971     0F11                     u3295:
  4972     0F11  1C03               	skipc
  4973     0F12  2F14               	goto	u3291
  4974     0F13  2F15               	goto	u3290
  4975     0F14                     u3291:
  4976     0F14  2F24               	goto	l2952
  4977     0F15                     u3290:
  4978     0F15                     l2948:
  4979     0F15  174C               	bsf	___fldiv@grs+3,6
  4980     0F16                     l2950:
  4981     0F16  0835               	movf	___fldiv@a,w
  4982     0F17  02C2               	subwf	___fldiv@rem,f
  4983     0F18  0836               	movf	___fldiv@a+1,w
  4984     0F19  1C03               	skipc
  4985     0F1A  0F36               	incfsz	___fldiv@a+1,w
  4986     0F1B  02C3               	subwf	___fldiv@rem+1,f
  4987     0F1C  0837               	movf	___fldiv@a+2,w
  4988     0F1D  1C03               	skipc
  4989     0F1E  0F37               	incfsz	___fldiv@a+2,w
  4990     0F1F  02C4               	subwf	___fldiv@rem+2,f
  4991     0F20  0838               	movf	___fldiv@a+3,w
  4992     0F21  1C03               	skipc
  4993     0F22  0F38               	incfsz	___fldiv@a+3,w
  4994     0F23  02C5               	subwf	___fldiv@rem+3,f
  4995     0F24                     l2952:
  4996     0F24  3001               	movlw	1
  4997     0F25  00BD               	movwf	??___fldiv
  4998     0F26  083D               	movf	??___fldiv,w
  4999     0F27  07CE               	addwf	___fldiv@aexp,f
  5000     0F28                     l2954:
  5001     0F28  301A               	movlw	26
  5002     0F29  024E               	subwf	___fldiv@aexp,w
  5003     0F2A  1C03               	skipc
  5004     0F2B  2F2D               	goto	u3301
  5005     0F2C  2F2E               	goto	u3300
  5006     0F2D                     u3301:
  5007     0F2D  2EDE               	goto	l2936
  5008     0F2E                     u3300:
  5009     0F2E                     l2956:
  5010     0F2E  0845               	movf	___fldiv@rem+3,w
  5011     0F2F  0444               	iorwf	___fldiv@rem+2,w
  5012     0F30  0443               	iorwf	___fldiv@rem+1,w
  5013     0F31  0442               	iorwf	___fldiv@rem,w
  5014     0F32  1903               	skipnz
  5015     0F33  2F35               	goto	u3311
  5016     0F34  2F36               	goto	u3310
  5017     0F35                     u3311:
  5018     0F35  2F55               	goto	l2970
  5019     0F36                     u3310:
  5020     0F36                     l2958:
  5021     0F36  1449               	bsf	___fldiv@grs,0
  5022     0F37  2F55               	goto	l2970
  5023     0F38                     l2960:
  5024     0F38  3001               	movlw	1
  5025     0F39  00BD               	movwf	??___fldiv
  5026     0F3A                     u3325:
  5027     0F3A  1003               	clrc
  5028     0F3B  0DB9               	rlf	___fldiv@b,f
  5029     0F3C  0DBA               	rlf	___fldiv@b+1,f
  5030     0F3D  0DBB               	rlf	___fldiv@b+2,f
  5031     0F3E  0DBC               	rlf	___fldiv@b+3,f
  5032     0F3F  0BBD               	decfsz	??___fldiv,f
  5033     0F40  2F3A               	goto	u3325
  5034     0F41                     l2962:
  5035     0F41  1FCC               	btfss	___fldiv@grs+3,7
  5036     0F42  2F44               	goto	u3331
  5037     0F43  2F45               	goto	u3330
  5038     0F44                     u3331:
  5039     0F44  2F46               	goto	l2966
  5040     0F45                     u3330:
  5041     0F45                     l2964:
  5042     0F45  1439               	bsf	___fldiv@b,0
  5043     0F46                     l2966:
  5044     0F46  3001               	movlw	1
  5045     0F47  00BD               	movwf	??___fldiv
  5046     0F48                     u3345:
  5047     0F48  1003               	clrc
  5048     0F49  0DC9               	rlf	___fldiv@grs,f
  5049     0F4A  0DCA               	rlf	___fldiv@grs+1,f
  5050     0F4B  0DCB               	rlf	___fldiv@grs+2,f
  5051     0F4C  0DCC               	rlf	___fldiv@grs+3,f
  5052     0F4D  0BBD               	decfsz	??___fldiv,f
  5053     0F4E  2F48               	goto	u3345
  5054     0F4F                     l2968:
  5055     0F4F  30FF               	movlw	255
  5056     0F50  07C7               	addwf	___fldiv@new_exp,f
  5057     0F51  1803               	skipnc
  5058     0F52  0AC8               	incf	___fldiv@new_exp+1,f
  5059     0F53  30FF               	movlw	255
  5060     0F54  07C8               	addwf	___fldiv@new_exp+1,f
  5061     0F55                     l2970:
  5062     0F55  1FBB               	btfss	___fldiv@b+2,7
  5063     0F56  2F58               	goto	u3351
  5064     0F57  2F59               	goto	u3350
  5065     0F58                     u3351:
  5066     0F58  2F38               	goto	l2960
  5067     0F59                     u3350:
  5068     0F59                     l2972:
  5069     0F59  01CE               	clrf	___fldiv@aexp
  5070     0F5A                     l2974:
  5071     0F5A  1FCC               	btfss	___fldiv@grs+3,7
  5072     0F5B  2F5D               	goto	u3361
  5073     0F5C  2F5E               	goto	u3360
  5074     0F5D                     u3361:
  5075     0F5D  2F7A               	goto	l2982
  5076     0F5E                     u3360:
  5077     0F5E                     l2976:
  5078     0F5E  30FF               	movlw	255
  5079     0F5F  0549               	andwf	___fldiv@grs,w
  5080     0F60  00BD               	movwf	??___fldiv
  5081     0F61  30FF               	movlw	255
  5082     0F62  054A               	andwf	___fldiv@grs+1,w
  5083     0F63  00BE               	movwf	??___fldiv+1
  5084     0F64  30FF               	movlw	255
  5085     0F65  054B               	andwf	___fldiv@grs+2,w
  5086     0F66  00BF               	movwf	??___fldiv+2
  5087     0F67  307F               	movlw	127
  5088     0F68  054C               	andwf	___fldiv@grs+3,w
  5089     0F69  00C0               	movwf	??___fldiv+3
  5090     0F6A  0840               	movf	??___fldiv+3,w
  5091     0F6B  043F               	iorwf	??___fldiv+2,w
  5092     0F6C  043E               	iorwf	??___fldiv+1,w
  5093     0F6D  043D               	iorwf	??___fldiv,w
  5094     0F6E  1903               	skipnz
  5095     0F6F  2F71               	goto	u3371
  5096     0F70  2F72               	goto	u3370
  5097     0F71                     u3371:
  5098     0F71  2F75               	goto	l830
  5099     0F72                     u3370:
  5100     0F72                     l2978:
  5101     0F72  01CE               	clrf	___fldiv@aexp
  5102     0F73  0ACE               	incf	___fldiv@aexp,f
  5103     0F74  2F7A               	goto	l2982
  5104     0F75                     l830:
  5105     0F75  1C39               	btfss	___fldiv@b,0
  5106     0F76  2F78               	goto	u3381
  5107     0F77  2F79               	goto	u3380
  5108     0F78                     u3381:
  5109     0F78  2F7A               	goto	l2982
  5110     0F79                     u3380:
  5111     0F79  2F72               	goto	l2978
  5112     0F7A                     l2982:
  5113     0F7A  084E               	movf	___fldiv@aexp,w
  5114     0F7B  1903               	btfsc	3,2
  5115     0F7C  2F7E               	goto	u3391
  5116     0F7D  2F7F               	goto	u3390
  5117     0F7E                     u3391:
  5118     0F7E  2FB0               	goto	l2992
  5119     0F7F                     u3390:
  5120     0F7F                     l2984:
  5121     0F7F  3001               	movlw	1
  5122     0F80  07B9               	addwf	___fldiv@b,f
  5123     0F81  3000               	movlw	0
  5124     0F82  1803               	skipnc
  5125     0F83  3001               	movlw	1
  5126     0F84  07BA               	addwf	___fldiv@b+1,f
  5127     0F85  3000               	movlw	0
  5128     0F86  1803               	skipnc
  5129     0F87  3001               	movlw	1
  5130     0F88  07BB               	addwf	___fldiv@b+2,f
  5131     0F89  3000               	movlw	0
  5132     0F8A  1803               	skipnc
  5133     0F8B  3001               	movlw	1
  5134     0F8C  07BC               	addwf	___fldiv@b+3,f
  5135     0F8D                     l2986:
  5136     0F8D  1C3C               	btfss	___fldiv@b+3,0
  5137     0F8E  2F90               	goto	u3401
  5138     0F8F  2F91               	goto	u3400
  5139     0F90                     u3401:
  5140     0F90  2FB0               	goto	l2992
  5141     0F91                     u3400:
  5142     0F91                     l2988:
  5143     0F91  0839               	movf	___fldiv@b,w
  5144     0F92  00BD               	movwf	??___fldiv
  5145     0F93  083A               	movf	___fldiv@b+1,w
  5146     0F94  00BE               	movwf	??___fldiv+1
  5147     0F95  083B               	movf	___fldiv@b+2,w
  5148     0F96  00BF               	movwf	??___fldiv+2
  5149     0F97  083C               	movf	___fldiv@b+3,w
  5150     0F98  00C0               	movwf	??___fldiv+3
  5151     0F99  3001               	movlw	1
  5152     0F9A  00C1               	movwf	??___fldiv+4
  5153     0F9B                     u3415:
  5154     0F9B  0D40               	rlf	??___fldiv+3,w
  5155     0F9C  0CC0               	rrf	??___fldiv+3,f
  5156     0F9D  0CBF               	rrf	??___fldiv+2,f
  5157     0F9E  0CBE               	rrf	??___fldiv+1,f
  5158     0F9F  0CBD               	rrf	??___fldiv,f
  5159     0FA0                     u3410:
  5160     0FA0  0BC1               	decfsz	??___fldiv+4,f
  5161     0FA1  2F9B               	goto	u3415
  5162     0FA2  0840               	movf	??___fldiv+3,w
  5163     0FA3  00BC               	movwf	___fldiv@b+3
  5164     0FA4  083F               	movf	??___fldiv+2,w
  5165     0FA5  00BB               	movwf	___fldiv@b+2
  5166     0FA6  083E               	movf	??___fldiv+1,w
  5167     0FA7  00BA               	movwf	___fldiv@b+1
  5168     0FA8  083D               	movf	??___fldiv,w
  5169     0FA9  00B9               	movwf	___fldiv@b
  5170     0FAA                     l2990:
  5171     0FAA  3001               	movlw	1
  5172     0FAB  07C7               	addwf	___fldiv@new_exp,f
  5173     0FAC  1803               	skipnc
  5174     0FAD  0AC8               	incf	___fldiv@new_exp+1,f
  5175     0FAE  3000               	movlw	0
  5176     0FAF  07C8               	addwf	___fldiv@new_exp+1,f
  5177     0FB0                     l2992:
  5178     0FB0  0848               	movf	___fldiv@new_exp+1,w
  5179     0FB1  3A80               	xorlw	128
  5180     0FB2  00FF               	movwf	btemp+1
  5181     0FB3  3080               	movlw	128
  5182     0FB4  027F               	subwf	btemp+1,w
  5183     0FB5  1D03               	skipz
  5184     0FB6  2FB9               	goto	u3425
  5185     0FB7  30FF               	movlw	255
  5186     0FB8  0247               	subwf	___fldiv@new_exp,w
  5187     0FB9                     u3425:
  5188     0FB9  1C03               	skipc
  5189     0FBA  2FBC               	goto	u3421
  5190     0FBB  2FBD               	goto	u3420
  5191     0FBC                     u3421:
  5192     0FBC  2FCB               	goto	l2996
  5193     0FBD                     u3420:
  5194     0FBD                     l2994:
  5195     0FBD  30FF               	movlw	255
  5196     0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5197     0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5198     0FC0  00C7               	movwf	___fldiv@new_exp
  5199     0FC1  3000               	movlw	0
  5200     0FC2  00C8               	movwf	___fldiv@new_exp+1
  5201     0FC3  3000               	movlw	0
  5202     0FC4  00BC               	movwf	___fldiv@b+3
  5203     0FC5  3000               	movlw	0
  5204     0FC6  00BB               	movwf	___fldiv@b+2
  5205     0FC7  3000               	movlw	0
  5206     0FC8  00BA               	movwf	___fldiv@b+1
  5207     0FC9  3000               	movlw	0
  5208     0FCA  00B9               	movwf	___fldiv@b
  5209     0FCB                     l2996:
  5210     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  5211     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  5212     0FCD  0848               	movf	___fldiv@new_exp+1,w
  5213     0FCE  3A80               	xorlw	128
  5214     0FCF  00FF               	movwf	btemp+1
  5215     0FD0  3080               	movlw	128
  5216     0FD1  027F               	subwf	btemp+1,w
  5217     0FD2  1D03               	skipz
  5218     0FD3  2FD6               	goto	u3435
  5219     0FD4  3001               	movlw	1
  5220     0FD5  0247               	subwf	___fldiv@new_exp,w
  5221     0FD6                     u3435:
  5222     0FD6  1803               	skipnc
  5223     0FD7  2FD9               	goto	u3431
  5224     0FD8  2FDA               	goto	u3430
  5225     0FD9                     u3431:
  5226     0FD9  2FE7               	goto	l836
  5227     0FDA                     u3430:
  5228     0FDA                     l2998:
  5229     0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5230     0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  5231     0FDC  01C7               	clrf	___fldiv@new_exp
  5232     0FDD  01C8               	clrf	___fldiv@new_exp+1
  5233     0FDE                     l3000:
  5234     0FDE  3000               	movlw	0
  5235     0FDF  00BC               	movwf	___fldiv@b+3
  5236     0FE0  3000               	movlw	0
  5237     0FE1  00BB               	movwf	___fldiv@b+2
  5238     0FE2  3000               	movlw	0
  5239     0FE3  00BA               	movwf	___fldiv@b+1
  5240     0FE4  3000               	movlw	0
  5241     0FE5  00B9               	movwf	___fldiv@b
  5242     0FE6                     l3002:
  5243     0FE6  01C6               	clrf	___fldiv@sign
  5244     0FE7                     l836:
  5245     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  5246     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  5247     0FE9  0847               	movf	___fldiv@new_exp,w
  5248     0FEA  00CD               	movwf	___fldiv@bexp
  5249     0FEB                     l3004:
  5250     0FEB  1C4D               	btfss	___fldiv@bexp,0
  5251     0FEC  2FEE               	goto	u3441
  5252     0FED  2FEF               	goto	u3440
  5253     0FEE                     u3441:
  5254     0FEE  2FF1               	goto	l3008
  5255     0FEF                     u3440:
  5256     0FEF                     l3006:
  5257     0FEF  17BB               	bsf	___fldiv@b+2,7
  5258     0FF0  2FF5               	goto	l838
  5259     0FF1                     l3008:
  5260     0FF1  307F               	movlw	127
  5261     0FF2  00BD               	movwf	??___fldiv
  5262     0FF3  083D               	movf	??___fldiv,w
  5263     0FF4  05BB               	andwf	___fldiv@b+2,f
  5264     0FF5                     l838:
  5265     0FF5  084D               	movf	___fldiv@bexp,w
  5266     0FF6  00BD               	movwf	??___fldiv
  5267     0FF7  1003               	clrc
  5268     0FF8  0C3D               	rrf	??___fldiv,w
  5269     0FF9  00BC               	movwf	___fldiv@b+3
  5270     0FFA  0846               	movf	___fldiv@sign,w
  5271     0FFB  00BD               	movwf	??___fldiv
  5272     0FFC  083D               	movf	??___fldiv,w
  5273     0FFD  04BC               	iorwf	___fldiv@b+3,f
  5274     0FFE  2E9B               	goto	l2916
  5275     0FFF                     l816:
  5276     0FFF  0008               	return
  5277     1000                     __end_of___fldiv:
  5278                           
  5279                           	psect	text14
  5280     0A58                     __ptext14:	
  5281 ;; *************** function ___awmod *****************
  5282 ;; Defined at:
  5283 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  divisor         2    9[COMMON] int 
  5286 ;;  dividend        2   11[COMMON] int 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  sign            1    1[BANK0 ] unsigned char 
  5289 ;;  counter         1    0[BANK0 ] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    9[COMMON] int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5299 ;;      Params:         4       0       0       0       0
  5300 ;;      Locals:         0       2       0       0       0
  5301 ;;      Temps:          1       0       0       0       0
  5302 ;;      Totals:         5       2       0       0       0
  5303 ;;Total ram usage:        7 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312     0A58                     ___awmod:	
  5313                           ;psect for function ___awmod
  5314                           
  5315     0A58                     l2778:	
  5316                           ;incstack = 0
  5317                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5318                           
  5319     0A58  1283               	bcf	3,5	;RP0=0, select bank0
  5320     0A59  1303               	bcf	3,6	;RP1=0, select bank0
  5321     0A5A  01A1               	clrf	___awmod@sign
  5322     0A5B                     l2780:
  5323     0A5B  1FFC               	btfss	___awmod@dividend+1,7
  5324     0A5C  2A5E               	goto	u2911
  5325     0A5D  2A5F               	goto	u2910
  5326     0A5E                     u2911:
  5327     0A5E  2A66               	goto	l2786
  5328     0A5F                     u2910:
  5329     0A5F                     l2782:
  5330     0A5F  09FB               	comf	___awmod@dividend,f
  5331     0A60  09FC               	comf	___awmod@dividend+1,f
  5332     0A61  0AFB               	incf	___awmod@dividend,f
  5333     0A62  1903               	skipnz
  5334     0A63  0AFC               	incf	___awmod@dividend+1,f
  5335     0A64                     l2784:
  5336     0A64  01A1               	clrf	___awmod@sign
  5337     0A65  0AA1               	incf	___awmod@sign,f
  5338     0A66                     l2786:
  5339     0A66  1FFA               	btfss	___awmod@divisor+1,7
  5340     0A67  2A69               	goto	u2921
  5341     0A68  2A6A               	goto	u2920
  5342     0A69                     u2921:
  5343     0A69  2A6F               	goto	l2790
  5344     0A6A                     u2920:
  5345     0A6A                     l2788:
  5346     0A6A  09F9               	comf	___awmod@divisor,f
  5347     0A6B  09FA               	comf	___awmod@divisor+1,f
  5348     0A6C  0AF9               	incf	___awmod@divisor,f
  5349     0A6D  1903               	skipnz
  5350     0A6E  0AFA               	incf	___awmod@divisor+1,f
  5351     0A6F                     l2790:
  5352     0A6F  0879               	movf	___awmod@divisor,w
  5353     0A70  047A               	iorwf	___awmod@divisor+1,w
  5354     0A71  1903               	btfsc	3,2
  5355     0A72  2A74               	goto	u2931
  5356     0A73  2A75               	goto	u2930
  5357     0A74                     u2931:
  5358     0A74  2AA4               	goto	l2808
  5359     0A75                     u2930:
  5360     0A75                     l2792:
  5361     0A75  01A0               	clrf	___awmod@counter
  5362     0A76  0AA0               	incf	___awmod@counter,f
  5363     0A77  2A83               	goto	l2798
  5364     0A78                     l2794:
  5365     0A78  3001               	movlw	1
  5366     0A79                     u2945:
  5367     0A79  1003               	clrc
  5368     0A7A  0DF9               	rlf	___awmod@divisor,f
  5369     0A7B  0DFA               	rlf	___awmod@divisor+1,f
  5370     0A7C  3EFF               	addlw	-1
  5371     0A7D  1D03               	skipz
  5372     0A7E  2A79               	goto	u2945
  5373     0A7F                     l2796:
  5374     0A7F  3001               	movlw	1
  5375     0A80  00FD               	movwf	??___awmod
  5376     0A81  087D               	movf	??___awmod,w
  5377     0A82  07A0               	addwf	___awmod@counter,f
  5378     0A83                     l2798:
  5379     0A83  1FFA               	btfss	___awmod@divisor+1,7
  5380     0A84  2A86               	goto	u2951
  5381     0A85  2A87               	goto	u2950
  5382     0A86                     u2951:
  5383     0A86  2A78               	goto	l2794
  5384     0A87                     u2950:
  5385     0A87                     l2800:
  5386     0A87  087A               	movf	___awmod@divisor+1,w
  5387     0A88  027C               	subwf	___awmod@dividend+1,w
  5388     0A89  1D03               	skipz
  5389     0A8A  2A8D               	goto	u2965
  5390     0A8B  0879               	movf	___awmod@divisor,w
  5391     0A8C  027B               	subwf	___awmod@dividend,w
  5392     0A8D                     u2965:
  5393     0A8D  1C03               	skipc
  5394     0A8E  2A90               	goto	u2961
  5395     0A8F  2A91               	goto	u2960
  5396     0A90                     u2961:
  5397     0A90  2A97               	goto	l2804
  5398     0A91                     u2960:
  5399     0A91                     l2802:
  5400     0A91  0879               	movf	___awmod@divisor,w
  5401     0A92  02FB               	subwf	___awmod@dividend,f
  5402     0A93  087A               	movf	___awmod@divisor+1,w
  5403     0A94  1C03               	skipc
  5404     0A95  03FC               	decf	___awmod@dividend+1,f
  5405     0A96  02FC               	subwf	___awmod@dividend+1,f
  5406     0A97                     l2804:
  5407     0A97  3001               	movlw	1
  5408     0A98                     u2975:
  5409     0A98  1003               	clrc
  5410     0A99  0CFA               	rrf	___awmod@divisor+1,f
  5411     0A9A  0CF9               	rrf	___awmod@divisor,f
  5412     0A9B  3EFF               	addlw	-1
  5413     0A9C  1D03               	skipz
  5414     0A9D  2A98               	goto	u2975
  5415     0A9E                     l2806:
  5416     0A9E  3001               	movlw	1
  5417     0A9F  02A0               	subwf	___awmod@counter,f
  5418     0AA0  1D03               	btfss	3,2
  5419     0AA1  2AA3               	goto	u2981
  5420     0AA2  2AA4               	goto	u2980
  5421     0AA3                     u2981:
  5422     0AA3  2A87               	goto	l2800
  5423     0AA4                     u2980:
  5424     0AA4                     l2808:
  5425     0AA4  0821               	movf	___awmod@sign,w
  5426     0AA5  1903               	btfsc	3,2
  5427     0AA6  2AA8               	goto	u2991
  5428     0AA7  2AA9               	goto	u2990
  5429     0AA8                     u2991:
  5430     0AA8  2AAE               	goto	l2812
  5431     0AA9                     u2990:
  5432     0AA9                     l2810:
  5433     0AA9  09FB               	comf	___awmod@dividend,f
  5434     0AAA  09FC               	comf	___awmod@dividend+1,f
  5435     0AAB  0AFB               	incf	___awmod@dividend,f
  5436     0AAC  1903               	skipnz
  5437     0AAD  0AFC               	incf	___awmod@dividend+1,f
  5438     0AAE                     l2812:
  5439     0AAE  087C               	movf	___awmod@dividend+1,w
  5440     0AAF  00FA               	movwf	?___awmod+1
  5441     0AB0  087B               	movf	___awmod@dividend,w
  5442     0AB1  00F9               	movwf	?___awmod
  5443     0AB2                     l631:
  5444     0AB2  0008               	return
  5445     0AB3                     __end_of___awmod:
  5446                           
  5447                           	psect	text15
  5448     0004                     __ptext15:	
  5449 ;; *************** function ___awdiv *****************
  5450 ;; Defined at:
  5451 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  divisor         2    0[COMMON] int 
  5454 ;;  dividend        2    2[COMMON] int 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  quotient        2    7[COMMON] int 
  5457 ;;  sign            1    6[COMMON] unsigned char 
  5458 ;;  counter         1    5[COMMON] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    0[COMMON] int 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         4       0       0       0       0
  5469 ;;      Locals:         4       0       0       0       0
  5470 ;;      Temps:          1       0       0       0       0
  5471 ;;      Totals:         9       0       0       0       0
  5472 ;;Total ram usage:        9 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_main
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481     0004                     ___awdiv:	
  5482                           ;psect for function ___awdiv
  5483                           
  5484     0004                     l2734:	
  5485                           ;incstack = 0
  5486                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5487                           
  5488     0004  01F6               	clrf	___awdiv@sign
  5489     0005                     l2736:
  5490     0005  1FF1               	btfss	___awdiv@divisor+1,7
  5491     0006  2808               	goto	u2811
  5492     0007  2809               	goto	u2810
  5493     0008                     u2811:
  5494     0008  2810               	goto	l2742
  5495     0009                     u2810:
  5496     0009                     l2738:
  5497     0009  09F0               	comf	___awdiv@divisor,f
  5498     000A  09F1               	comf	___awdiv@divisor+1,f
  5499     000B  0AF0               	incf	___awdiv@divisor,f
  5500     000C  1903               	skipnz
  5501     000D  0AF1               	incf	___awdiv@divisor+1,f
  5502     000E                     l2740:
  5503     000E  01F6               	clrf	___awdiv@sign
  5504     000F  0AF6               	incf	___awdiv@sign,f
  5505     0010                     l2742:
  5506     0010  1FF3               	btfss	___awdiv@dividend+1,7
  5507     0011  2813               	goto	u2821
  5508     0012  2814               	goto	u2820
  5509     0013                     u2821:
  5510     0013  281D               	goto	l2748
  5511     0014                     u2820:
  5512     0014                     l2744:
  5513     0014  09F2               	comf	___awdiv@dividend,f
  5514     0015  09F3               	comf	___awdiv@dividend+1,f
  5515     0016  0AF2               	incf	___awdiv@dividend,f
  5516     0017  1903               	skipnz
  5517     0018  0AF3               	incf	___awdiv@dividend+1,f
  5518     0019                     l2746:
  5519     0019  3001               	movlw	1
  5520     001A  00F4               	movwf	??___awdiv
  5521     001B  0874               	movf	??___awdiv,w
  5522     001C  06F6               	xorwf	___awdiv@sign,f
  5523     001D                     l2748:
  5524     001D  01F7               	clrf	___awdiv@quotient
  5525     001E  01F8               	clrf	___awdiv@quotient+1
  5526     001F                     l2750:
  5527     001F  0870               	movf	___awdiv@divisor,w
  5528     0020  0471               	iorwf	___awdiv@divisor+1,w
  5529     0021  1903               	btfsc	3,2
  5530     0022  2824               	goto	u2831
  5531     0023  2825               	goto	u2830
  5532     0024                     u2831:
  5533     0024  285C               	goto	l2770
  5534     0025                     u2830:
  5535     0025                     l2752:
  5536     0025  01F5               	clrf	___awdiv@counter
  5537     0026  0AF5               	incf	___awdiv@counter,f
  5538     0027  2833               	goto	l2758
  5539     0028                     l2754:
  5540     0028  3001               	movlw	1
  5541     0029                     u2845:
  5542     0029  1003               	clrc
  5543     002A  0DF0               	rlf	___awdiv@divisor,f
  5544     002B  0DF1               	rlf	___awdiv@divisor+1,f
  5545     002C  3EFF               	addlw	-1
  5546     002D  1D03               	skipz
  5547     002E  2829               	goto	u2845
  5548     002F                     l2756:
  5549     002F  3001               	movlw	1
  5550     0030  00F4               	movwf	??___awdiv
  5551     0031  0874               	movf	??___awdiv,w
  5552     0032  07F5               	addwf	___awdiv@counter,f
  5553     0033                     l2758:
  5554     0033  1FF1               	btfss	___awdiv@divisor+1,7
  5555     0034  2836               	goto	u2851
  5556     0035  2837               	goto	u2850
  5557     0036                     u2851:
  5558     0036  2828               	goto	l2754
  5559     0037                     u2850:
  5560     0037                     l2760:
  5561     0037  3001               	movlw	1
  5562     0038                     u2865:
  5563     0038  1003               	clrc
  5564     0039  0DF7               	rlf	___awdiv@quotient,f
  5565     003A  0DF8               	rlf	___awdiv@quotient+1,f
  5566     003B  3EFF               	addlw	-1
  5567     003C  1D03               	skipz
  5568     003D  2838               	goto	u2865
  5569     003E  0871               	movf	___awdiv@divisor+1,w
  5570     003F  0273               	subwf	___awdiv@dividend+1,w
  5571     0040  1D03               	skipz
  5572     0041  2844               	goto	u2875
  5573     0042  0870               	movf	___awdiv@divisor,w
  5574     0043  0272               	subwf	___awdiv@dividend,w
  5575     0044                     u2875:
  5576     0044  1C03               	skipc
  5577     0045  2847               	goto	u2871
  5578     0046  2848               	goto	u2870
  5579     0047                     u2871:
  5580     0047  284F               	goto	l2766
  5581     0048                     u2870:
  5582     0048                     l2762:
  5583     0048  0870               	movf	___awdiv@divisor,w
  5584     0049  02F2               	subwf	___awdiv@dividend,f
  5585     004A  0871               	movf	___awdiv@divisor+1,w
  5586     004B  1C03               	skipc
  5587     004C  03F3               	decf	___awdiv@dividend+1,f
  5588     004D  02F3               	subwf	___awdiv@dividend+1,f
  5589     004E                     l2764:
  5590     004E  1477               	bsf	___awdiv@quotient,0
  5591     004F                     l2766:
  5592     004F  3001               	movlw	1
  5593     0050                     u2885:
  5594     0050  1003               	clrc
  5595     0051  0CF1               	rrf	___awdiv@divisor+1,f
  5596     0052  0CF0               	rrf	___awdiv@divisor,f
  5597     0053  3EFF               	addlw	-1
  5598     0054  1D03               	skipz
  5599     0055  2850               	goto	u2885
  5600     0056                     l2768:
  5601     0056  3001               	movlw	1
  5602     0057  02F5               	subwf	___awdiv@counter,f
  5603     0058  1D03               	btfss	3,2
  5604     0059  285B               	goto	u2891
  5605     005A  285C               	goto	u2890
  5606     005B                     u2891:
  5607     005B  2837               	goto	l2760
  5608     005C                     u2890:
  5609     005C                     l2770:
  5610     005C  0876               	movf	___awdiv@sign,w
  5611     005D  1903               	btfsc	3,2
  5612     005E  2860               	goto	u2901
  5613     005F  2861               	goto	u2900
  5614     0060                     u2901:
  5615     0060  2866               	goto	l2774
  5616     0061                     u2900:
  5617     0061                     l2772:
  5618     0061  09F7               	comf	___awdiv@quotient,f
  5619     0062  09F8               	comf	___awdiv@quotient+1,f
  5620     0063  0AF7               	incf	___awdiv@quotient,f
  5621     0064  1903               	skipnz
  5622     0065  0AF8               	incf	___awdiv@quotient+1,f
  5623     0066                     l2774:
  5624     0066  0878               	movf	___awdiv@quotient+1,w
  5625     0067  00F1               	movwf	?___awdiv+1
  5626     0068  0877               	movf	___awdiv@quotient,w
  5627     0069  00F0               	movwf	?___awdiv
  5628     006A                     l618:
  5629     006A  0008               	return
  5630     006B                     __end_of___awdiv:
  5631                           
  5632                           	psect	text16
  5633     16DB                     __ptext16:	
  5634 ;; *************** function _Set_year *****************
  5635 ;; Defined at:
  5636 ;;		line 216 in file "main_master.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  year            1    wreg     unsigned char 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  year            1    2[COMMON] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0, pclath, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         0       0       0       0       0
  5651 ;;      Locals:         1       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0
  5653 ;;      Totals:         1       0       0       0       0
  5654 ;;Total ram usage:        1 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 1
  5657 ;; This function calls:
  5658 ;;		_Dec_to_Bcd
  5659 ;;		_I2C_Start
  5660 ;;		_I2C_Stop
  5661 ;;		_I2C_Write
  5662 ;; This function is called by:
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667     16DB                     _Set_year:	
  5668                           ;psect for function _Set_year
  5669                           
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _Set_year: [wreg+status,2+status,0+pclath+cstack]
  5673                           ;Set_year@year stored from wreg
  5674     16DB  00F2               	movwf	Set_year@year
  5675     16DC                     l2542:
  5676                           
  5677                           ;main_master.c: 217:     I2C_Start();
  5678     16DC  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  5679     16E1                     l2544:
  5680                           
  5681                           ;main_master.c: 218:     I2C_Write(0xD0);
  5682     16E1  30D0               	movlw	208
  5683     16E2  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5684     16E7                     l2546:
  5685                           
  5686                           ;main_master.c: 219:     I2C_Write(0x06);
  5687     16E7  3006               	movlw	6
  5688     16E8  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5689     16ED                     l2548:
  5690                           
  5691                           ;main_master.c: 220:     I2C_Write(Dec_to_Bcd(year));
  5692     16ED  0872               	movf	Set_year@year,w
  5693     16EE  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  5694     16F3  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5695     16F8                     l2550:
  5696                           
  5697                           ;main_master.c: 221:     I2C_Stop();
  5698     16F8  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  5699     16FD                     l181:
  5700     16FD  0008               	return
  5701     16FE                     __end_of_Set_year:
  5702                           
  5703                           	psect	text17
  5704     16B8                     __ptext17:	
  5705 ;; *************** function _Set_sec *****************
  5706 ;; Defined at:
  5707 ;;		line 168 in file "main_master.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  sec             1    wreg     unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  sec             1    2[COMMON] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5721 ;;      Params:         0       0       0       0       0
  5722 ;;      Locals:         1       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0
  5724 ;;      Totals:         1       0       0       0       0
  5725 ;;Total ram usage:        1 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; Hardware stack levels required when called: 1
  5728 ;; This function calls:
  5729 ;;		_Dec_to_Bcd
  5730 ;;		_I2C_Start
  5731 ;;		_I2C_Stop
  5732 ;;		_I2C_Write
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738     16B8                     _Set_sec:	
  5739                           ;psect for function _Set_sec
  5740                           
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _Set_sec: [wreg+status,2+status,0+pclath+cstack]
  5744                           ;Set_sec@sec stored from wreg
  5745     16B8  00F2               	movwf	Set_sec@sec
  5746     16B9                     l2492:
  5747                           
  5748                           ;main_master.c: 169:     I2C_Start();
  5749     16B9  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  5750     16BE                     l2494:
  5751                           
  5752                           ;main_master.c: 170:     I2C_Write(0xD0);
  5753     16BE  30D0               	movlw	208
  5754     16BF  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5755     16C4                     l2496:
  5756                           
  5757                           ;main_master.c: 171:     I2C_Write(0x00);
  5758     16C4  3000               	movlw	0
  5759     16C5  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5760     16CA                     l2498:
  5761                           
  5762                           ;main_master.c: 172:     I2C_Write(Dec_to_Bcd(sec));
  5763     16CA  0872               	movf	Set_sec@sec,w
  5764     16CB  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  5765     16D0  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5766     16D5                     l2500:
  5767                           
  5768                           ;main_master.c: 173:     I2C_Stop();
  5769     16D5  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  5770     16DA                     l163:
  5771     16DA  0008               	return
  5772     16DB                     __end_of_Set_sec:
  5773                           
  5774                           	psect	text18
  5775     1695                     __ptext18:	
  5776 ;; *************** function _Set_month *****************
  5777 ;; Defined at:
  5778 ;;		line 208 in file "main_master.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;  month           1    wreg     unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  month           1    2[COMMON] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0, pclath, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5792 ;;      Params:         0       0       0       0       0
  5793 ;;      Locals:         1       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0
  5795 ;;      Totals:         1       0       0       0       0
  5796 ;;Total ram usage:        1 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 1
  5799 ;; This function calls:
  5800 ;;		_Dec_to_Bcd
  5801 ;;		_I2C_Start
  5802 ;;		_I2C_Stop
  5803 ;;		_I2C_Write
  5804 ;; This function is called by:
  5805 ;;		_main
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809     1695                     _Set_month:	
  5810                           ;psect for function _Set_month
  5811                           
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _Set_month: [wreg+status,2+status,0+pclath+cstack]
  5815                           ;Set_month@month stored from wreg
  5816     1695  00F2               	movwf	Set_month@month
  5817     1696                     l2532:
  5818                           
  5819                           ;main_master.c: 209:     I2C_Start();
  5820     1696  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  5821     169B                     l2534:
  5822                           
  5823                           ;main_master.c: 210:     I2C_Write(0xD0);
  5824     169B  30D0               	movlw	208
  5825     169C  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5826     16A1                     l2536:
  5827                           
  5828                           ;main_master.c: 211:     I2C_Write(0x05);
  5829     16A1  3005               	movlw	5
  5830     16A2  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5831     16A7                     l2538:
  5832                           
  5833                           ;main_master.c: 212:     I2C_Write(Dec_to_Bcd(month));
  5834     16A7  0872               	movf	Set_month@month,w
  5835     16A8  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  5836     16AD  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5837     16B2                     l2540:
  5838                           
  5839                           ;main_master.c: 213:     I2C_Stop();
  5840     16B2  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  5841     16B7                     l178:
  5842     16B7  0008               	return
  5843     16B8                     __end_of_Set_month:
  5844                           
  5845                           	psect	text19
  5846     1672                     __ptext19:	
  5847 ;; *************** function _Set_min *****************
  5848 ;; Defined at:
  5849 ;;		line 176 in file "main_master.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  min             1    wreg     unsigned char 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  min             1    2[COMMON] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, pclath, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5863 ;;      Params:         0       0       0       0       0
  5864 ;;      Locals:         1       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0
  5866 ;;      Totals:         1       0       0       0       0
  5867 ;;Total ram usage:        1 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 1
  5870 ;; This function calls:
  5871 ;;		_Dec_to_Bcd
  5872 ;;		_I2C_Start
  5873 ;;		_I2C_Stop
  5874 ;;		_I2C_Write
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880     1672                     _Set_min:	
  5881                           ;psect for function _Set_min
  5882                           
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _Set_min: [wreg+status,2+status,0+pclath+cstack]
  5886                           ;Set_min@min stored from wreg
  5887     1672  00F2               	movwf	Set_min@min
  5888     1673                     l2502:
  5889                           
  5890                           ;main_master.c: 177:     I2C_Start();
  5891     1673  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  5892     1678                     l2504:
  5893                           
  5894                           ;main_master.c: 178:     I2C_Write(0xD0);
  5895     1678  30D0               	movlw	208
  5896     1679  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5897     167E                     l2506:
  5898                           
  5899                           ;main_master.c: 179:     I2C_Write(0x01);
  5900     167E  3001               	movlw	1
  5901     167F  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5902     1684                     l2508:
  5903                           
  5904                           ;main_master.c: 180:     I2C_Write(Dec_to_Bcd(min));
  5905     1684  0872               	movf	Set_min@min,w
  5906     1685  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  5907     168A  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5908     168F                     l2510:
  5909                           
  5910                           ;main_master.c: 181:     I2C_Stop();
  5911     168F  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  5912     1694                     l166:
  5913     1694  0008               	return
  5914     1695                     __end_of_Set_min:
  5915                           
  5916                           	psect	text20
  5917     164F                     __ptext20:	
  5918 ;; *************** function _Set_hour *****************
  5919 ;; Defined at:
  5920 ;;		line 184 in file "main_master.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  hour            1    wreg     unsigned char 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  hour            1    2[COMMON] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5934 ;;      Params:         0       0       0       0       0
  5935 ;;      Locals:         1       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0
  5937 ;;      Totals:         1       0       0       0       0
  5938 ;;Total ram usage:        1 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 1
  5941 ;; This function calls:
  5942 ;;		_Dec_to_Bcd
  5943 ;;		_I2C_Start
  5944 ;;		_I2C_Stop
  5945 ;;		_I2C_Write
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951     164F                     _Set_hour:	
  5952                           ;psect for function _Set_hour
  5953                           
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in _Set_hour: [wreg+status,2+status,0+pclath+cstack]
  5957                           ;Set_hour@hour stored from wreg
  5958     164F  00F2               	movwf	Set_hour@hour
  5959     1650                     l2512:
  5960                           
  5961                           ;main_master.c: 185:     I2C_Start();
  5962     1650  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  5963     1655                     l2514:
  5964                           
  5965                           ;main_master.c: 186:     I2C_Write(0xD0);
  5966     1655  30D0               	movlw	208
  5967     1656  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5968     165B                     l2516:
  5969                           
  5970                           ;main_master.c: 187:     I2C_Write(0x02);
  5971     165B  3002               	movlw	2
  5972     165C  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5973     1661                     l2518:
  5974                           
  5975                           ;main_master.c: 188:     I2C_Write(Dec_to_Bcd(hour));
  5976     1661  0872               	movf	Set_hour@hour,w
  5977     1662  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  5978     1667  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  5979     166C                     l2520:
  5980                           
  5981                           ;main_master.c: 189:     I2C_Stop();
  5982     166C  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  5983     1671                     l169:
  5984     1671  0008               	return
  5985     1672                     __end_of_Set_hour:
  5986                           
  5987                           	psect	text21
  5988     162C                     __ptext21:	
  5989 ;; *************** function _Set_day *****************
  5990 ;; Defined at:
  5991 ;;		line 200 in file "main_master.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  day             1    wreg     unsigned char 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  day             1    2[COMMON] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, pclath, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6005 ;;      Params:         0       0       0       0       0
  6006 ;;      Locals:         1       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0
  6008 ;;      Totals:         1       0       0       0       0
  6009 ;;Total ram usage:        1 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 1
  6012 ;; This function calls:
  6013 ;;		_Dec_to_Bcd
  6014 ;;		_I2C_Start
  6015 ;;		_I2C_Stop
  6016 ;;		_I2C_Write
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022     162C                     _Set_day:	
  6023                           ;psect for function _Set_day
  6024                           
  6025                           
  6026                           ;incstack = 0
  6027                           ; Regs used in _Set_day: [wreg+status,2+status,0+pclath+cstack]
  6028                           ;Set_day@day stored from wreg
  6029     162C  00F2               	movwf	Set_day@day
  6030     162D                     l2522:
  6031                           
  6032                           ;main_master.c: 201:     I2C_Start();
  6033     162D  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  6034     1632                     l2524:
  6035                           
  6036                           ;main_master.c: 202:     I2C_Write(0xD0);
  6037     1632  30D0               	movlw	208
  6038     1633  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  6039     1638                     l2526:
  6040                           
  6041                           ;main_master.c: 203:     I2C_Write(0x04);
  6042     1638  3004               	movlw	4
  6043     1639  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  6044     163E                     l2528:
  6045                           
  6046                           ;main_master.c: 204:     I2C_Write(Dec_to_Bcd(day));
  6047     163E  0872               	movf	Set_day@day,w
  6048     163F  160A  118A  255E  160A  118A  	fcall	_Dec_to_Bcd
  6049     1644  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  6050     1649                     l2530:
  6051                           
  6052                           ;main_master.c: 205:     I2C_Stop();
  6053     1649  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  6054     164E                     l175:
  6055     164E  0008               	return
  6056     164F                     __end_of_Set_day:
  6057                           
  6058                           	psect	text22
  6059     155E                     __ptext22:	
  6060 ;; *************** function _Dec_to_Bcd *****************
  6061 ;; Defined at:
  6062 ;;		line 224 in file "main_master.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  dec_number      1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  dec_number      1    0[COMMON] unsigned char 
  6067 ;;  bcd_number      1    1[COMMON] unsigned char 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      unsigned char 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         0       0       0       0       0
  6078 ;;      Locals:         2       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0
  6080 ;;      Totals:         2       0       0       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_Set_sec
  6087 ;;		_Set_min
  6088 ;;		_Set_hour
  6089 ;;		_Set_day
  6090 ;;		_Set_month
  6091 ;;		_Set_year
  6092 ;;		_Set_day_week
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096     155E                     _Dec_to_Bcd:	
  6097                           ;psect for function _Dec_to_Bcd
  6098                           
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _Dec_to_Bcd: [wreg+status,2+status,0]
  6102                           ;Dec_to_Bcd@dec_number stored from wreg
  6103     155E  00F0               	movwf	Dec_to_Bcd@dec_number
  6104     155F                     l2250:
  6105                           
  6106                           ;main_master.c: 225:     uint8_t bcd_number;;main_master.c: 226:     bcd_number = 0;
  6107     155F  01F1               	clrf	Dec_to_Bcd@bcd_number
  6108     1560                     l2252:
  6109                           
  6110                           ;main_master.c: 228:         if (dec_number >= 10){
  6111     1560  300A               	movlw	10
  6112     1561  0270               	subwf	Dec_to_Bcd@dec_number,w
  6113     1562  1C03               	skipc
  6114     1563  2D65               	goto	u2071
  6115     1564  2D66               	goto	u2070
  6116     1565                     u2071:
  6117     1565  2D6D               	goto	l2256
  6118     1566                     u2070:
  6119     1566                     l2254:
  6120                           
  6121                           ;main_master.c: 229:             dec_number = dec_number - 10;
  6122     1566  0870               	movf	Dec_to_Bcd@dec_number,w
  6123     1567  3EF6               	addlw	246
  6124     1568  00F0               	movwf	Dec_to_Bcd@dec_number
  6125                           
  6126                           ;main_master.c: 230:             bcd_number = bcd_number + 0b00010000;
  6127     1569  0871               	movf	Dec_to_Bcd@bcd_number,w
  6128     156A  3E10               	addlw	16
  6129     156B  00F1               	movwf	Dec_to_Bcd@bcd_number
  6130                           
  6131                           ;main_master.c: 231:         }
  6132     156C  2D60               	goto	l2252
  6133     156D                     l2256:
  6134                           
  6135                           ;main_master.c: 233:             bcd_number = bcd_number + dec_number;
  6136     156D  0870               	movf	Dec_to_Bcd@dec_number,w
  6137     156E  0771               	addwf	Dec_to_Bcd@bcd_number,w
  6138     156F  00F1               	movwf	Dec_to_Bcd@bcd_number
  6139     1570                     l2258:	
  6140                           ;main_master.c: 234:             break;
  6141                           
  6142                           
  6143                           ;main_master.c: 237:     return bcd_number;
  6144     1570  0871               	movf	Dec_to_Bcd@bcd_number,w
  6145     1571                     l189:
  6146     1571  0008               	return
  6147     1572                     __end_of_Dec_to_Bcd:
  6148                           
  6149                           	psect	text23
  6150     17D1                     __ptext23:	
  6151 ;; *************** function _Read_Time *****************
  6152 ;; Defined at:
  6153 ;;		line 156 in file "main_master.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  s               1    wreg     PTR unsigned char 
  6156 ;;		 -> segundos(1), 
  6157 ;;  m               1    8[COMMON] PTR unsigned char 
  6158 ;;		 -> minutos(1), 
  6159 ;;  h               1    9[COMMON] PTR unsigned char 
  6160 ;;		 -> horas(1), 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  s               1   10[COMMON] PTR unsigned char 
  6163 ;;		 -> segundos(1), 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      void 
  6166 ;; Registers used:
  6167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6173 ;;      Params:         2       0       0       0       0
  6174 ;;      Locals:         1       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0
  6176 ;;      Totals:         3       0       0       0       0
  6177 ;;Total ram usage:        3 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; Hardware stack levels required when called: 2
  6180 ;; This function calls:
  6181 ;;		_Bcd_to_Dec
  6182 ;;		_Read
  6183 ;; This function is called by:
  6184 ;;		_main
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188     17D1                     _Read_Time:	
  6189                           ;psect for function _Read_Time
  6190                           
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in _Read_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6194                           ;Read_Time@s stored from wreg
  6195     17D1  00FA               	movwf	Read_Time@s
  6196     17D2                     l2564:
  6197                           
  6198                           ;main_master.c: 157:     *s = Bcd_to_Dec(Read(0x00));
  6199     17D2  087A               	movf	Read_Time@s,w
  6200     17D3  0084               	movwf	4
  6201     17D4  3000               	movlw	0
  6202     17D5  120A  158A  204D  160A  118A  	fcall	_Read
  6203     17DA  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6204     17DF  1383               	bcf	3,7	;select IRP bank0
  6205     17E0  0080               	movwf	0
  6206                           
  6207                           ;main_master.c: 158:     *m = Bcd_to_Dec(Read(0x01));
  6208     17E1  0878               	movf	Read_Time@m,w
  6209     17E2  0084               	movwf	4
  6210     17E3  3001               	movlw	1
  6211     17E4  120A  158A  204D  160A  118A  	fcall	_Read
  6212     17E9  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6213     17EE  1383               	bcf	3,7	;select IRP bank0
  6214     17EF  0080               	movwf	0
  6215                           
  6216                           ;main_master.c: 159:     *h = Bcd_to_Dec(Read(0x02));
  6217     17F0  0879               	movf	Read_Time@h,w
  6218     17F1  0084               	movwf	4
  6219     17F2  3002               	movlw	2
  6220     17F3  120A  158A  204D  160A  118A  	fcall	_Read
  6221     17F8  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6222     17FD  1383               	bcf	3,7	;select IRP bank0
  6223     17FE  0080               	movwf	0
  6224     17FF                     l157:
  6225     17FF  0008               	return
  6226     1800                     __end_of_Read_Time:
  6227                           
  6228                           	psect	text24
  6229     17A2                     __ptext24:	
  6230 ;; *************** function _Read_Fecha *****************
  6231 ;; Defined at:
  6232 ;;		line 162 in file "main_master.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  d               1    wreg     PTR unsigned char 
  6235 ;;		 -> dia(1), 
  6236 ;;  mo              1    8[COMMON] PTR unsigned char 
  6237 ;;		 -> mes(1), 
  6238 ;;  y               1    9[COMMON] PTR unsigned char 
  6239 ;;		 -> ano(1), 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  d               1   10[COMMON] PTR unsigned char 
  6242 ;;		 -> dia(1), 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6252 ;;      Params:         2       0       0       0       0
  6253 ;;      Locals:         1       0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0
  6255 ;;      Totals:         3       0       0       0       0
  6256 ;;Total ram usage:        3 bytes
  6257 ;; Hardware stack levels used: 1
  6258 ;; Hardware stack levels required when called: 2
  6259 ;; This function calls:
  6260 ;;		_Bcd_to_Dec
  6261 ;;		_Read
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267     17A2                     _Read_Fecha:	
  6268                           ;psect for function _Read_Fecha
  6269                           
  6270                           
  6271                           ;incstack = 0
  6272                           ; Regs used in _Read_Fecha: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6273                           ;Read_Fecha@d stored from wreg
  6274     17A2  00FA               	movwf	Read_Fecha@d
  6275     17A3                     l2566:
  6276                           
  6277                           ;main_master.c: 163:     *d = Bcd_to_Dec(Read(0x04));
  6278     17A3  087A               	movf	Read_Fecha@d,w
  6279     17A4  0084               	movwf	4
  6280     17A5  3004               	movlw	4
  6281     17A6  120A  158A  204D  160A  118A  	fcall	_Read
  6282     17AB  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6283     17B0  1383               	bcf	3,7	;select IRP bank0
  6284     17B1  0080               	movwf	0
  6285                           
  6286                           ;main_master.c: 164:     *mo = Bcd_to_Dec(Read(0x05));
  6287     17B2  0878               	movf	Read_Fecha@mo,w
  6288     17B3  0084               	movwf	4
  6289     17B4  3005               	movlw	5
  6290     17B5  120A  158A  204D  160A  118A  	fcall	_Read
  6291     17BA  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6292     17BF  1383               	bcf	3,7	;select IRP bank0
  6293     17C0  0080               	movwf	0
  6294                           
  6295                           ;main_master.c: 165:     *y = Bcd_to_Dec(Read(0x06));
  6296     17C1  0879               	movf	Read_Fecha@y,w
  6297     17C2  0084               	movwf	4
  6298     17C3  3006               	movlw	6
  6299     17C4  120A  158A  204D  160A  118A  	fcall	_Read
  6300     17C9  160A  118A  259E  160A  118A  	fcall	_Bcd_to_Dec
  6301     17CE  1383               	bcf	3,7	;select IRP bank0
  6302     17CF  0080               	movwf	0
  6303     17D0                     l160:
  6304     17D0  0008               	return
  6305     17D1                     __end_of_Read_Fecha:
  6306                           
  6307                           	psect	text25
  6308     084D                     __ptext25:	
  6309 ;; *************** function _Read *****************
  6310 ;; Defined at:
  6311 ;;		line 142 in file "main_master.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  address         1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  address         1    2[COMMON] unsigned char 
  6316 ;;  dato            1    3[COMMON] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      unsigned char 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6326 ;;      Params:         0       0       0       0       0
  6327 ;;      Locals:         2       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0
  6329 ;;      Totals:         3       0       0       0       0
  6330 ;;Total ram usage:        3 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 1
  6333 ;; This function calls:
  6334 ;;		_I2C_Nack
  6335 ;;		_I2C_Read
  6336 ;;		_I2C_Restart
  6337 ;;		_I2C_Start
  6338 ;;		_I2C_Stop
  6339 ;;		_I2C_Write
  6340 ;; This function is called by:
  6341 ;;		_Read_Time
  6342 ;;		_Read_Fecha
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346     084D                     _Read:	
  6347                           ;psect for function _Read
  6348                           
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _Read: [wreg+status,2+status,0+pclath+cstack]
  6352                           ;Read@address stored from wreg
  6353     084D  00F2               	movwf	Read@address
  6354     084E                     l2220:
  6355     084E                     l2222:
  6356                           
  6357                           ;main_master.c: 144:     I2C_Start();
  6358     084E  160A  118A  2508  120A  158A  	fcall	_I2C_Start
  6359     0853                     l2224:
  6360                           
  6361                           ;main_master.c: 145:     I2C_Write(0xD0);
  6362     0853  30D0               	movlw	208
  6363     0854  160A  118A  253E  120A  158A  	fcall	_I2C_Write
  6364     0859                     l2226:
  6365                           
  6366                           ;main_master.c: 146:     I2C_Write(address);
  6367     0859  0872               	movf	Read@address,w
  6368     085A  160A  118A  253E  120A  158A  	fcall	_I2C_Write
  6369     085F                     l2228:
  6370                           
  6371                           ;main_master.c: 147:     I2C_Restart();
  6372     085F  160A  118A  251C  120A  158A  	fcall	_I2C_Restart
  6373     0864                     l2230:
  6374                           
  6375                           ;main_master.c: 148:     I2C_Write(0xD1);
  6376     0864  30D1               	movlw	209
  6377     0865  160A  118A  253E  120A  158A  	fcall	_I2C_Write
  6378     086A                     l2232:
  6379                           
  6380                           ;main_master.c: 149:     dato = I2C_Read();
  6381     086A  120A  158A  2042  120A  158A  	fcall	_I2C_Read
  6382     086F  00F3               	movwf	Read@dato
  6383     0870                     l2234:
  6384                           
  6385                           ;main_master.c: 150:     I2C_Nack();
  6386     0870  160A  118A  2526  120A  158A  	fcall	_I2C_Nack
  6387     0875                     l2236:
  6388                           
  6389                           ;main_master.c: 151:     I2C_Stop();
  6390     0875  160A  118A  2512  120A  158A  	fcall	_I2C_Stop
  6391     087A                     l2238:
  6392                           
  6393                           ;main_master.c: 152:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  6394     087A  3006               	movlw	6
  6395     087B  00F1               	movwf	??_Read
  6396     087C                     u3827:
  6397     087C  0BF1               	decfsz	??_Read,f
  6398     087D  287C               	goto	u3827
  6399     087E  0000               	nop
  6400     087F                     l2240:
  6401                           
  6402                           ;main_master.c: 153:     return dato;
  6403     087F  0873               	movf	Read@dato,w
  6404     0880                     l154:
  6405     0880  0008               	return
  6406     0881                     __end_of_Read:
  6407                           
  6408                           	psect	text26
  6409     151C                     __ptext26:	
  6410 ;; *************** function _I2C_Restart *****************
  6411 ;; Defined at:
  6412 ;;		line 41 in file "i2c.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		None
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6426 ;;      Params:         0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_Read
  6436 ;;		_Slave1_Total
  6437 ;;		_Slave1_Red
  6438 ;;		_Slave1_Green
  6439 ;;		_Slave1_Blue
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443     151C                     _I2C_Restart:	
  6444                           ;psect for function _I2C_Restart
  6445                           
  6446     151C                     l2170:	
  6447                           ;incstack = 0
  6448                           ; Regs used in _I2C_Restart: []
  6449                           
  6450                           
  6451                           ;i2c.c: 43:     SSPCON2bits.RSEN = 1;
  6452     151C  1683               	bsf	3,5	;RP0=1, select bank1
  6453     151D  1303               	bcf	3,6	;RP1=0, select bank1
  6454     151E  1491               	bsf	17,1	;volatile
  6455     151F                     l306:	
  6456                           ;i2c.c: 44:     while(PIR1bits.SSPIF == 0);
  6457                           
  6458     151F  1283               	bcf	3,5	;RP0=0, select bank0
  6459     1520  1D8C               	btfss	12,3	;volatile
  6460     1521  2D23               	goto	u1941
  6461     1522  2D24               	goto	u1940
  6462     1523                     u1941:
  6463     1523  2D1F               	goto	l306
  6464     1524                     u1940:
  6465     1524                     l308:
  6466                           
  6467                           ;i2c.c: 45:     PIR1bits.SSPIF = 0;
  6468     1524  118C               	bcf	12,3	;volatile
  6469     1525                     l309:
  6470     1525  0008               	return
  6471     1526                     __end_of_I2C_Restart:
  6472                           
  6473                           	psect	text27
  6474     159E                     __ptext27:	
  6475 ;; *************** function _Bcd_to_Dec *****************
  6476 ;; Defined at:
  6477 ;;		line 240 in file "main_master.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  bcd             1    wreg     unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  bcd             1    7[COMMON] unsigned char 
  6482 ;;  dec             1    6[COMMON] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      unsigned char 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, pclath, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6492 ;;      Params:         0       0       0       0       0
  6493 ;;      Locals:         2       0       0       0       0
  6494 ;;      Temps:          2       0       0       0       0
  6495 ;;      Totals:         4       0       0       0       0
  6496 ;;Total ram usage:        4 bytes
  6497 ;; Hardware stack levels used: 1
  6498 ;; Hardware stack levels required when called: 1
  6499 ;; This function calls:
  6500 ;;		___bmul
  6501 ;; This function is called by:
  6502 ;;		_Read_Time
  6503 ;;		_Read_Fecha
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507     159E                     _Bcd_to_Dec:	
  6508                           ;psect for function _Bcd_to_Dec
  6509                           
  6510                           
  6511                           ;incstack = 0
  6512                           ; Regs used in _Bcd_to_Dec: [wreg+status,2+status,0+pclath+cstack]
  6513                           ;Bcd_to_Dec@bcd stored from wreg
  6514     159E  00F7               	movwf	Bcd_to_Dec@bcd
  6515     159F                     l2244:
  6516                           
  6517                           ;main_master.c: 241:     uint8_t dec;;main_master.c: 242:     dec = ((bcd>>4)*10)+(bcd &
      +                           0b00001111);
  6518     159F  300F               	movlw	15
  6519     15A0  0577               	andwf	Bcd_to_Dec@bcd,w
  6520     15A1  00F4               	movwf	??_Bcd_to_Dec
  6521     15A2  300A               	movlw	10
  6522     15A3  00F0               	movwf	___bmul@multiplicand
  6523     15A4  0877               	movf	Bcd_to_Dec@bcd,w
  6524     15A5  00F5               	movwf	??_Bcd_to_Dec+1
  6525     15A6  3004               	movlw	4
  6526     15A7                     u2065:
  6527     15A7  1003               	clrc
  6528     15A8  0CF5               	rrf	??_Bcd_to_Dec+1,f
  6529     15A9  3EFF               	addlw	-1
  6530     15AA  1D03               	skipz
  6531     15AB  2DA7               	goto	u2065
  6532     15AC  0875               	movf	??_Bcd_to_Dec+1,w
  6533     15AD  160A  118A  2572  160A  118A  	fcall	___bmul
  6534     15B2  0774               	addwf	??_Bcd_to_Dec,w
  6535     15B3  00F6               	movwf	Bcd_to_Dec@dec
  6536     15B4                     l2246:
  6537                           
  6538                           ;main_master.c: 243:     return dec;
  6539     15B4  0876               	movf	Bcd_to_Dec@dec,w
  6540     15B5                     l192:
  6541     15B5  0008               	return
  6542     15B6                     __end_of_Bcd_to_Dec:
  6543                           
  6544                           	psect	text28
  6545     1572                     __ptext28:	
  6546 ;; *************** function ___bmul *****************
  6547 ;; Defined at:
  6548 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;  multiplier      1    wreg     unsigned char 
  6551 ;;  multiplicand    1    0[COMMON] unsigned char 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  multiplier      1    3[COMMON] unsigned char 
  6554 ;;  product         1    2[COMMON] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      unsigned char 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6564 ;;      Params:         1       0       0       0       0
  6565 ;;      Locals:         2       0       0       0       0
  6566 ;;      Temps:          1       0       0       0       0
  6567 ;;      Totals:         4       0       0       0       0
  6568 ;;Total ram usage:        4 bytes
  6569 ;; Hardware stack levels used: 1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_Bcd_to_Dec
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577     1572                     ___bmul:	
  6578                           ;psect for function ___bmul
  6579                           
  6580                           
  6581                           ;incstack = 0
  6582                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6583                           ;___bmul@multiplier stored from wreg
  6584     1572  00F3               	movwf	___bmul@multiplier
  6585     1573                     l2192:
  6586     1573  01F2               	clrf	___bmul@product
  6587     1574                     l2194:
  6588     1574  1C73               	btfss	___bmul@multiplier,0
  6589     1575  2D77               	goto	u2021
  6590     1576  2D78               	goto	u2020
  6591     1577                     u2021:
  6592     1577  2D7C               	goto	l2198
  6593     1578                     u2020:
  6594     1578                     l2196:
  6595     1578  0870               	movf	___bmul@multiplicand,w
  6596     1579  00F1               	movwf	??___bmul
  6597     157A  0871               	movf	??___bmul,w
  6598     157B  07F2               	addwf	___bmul@product,f
  6599     157C                     l2198:
  6600     157C  1003               	clrc
  6601     157D  0DF0               	rlf	___bmul@multiplicand,f
  6602     157E                     l2200:
  6603     157E  1003               	clrc
  6604     157F  0CF3               	rrf	___bmul@multiplier,f
  6605     1580  0873               	movf	___bmul@multiplier,w
  6606     1581  1D03               	btfss	3,2
  6607     1582  2D84               	goto	u2031
  6608     1583  2D85               	goto	u2030
  6609     1584                     u2031:
  6610     1584  2D74               	goto	l2194
  6611     1585                     u2030:
  6612     1585                     l2202:
  6613     1585  0872               	movf	___bmul@product,w
  6614     1586                     l491:
  6615     1586  0008               	return
  6616     1587                     __end_of___bmul:
  6617                           
  6618                           	psect	text29
  6619     08F0                     __ptext29:	
  6620 ;; *************** function _Lcd_Write_String *****************
  6621 ;; Defined at:
  6622 ;;		line 98 in file "LCD.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  a               2    5[COMMON] PTR unsigned char 
  6625 ;;		 -> buffer(20), STR_1(3), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  i               2   10[COMMON] int 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6637 ;;      Params:         2       0       0       0       0
  6638 ;;      Locals:         2       0       0       0       0
  6639 ;;      Temps:          3       0       0       0       0
  6640 ;;      Totals:         7       0       0       0       0
  6641 ;;Total ram usage:        7 bytes
  6642 ;; Hardware stack levels used: 1
  6643 ;; Hardware stack levels required when called: 2
  6644 ;; This function calls:
  6645 ;;		_Lcd_Write_Char
  6646 ;; This function is called by:
  6647 ;;		_main
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651     08F0                     _Lcd_Write_String:	
  6652                           ;psect for function _Lcd_Write_String
  6653                           
  6654     08F0                     l2484:	
  6655                           ;incstack = 0
  6656                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6657                           
  6658                           
  6659                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  6660     08F0  01FA               	clrf	Lcd_Write_String@i
  6661     08F1  01FB               	clrf	Lcd_Write_String@i+1
  6662     08F2  2915               	goto	l2490
  6663     08F3                     l2486:
  6664                           
  6665                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  6666     08F3  087A               	movf	Lcd_Write_String@i,w
  6667     08F4  0775               	addwf	Lcd_Write_String@a,w
  6668     08F5  00F8               	movwf	??_Lcd_Write_String+1
  6669     08F6  0876               	movf	Lcd_Write_String@a+1,w
  6670     08F7  00F7               	movwf	??_Lcd_Write_String
  6671     08F8  1803               	skipnc
  6672     08F9  0AF7               	incf	??_Lcd_Write_String,f
  6673     08FA  1FFA               	btfss	Lcd_Write_String@i,7
  6674     08FB  28FD               	goto	u2540
  6675     08FC  03F7               	decf	??_Lcd_Write_String,f
  6676     08FD                     u2540:
  6677     08FD  0877               	movf	??_Lcd_Write_String,w
  6678     08FE  00F9               	movwf	??_Lcd_Write_String+2
  6679     08FF  0879               	movf	??_Lcd_Write_String+2,w
  6680     0900  1283               	bcf	3,5	;RP0=0, select bank0
  6681     0901  1303               	bcf	3,6	;RP1=0, select bank0
  6682     0902  00FF               	movwf	btemp+1
  6683     0903  0878               	movf	??_Lcd_Write_String+1,w
  6684     0904  0084               	movwf	4
  6685     0905  120A  158A  2000  120A  158A  	fcall	stringtab
  6686     090A  120A  158A  2081  120A  158A  	fcall	_Lcd_Write_Char
  6687     090F                     l2488:
  6688     090F  3001               	movlw	1
  6689     0910  07FA               	addwf	Lcd_Write_String@i,f
  6690     0911  1803               	skipnc
  6691     0912  0AFB               	incf	Lcd_Write_String@i+1,f
  6692     0913  3000               	movlw	0
  6693     0914  07FB               	addwf	Lcd_Write_String@i+1,f
  6694     0915                     l2490:
  6695     0915  087A               	movf	Lcd_Write_String@i,w
  6696     0916  0775               	addwf	Lcd_Write_String@a,w
  6697     0917  00F8               	movwf	??_Lcd_Write_String+1
  6698     0918  0876               	movf	Lcd_Write_String@a+1,w
  6699     0919  00F7               	movwf	??_Lcd_Write_String
  6700     091A  1803               	skipnc
  6701     091B  0AF7               	incf	??_Lcd_Write_String,f
  6702     091C  1FFA               	btfss	Lcd_Write_String@i,7
  6703     091D  291F               	goto	u2550
  6704     091E  03F7               	decf	??_Lcd_Write_String,f
  6705     091F                     u2550:
  6706     091F  0877               	movf	??_Lcd_Write_String,w
  6707     0920  00F9               	movwf	??_Lcd_Write_String+2
  6708     0921  0879               	movf	??_Lcd_Write_String+2,w
  6709     0922  1283               	bcf	3,5	;RP0=0, select bank0
  6710     0923  1303               	bcf	3,6	;RP1=0, select bank0
  6711     0924  00FF               	movwf	btemp+1
  6712     0925  0878               	movf	??_Lcd_Write_String+1,w
  6713     0926  0084               	movwf	4
  6714     0927  120A  158A  2000  120A  158A  	fcall	stringtab
  6715     092C  3A00               	xorlw	0
  6716     092D  1D03               	skipz
  6717     092E  2930               	goto	u2561
  6718     092F  2931               	goto	u2560
  6719     0930                     u2561:
  6720     0930  28F3               	goto	l2486
  6721     0931                     u2560:
  6722     0931                     l263:
  6723     0931  0008               	return
  6724     0932                     __end_of_Lcd_Write_String:
  6725                           
  6726                           	psect	text30
  6727     0881                     __ptext30:	
  6728 ;; *************** function _Lcd_Write_Char *****************
  6729 ;; Defined at:
  6730 ;;		line 83 in file "LCD.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  a               1    wreg     unsigned char 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  a               1    4[COMMON] unsigned char 
  6735 ;;  y               1    3[COMMON] unsigned char 
  6736 ;;  temp            1    2[COMMON] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0, pclath, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       0       0       0       0
  6747 ;;      Locals:         3       0       0       0       0
  6748 ;;      Temps:          1       0       0       0       0
  6749 ;;      Totals:         4       0       0       0       0
  6750 ;;Total ram usage:        4 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 1
  6753 ;; This function calls:
  6754 ;;		_Lcd_Port
  6755 ;; This function is called by:
  6756 ;;		_Lcd_Write_String
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760     0881                     _Lcd_Write_Char:	
  6761                           ;psect for function _Lcd_Write_Char
  6762                           
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6766                           ;Lcd_Write_Char@a stored from wreg
  6767     0881  00F4               	movwf	Lcd_Write_Char@a
  6768     0882                     l2272:
  6769                           
  6770                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  6771     0882  0874               	movf	Lcd_Write_Char@a,w
  6772     0883  390F               	andlw	15
  6773     0884  00F2               	movwf	Lcd_Write_Char@temp
  6774                           
  6775                           ;LCD.c: 86:     y = a & 0xF0;
  6776     0885  0874               	movf	Lcd_Write_Char@a,w
  6777     0886  39F0               	andlw	240
  6778     0887  00F3               	movwf	Lcd_Write_Char@y
  6779     0888                     l2274:
  6780                           
  6781                           ;LCD.c: 87:     PORTDbits.RD6 = 1;
  6782     0888  1283               	bcf	3,5	;RP0=0, select bank0
  6783     0889  1303               	bcf	3,6	;RP1=0, select bank0
  6784     088A  1708               	bsf	8,6	;volatile
  6785     088B                     l2276:
  6786                           
  6787                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  6788     088B  0873               	movf	Lcd_Write_Char@y,w
  6789     088C  00F1               	movwf	??_Lcd_Write_Char
  6790     088D  3004               	movlw	4
  6791     088E                     u2085:
  6792     088E  1003               	clrc
  6793     088F  0CF1               	rrf	??_Lcd_Write_Char,f
  6794     0890  3EFF               	addlw	-1
  6795     0891  1D03               	skipz
  6796     0892  288E               	goto	u2085
  6797     0893  0871               	movf	??_Lcd_Write_Char,w
  6798     0894  160A  118A  260A  120A  158A  	fcall	_Lcd_Port
  6799     0899                     l2278:
  6800                           
  6801                           ;LCD.c: 89:     PORTDbits.RD7 = 1;
  6802     0899  1283               	bcf	3,5	;RP0=0, select bank0
  6803     089A  1303               	bcf	3,6	;RP1=0, select bank0
  6804     089B  1788               	bsf	8,7	;volatile
  6805     089C                     l2280:
  6806                           
  6807                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6808     089C  301A               	movlw	26
  6809     089D  00F1               	movwf	??_Lcd_Write_Char
  6810     089E                     u3837:
  6811     089E  0BF1               	decfsz	??_Lcd_Write_Char,f
  6812     089F  289E               	goto	u3837
  6813     08A0  0000               	nop
  6814     08A1                     l2282:
  6815                           
  6816                           ;LCD.c: 91:     PORTDbits.RD7 = 0;
  6817     08A1  1283               	bcf	3,5	;RP0=0, select bank0
  6818     08A2  1303               	bcf	3,6	;RP1=0, select bank0
  6819     08A3  1388               	bcf	8,7	;volatile
  6820     08A4                     l2284:
  6821                           
  6822                           ;LCD.c: 92:     Lcd_Port(temp);
  6823     08A4  0872               	movf	Lcd_Write_Char@temp,w
  6824     08A5  160A  118A  260A  120A  158A  	fcall	_Lcd_Port
  6825     08AA                     l2286:
  6826                           
  6827                           ;LCD.c: 93:     PORTDbits.RD7 = 1;
  6828     08AA  1283               	bcf	3,5	;RP0=0, select bank0
  6829     08AB  1303               	bcf	3,6	;RP1=0, select bank0
  6830     08AC  1788               	bsf	8,7	;volatile
  6831     08AD                     l2288:
  6832                           
  6833                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  6834     08AD  301A               	movlw	26
  6835     08AE  00F1               	movwf	??_Lcd_Write_Char
  6836     08AF                     u3847:
  6837     08AF  0BF1               	decfsz	??_Lcd_Write_Char,f
  6838     08B0  28AF               	goto	u3847
  6839     08B1  0000               	nop
  6840     08B2                     l2290:
  6841                           
  6842                           ;LCD.c: 95:     PORTDbits.RD7 = 0;
  6843     08B2  1283               	bcf	3,5	;RP0=0, select bank0
  6844     08B3  1303               	bcf	3,6	;RP1=0, select bank0
  6845     08B4  1388               	bcf	8,7	;volatile
  6846     08B5                     l257:
  6847     08B5  0008               	return
  6848     08B6                     __end_of_Lcd_Write_Char:
  6849                           
  6850                           	psect	text31
  6851     09BC                     __ptext31:	
  6852 ;; *************** function _Lcd_Set_Cursor *****************
  6853 ;; Defined at:
  6854 ;;		line 48 in file "LCD.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  a               1    wreg     unsigned char 
  6857 ;;  b               1    4[COMMON] unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  a               1    6[COMMON] unsigned char 
  6860 ;;  temp            1    9[COMMON] unsigned char 
  6861 ;;  y               1    8[COMMON] unsigned char 
  6862 ;;  z               1    7[COMMON] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0, pclath, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6872 ;;      Params:         1       0       0       0       0
  6873 ;;      Locals:         4       0       0       0       0
  6874 ;;      Temps:          1       0       0       0       0
  6875 ;;      Totals:         6       0       0       0       0
  6876 ;;Total ram usage:        6 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; Hardware stack levels required when called: 2
  6879 ;; This function calls:
  6880 ;;		_Lcd_Cmd
  6881 ;; This function is called by:
  6882 ;;		_main
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886     09BC                     _Lcd_Set_Cursor:	
  6887                           ;psect for function _Lcd_Set_Cursor
  6888                           
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  6892                           ;Lcd_Set_Cursor@a stored from wreg
  6893     09BC  00F6               	movwf	Lcd_Set_Cursor@a
  6894     09BD                     l2464:
  6895                           
  6896                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  6897     09BD  0376               	decf	Lcd_Set_Cursor@a,w
  6898     09BE  1D03               	btfss	3,2
  6899     09BF  29C1               	goto	u2501
  6900     09C0  29C2               	goto	u2500
  6901     09C1                     u2501:
  6902     09C1  29DF               	goto	l2474
  6903     09C2                     u2500:
  6904     09C2                     l2466:
  6905                           
  6906                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  6907     09C2  0874               	movf	Lcd_Set_Cursor@b,w
  6908     09C3  3E7F               	addlw	127
  6909     09C4  00F9               	movwf	Lcd_Set_Cursor@temp
  6910                           
  6911                           ;LCD.c: 52:         z = temp >> 4;
  6912     09C5  0879               	movf	Lcd_Set_Cursor@temp,w
  6913     09C6  00F5               	movwf	??_Lcd_Set_Cursor
  6914     09C7  3004               	movlw	4
  6915     09C8                     u2515:
  6916     09C8  1003               	clrc
  6917     09C9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6918     09CA  3EFF               	addlw	-1
  6919     09CB  1D03               	skipz
  6920     09CC  29C8               	goto	u2515
  6921     09CD  0875               	movf	??_Lcd_Set_Cursor,w
  6922     09CE  00F7               	movwf	Lcd_Set_Cursor@z
  6923     09CF                     l2468:
  6924                           
  6925                           ;LCD.c: 53:         y = temp & 0x0F;
  6926     09CF  0879               	movf	Lcd_Set_Cursor@temp,w
  6927     09D0  390F               	andlw	15
  6928     09D1  00F8               	movwf	Lcd_Set_Cursor@y
  6929     09D2                     l2470:
  6930                           
  6931                           ;LCD.c: 54:         Lcd_Cmd(z);
  6932     09D2  0877               	movf	Lcd_Set_Cursor@z,w
  6933     09D3  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  6934     09D8                     l2472:
  6935                           
  6936                           ;LCD.c: 55:         Lcd_Cmd(y);
  6937     09D8  0878               	movf	Lcd_Set_Cursor@y,w
  6938     09D9  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  6939                           
  6940                           ;LCD.c: 56:     } else if (a == 2) {
  6941     09DE  2A01               	goto	l251
  6942     09DF                     l2474:
  6943     09DF  3002               	movlw	2
  6944     09E0  0676               	xorwf	Lcd_Set_Cursor@a,w
  6945     09E1  1D03               	btfss	3,2
  6946     09E2  29E4               	goto	u2521
  6947     09E3  29E5               	goto	u2520
  6948     09E4                     u2521:
  6949     09E4  2A01               	goto	l251
  6950     09E5                     u2520:
  6951     09E5                     l2476:
  6952                           
  6953                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  6954     09E5  0874               	movf	Lcd_Set_Cursor@b,w
  6955     09E6  3EBF               	addlw	191
  6956     09E7  00F9               	movwf	Lcd_Set_Cursor@temp
  6957                           
  6958                           ;LCD.c: 58:         z = temp >> 4;
  6959     09E8  0879               	movf	Lcd_Set_Cursor@temp,w
  6960     09E9  00F5               	movwf	??_Lcd_Set_Cursor
  6961     09EA  3004               	movlw	4
  6962     09EB                     u2535:
  6963     09EB  1003               	clrc
  6964     09EC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  6965     09ED  3EFF               	addlw	-1
  6966     09EE  1D03               	skipz
  6967     09EF  29EB               	goto	u2535
  6968     09F0  0875               	movf	??_Lcd_Set_Cursor,w
  6969     09F1  00F7               	movwf	Lcd_Set_Cursor@z
  6970     09F2                     l2478:
  6971                           
  6972                           ;LCD.c: 59:         y = temp & 0x0F;
  6973     09F2  0879               	movf	Lcd_Set_Cursor@temp,w
  6974     09F3  390F               	andlw	15
  6975     09F4  00F8               	movwf	Lcd_Set_Cursor@y
  6976     09F5                     l2480:
  6977                           
  6978                           ;LCD.c: 60:         Lcd_Cmd(z);
  6979     09F5  0877               	movf	Lcd_Set_Cursor@z,w
  6980     09F6  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  6981     09FB                     l2482:
  6982                           
  6983                           ;LCD.c: 61:         Lcd_Cmd(y);
  6984     09FB  0878               	movf	Lcd_Set_Cursor@y,w
  6985     09FC  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  6986     0A01                     l251:
  6987     0A01  0008               	return
  6988     0A02                     __end_of_Lcd_Set_Cursor:
  6989                           
  6990                           	psect	text32
  6991     0AB3                     __ptext32:	
  6992 ;; *************** function _Lcd_Init *****************
  6993 ;; Defined at:
  6994 ;;		line 65 in file "LCD.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  1    wreg      void 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7008 ;;      Params:         0       0       0       0       0
  7009 ;;      Locals:         0       0       0       0       0
  7010 ;;      Temps:          2       0       0       0       0
  7011 ;;      Totals:         2       0       0       0       0
  7012 ;;Total ram usage:        2 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 2
  7015 ;; This function calls:
  7016 ;;		_Lcd_Cmd
  7017 ;;		_Lcd_Port
  7018 ;; This function is called by:
  7019 ;;		_main
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023     0AB3                     _Lcd_Init:	
  7024                           ;psect for function _Lcd_Init
  7025                           
  7026     0AB3                     l2450:	
  7027                           ;incstack = 0
  7028                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7029                           
  7030                           
  7031                           ;LCD.c: 66:     Lcd_Port(0x00);
  7032     0AB3  3000               	movlw	0
  7033     0AB4  160A  118A  260A  120A  158A  	fcall	_Lcd_Port
  7034     0AB9                     l2452:
  7035                           
  7036                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7037     0AB9  3034               	movlw	52
  7038     0ABA  00F5               	movwf	??_Lcd_Init+1
  7039     0ABB  30F1               	movlw	241
  7040     0ABC  00F4               	movwf	??_Lcd_Init
  7041     0ABD                     u3857:
  7042     0ABD  0BF4               	decfsz	??_Lcd_Init,f
  7043     0ABE  2ABD               	goto	u3857
  7044     0ABF  0BF5               	decfsz	??_Lcd_Init+1,f
  7045     0AC0  2ABD               	goto	u3857
  7046     0AC1  2AC2               	nop2
  7047     0AC2                     l2454:
  7048                           
  7049                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  7050     0AC2  3003               	movlw	3
  7051     0AC3  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7052                           
  7053                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7054     0AC8  300D               	movlw	13
  7055     0AC9  00F5               	movwf	??_Lcd_Init+1
  7056     0ACA  30FB               	movlw	251
  7057     0ACB  00F4               	movwf	??_Lcd_Init
  7058     0ACC                     u3867:
  7059     0ACC  0BF4               	decfsz	??_Lcd_Init,f
  7060     0ACD  2ACC               	goto	u3867
  7061     0ACE  0BF5               	decfsz	??_Lcd_Init+1,f
  7062     0ACF  2ACC               	goto	u3867
  7063     0AD0  2AD1               	nop2
  7064     0AD1                     l2456:
  7065                           
  7066                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  7067     0AD1  3003               	movlw	3
  7068     0AD2  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7069     0AD7                     l2458:
  7070                           
  7071                           ;LCD.c: 71:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  7072     0AD7  3085               	movlw	133
  7073     0AD8  00F4               	movwf	??_Lcd_Init
  7074     0AD9                     u3877:
  7075     0AD9  0BF4               	decfsz	??_Lcd_Init,f
  7076     0ADA  2AD9               	goto	u3877
  7077                           
  7078                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  7079     0ADB  3003               	movlw	3
  7080     0ADC  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7081                           
  7082                           ;LCD.c: 73:     Lcd_Cmd(0x02);
  7083     0AE1  3002               	movlw	2
  7084     0AE2  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7085                           
  7086                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  7087     0AE7  3002               	movlw	2
  7088     0AE8  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7089                           
  7090                           ;LCD.c: 75:     Lcd_Cmd(0x08);
  7091     0AED  3008               	movlw	8
  7092     0AEE  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7093                           
  7094                           ;LCD.c: 76:     Lcd_Cmd(0x00);
  7095     0AF3  3000               	movlw	0
  7096     0AF4  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7097                           
  7098                           ;LCD.c: 77:     Lcd_Cmd(0x0C);
  7099     0AF9  300C               	movlw	12
  7100     0AFA  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7101                           
  7102                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  7103     0AFF  3000               	movlw	0
  7104     0B00  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7105                           
  7106                           ;LCD.c: 79:     Lcd_Cmd(0x06);
  7107     0B05  3006               	movlw	6
  7108     0B06  160A  118A  25B6  120A  158A  	fcall	_Lcd_Cmd
  7109     0B0B                     l2460:
  7110                           
  7111                           ;LCD.c: 80:  _delay((unsigned long)((100)*(8000000/4000000.0)));
  7112     0B0B  3042               	movlw	66
  7113     0B0C  00F4               	movwf	??_Lcd_Init
  7114     0B0D                     u3887:
  7115     0B0D  0BF4               	decfsz	??_Lcd_Init,f
  7116     0B0E  2B0D               	goto	u3887
  7117     0B0F  0000               	nop
  7118     0B10                     l254:
  7119     0B10  0008               	return
  7120     0B11                     __end_of_Lcd_Init:
  7121                           
  7122                           	psect	text33
  7123     1531                     __ptext33:	
  7124 ;; *************** function _Lcd_Clear *****************
  7125 ;; Defined at:
  7126 ;;		line 43 in file "LCD.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, pclath, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7140 ;;      Params:         0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0
  7143 ;;      Totals:         0       0       0       0       0
  7144 ;;Total ram usage:        0 bytes
  7145 ;; Hardware stack levels used: 1
  7146 ;; Hardware stack levels required when called: 2
  7147 ;; This function calls:
  7148 ;;		_Lcd_Cmd
  7149 ;; This function is called by:
  7150 ;;		_main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154     1531                     _Lcd_Clear:	
  7155                           ;psect for function _Lcd_Clear
  7156                           
  7157     1531                     l2462:	
  7158                           ;incstack = 0
  7159                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  7160                           
  7161                           
  7162                           ;LCD.c: 44:     Lcd_Cmd(0);
  7163     1531  3000               	movlw	0
  7164     1532  160A  118A  25B6  160A  118A  	fcall	_Lcd_Cmd
  7165                           
  7166                           ;LCD.c: 45:     Lcd_Cmd(1);
  7167     1537  3001               	movlw	1
  7168     1538  160A  118A  25B6  160A  118A  	fcall	_Lcd_Cmd
  7169     153D                     l245:
  7170     153D  0008               	return
  7171     153E                     __end_of_Lcd_Clear:
  7172                           
  7173                           	psect	text34
  7174     15B6                     __ptext34:	
  7175 ;; *************** function _Lcd_Cmd *****************
  7176 ;; Defined at:
  7177 ;;		line 35 in file "LCD.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  a               1    wreg     unsigned char 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  a               1    3[COMMON] unsigned char 
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      void 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2, status,0, pclath, cstack
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7191 ;;      Params:         0       0       0       0       0
  7192 ;;      Locals:         1       0       0       0       0
  7193 ;;      Temps:          2       0       0       0       0
  7194 ;;      Totals:         3       0       0       0       0
  7195 ;;Total ram usage:        3 bytes
  7196 ;; Hardware stack levels used: 1
  7197 ;; Hardware stack levels required when called: 1
  7198 ;; This function calls:
  7199 ;;		_Lcd_Port
  7200 ;; This function is called by:
  7201 ;;		_Lcd_Clear
  7202 ;;		_Lcd_Set_Cursor
  7203 ;;		_Lcd_Init
  7204 ;;		_Lcd_Shift_Right
  7205 ;;		_Lcd_Shift_Left
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209     15B6                     _Lcd_Cmd:	
  7210                           ;psect for function _Lcd_Cmd
  7211                           
  7212                           
  7213                           ;incstack = 0
  7214                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7215                           ;Lcd_Cmd@a stored from wreg
  7216     15B6  00F3               	movwf	Lcd_Cmd@a
  7217     15B7                     l2262:
  7218                           
  7219                           ;LCD.c: 36:     PORTDbits.RD6 = 0;
  7220     15B7  1283               	bcf	3,5	;RP0=0, select bank0
  7221     15B8  1303               	bcf	3,6	;RP1=0, select bank0
  7222     15B9  1308               	bcf	8,6	;volatile
  7223     15BA                     l2264:
  7224                           
  7225                           ;LCD.c: 37:     Lcd_Port(a);
  7226     15BA  0873               	movf	Lcd_Cmd@a,w
  7227     15BB  160A  118A  260A  160A  118A  	fcall	_Lcd_Port
  7228     15C0                     l2266:
  7229                           
  7230                           ;LCD.c: 38:     PORTDbits.RD7 = 1;
  7231     15C0  1283               	bcf	3,5	;RP0=0, select bank0
  7232     15C1  1303               	bcf	3,6	;RP1=0, select bank0
  7233     15C2  1788               	bsf	8,7	;volatile
  7234     15C3                     l2268:
  7235                           
  7236                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7237     15C3  300B               	movlw	11
  7238     15C4  00F2               	movwf	??_Lcd_Cmd+1
  7239     15C5  3062               	movlw	98
  7240     15C6  00F1               	movwf	??_Lcd_Cmd
  7241     15C7                     u3897:
  7242     15C7  0BF1               	decfsz	??_Lcd_Cmd,f
  7243     15C8  2DC7               	goto	u3897
  7244     15C9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  7245     15CA  2DC7               	goto	u3897
  7246     15CB  0000               	nop
  7247     15CC                     l2270:
  7248                           
  7249                           ;LCD.c: 40:     PORTDbits.RD7 = 0;
  7250     15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7251     15CD  1303               	bcf	3,6	;RP1=0, select bank0
  7252     15CE  1388               	bcf	8,7	;volatile
  7253     15CF                     l242:
  7254     15CF  0008               	return
  7255     15D0                     __end_of_Lcd_Cmd:
  7256                           
  7257                           	psect	text35
  7258     160A                     __ptext35:	
  7259 ;; *************** function _Lcd_Port *****************
  7260 ;; Defined at:
  7261 ;;		line 13 in file "LCD.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  a               1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  a               1    0[COMMON] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7275 ;;      Params:         0       0       0       0       0
  7276 ;;      Locals:         1       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0
  7278 ;;      Totals:         1       0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used: 1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_Lcd_Cmd
  7285 ;;		_Lcd_Init
  7286 ;;		_Lcd_Write_Char
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290     160A                     _Lcd_Port:	
  7291                           ;psect for function _Lcd_Port
  7292                           
  7293                           
  7294                           ;incstack = 0
  7295                           ; Regs used in _Lcd_Port: [wreg]
  7296                           ;Lcd_Port@a stored from wreg
  7297     160A  00F0               	movwf	Lcd_Port@a
  7298     160B                     l2182:
  7299                           
  7300                           ;LCD.c: 14:     if (a & 1)
  7301     160B  1C70               	btfss	Lcd_Port@a,0
  7302     160C  2E0E               	goto	u1981
  7303     160D  2E0F               	goto	u1980
  7304     160E                     u1981:
  7305     160E  2E13               	goto	l231
  7306     160F                     u1980:
  7307     160F                     l2184:
  7308                           
  7309                           ;LCD.c: 15:         PORTBbits.RB4 = 1;
  7310     160F  1283               	bcf	3,5	;RP0=0, select bank0
  7311     1610  1303               	bcf	3,6	;RP1=0, select bank0
  7312     1611  1606               	bsf	6,4	;volatile
  7313     1612  2E16               	goto	l232
  7314     1613                     l231:	
  7315                           ;LCD.c: 16:     else
  7316                           
  7317                           
  7318                           ;LCD.c: 17:         PORTBbits.RB4 = 0;
  7319     1613  1283               	bcf	3,5	;RP0=0, select bank0
  7320     1614  1303               	bcf	3,6	;RP1=0, select bank0
  7321     1615  1206               	bcf	6,4	;volatile
  7322     1616                     l232:
  7323                           
  7324                           ;LCD.c: 19:     if (a & 2)
  7325     1616  1CF0               	btfss	Lcd_Port@a,1
  7326     1617  2E19               	goto	u1991
  7327     1618  2E1A               	goto	u1990
  7328     1619                     u1991:
  7329     1619  2E1C               	goto	l233
  7330     161A                     u1990:
  7331     161A                     l2186:
  7332                           
  7333                           ;LCD.c: 20:         PORTBbits.RB5 = 1;
  7334     161A  1686               	bsf	6,5	;volatile
  7335     161B  2E1D               	goto	l234
  7336     161C                     l233:	
  7337                           ;LCD.c: 21:     else
  7338                           
  7339                           
  7340                           ;LCD.c: 22:         PORTBbits.RB5 = 0;
  7341     161C  1286               	bcf	6,5	;volatile
  7342     161D                     l234:
  7343                           
  7344                           ;LCD.c: 24:     if (a & 4)
  7345     161D  1D70               	btfss	Lcd_Port@a,2
  7346     161E  2E20               	goto	u2001
  7347     161F  2E21               	goto	u2000
  7348     1620                     u2001:
  7349     1620  2E23               	goto	l235
  7350     1621                     u2000:
  7351     1621                     l2188:
  7352                           
  7353                           ;LCD.c: 25:         PORTBbits.RB6 = 1;
  7354     1621  1706               	bsf	6,6	;volatile
  7355     1622  2E24               	goto	l236
  7356     1623                     l235:	
  7357                           ;LCD.c: 26:     else
  7358                           
  7359                           
  7360                           ;LCD.c: 27:         PORTBbits.RB6 = 0;
  7361     1623  1306               	bcf	6,6	;volatile
  7362     1624                     l236:
  7363                           
  7364                           ;LCD.c: 29:     if (a & 8)
  7365     1624  1DF0               	btfss	Lcd_Port@a,3
  7366     1625  2E27               	goto	u2011
  7367     1626  2E28               	goto	u2010
  7368     1627                     u2011:
  7369     1627  2E2A               	goto	l237
  7370     1628                     u2010:
  7371     1628                     l2190:
  7372                           
  7373                           ;LCD.c: 30:         PORTBbits.RB7 = 1;
  7374     1628  1786               	bsf	6,7	;volatile
  7375     1629  2E2B               	goto	l239
  7376     162A                     l237:	
  7377                           ;LCD.c: 31:     else
  7378                           
  7379                           
  7380                           ;LCD.c: 32:         PORTBbits.RB7 = 0;
  7381     162A  1386               	bcf	6,7	;volatile
  7382     162B                     l239:
  7383     162B  0008               	return
  7384     162C                     __end_of_Lcd_Port:
  7385                           
  7386                           	psect	text36
  7387     1776                     __ptext36:	
  7388 ;; *************** function _AHT10_Trigger *****************
  7389 ;; Defined at:
  7390 ;;		line 256 in file "main_master.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;		None
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;		None
  7395 ;; Return value:  Size  Location     Type
  7396 ;;                  1    wreg      void 
  7397 ;; Registers used:
  7398 ;;		wreg, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7404 ;;      Params:         0       0       0       0       0
  7405 ;;      Locals:         0       0       0       0       0
  7406 ;;      Temps:          2       0       0       0       0
  7407 ;;      Totals:         2       0       0       0       0
  7408 ;;Total ram usage:        2 bytes
  7409 ;; Hardware stack levels used: 1
  7410 ;; Hardware stack levels required when called: 1
  7411 ;; This function calls:
  7412 ;;		_I2C_Start
  7413 ;;		_I2C_Stop
  7414 ;;		_I2C_Write
  7415 ;; This function is called by:
  7416 ;;		_main
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420     1776                     _AHT10_Trigger:	
  7421                           ;psect for function _AHT10_Trigger
  7422                           
  7423     1776                     l2574:	
  7424                           ;incstack = 0
  7425                           ; Regs used in _AHT10_Trigger: [wreg+status,2+status,0+pclath+cstack]
  7426                           
  7427                           
  7428                           ;main_master.c: 257:     I2C_Start();
  7429     1776  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  7430     177B                     l2576:
  7431                           
  7432                           ;main_master.c: 258:     I2C_Write(0x70);
  7433     177B  3070               	movlw	112
  7434     177C  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7435     1781                     l2578:
  7436                           
  7437                           ;main_master.c: 259:     I2C_Write(0xAC);
  7438     1781  30AC               	movlw	172
  7439     1782  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7440     1787                     l2580:
  7441                           
  7442                           ;main_master.c: 260:     I2C_Write(0x33);
  7443     1787  3033               	movlw	51
  7444     1788  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7445     178D                     l2582:
  7446                           
  7447                           ;main_master.c: 261:     I2C_Write(0x00);
  7448     178D  3000               	movlw	0
  7449     178E  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7450                           
  7451                           ;main_master.c: 262:     I2C_Stop();
  7452     1793  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  7453     1798                     l2584:
  7454                           
  7455                           ;main_master.c: 263:     _delay((unsigned long)((80)*(8000000/4000.0)));
  7456     1798  30D0               	movlw	208
  7457     1799  00F2               	movwf	??_AHT10_Trigger+1
  7458     179A  30C9               	movlw	201
  7459     179B  00F1               	movwf	??_AHT10_Trigger
  7460     179C                     u3907:
  7461     179C  0BF1               	decfsz	??_AHT10_Trigger,f
  7462     179D  2F9C               	goto	u3907
  7463     179E  0BF2               	decfsz	??_AHT10_Trigger+1,f
  7464     179F  2F9C               	goto	u3907
  7465     17A0  2FA1               	nop2
  7466     17A1                     l198:
  7467     17A1  0008               	return
  7468     17A2                     __end_of_AHT10_Trigger:
  7469                           
  7470                           	psect	text37
  7471     1587                     __ptext37:	
  7472 ;; *************** function _AHT10_Soft_Reset *****************
  7473 ;; Defined at:
  7474 ;;		line 290 in file "main_master.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0, pclath, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7488 ;;      Params:         0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0
  7491 ;;      Totals:         0       0       0       0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 1
  7495 ;; This function calls:
  7496 ;;		_I2C_Start
  7497 ;;		_I2C_Stop
  7498 ;;		_I2C_Write
  7499 ;; This function is called by:
  7500 ;;		_main
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504     1587                     _AHT10_Soft_Reset:	
  7505                           ;psect for function _AHT10_Soft_Reset
  7506                           
  7507     1587                     l2568:	
  7508                           ;incstack = 0
  7509                           ; Regs used in _AHT10_Soft_Reset: [wreg+status,2+status,0+pclath+cstack]
  7510                           
  7511                           
  7512                           ;main_master.c: 291:     I2C_Start();
  7513     1587  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  7514     158C                     l2570:
  7515                           
  7516                           ;main_master.c: 292:     I2C_Write(0x70);
  7517     158C  3070               	movlw	112
  7518     158D  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7519     1592                     l2572:
  7520                           
  7521                           ;main_master.c: 293:     I2C_Write(0xBA);
  7522     1592  30BA               	movlw	186
  7523     1593  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  7524                           
  7525                           ;main_master.c: 294:     I2C_Stop();
  7526     1598  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  7527     159D                     l204:
  7528     159D  0008               	return
  7529     159E                     __end_of_AHT10_Soft_Reset:
  7530                           
  7531                           	psect	text38
  7532     006B                     __ptext38:	
  7533 ;; *************** function _AHT10_Read *****************
  7534 ;; Defined at:
  7535 ;;		line 266 in file "main_master.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, pclath, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7549 ;;      Params:         0       0       0       0       0
  7550 ;;      Locals:         0       0       0       0       0
  7551 ;;      Temps:          0       8       0       0       0
  7552 ;;      Totals:         0       8       0       0       0
  7553 ;;Total ram usage:        8 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 1
  7556 ;; This function calls:
  7557 ;;		_I2C_Nack
  7558 ;;		_I2C_Read
  7559 ;;		_I2C_Start
  7560 ;;		_I2C_Stop
  7561 ;;		_I2C_Write
  7562 ;;		___lmul
  7563 ;;		___xxtofl
  7564 ;; This function is called by:
  7565 ;;		_main
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569     006B                     _AHT10_Read:	
  7570                           ;psect for function _AHT10_Read
  7571                           
  7572     006B                     l2586:	
  7573                           ;incstack = 0
  7574                           ; Regs used in _AHT10_Read: [wreg+status,2+status,0+pclath+cstack]
  7575                           
  7576                           
  7577                           ;main_master.c: 267:     I2C_Start();
  7578     006B  160A  118A  2508  120A  118A  	fcall	_I2C_Start
  7579     0070                     l2588:
  7580                           
  7581                           ;main_master.c: 268:     I2C_Write(0x71);
  7582     0070  3071               	movlw	113
  7583     0071  160A  118A  253E  120A  118A  	fcall	_I2C_Write
  7584     0076                     l2590:
  7585                           
  7586                           ;main_master.c: 269:     estado = I2C_Read();
  7587     0076  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7588     007B  1283               	bcf	3,5	;RP0=0, select bank0
  7589     007C  1303               	bcf	3,6	;RP1=0, select bank0
  7590     007D  00E9               	movwf	_estado
  7591     007E                     l2592:
  7592                           
  7593                           ;main_master.c: 271:     hum1 = I2C_Read();
  7594     007E  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7595     0083  1283               	bcf	3,5	;RP0=0, select bank0
  7596     0084  1303               	bcf	3,6	;RP1=0, select bank0
  7597     0085  00AE               	movwf	??_AHT10_Read
  7598     0086  01AF               	clrf	??_AHT10_Read+1
  7599     0087  01B0               	clrf	??_AHT10_Read+2
  7600     0088  01B1               	clrf	??_AHT10_Read+3
  7601     0089  0831               	movf	??_AHT10_Read+3,w
  7602     008A  1683               	bsf	3,5	;RP0=1, select bank1
  7603     008B  1303               	bcf	3,6	;RP1=0, select bank1
  7604     008C  00BC               	movwf	(_hum1+3)^(0+128)
  7605     008D  1283               	bcf	3,5	;RP0=0, select bank0
  7606     008E  1303               	bcf	3,6	;RP1=0, select bank0
  7607     008F  0830               	movf	??_AHT10_Read+2,w
  7608     0090  1683               	bsf	3,5	;RP0=1, select bank1
  7609     0091  1303               	bcf	3,6	;RP1=0, select bank1
  7610     0092  00BB               	movwf	(_hum1+2)^(0+128)
  7611     0093  1283               	bcf	3,5	;RP0=0, select bank0
  7612     0094  1303               	bcf	3,6	;RP1=0, select bank0
  7613     0095  082F               	movf	??_AHT10_Read+1,w
  7614     0096  1683               	bsf	3,5	;RP0=1, select bank1
  7615     0097  1303               	bcf	3,6	;RP1=0, select bank1
  7616     0098  00BA               	movwf	(_hum1+1)^(0+128)
  7617     0099  1283               	bcf	3,5	;RP0=0, select bank0
  7618     009A  1303               	bcf	3,6	;RP1=0, select bank0
  7619     009B  082E               	movf	??_AHT10_Read,w
  7620     009C  1683               	bsf	3,5	;RP0=1, select bank1
  7621     009D  1303               	bcf	3,6	;RP1=0, select bank1
  7622     009E  00B9               	movwf	_hum1^(0+128)
  7623     009F                     l2594:
  7624                           
  7625                           ;main_master.c: 273:     hum2 = I2C_Read();
  7626     009F  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7627     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  7628     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  7629     00A6  00AE               	movwf	??_AHT10_Read
  7630     00A7  01AF               	clrf	??_AHT10_Read+1
  7631     00A8  01B0               	clrf	??_AHT10_Read+2
  7632     00A9  01B1               	clrf	??_AHT10_Read+3
  7633     00AA  0831               	movf	??_AHT10_Read+3,w
  7634     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  7635     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  7636     00AD  00B8               	movwf	(_hum2+3)^(0+128)
  7637     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  7638     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  7639     00B0  0830               	movf	??_AHT10_Read+2,w
  7640     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  7641     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  7642     00B3  00B7               	movwf	(_hum2+2)^(0+128)
  7643     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  7644     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  7645     00B6  082F               	movf	??_AHT10_Read+1,w
  7646     00B7  1683               	bsf	3,5	;RP0=1, select bank1
  7647     00B8  1303               	bcf	3,6	;RP1=0, select bank1
  7648     00B9  00B6               	movwf	(_hum2+1)^(0+128)
  7649     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  7650     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  7651     00BC  082E               	movf	??_AHT10_Read,w
  7652     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  7653     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  7654     00BF  00B5               	movwf	_hum2^(0+128)
  7655     00C0                     l2596:
  7656                           
  7657                           ;main_master.c: 275:     th = I2C_Read();
  7658     00C0  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7659     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  7660     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  7661     00C7  00AE               	movwf	??_AHT10_Read
  7662     00C8  01AF               	clrf	??_AHT10_Read+1
  7663     00C9  01B0               	clrf	??_AHT10_Read+2
  7664     00CA  01B1               	clrf	??_AHT10_Read+3
  7665     00CB  0831               	movf	??_AHT10_Read+3,w
  7666     00CC  1683               	bsf	3,5	;RP0=1, select bank1
  7667     00CD  1303               	bcf	3,6	;RP1=0, select bank1
  7668     00CE  00B4               	movwf	(_th+3)^(0+128)
  7669     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  7670     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  7671     00D1  0830               	movf	??_AHT10_Read+2,w
  7672     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  7673     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  7674     00D4  00B3               	movwf	(_th+2)^(0+128)
  7675     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  7676     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  7677     00D7  082F               	movf	??_AHT10_Read+1,w
  7678     00D8  1683               	bsf	3,5	;RP0=1, select bank1
  7679     00D9  1303               	bcf	3,6	;RP1=0, select bank1
  7680     00DA  00B2               	movwf	(_th+1)^(0+128)
  7681     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  7682     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  7683     00DD  082E               	movf	??_AHT10_Read,w
  7684     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  7685     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  7686     00E0  00B1               	movwf	_th^(0+128)
  7687     00E1                     l2598:
  7688                           
  7689                           ;main_master.c: 277:     tmp2 = I2C_Read();
  7690     00E1  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7691     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  7692     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  7693     00E8  00AE               	movwf	??_AHT10_Read
  7694     00E9  01AF               	clrf	??_AHT10_Read+1
  7695     00EA  01B0               	clrf	??_AHT10_Read+2
  7696     00EB  01B1               	clrf	??_AHT10_Read+3
  7697     00EC  0831               	movf	??_AHT10_Read+3,w
  7698     00ED  1683               	bsf	3,5	;RP0=1, select bank1
  7699     00EE  1303               	bcf	3,6	;RP1=0, select bank1
  7700     00EF  00C0               	movwf	(_tmp2+3)^(0+128)
  7701     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  7702     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  7703     00F2  0830               	movf	??_AHT10_Read+2,w
  7704     00F3  1683               	bsf	3,5	;RP0=1, select bank1
  7705     00F4  1303               	bcf	3,6	;RP1=0, select bank1
  7706     00F5  00BF               	movwf	(_tmp2+2)^(0+128)
  7707     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  7708     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  7709     00F8  082F               	movf	??_AHT10_Read+1,w
  7710     00F9  1683               	bsf	3,5	;RP0=1, select bank1
  7711     00FA  1303               	bcf	3,6	;RP1=0, select bank1
  7712     00FB  00BE               	movwf	(_tmp2+1)^(0+128)
  7713     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  7714     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  7715     00FE  082E               	movf	??_AHT10_Read,w
  7716     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  7717     0100  1303               	bcf	3,6	;RP1=0, select bank1
  7718     0101  00BD               	movwf	_tmp2^(0+128)
  7719     0102                     l2600:
  7720                           
  7721                           ;main_master.c: 279:     tmp1 = I2C_Read();
  7722     0102  120A  158A  2042  120A  118A  	fcall	_I2C_Read
  7723     0107  1283               	bcf	3,5	;RP0=0, select bank0
  7724     0108  1303               	bcf	3,6	;RP1=0, select bank0
  7725     0109  00AE               	movwf	??_AHT10_Read
  7726     010A  01AF               	clrf	??_AHT10_Read+1
  7727     010B  01B0               	clrf	??_AHT10_Read+2
  7728     010C  01B1               	clrf	??_AHT10_Read+3
  7729     010D  0831               	movf	??_AHT10_Read+3,w
  7730     010E  1683               	bsf	3,5	;RP0=1, select bank1
  7731     010F  1303               	bcf	3,6	;RP1=0, select bank1
  7732     0110  00C4               	movwf	(_tmp1+3)^(0+128)
  7733     0111  1283               	bcf	3,5	;RP0=0, select bank0
  7734     0112  1303               	bcf	3,6	;RP1=0, select bank0
  7735     0113  0830               	movf	??_AHT10_Read+2,w
  7736     0114  1683               	bsf	3,5	;RP0=1, select bank1
  7737     0115  1303               	bcf	3,6	;RP1=0, select bank1
  7738     0116  00C3               	movwf	(_tmp1+2)^(0+128)
  7739     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7740     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7741     0119  082F               	movf	??_AHT10_Read+1,w
  7742     011A  1683               	bsf	3,5	;RP0=1, select bank1
  7743     011B  1303               	bcf	3,6	;RP1=0, select bank1
  7744     011C  00C2               	movwf	(_tmp1+1)^(0+128)
  7745     011D  1283               	bcf	3,5	;RP0=0, select bank0
  7746     011E  1303               	bcf	3,6	;RP1=0, select bank0
  7747     011F  082E               	movf	??_AHT10_Read,w
  7748     0120  1683               	bsf	3,5	;RP0=1, select bank1
  7749     0121  1303               	bcf	3,6	;RP1=0, select bank1
  7750     0122  00C1               	movwf	_tmp1^(0+128)
  7751     0123                     l2602:
  7752                           
  7753                           ;main_master.c: 280:     I2C_Nack();
  7754     0123  160A  118A  2526  120A  118A  	fcall	_I2C_Nack
  7755     0128                     l2604:
  7756                           
  7757                           ;main_master.c: 281:     I2C_Stop();
  7758     0128  160A  118A  2512  120A  118A  	fcall	_I2C_Stop
  7759     012D                     l2606:
  7760                           
  7761                           ;main_master.c: 283:     tmp3 = (th << 16);
  7762     012D  1683               	bsf	3,5	;RP0=1, select bank1
  7763     012E  1303               	bcf	3,6	;RP1=0, select bank1
  7764     012F  0831               	movf	_th^(0+128),w
  7765     0130  1283               	bcf	3,5	;RP0=0, select bank0
  7766     0131  1303               	bcf	3,6	;RP1=0, select bank0
  7767     0132  00AE               	movwf	??_AHT10_Read
  7768     0133  1683               	bsf	3,5	;RP0=1, select bank1
  7769     0134  1303               	bcf	3,6	;RP1=0, select bank1
  7770     0135  0832               	movf	(_th+1)^(0+128),w
  7771     0136  1283               	bcf	3,5	;RP0=0, select bank0
  7772     0137  1303               	bcf	3,6	;RP1=0, select bank0
  7773     0138  00AF               	movwf	??_AHT10_Read+1
  7774     0139  1683               	bsf	3,5	;RP0=1, select bank1
  7775     013A  1303               	bcf	3,6	;RP1=0, select bank1
  7776     013B  0833               	movf	(_th+2)^(0+128),w
  7777     013C  1283               	bcf	3,5	;RP0=0, select bank0
  7778     013D  1303               	bcf	3,6	;RP1=0, select bank0
  7779     013E  00B0               	movwf	??_AHT10_Read+2
  7780     013F  1683               	bsf	3,5	;RP0=1, select bank1
  7781     0140  1303               	bcf	3,6	;RP1=0, select bank1
  7782     0141  0834               	movf	(_th+3)^(0+128),w
  7783     0142  1283               	bcf	3,5	;RP0=0, select bank0
  7784     0143  1303               	bcf	3,6	;RP1=0, select bank0
  7785     0144  00B1               	movwf	??_AHT10_Read+3
  7786     0145  3010               	movlw	16
  7787     0146                     u2575:
  7788     0146  1003               	clrc
  7789     0147  0DAE               	rlf	??_AHT10_Read,f
  7790     0148  0DAF               	rlf	??_AHT10_Read+1,f
  7791     0149  0DB0               	rlf	??_AHT10_Read+2,f
  7792     014A  0DB1               	rlf	??_AHT10_Read+3,f
  7793     014B                     u2570:
  7794     014B  3EFF               	addlw	-1
  7795     014C  1D03               	skipz
  7796     014D  2946               	goto	u2575
  7797     014E  0831               	movf	??_AHT10_Read+3,w
  7798     014F  1683               	bsf	3,5	;RP0=1, select bank1
  7799     0150  1303               	bcf	3,6	;RP1=0, select bank1
  7800     0151  00B0               	movwf	(_tmp3+3)^(0+128)
  7801     0152  1283               	bcf	3,5	;RP0=0, select bank0
  7802     0153  1303               	bcf	3,6	;RP1=0, select bank0
  7803     0154  0830               	movf	??_AHT10_Read+2,w
  7804     0155  1683               	bsf	3,5	;RP0=1, select bank1
  7805     0156  1303               	bcf	3,6	;RP1=0, select bank1
  7806     0157  00AF               	movwf	(_tmp3+2)^(0+128)
  7807     0158  1283               	bcf	3,5	;RP0=0, select bank0
  7808     0159  1303               	bcf	3,6	;RP1=0, select bank0
  7809     015A  082F               	movf	??_AHT10_Read+1,w
  7810     015B  1683               	bsf	3,5	;RP0=1, select bank1
  7811     015C  1303               	bcf	3,6	;RP1=0, select bank1
  7812     015D  00AE               	movwf	(_tmp3+1)^(0+128)
  7813     015E  1283               	bcf	3,5	;RP0=0, select bank0
  7814     015F  1303               	bcf	3,6	;RP1=0, select bank0
  7815     0160  082E               	movf	??_AHT10_Read,w
  7816     0161  1683               	bsf	3,5	;RP0=1, select bank1
  7817     0162  1303               	bcf	3,6	;RP1=0, select bank1
  7818     0163  00AD               	movwf	_tmp3^(0+128)
  7819     0164                     l2608:
  7820                           
  7821                           ;main_master.c: 284:     tmp2 = (tmp2 << 8);
  7822     0164  083D               	movf	_tmp2^(0+128),w
  7823     0165  1283               	bcf	3,5	;RP0=0, select bank0
  7824     0166  1303               	bcf	3,6	;RP1=0, select bank0
  7825     0167  00AE               	movwf	??_AHT10_Read
  7826     0168  1683               	bsf	3,5	;RP0=1, select bank1
  7827     0169  1303               	bcf	3,6	;RP1=0, select bank1
  7828     016A  083E               	movf	(_tmp2+1)^(0+128),w
  7829     016B  1283               	bcf	3,5	;RP0=0, select bank0
  7830     016C  1303               	bcf	3,6	;RP1=0, select bank0
  7831     016D  00AF               	movwf	??_AHT10_Read+1
  7832     016E  1683               	bsf	3,5	;RP0=1, select bank1
  7833     016F  1303               	bcf	3,6	;RP1=0, select bank1
  7834     0170  083F               	movf	(_tmp2+2)^(0+128),w
  7835     0171  1283               	bcf	3,5	;RP0=0, select bank0
  7836     0172  1303               	bcf	3,6	;RP1=0, select bank0
  7837     0173  00B0               	movwf	??_AHT10_Read+2
  7838     0174  1683               	bsf	3,5	;RP0=1, select bank1
  7839     0175  1303               	bcf	3,6	;RP1=0, select bank1
  7840     0176  0840               	movf	(_tmp2+3)^(0+128),w
  7841     0177  1283               	bcf	3,5	;RP0=0, select bank0
  7842     0178  1303               	bcf	3,6	;RP1=0, select bank0
  7843     0179  00B1               	movwf	??_AHT10_Read+3
  7844     017A  3008               	movlw	8
  7845     017B                     u2585:
  7846     017B  1003               	clrc
  7847     017C  0DAE               	rlf	??_AHT10_Read,f
  7848     017D  0DAF               	rlf	??_AHT10_Read+1,f
  7849     017E  0DB0               	rlf	??_AHT10_Read+2,f
  7850     017F  0DB1               	rlf	??_AHT10_Read+3,f
  7851     0180                     u2580:
  7852     0180  3EFF               	addlw	-1
  7853     0181  1D03               	skipz
  7854     0182  297B               	goto	u2585
  7855     0183  0831               	movf	??_AHT10_Read+3,w
  7856     0184  1683               	bsf	3,5	;RP0=1, select bank1
  7857     0185  1303               	bcf	3,6	;RP1=0, select bank1
  7858     0186  00C0               	movwf	(_tmp2+3)^(0+128)
  7859     0187  1283               	bcf	3,5	;RP0=0, select bank0
  7860     0188  1303               	bcf	3,6	;RP1=0, select bank0
  7861     0189  0830               	movf	??_AHT10_Read+2,w
  7862     018A  1683               	bsf	3,5	;RP0=1, select bank1
  7863     018B  1303               	bcf	3,6	;RP1=0, select bank1
  7864     018C  00BF               	movwf	(_tmp2+2)^(0+128)
  7865     018D  1283               	bcf	3,5	;RP0=0, select bank0
  7866     018E  1303               	bcf	3,6	;RP1=0, select bank0
  7867     018F  082F               	movf	??_AHT10_Read+1,w
  7868     0190  1683               	bsf	3,5	;RP0=1, select bank1
  7869     0191  1303               	bcf	3,6	;RP1=0, select bank1
  7870     0192  00BE               	movwf	(_tmp2+1)^(0+128)
  7871     0193  1283               	bcf	3,5	;RP0=0, select bank0
  7872     0194  1303               	bcf	3,6	;RP1=0, select bank0
  7873     0195  082E               	movf	??_AHT10_Read,w
  7874     0196  1683               	bsf	3,5	;RP0=1, select bank1
  7875     0197  1303               	bcf	3,6	;RP1=0, select bank1
  7876     0198  00BD               	movwf	_tmp2^(0+128)
  7877                           
  7878                           ;main_master.c: 285:     temporal = (tmp3) | (tmp2) | (tmp1);
  7879     0199  083D               	movf	_tmp2^(0+128),w
  7880     019A  042D               	iorwf	_tmp3^(0+128),w
  7881     019B  1283               	bcf	3,5	;RP0=0, select bank0
  7882     019C  1303               	bcf	3,6	;RP1=0, select bank0
  7883     019D  00AE               	movwf	??_AHT10_Read
  7884     019E  1683               	bsf	3,5	;RP0=1, select bank1
  7885     019F  1303               	bcf	3,6	;RP1=0, select bank1
  7886     01A0  083E               	movf	(_tmp2+1)^(0+128),w
  7887     01A1  042E               	iorwf	(_tmp3+1)^(0+128),w
  7888     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  7889     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  7890     01A4  00AF               	movwf	??_AHT10_Read+1
  7891     01A5  1683               	bsf	3,5	;RP0=1, select bank1
  7892     01A6  1303               	bcf	3,6	;RP1=0, select bank1
  7893     01A7  083F               	movf	(_tmp2+2)^(0+128),w
  7894     01A8  042F               	iorwf	(_tmp3+2)^(0+128),w
  7895     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7896     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7897     01AB  00B0               	movwf	??_AHT10_Read+2
  7898     01AC  1683               	bsf	3,5	;RP0=1, select bank1
  7899     01AD  1303               	bcf	3,6	;RP1=0, select bank1
  7900     01AE  0840               	movf	(_tmp2+3)^(0+128),w
  7901     01AF  0430               	iorwf	(_tmp3+3)^(0+128),w
  7902     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  7903     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  7904     01B2  00B1               	movwf	??_AHT10_Read+3
  7905     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  7906     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  7907     01B5  0841               	movf	_tmp1^(0+128),w
  7908     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  7909     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  7910     01B8  042E               	iorwf	??_AHT10_Read,w
  7911     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  7912     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  7913     01BB  00C5               	movwf	_temporal^(0+128)
  7914     01BC  0842               	movf	(_tmp1+1)^(0+128),w
  7915     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  7916     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  7917     01BF  042F               	iorwf	??_AHT10_Read+1,w
  7918     01C0  1683               	bsf	3,5	;RP0=1, select bank1
  7919     01C1  1303               	bcf	3,6	;RP1=0, select bank1
  7920     01C2  00C6               	movwf	(_temporal+1)^(0+128)
  7921     01C3  0843               	movf	(_tmp1+2)^(0+128),w
  7922     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  7923     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  7924     01C6  0430               	iorwf	??_AHT10_Read+2,w
  7925     01C7  1683               	bsf	3,5	;RP0=1, select bank1
  7926     01C8  1303               	bcf	3,6	;RP1=0, select bank1
  7927     01C9  00C7               	movwf	(_temporal+2)^(0+128)
  7928     01CA  0844               	movf	(_tmp1+3)^(0+128),w
  7929     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  7930     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  7931     01CD  0431               	iorwf	??_AHT10_Read+3,w
  7932     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  7933     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  7934     01D0  00C8               	movwf	(_temporal+3)^(0+128)
  7935     01D1                     l2610:
  7936                           
  7937                           ;main_master.c: 286:     temperatura = (temporal/1048576)*200-50;
  7938     01D1  30CE               	movlw	206
  7939     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  7940     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  7941     01D4  00AE               	movwf	??_AHT10_Read
  7942     01D5  30FF               	movlw	255
  7943     01D6  00AF               	movwf	??_AHT10_Read+1
  7944     01D7  30FF               	movlw	255
  7945     01D8  00B0               	movwf	??_AHT10_Read+2
  7946     01D9  30FF               	movlw	255
  7947     01DA  00B1               	movwf	??_AHT10_Read+3
  7948     01DB  3000               	movlw	0
  7949     01DC  00F7               	movwf	___lmul@multiplicand+3
  7950     01DD  3000               	movlw	0
  7951     01DE  00F6               	movwf	___lmul@multiplicand+2
  7952     01DF  3000               	movlw	0
  7953     01E0  00F5               	movwf	___lmul@multiplicand+1
  7954     01E1  30C8               	movlw	200
  7955     01E2  00F4               	movwf	___lmul@multiplicand
  7956     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  7957     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  7958     01E5  0845               	movf	_temporal^(0+128),w
  7959     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  7960     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  7961     01E8  00B2               	movwf	??_AHT10_Read+4
  7962     01E9  1683               	bsf	3,5	;RP0=1, select bank1
  7963     01EA  1303               	bcf	3,6	;RP1=0, select bank1
  7964     01EB  0846               	movf	(_temporal+1)^(0+128),w
  7965     01EC  1283               	bcf	3,5	;RP0=0, select bank0
  7966     01ED  1303               	bcf	3,6	;RP1=0, select bank0
  7967     01EE  00B3               	movwf	??_AHT10_Read+5
  7968     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  7969     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  7970     01F1  0847               	movf	(_temporal+2)^(0+128),w
  7971     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  7972     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  7973     01F4  00B4               	movwf	??_AHT10_Read+6
  7974     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  7975     01F6  1303               	bcf	3,6	;RP1=0, select bank1
  7976     01F7  0848               	movf	(_temporal+3)^(0+128),w
  7977     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  7978     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  7979     01FA  00B5               	movwf	??_AHT10_Read+7
  7980     01FB  3014               	movlw	20
  7981     01FC                     u2595:
  7982     01FC  1003               	clrc
  7983     01FD  0CB5               	rrf	??_AHT10_Read+7,f
  7984     01FE  0CB4               	rrf	??_AHT10_Read+6,f
  7985     01FF  0CB3               	rrf	??_AHT10_Read+5,f
  7986     0200  0CB2               	rrf	??_AHT10_Read+4,f
  7987     0201                     u2590:
  7988     0201  3EFF               	addlw	-1
  7989     0202  1D03               	skipz
  7990     0203  29FC               	goto	u2595
  7991     0204  0835               	movf	??_AHT10_Read+7,w
  7992     0205  00F3               	movwf	___lmul@multiplier+3
  7993     0206  0834               	movf	??_AHT10_Read+6,w
  7994     0207  00F2               	movwf	___lmul@multiplier+2
  7995     0208  0833               	movf	??_AHT10_Read+5,w
  7996     0209  00F1               	movwf	___lmul@multiplier+1
  7997     020A  0832               	movf	??_AHT10_Read+4,w
  7998     020B  00F0               	movwf	___lmul@multiplier
  7999     020C  120A  158A  2176  120A  118A  	fcall	___lmul
  8000     0211  0870               	movf	?___lmul,w
  8001     0212  1283               	bcf	3,5	;RP0=0, select bank0
  8002     0213  1303               	bcf	3,6	;RP1=0, select bank0
  8003     0214  07AE               	addwf	??_AHT10_Read,f
  8004     0215  0871               	movf	?___lmul+1,w
  8005     0216  1803               	skipnc
  8006     0217  0F71               	incfsz	?___lmul+1,w
  8007     0218  2A1A               	goto	u2600
  8008     0219  2A1B               	goto	u2601
  8009     021A                     u2600:
  8010     021A  07AF               	addwf	??_AHT10_Read+1,f
  8011     021B                     u2601:
  8012     021B  0872               	movf	?___lmul+2,w
  8013     021C  1803               	skipnc
  8014     021D  0F72               	incfsz	?___lmul+2,w
  8015     021E  2A20               	goto	u2602
  8016     021F  2A21               	goto	u2603
  8017     0220                     u2602:
  8018     0220  07B0               	addwf	??_AHT10_Read+2,f
  8019     0221                     u2603:
  8020     0221  0873               	movf	?___lmul+3,w
  8021     0222  1803               	skipnc
  8022     0223  0A73               	incf	?___lmul+3,w
  8023     0224  07B1               	addwf	??_AHT10_Read+3,f
  8024     0225  0831               	movf	??_AHT10_Read+3,w
  8025     0226  00A3               	movwf	___xxtofl@val+3
  8026     0227  0830               	movf	??_AHT10_Read+2,w
  8027     0228  00A2               	movwf	___xxtofl@val+2
  8028     0229  082F               	movf	??_AHT10_Read+1,w
  8029     022A  00A1               	movwf	___xxtofl@val+1
  8030     022B  082E               	movf	??_AHT10_Read,w
  8031     022C  00A0               	movwf	___xxtofl@val
  8032     022D  3000               	movlw	0
  8033     022E  120A  158A  23EF  120A  118A  	fcall	___xxtofl
  8034     0233  1283               	bcf	3,5	;RP0=0, select bank0
  8035     0234  1303               	bcf	3,6	;RP1=0, select bank0
  8036     0235  0823               	movf	?___xxtofl+3,w
  8037     0236  1683               	bsf	3,5	;RP0=1, select bank1
  8038     0237  1303               	bcf	3,6	;RP1=0, select bank1
  8039     0238  00AC               	movwf	(_temperatura+3)^(0+128)
  8040     0239  1283               	bcf	3,5	;RP0=0, select bank0
  8041     023A  1303               	bcf	3,6	;RP1=0, select bank0
  8042     023B  0822               	movf	?___xxtofl+2,w
  8043     023C  1683               	bsf	3,5	;RP0=1, select bank1
  8044     023D  1303               	bcf	3,6	;RP1=0, select bank1
  8045     023E  00AB               	movwf	(_temperatura+2)^(0+128)
  8046     023F  1283               	bcf	3,5	;RP0=0, select bank0
  8047     0240  1303               	bcf	3,6	;RP1=0, select bank0
  8048     0241  0821               	movf	?___xxtofl+1,w
  8049     0242  1683               	bsf	3,5	;RP0=1, select bank1
  8050     0243  1303               	bcf	3,6	;RP1=0, select bank1
  8051     0244  00AA               	movwf	(_temperatura+1)^(0+128)
  8052     0245  1283               	bcf	3,5	;RP0=0, select bank0
  8053     0246  1303               	bcf	3,6	;RP1=0, select bank0
  8054     0247  0820               	movf	?___xxtofl,w
  8055     0248  1683               	bsf	3,5	;RP0=1, select bank1
  8056     0249  1303               	bcf	3,6	;RP1=0, select bank1
  8057     024A  00A9               	movwf	_temperatura^(0+128)
  8058     024B                     l201:
  8059     024B  0008               	return
  8060     024C                     __end_of_AHT10_Read:
  8061                           
  8062                           	psect	text39
  8063     0BEF                     __ptext39:	
  8064 ;; *************** function ___xxtofl *****************
  8065 ;; Defined at:
  8066 ;;		line 10 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  sign            1    wreg     unsigned char 
  8069 ;;  val             4    0[BANK0 ] long 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;  sign            1    8[BANK0 ] unsigned char 
  8072 ;;  arg             4   10[BANK0 ] unsigned long 
  8073 ;;  exp             1    9[BANK0 ] unsigned char 
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  4    0[BANK0 ] unsigned char 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2, status,0
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8083 ;;      Params:         0       4       0       0       0
  8084 ;;      Locals:         0       6       0       0       0
  8085 ;;      Temps:          0       4       0       0       0
  8086 ;;      Totals:         0      14       0       0       0
  8087 ;;Total ram usage:       14 bytes
  8088 ;; Hardware stack levels used: 1
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_AHT10_Read
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096     0BEF                     ___xxtofl:	
  8097                           ;psect for function ___xxtofl
  8098                           
  8099                           
  8100                           ;incstack = 0
  8101                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8102                           ;___xxtofl@sign stored from wreg
  8103     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  8104     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  8105     0BF1  00A8               	movwf	___xxtofl@sign
  8106     0BF2                     l2394:
  8107     0BF2  0828               	movf	___xxtofl@sign,w
  8108     0BF3  1903               	btfsc	3,2
  8109     0BF4  2BF6               	goto	u2361
  8110     0BF5  2BF7               	goto	u2360
  8111     0BF6                     u2361:
  8112     0BF6  2C0B               	goto	l2400
  8113     0BF7                     u2360:
  8114     0BF7                     l2396:
  8115     0BF7  1FA3               	btfss	___xxtofl@val+3,7
  8116     0BF8  2BFA               	goto	u2371
  8117     0BF9  2BFB               	goto	u2370
  8118     0BFA                     u2371:
  8119     0BFA  2C0B               	goto	l2400
  8120     0BFB                     u2370:
  8121     0BFB                     l2398:
  8122     0BFB  0920               	comf	___xxtofl@val,w
  8123     0BFC  00AA               	movwf	___xxtofl@arg
  8124     0BFD  0921               	comf	___xxtofl@val+1,w
  8125     0BFE  00AB               	movwf	___xxtofl@arg+1
  8126     0BFF  0922               	comf	___xxtofl@val+2,w
  8127     0C00  00AC               	movwf	___xxtofl@arg+2
  8128     0C01  0923               	comf	___xxtofl@val+3,w
  8129     0C02  00AD               	movwf	___xxtofl@arg+3
  8130     0C03  0AAA               	incf	___xxtofl@arg,f
  8131     0C04  1903               	skipnz
  8132     0C05  0AAB               	incf	___xxtofl@arg+1,f
  8133     0C06  1903               	skipnz
  8134     0C07  0AAC               	incf	___xxtofl@arg+2,f
  8135     0C08  1903               	skipnz
  8136     0C09  0AAD               	incf	___xxtofl@arg+3,f
  8137     0C0A  2C13               	goto	l898
  8138     0C0B                     l2400:
  8139     0C0B  0823               	movf	___xxtofl@val+3,w
  8140     0C0C  00AD               	movwf	___xxtofl@arg+3
  8141     0C0D  0822               	movf	___xxtofl@val+2,w
  8142     0C0E  00AC               	movwf	___xxtofl@arg+2
  8143     0C0F  0821               	movf	___xxtofl@val+1,w
  8144     0C10  00AB               	movwf	___xxtofl@arg+1
  8145     0C11  0820               	movf	___xxtofl@val,w
  8146     0C12  00AA               	movwf	___xxtofl@arg
  8147     0C13                     l898:
  8148     0C13  0823               	movf	___xxtofl@val+3,w
  8149     0C14  0422               	iorwf	___xxtofl@val+2,w
  8150     0C15  0421               	iorwf	___xxtofl@val+1,w
  8151     0C16  0420               	iorwf	___xxtofl@val,w
  8152     0C17  1D03               	skipz
  8153     0C18  2C1A               	goto	u2381
  8154     0C19  2C1B               	goto	u2380
  8155     0C1A                     u2381:
  8156     0C1A  2C24               	goto	l2406
  8157     0C1B                     u2380:
  8158     0C1B                     l2402:
  8159     0C1B  3000               	movlw	0
  8160     0C1C  00A3               	movwf	?___xxtofl+3
  8161     0C1D  3000               	movlw	0
  8162     0C1E  00A2               	movwf	?___xxtofl+2
  8163     0C1F  3000               	movlw	0
  8164     0C20  00A1               	movwf	?___xxtofl+1
  8165     0C21  3000               	movlw	0
  8166     0C22  00A0               	movwf	?___xxtofl
  8167     0C23  2CA8               	goto	l900
  8168     0C24                     l2406:
  8169     0C24  3096               	movlw	150
  8170     0C25  00A9               	movwf	___xxtofl@exp
  8171     0C26  2C34               	goto	l2410
  8172     0C27                     l2408:
  8173     0C27  3001               	movlw	1
  8174     0C28  00A4               	movwf	??___xxtofl
  8175     0C29  0824               	movf	??___xxtofl,w
  8176     0C2A  07A9               	addwf	___xxtofl@exp,f
  8177     0C2B  3001               	movlw	1
  8178     0C2C                     u2395:
  8179     0C2C  1003               	clrc
  8180     0C2D  0CAD               	rrf	___xxtofl@arg+3,f
  8181     0C2E  0CAC               	rrf	___xxtofl@arg+2,f
  8182     0C2F  0CAB               	rrf	___xxtofl@arg+1,f
  8183     0C30  0CAA               	rrf	___xxtofl@arg,f
  8184     0C31  3EFF               	addlw	-1
  8185     0C32  1D03               	skipz
  8186     0C33  2C2C               	goto	u2395
  8187     0C34                     l2410:
  8188     0C34  30FE               	movlw	254
  8189     0C35  052D               	andwf	___xxtofl@arg+3,w
  8190     0C36  1D03               	btfss	3,2
  8191     0C37  2C39               	goto	u2401
  8192     0C38  2C3A               	goto	u2400
  8193     0C39                     u2401:
  8194     0C39  2C27               	goto	l2408
  8195     0C3A                     u2400:
  8196     0C3A  2C56               	goto	l904
  8197     0C3B                     l2412:
  8198     0C3B  3001               	movlw	1
  8199     0C3C  00A4               	movwf	??___xxtofl
  8200     0C3D  0824               	movf	??___xxtofl,w
  8201     0C3E  07A9               	addwf	___xxtofl@exp,f
  8202     0C3F                     l2414:
  8203     0C3F  3001               	movlw	1
  8204     0C40  07AA               	addwf	___xxtofl@arg,f
  8205     0C41  3000               	movlw	0
  8206     0C42  1803               	skipnc
  8207     0C43  3001               	movlw	1
  8208     0C44  07AB               	addwf	___xxtofl@arg+1,f
  8209     0C45  3000               	movlw	0
  8210     0C46  1803               	skipnc
  8211     0C47  3001               	movlw	1
  8212     0C48  07AC               	addwf	___xxtofl@arg+2,f
  8213     0C49  3000               	movlw	0
  8214     0C4A  1803               	skipnc
  8215     0C4B  3001               	movlw	1
  8216     0C4C  07AD               	addwf	___xxtofl@arg+3,f
  8217     0C4D                     l2416:
  8218     0C4D  3001               	movlw	1
  8219     0C4E                     u2415:
  8220     0C4E  1003               	clrc
  8221     0C4F  0CAD               	rrf	___xxtofl@arg+3,f
  8222     0C50  0CAC               	rrf	___xxtofl@arg+2,f
  8223     0C51  0CAB               	rrf	___xxtofl@arg+1,f
  8224     0C52  0CAA               	rrf	___xxtofl@arg,f
  8225     0C53  3EFF               	addlw	-1
  8226     0C54  1D03               	skipz
  8227     0C55  2C4E               	goto	u2415
  8228     0C56                     l904:
  8229     0C56  30FF               	movlw	255
  8230     0C57  052D               	andwf	___xxtofl@arg+3,w
  8231     0C58  1D03               	btfss	3,2
  8232     0C59  2C5B               	goto	u2421
  8233     0C5A  2C5C               	goto	u2420
  8234     0C5B                     u2421:
  8235     0C5B  2C3B               	goto	l2412
  8236     0C5C                     u2420:
  8237     0C5C  2C68               	goto	l2420
  8238     0C5D                     l2418:
  8239     0C5D  3001               	movlw	1
  8240     0C5E  02A9               	subwf	___xxtofl@exp,f
  8241     0C5F  3001               	movlw	1
  8242     0C60  00A4               	movwf	??___xxtofl
  8243     0C61                     u2435:
  8244     0C61  1003               	clrc
  8245     0C62  0DAA               	rlf	___xxtofl@arg,f
  8246     0C63  0DAB               	rlf	___xxtofl@arg+1,f
  8247     0C64  0DAC               	rlf	___xxtofl@arg+2,f
  8248     0C65  0DAD               	rlf	___xxtofl@arg+3,f
  8249     0C66  0BA4               	decfsz	??___xxtofl,f
  8250     0C67  2C61               	goto	u2435
  8251     0C68                     l2420:
  8252     0C68  1BAC               	btfsc	___xxtofl@arg+2,7
  8253     0C69  2C6B               	goto	u2441
  8254     0C6A  2C6C               	goto	u2440
  8255     0C6B                     u2441:
  8256     0C6B  2C72               	goto	l911
  8257     0C6C                     u2440:
  8258     0C6C                     l2422:
  8259     0C6C  3002               	movlw	2
  8260     0C6D  0229               	subwf	___xxtofl@exp,w
  8261     0C6E  1803               	skipnc
  8262     0C6F  2C71               	goto	u2451
  8263     0C70  2C72               	goto	u2450
  8264     0C71                     u2451:
  8265     0C71  2C5D               	goto	l2418
  8266     0C72                     u2450:
  8267     0C72                     l911:
  8268     0C72  1829               	btfsc	___xxtofl@exp,0
  8269     0C73  2C75               	goto	u2461
  8270     0C74  2C76               	goto	u2460
  8271     0C75                     u2461:
  8272     0C75  2C7E               	goto	l912
  8273     0C76                     u2460:
  8274     0C76                     l2424:
  8275     0C76  30FF               	movlw	255
  8276     0C77  05AA               	andwf	___xxtofl@arg,f
  8277     0C78  30FF               	movlw	255
  8278     0C79  05AB               	andwf	___xxtofl@arg+1,f
  8279     0C7A  307F               	movlw	127
  8280     0C7B  05AC               	andwf	___xxtofl@arg+2,f
  8281     0C7C  30FF               	movlw	255
  8282     0C7D  05AD               	andwf	___xxtofl@arg+3,f
  8283     0C7E                     l912:
  8284     0C7E  1003               	clrc
  8285     0C7F  0CA9               	rrf	___xxtofl@exp,f
  8286     0C80                     l2426:
  8287     0C80  0829               	movf	___xxtofl@exp,w
  8288     0C81  00A4               	movwf	??___xxtofl
  8289     0C82  01A5               	clrf	??___xxtofl+1
  8290     0C83  01A6               	clrf	??___xxtofl+2
  8291     0C84  01A7               	clrf	??___xxtofl+3
  8292     0C85  3018               	movlw	24
  8293     0C86                     u2475:
  8294     0C86  1003               	clrc
  8295     0C87  0DA4               	rlf	??___xxtofl,f
  8296     0C88  0DA5               	rlf	??___xxtofl+1,f
  8297     0C89  0DA6               	rlf	??___xxtofl+2,f
  8298     0C8A  0DA7               	rlf	??___xxtofl+3,f
  8299     0C8B                     u2470:
  8300     0C8B  3EFF               	addlw	-1
  8301     0C8C  1D03               	skipz
  8302     0C8D  2C86               	goto	u2475
  8303     0C8E  0824               	movf	??___xxtofl,w
  8304     0C8F  04AA               	iorwf	___xxtofl@arg,f
  8305     0C90  0825               	movf	??___xxtofl+1,w
  8306     0C91  04AB               	iorwf	___xxtofl@arg+1,f
  8307     0C92  0826               	movf	??___xxtofl+2,w
  8308     0C93  04AC               	iorwf	___xxtofl@arg+2,f
  8309     0C94  0827               	movf	??___xxtofl+3,w
  8310     0C95  04AD               	iorwf	___xxtofl@arg+3,f
  8311     0C96                     l2428:
  8312     0C96  0828               	movf	___xxtofl@sign,w
  8313     0C97  1903               	btfsc	3,2
  8314     0C98  2C9A               	goto	u2481
  8315     0C99  2C9B               	goto	u2480
  8316     0C9A                     u2481:
  8317     0C9A  2CA0               	goto	l2434
  8318     0C9B                     u2480:
  8319     0C9B                     l2430:
  8320     0C9B  1FA3               	btfss	___xxtofl@val+3,7
  8321     0C9C  2C9E               	goto	u2491
  8322     0C9D  2C9F               	goto	u2490
  8323     0C9E                     u2491:
  8324     0C9E  2CA0               	goto	l2434
  8325     0C9F                     u2490:
  8326     0C9F                     l2432:
  8327     0C9F  17AD               	bsf	___xxtofl@arg+3,7
  8328     0CA0                     l2434:
  8329     0CA0  082D               	movf	___xxtofl@arg+3,w
  8330     0CA1  00A3               	movwf	?___xxtofl+3
  8331     0CA2  082C               	movf	___xxtofl@arg+2,w
  8332     0CA3  00A2               	movwf	?___xxtofl+2
  8333     0CA4  082B               	movf	___xxtofl@arg+1,w
  8334     0CA5  00A1               	movwf	?___xxtofl+1
  8335     0CA6  082A               	movf	___xxtofl@arg,w
  8336     0CA7  00A0               	movwf	?___xxtofl
  8337     0CA8                     l900:
  8338     0CA8  0008               	return
  8339     0CA9                     __end_of___xxtofl:
  8340                           
  8341                           	psect	text40
  8342     0976                     __ptext40:	
  8343 ;; *************** function ___lmul *****************
  8344 ;; Defined at:
  8345 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  multiplier      4    0[COMMON] unsigned long 
  8348 ;;  multiplicand    4    4[COMMON] unsigned long 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;  product         4    9[COMMON] unsigned long 
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  4    0[COMMON] unsigned long 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8360 ;;      Params:         8       0       0       0       0
  8361 ;;      Locals:         4       0       0       0       0
  8362 ;;      Temps:          1       0       0       0       0
  8363 ;;      Totals:        13       0       0       0       0
  8364 ;;Total ram usage:       13 bytes
  8365 ;; Hardware stack levels used: 1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_AHT10_Read
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373     0976                     ___lmul:	
  8374                           ;psect for function ___lmul
  8375                           
  8376     0976                     l2318:	
  8377                           ;incstack = 0
  8378                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8379                           
  8380     0976  3000               	movlw	0
  8381     0977  00FC               	movwf	___lmul@product+3
  8382     0978  3000               	movlw	0
  8383     0979  00FB               	movwf	___lmul@product+2
  8384     097A  3000               	movlw	0
  8385     097B  00FA               	movwf	___lmul@product+1
  8386     097C  3000               	movlw	0
  8387     097D  00F9               	movwf	___lmul@product
  8388     097E                     l2320:
  8389     097E  1C70               	btfss	___lmul@multiplier,0
  8390     097F  2981               	goto	u2151
  8391     0980  2982               	goto	u2150
  8392     0981                     u2151:
  8393     0981  2999               	goto	l2324
  8394     0982                     u2150:
  8395     0982                     l2322:
  8396     0982  0874               	movf	___lmul@multiplicand,w
  8397     0983  07F9               	addwf	___lmul@product,f
  8398     0984  0875               	movf	___lmul@multiplicand+1,w
  8399     0985  1103               	clrz
  8400     0986  1803               	skipnc
  8401     0987  3E01               	addlw	1
  8402     0988  1903               	skipnz
  8403     0989  298B               	goto	u2161
  8404     098A  07FA               	addwf	___lmul@product+1,f
  8405     098B                     u2161:
  8406     098B  0876               	movf	___lmul@multiplicand+2,w
  8407     098C  1103               	clrz
  8408     098D  1803               	skipnc
  8409     098E  3E01               	addlw	1
  8410     098F  1903               	skipnz
  8411     0990  2992               	goto	u2162
  8412     0991  07FB               	addwf	___lmul@product+2,f
  8413     0992                     u2162:
  8414     0992  0877               	movf	___lmul@multiplicand+3,w
  8415     0993  1103               	clrz
  8416     0994  1803               	skipnc
  8417     0995  3E01               	addlw	1
  8418     0996  1903               	skipnz
  8419     0997  2999               	goto	u2163
  8420     0998  07FC               	addwf	___lmul@product+3,f
  8421     0999                     u2163:
  8422     0999                     l2324:
  8423     0999  3001               	movlw	1
  8424     099A  00F8               	movwf	??___lmul
  8425     099B                     u2175:
  8426     099B  1003               	clrc
  8427     099C  0DF4               	rlf	___lmul@multiplicand,f
  8428     099D  0DF5               	rlf	___lmul@multiplicand+1,f
  8429     099E  0DF6               	rlf	___lmul@multiplicand+2,f
  8430     099F  0DF7               	rlf	___lmul@multiplicand+3,f
  8431     09A0  0BF8               	decfsz	??___lmul,f
  8432     09A1  299B               	goto	u2175
  8433     09A2                     l2326:
  8434     09A2  3001               	movlw	1
  8435     09A3                     u2185:
  8436     09A3  1003               	clrc
  8437     09A4  0CF3               	rrf	___lmul@multiplier+3,f
  8438     09A5  0CF2               	rrf	___lmul@multiplier+2,f
  8439     09A6  0CF1               	rrf	___lmul@multiplier+1,f
  8440     09A7  0CF0               	rrf	___lmul@multiplier,f
  8441     09A8  3EFF               	addlw	-1
  8442     09A9  1D03               	skipz
  8443     09AA  29A3               	goto	u2185
  8444     09AB  0873               	movf	___lmul@multiplier+3,w
  8445     09AC  0472               	iorwf	___lmul@multiplier+2,w
  8446     09AD  0471               	iorwf	___lmul@multiplier+1,w
  8447     09AE  0470               	iorwf	___lmul@multiplier,w
  8448     09AF  1D03               	skipz
  8449     09B0  29B2               	goto	u2191
  8450     09B1  29B3               	goto	u2190
  8451     09B2                     u2191:
  8452     09B2  297E               	goto	l2320
  8453     09B3                     u2190:
  8454     09B3                     l2328:
  8455     09B3  087C               	movf	___lmul@product+3,w
  8456     09B4  00F3               	movwf	?___lmul+3
  8457     09B5  087B               	movf	___lmul@product+2,w
  8458     09B6  00F2               	movwf	?___lmul+2
  8459     09B7  087A               	movf	___lmul@product+1,w
  8460     09B8  00F1               	movwf	?___lmul+1
  8461     09B9  0879               	movf	___lmul@product,w
  8462     09BA  00F0               	movwf	?___lmul
  8463     09BB                     l479:
  8464     09BB  0008               	return
  8465     09BC                     __end_of___lmul:
  8466                           
  8467                           	psect	text41
  8468     0842                     __ptext41:	
  8469 ;; *************** function _I2C_Read *****************
  8470 ;; Defined at:
  8471 ;;		line 73 in file "i2c.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      unsigned char 
  8478 ;; Registers used:
  8479 ;;		wreg
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8485 ;;      Params:         0       0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0
  8488 ;;      Totals:         0       0       0       0       0
  8489 ;;Total ram usage:        0 bytes
  8490 ;; Hardware stack levels used: 1
  8491 ;; This function calls:
  8492 ;;		Nothing
  8493 ;; This function is called by:
  8494 ;;		_Read
  8495 ;;		_AHT10_Read
  8496 ;;		_Slave1_Total
  8497 ;;		_Slave1_Red
  8498 ;;		_Slave1_Green
  8499 ;;		_Slave1_Blue
  8500 ;;		_Slave2
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504     0842                     _I2C_Read:	
  8505                           ;psect for function _I2C_Read
  8506                           
  8507     0842                     l2172:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _I2C_Read: [wreg]
  8510                           
  8511                           
  8512                           ;i2c.c: 75:     SSPCON2bits.RCEN = 1;
  8513     0842  1683               	bsf	3,5	;RP0=1, select bank1
  8514     0843  1303               	bcf	3,6	;RP1=0, select bank1
  8515     0844  1591               	bsf	17,3	;volatile
  8516     0845                     l330:	
  8517                           ;i2c.c: 76:     while(PIR1bits.SSPIF == 0);
  8518                           
  8519     0845  1283               	bcf	3,5	;RP0=0, select bank0
  8520     0846  1D8C               	btfss	12,3	;volatile
  8521     0847  2849               	goto	u1951
  8522     0848  284A               	goto	u1950
  8523     0849                     u1951:
  8524     0849  2845               	goto	l330
  8525     084A                     u1950:
  8526     084A                     l332:
  8527                           
  8528                           ;i2c.c: 77:     PIR1bits.SSPIF = 0;
  8529     084A  118C               	bcf	12,3	;volatile
  8530     084B                     l2174:
  8531                           
  8532                           ;i2c.c: 78:     return SSPBUF;
  8533     084B  0813               	movf	19,w	;volatile
  8534     084C                     l333:
  8535     084C  0008               	return
  8536     084D                     __end_of_I2C_Read:
  8537                           
  8538                           	psect	text42
  8539     1526                     __ptext42:	
  8540 ;; *************** function _I2C_Nack *****************
  8541 ;; Defined at:
  8542 ;;		line 56 in file "i2c.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		None
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8556 ;;      Params:         0       0       0       0       0
  8557 ;;      Locals:         0       0       0       0       0
  8558 ;;      Temps:          0       0       0       0       0
  8559 ;;      Totals:         0       0       0       0       0
  8560 ;;Total ram usage:        0 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_Read
  8566 ;;		_AHT10_Read
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570     1526                     _I2C_Nack:	
  8571                           ;psect for function _I2C_Nack
  8572                           
  8573     1526                     l2178:	
  8574                           ;incstack = 0
  8575                           ; Regs used in _I2C_Nack: []
  8576                           
  8577                           
  8578                           ;i2c.c: 58:     SSPCON2bits.ACKDT = 1;
  8579     1526  1683               	bsf	3,5	;RP0=1, select bank1
  8580     1527  1303               	bcf	3,6	;RP1=0, select bank1
  8581     1528  1691               	bsf	17,5	;volatile
  8582                           
  8583                           ;i2c.c: 59:  SSPCON2bits.ACKEN = 1;
  8584     1529  1611               	bsf	17,4	;volatile
  8585     152A                     l318:	
  8586                           ;i2c.c: 60:  while(PIR1bits.SSPIF == 0);
  8587                           
  8588     152A  1283               	bcf	3,5	;RP0=0, select bank0
  8589     152B  1D8C               	btfss	12,3	;volatile
  8590     152C  2D2E               	goto	u1961
  8591     152D  2D2F               	goto	u1960
  8592     152E                     u1961:
  8593     152E  2D2A               	goto	l318
  8594     152F                     u1960:
  8595     152F                     l320:
  8596                           
  8597                           ;i2c.c: 61:     PIR1bits.SSPIF = 0;
  8598     152F  118C               	bcf	12,3	;volatile
  8599     1530                     l321:
  8600     1530  0008               	return
  8601     1531                     __end_of_I2C_Nack:
  8602                           
  8603                           	psect	text43
  8604     174A                     __ptext43:	
  8605 ;; *************** function _AHT10_Init *****************
  8606 ;; Defined at:
  8607 ;;		line 246 in file "main_master.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;		None
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1    wreg      void 
  8614 ;; Registers used:
  8615 ;;		wreg, status,2, status,0, pclath, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8621 ;;      Params:         0       0       0       0       0
  8622 ;;      Locals:         0       0       0       0       0
  8623 ;;      Temps:          2       0       0       0       0
  8624 ;;      Totals:         2       0       0       0       0
  8625 ;;Total ram usage:        2 bytes
  8626 ;; Hardware stack levels used: 1
  8627 ;; Hardware stack levels required when called: 1
  8628 ;; This function calls:
  8629 ;;		_I2C_Start
  8630 ;;		_I2C_Stop
  8631 ;;		_I2C_Write
  8632 ;; This function is called by:
  8633 ;;		_main
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637     174A                     _AHT10_Init:	
  8638                           ;psect for function _AHT10_Init
  8639                           
  8640     174A                     l2552:	
  8641                           ;incstack = 0
  8642                           ; Regs used in _AHT10_Init: [wreg+status,2+status,0+pclath+cstack]
  8643                           
  8644                           
  8645                           ;main_master.c: 247:     I2C_Start();
  8646     174A  160A  118A  2508  160A  118A  	fcall	_I2C_Start
  8647     174F                     l2554:
  8648                           
  8649                           ;main_master.c: 248:     I2C_Write(0x70);
  8650     174F  3070               	movlw	112
  8651     1750  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  8652     1755                     l2556:
  8653                           
  8654                           ;main_master.c: 249:     I2C_Write(0xE1);
  8655     1755  30E1               	movlw	225
  8656     1756  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  8657     175B                     l2558:
  8658                           
  8659                           ;main_master.c: 250:     I2C_Write(0x08);
  8660     175B  3008               	movlw	8
  8661     175C  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  8662     1761                     l2560:
  8663                           
  8664                           ;main_master.c: 251:     I2C_Write(0x00);
  8665     1761  3000               	movlw	0
  8666     1762  160A  118A  253E  160A  118A  	fcall	_I2C_Write
  8667                           
  8668                           ;main_master.c: 252:     I2C_Stop();
  8669     1767  160A  118A  2512  160A  118A  	fcall	_I2C_Stop
  8670     176C                     l2562:
  8671                           
  8672                           ;main_master.c: 253:     _delay((unsigned long)((10)*(8000000/4000.0)));
  8673     176C  301A               	movlw	26
  8674     176D  00F2               	movwf	??_AHT10_Init+1
  8675     176E  30F8               	movlw	248
  8676     176F  00F1               	movwf	??_AHT10_Init
  8677     1770                     u3917:
  8678     1770  0BF1               	decfsz	??_AHT10_Init,f
  8679     1771  2F70               	goto	u3917
  8680     1772  0BF2               	decfsz	??_AHT10_Init+1,f
  8681     1773  2F70               	goto	u3917
  8682     1774  0000               	nop
  8683     1775                     l195:
  8684     1775  0008               	return
  8685     1776                     __end_of_AHT10_Init:
  8686                           
  8687                           	psect	text44
  8688     153E                     __ptext44:	
  8689 ;; *************** function _I2C_Write *****************
  8690 ;; Defined at:
  8691 ;;		line 64 in file "i2c.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  data            1    wreg     unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  data            1    0[COMMON] unsigned char 
  8696 ;;  b_ok            2    0        short 
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  2   60[None  ] short 
  8699 ;; Registers used:
  8700 ;;		wreg
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8706 ;;      Params:         0       0       0       0       0
  8707 ;;      Locals:         1       0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0
  8709 ;;      Totals:         1       0       0       0       0
  8710 ;;Total ram usage:        1 bytes
  8711 ;; Hardware stack levels used: 1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_Read
  8716 ;;		_Set_sec
  8717 ;;		_Set_min
  8718 ;;		_Set_hour
  8719 ;;		_Set_day
  8720 ;;		_Set_month
  8721 ;;		_Set_year
  8722 ;;		_AHT10_Init
  8723 ;;		_AHT10_Trigger
  8724 ;;		_AHT10_Read
  8725 ;;		_AHT10_Soft_Reset
  8726 ;;		_Set_day_week
  8727 ;;		_Slave1_Total
  8728 ;;		_Slave1_Red
  8729 ;;		_Slave1_Green
  8730 ;;		_Slave1_Blue
  8731 ;;		_Slave1_Overheat
  8732 ;;		_Slave2
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736     153E                     _I2C_Write:	
  8737                           ;psect for function _I2C_Write
  8738                           
  8739                           
  8740                           ;incstack = 0
  8741                           ; Regs used in _I2C_Write: [wreg]
  8742                           ;I2C_Write@data stored from wreg
  8743     153E  00F0               	movwf	I2C_Write@data
  8744     153F                     l2164:
  8745                           
  8746                           ;i2c.c: 64: short I2C_Write(char data);i2c.c: 65: {;i2c.c: 66:     SSPBUF = data;
  8747     153F  0870               	movf	I2C_Write@data,w
  8748     1540  1283               	bcf	3,5	;RP0=0, select bank0
  8749     1541  1303               	bcf	3,6	;RP1=0, select bank0
  8750     1542  0093               	movwf	19	;volatile
  8751     1543                     l324:	
  8752                           ;i2c.c: 67:     while(PIR1bits.SSPIF == 0);
  8753                           
  8754     1543  1D8C               	btfss	12,3	;volatile
  8755     1544  2D46               	goto	u1931
  8756     1545  2D47               	goto	u1930
  8757     1546                     u1931:
  8758     1546  2D43               	goto	l324
  8759     1547                     u1930:
  8760     1547                     l326:
  8761                           
  8762                           ;i2c.c: 68:     PIR1bits.SSPIF = 0;
  8763     1547  118C               	bcf	12,3	;volatile
  8764     1548                     l2166:
  8765     1548  1683               	bsf	3,5	;RP0=1, select bank1
  8766     1549  1303               	bcf	3,6	;RP1=0, select bank1
  8767     154A  0811               	movf	17,w	;volatile
  8768     154B                     l327:
  8769     154B  0008               	return
  8770     154C                     __end_of_I2C_Write:
  8771                           
  8772                           	psect	text45
  8773     1512                     __ptext45:	
  8774 ;; *************** function _I2C_Stop *****************
  8775 ;; Defined at:
  8776 ;;		line 34 in file "i2c.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		None
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         0       0       0       0       0
  8791 ;;      Locals:         0       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0
  8793 ;;      Totals:         0       0       0       0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_Read
  8800 ;;		_Set_sec
  8801 ;;		_Set_min
  8802 ;;		_Set_hour
  8803 ;;		_Set_day
  8804 ;;		_Set_month
  8805 ;;		_Set_year
  8806 ;;		_AHT10_Init
  8807 ;;		_AHT10_Trigger
  8808 ;;		_AHT10_Read
  8809 ;;		_AHT10_Soft_Reset
  8810 ;;		_Set_day_week
  8811 ;;		_Slave1_Total
  8812 ;;		_Slave1_Red
  8813 ;;		_Slave1_Green
  8814 ;;		_Slave1_Blue
  8815 ;;		_Slave1_Overheat
  8816 ;;		_Slave2
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820     1512                     _I2C_Stop:	
  8821                           ;psect for function _I2C_Stop
  8822                           
  8823     1512                     l2180:	
  8824                           ;incstack = 0
  8825                           ; Regs used in _I2C_Stop: []
  8826                           
  8827                           
  8828                           ;i2c.c: 36:     SSPCON2bits.PEN = 1;
  8829     1512  1683               	bsf	3,5	;RP0=1, select bank1
  8830     1513  1303               	bcf	3,6	;RP1=0, select bank1
  8831     1514  1511               	bsf	17,2	;volatile
  8832     1515                     l300:	
  8833                           ;i2c.c: 37:     while(PIR1bits.SSPIF == 0);
  8834                           
  8835     1515  1283               	bcf	3,5	;RP0=0, select bank0
  8836     1516  1D8C               	btfss	12,3	;volatile
  8837     1517  2D19               	goto	u1971
  8838     1518  2D1A               	goto	u1970
  8839     1519                     u1971:
  8840     1519  2D15               	goto	l300
  8841     151A                     u1970:
  8842     151A                     l302:
  8843                           
  8844                           ;i2c.c: 38:     PIR1bits.SSPIF = 0;
  8845     151A  118C               	bcf	12,3	;volatile
  8846     151B                     l303:
  8847     151B  0008               	return
  8848     151C                     __end_of_I2C_Stop:
  8849                           
  8850                           	psect	text46
  8851     1508                     __ptext46:	
  8852 ;; *************** function _I2C_Start *****************
  8853 ;; Defined at:
  8854 ;;		line 27 in file "i2c.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		None
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8868 ;;      Params:         0       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0
  8871 ;;      Totals:         0       0       0       0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_Read
  8878 ;;		_Set_sec
  8879 ;;		_Set_min
  8880 ;;		_Set_hour
  8881 ;;		_Set_day
  8882 ;;		_Set_month
  8883 ;;		_Set_year
  8884 ;;		_AHT10_Init
  8885 ;;		_AHT10_Trigger
  8886 ;;		_AHT10_Read
  8887 ;;		_AHT10_Soft_Reset
  8888 ;;		_Set_day_week
  8889 ;;		_Slave1_Total
  8890 ;;		_Slave1_Red
  8891 ;;		_Slave1_Green
  8892 ;;		_Slave1_Blue
  8893 ;;		_Slave1_Overheat
  8894 ;;		_Slave2
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898     1508                     _I2C_Start:	
  8899                           ;psect for function _I2C_Start
  8900                           
  8901     1508                     l2162:	
  8902                           ;incstack = 0
  8903                           ; Regs used in _I2C_Start: []
  8904                           
  8905                           
  8906                           ;i2c.c: 29:     SSPCON2bits.SEN = 1;
  8907     1508  1683               	bsf	3,5	;RP0=1, select bank1
  8908     1509  1303               	bcf	3,6	;RP1=0, select bank1
  8909     150A  1411               	bsf	17,0	;volatile
  8910     150B                     l294:	
  8911                           ;i2c.c: 30:     while(PIR1bits.SSPIF == 0);
  8912                           
  8913     150B  1283               	bcf	3,5	;RP0=0, select bank0
  8914     150C  1D8C               	btfss	12,3	;volatile
  8915     150D  2D0F               	goto	u1921
  8916     150E  2D10               	goto	u1920
  8917     150F                     u1921:
  8918     150F  2D0B               	goto	l294
  8919     1510                     u1920:
  8920     1510                     l296:
  8921                           
  8922                           ;i2c.c: 31:     PIR1bits.SSPIF = 0;
  8923     1510  118C               	bcf	12,3	;volatile
  8924     1511                     l297:
  8925     1511  0008               	return
  8926     1512                     __end_of_I2C_Start:
  8927     007E                     btemp	set	126	;btemp
  8928     007E                     wtemp0	set	126
  8929                           
  8930                           	psect	idloc
  8931                           
  8932                           ;Config register IDLOC0 @ 0x2000
  8933                           ;	unspecified, using default values
  8934     2000                     	org	8192
  8935     2000  3FFF               	dw	16383
  8936                           
  8937                           ;Config register IDLOC1 @ 0x2001
  8938                           ;	unspecified, using default values
  8939     2001                     	org	8193
  8940     2001  3FFF               	dw	16383
  8941                           
  8942                           ;Config register IDLOC2 @ 0x2002
  8943                           ;	unspecified, using default values
  8944     2002                     	org	8194
  8945     2002  3FFF               	dw	16383
  8946                           
  8947                           ;Config register IDLOC3 @ 0x2003
  8948                           ;	unspecified, using default values
  8949     2003                     	org	8195
  8950     2003  3FFF               	dw	16383
  8951                           
  8952                           	psect	config
  8953                           
  8954                           ;Config register CONFIG1 @ 0x2007
  8955                           ;	Oscillator Selection bits
  8956                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8957                           ;	Watchdog Timer Enable bit
  8958                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8959                           ;	Power-up Timer Enable bit
  8960                           ;	PWRTE = OFF, PWRT disabled
  8961                           ;	RE3/MCLR pin function select bit
  8962                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8963                           ;	Code Protection bit
  8964                           ;	CP = OFF, Program memory code protection is disabled
  8965                           ;	Data Code Protection bit
  8966                           ;	CPD = OFF, Data memory code protection is disabled
  8967                           ;	Brown Out Reset Selection bits
  8968                           ;	BOREN = OFF, BOR disabled
  8969                           ;	Internal External Switchover bit
  8970                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8971                           ;	Fail-Safe Clock Monitor Enabled bit
  8972                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8973                           ;	Low Voltage Programming Enable bit
  8974                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8975                           ;	In-Circuit Debugger Mode bit
  8976                           ;	DEBUG = 0x1, unprogramme  8977     2007                     	org	8199
  8978     2007  20D4               	dw	8404
  8979                           
  8980                           ;Config register CONFIG2 @ 0x2008
  8981                           ;	Brown-out Reset Selection bit
  8982                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8983                           ;	Flash Program Memory Self Write Enable bits
  8984                           ;	WRT = OFF, Write protection off
  8985     2008                     	org	8200
  8986     2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     63      80
    BANK1            80      0      69
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_4(CODE[18]), STR_3(CODE[15]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), STR_1(CODE[3]), 

    Read_Fecha@y	PTR unsigned char  size(1) Largest target is 1
		 -> ano(BANK0[1]), 

    Read_Fecha@mo	PTR unsigned char  size(1) Largest target is 1
		 -> mes(BANK0[1]), 

    Read_Fecha@d	PTR unsigned char  size(1) Largest target is 1
		 -> dia(BANK0[1]), 

    Read_Time@h	PTR unsigned char  size(1) Largest target is 1
		 -> horas(BANK0[1]), 

    Read_Time@m	PTR unsigned char  size(1) Largest target is 1
		 -> minutos(BANK0[1]), 

    Read_Time@s	PTR unsigned char  size(1) Largest target is 1
		 -> segundos(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->___flmul
    _main->___lldiv
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Init_Master
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flmul->__Umul8_16
    ___fldiv->___flmul
    ___awmod->___awdiv
    _Set_year->_Dec_to_Bcd
    _Set_sec->_Dec_to_Bcd
    _Set_month->_Dec_to_Bcd
    _Set_min->_Dec_to_Bcd
    _Set_hour->_Dec_to_Bcd
    _Set_day->_Dec_to_Bcd
    _Read_Time->_Bcd_to_Dec
    _Read_Fecha->_Bcd_to_Dec
    _Read->_I2C_Write
    _Bcd_to_Dec->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _AHT10_Trigger->_I2C_Write
    _AHT10_Soft_Reset->_I2C_Write
    _AHT10_Read->___lmul
    ___xxtofl->___lmul
    _AHT10_Init->_I2C_Write

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _AHT10_Read->___xxtofl

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   13360
                                             57 BANK0      6     6      0
                         _AHT10_Init
                         _AHT10_Read
                   _AHT10_Soft_Reset
                      _AHT10_Trigger
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _Read_Fecha
                          _Read_Time
                            _Set_day
                           _Set_hour
                            _Set_min
                          _Set_month
                            _Set_sec
                           _Set_year
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
                            ___llmod
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    1992
                                              0 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      66
                    _I2C_Init_Master
 ---------------------------------------------------------------------------------
 (2) _I2C_Init_Master                                      1     1      0      66
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     615
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             47 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             21 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Set_year                                             1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_sec                                              1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_month                                            1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_min                                              1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_hour                                             1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Set_day                                              1     1      0     187
                                              2 COMMON     1     1      0
                         _Dec_to_Bcd
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _Dec_to_Bcd                                           2     2      0     136
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            3     1      2     561
                                              8 COMMON     3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (1) _Read_Fecha                                           3     1      2     561
                                              8 COMMON     3     1      2
                         _Bcd_to_Dec
                               _Read
 ---------------------------------------------------------------------------------
 (2) _Read                                                 3     3      0      75
                                              1 COMMON     3     3      0
                           _I2C_Nack
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Dec                                           4     4      0     235
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AHT10_Trigger                                        2     2      0      29
                                              1 COMMON     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _AHT10_Soft_Reset                                     0     0      0      29
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _AHT10_Read                                           8     8      0     671
                                             14 BANK0      8     8      0
                           _I2C_Nack
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AHT10_Init                                           2     2      0      29
                                              1 COMMON     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            3     3      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AHT10_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _AHT10_Read
     _I2C_Nack
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     ___lmul
     ___xxtofl
       ___lmul (ARG)
   _AHT10_Soft_Reset
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _AHT10_Trigger
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Fecha
     _Bcd_to_Dec
       ___bmul
     _Read
       _I2C_Nack
       _I2C_Read
       _I2C_Restart
       _I2C_Start
       _I2C_Stop
       _I2C_Write
   _Read_Time
     _Bcd_to_Dec
     _Read
   _Set_day
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_hour
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_min
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_month
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_sec
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _Set_year
     _Dec_to_Bcd
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _setup
     _I2C_Init_Master
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A3      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 22 12:47:08 2023

            ___fldiv@aexp 004E              ___fldiv@bexp 004D                         pc 0002  
            ___fldiv@sign 0046            ___bmul@product 0072                _Bcd_to_Dec 159E  
            ___awdiv@sign 0076                        _th 00B1                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l201 024B  
                     l300 1515                       l204 159D                       l302 151A  
                     l303 151B                       l231 1613                       l151 15EA  
                     l320 152F                       l232 1616                       l160 17D0  
                     l321 1530                       l233 161C                       l330 0845  
                     l234 161D                       l242 15CF                       l306 151F  
                     l154 0880                       l235 1623                       l251 0A01  
                     l163 16DA                       l324 1543                       l332 084A  
                     l236 1624                       l308 1524                       l333 084C  
                     l237 162A                       l245 153D                       l309 1525  
                     l157 17FF                       l181 16FD                       l501 0B76  
                     l326 1547                       l318 152A                       l254 0B10  
                     l166 1694                       l327 154B                       l239 162B  
                     l263 0931                       l175 164E                       l431 0CC3  
                     l192 15B5                       l257 08B5                       l169 1671  
                     l178 16B7                       l195 1775                       l291 1609  
                     l189 1571                       l461 0E2C                       l294 150B  
                     l198 17A1                       l631 0AB2                       l296 1510  
                     l297 1511                       l465 170A                       l618 006A  
                     l491 1586                       l651 0BEE                       l467 1722  
                     l900 0CA8                       l661 0BEE                       l830 0F75  
                     l814 0E83                       l479 09BB                       l911 0C72  
                     l912 0C7E                       l904 0C56                       l816 0FFF  
                     l737 0975                       l658 0BD9                       l747 08EF  
                     l836 0FE7                       l860 075A                       l838 0FF5  
                     l854 07EA                       l918 155D                       l687 0A57  
                     l873 1737                       l866 07DE                       l875 1749  
                     l898 0C13                       _dec 0067                       _dia 006C  
                     _ano 006A                       _crc 0068                       _mes 006B  
                     fsr0 0004                       _uni 0066                       indf 0000  
            ___awmod@sign 0021              ___flmul@aexp 002D              ___flmul@bexp 002E  
            ___flmul@sign 0028              ___flmul@temp 0033              ___flmul@prod 002F  
              _Dec_to_Bcd 155E              ___fltol@exp1 0058                      l2200 157E  
                    l3000 0FDE                      l2202 1585                      l3002 0FE6  
                    l2210 15F6                      l2220 084E                      l3004 0FEB  
                    l3100 071D                      l3020 04B3                      l2212 15F9  
                    l2300 155C                      l2230 0864                      l2222 084E  
                    l3006 0FEF                      l3102 0726                      l3110 073A  
                    l3030 04C8                      l3022 04B4                      l3014 04A6  
                    l2214 15FF                      l2206 15EC                      l2310 1711  
                    l2320 097E                      l2400 0C0B                      l2240 087F  
                    l2232 086A                      l2224 0853                      l3008 0FF1  
                    l3112 073E                      l3104 072A                      l3040 04DE  
                    l3032 04D0                      l3024 04B9                      l3016 04AB  
                    l2216 1602                      l2208 15F0                      l2312 1718  
                    l2304 16FE                      l3200 03E6                      l2162 1508  
                    l2322 0982                      l2410 0C34                      l2402 0C1B  
                    l2170 151C                      l2234 0870                      l2226 0859  
                    l2250 155F                      l3130 078F                      l3122 075F  
                    l3114 073F                      l3106 072B                      l3050 04FA  
                    l3042 04E3                      l3034 04D5                      l3026 04BE  
                    l3018 04AF                      l2218 1607                      l2314 171E  
                    l2306 1700                      l3210 0469                      l3202 0409  
                    l2180 1512                      l2164 153F                      l2172 0842  
                    l2324 0999                      l2420 0C68                      l2412 0C3B  
                    l2244 159F                      l2236 0875                      l2228 085F  
                    l2252 1560                      l2500 16D5                      l3140 07C6  
                    l3124 0764                      l3132 0795                      l3116 0743  
                    l3108 0734                      l3060 051B                      l3052 04FF  
                    l3044 04E8                      l3036 04D9                      l3028 04C6  
                    l2340 0944                      l2332 0932                      l2308 1704  
                    l3212 0472                      l3204 042C                      l2166 1548  
                    l2174 084B                      l2326 09A2                      l2318 0976  
                    l2430 0C9B                      l2422 0C6C                      l2414 0C3F  
                    l2406 0C24                      l2190 1628                      l2182 160B  
                    l2270 15CC                      l2262 15B7                      l2246 15B4  
                    l2238 087A                      l2254 1566                      l2510 168F  
                    l2502 1673                      l3150 07E2                      l3142 07C8  
                    l3134 07A2                      l3126 0772                      l3118 0757  
                    l3070 05A5                      l3062 0528                      l3054 0504  
                    l3046 04F0                      l3038 04DD                      l2350 0964  
                    l2342 0948                      l2334 0934                      l3214 047A  
                    l3206 0442                      l2328 09B3                      l2432 0C9F  
                    l2424 0C76                      l2416 0C4D                      l2408 0C27  
                    l2600 0102                      l2184 160F                      l2264 15BA  
                    l2280 089C                      l2272 0882                      l2192 1573  
                    l2256 156D                      l2520 166C                      l2512 1650  
                    l2504 1678                      l3144 07D4                      l3136 07AD  
                    l3128 0776                      l3080 0603                      l3072 05C1  
                    l3064 0543                      l3048 04F2                      l2440 15DE  
                    l2352 096B                      l2344 094C                      l2336 093A  
                    l2360 08BC                      l3216 0499                      l3208 044A  
                    l3160 0272                      l2178 1526                      l2434 0CA0  
                    l2426 0C80                      l2418 0C5D                      l2610 01D1  
                    l2602 0123                      l2186 161A                      l2266 15C0  
                    l2450 0AB3                      l2290 08B2                      l2282 08A1  
                    l2274 0888                      l2194 1574                      l2258 1570  
                    l2530 1649                      l2522 162D                      l2514 1655  
                    l2506 167E                      l3146 07D8                      l3138 07BC  
                    l3090 068D                      l3082 0620                      l3074 05CA  
                    l3066 055F                      l3058 050D                      l2442 15E1  
                    l2346 095D                      l2338 093D                      l2354 0971  
                    l2370 08D8                      l2362 08BF                      l3170 0290  
                    l3162 0278                      l3154 024C                      l2428 0C96  
                    l2604 0128                      l2188 1621                      l2268 15C3  
                    l2460 0B0B                      l2452 0AB9                      l2284 08A4  
                    l2276 088B                      l2196 1578                      l2524 1632  
                    l2516 165B                      l2508 1684                      l2540 16B2  
                    l2532 1696                      l2380 1724                      l3148 07D9  
                    l3092 06B8                      l3084 0637                      l3076 05D8  
                    l3068 0589                      l2444 15E2                      l2348 0963  
                    l2372 08DE                      l2364 08C6                      l2292 154D  
                    l2620 0CBF                      l2612 0CAC                      l3180 02B3  
                    l3172 0295                      l3164 027E                      l3156 0263  
                    l2606 012D                      l2462 1531                      l2454 0AC2  
                    l2470 09D2                      l2286 08AA                      l2278 0899  
                    l2198 157C                      l2526 1638                      l2518 1661  
                    l2534 169B                      l2550 16F8                      l2542 16DC  
                    l2390 1745                      l2382 1726                      l3094 06DE  
                    l3086 0654                      l3078 05F5                      l2710 0B11  
                    l2446 15E3                      l2438 15D0                      l2374 08E5  
                    l2366 08CA                      l2358 08B6                      l2294 154E  
                    l2630 0CEB                      l2622 0CC4                      l2614 0CAF  
                    l3190 035E                      l3182 02B8                      l3174 029F  
                    l3166 0284                      l3158 026C                      l2560 1761  
                    l2552 174A                      l2608 0164                      l2456 0AD1  
                    l2480 09F5                      l2472 09D8                      l2464 09BD  
                    l2288 08AD                      l2528 163E                      l2536 16A1  
                    l2544 16E1                      l2800 0A87                      l2384 172D  
                    l3096 0706                      l3088 067F                      l2720 0B3E  
                    l2712 0B21                      l2448 15E4                      l2368 08CE  
                    l2376 08EB                      l2296 1554                      l2640 0D2C  
                    l2632 0CEF                      l2616 0CB5                      l3192 038E  
                    l3184 02C0                      l3176 02A9                      l3168 028A  
                    l2562 176C                      l2554 174F                      l2394 0BF2  
                    l2570 158C                      l2458 0AD7                      l2482 09FB  
                    l2466 09C2                      l2474 09DF                      l2490 0915  
                    l2538 16A7                      l2546 16E7                      l2810 0AA9  
                    l2802 0A91                      l2386 1731                      l3098 070F  
                    l2722 0B50                      l2714 0B24                      l2730 0B6E  
                    l2298 155A                      l2650 0D59                      l2634 0D04  
                    l3346 0CD6                      l2626 0CC8                      l2618 0CBA  
                    l3194 03A7                      l3186 0315                      l3178 02AE  
                    l2556 1755                      l2396 0BF7                      l2572 1592  
                    l2580 1787                      l2476 09E5                      l2468 09CF  
                    l2484 08F0                      l2564 17D2                      l2492 16B9  
                    l2548 16ED                      l2740 000E                      l2812 0AAE  
                    l2804 0A97                      l2900 0E66                      l2388 1740  
                    l2724 0B5E                      l2716 0B31                      l2660 0D77  
                    l3348 0D45                      l2636 0D17                      l2644 0D31  
                    l2628 0CDB                      l3196 03C7                      l3188 032E  
                    l2558 175B                      l2398 0BFB                      l2590 0076  
                    l2582 178D                      l2574 1776                      l2478 09F2  
                    l2486 08F3                      l2566 17A3                      l2494 16BE  
                    l2750 001F                      l2742 0010                      l2734 0004  
                    l2806 0A9E                      l2902 0E6B                      l2910 0E7B  
                    l2830 0BA9                      l2822 0B8B                      l2726 0B5F  
                    l2718 0B35                      l2670 0DA0                      l2662 0D81  
                    l2646 0D4D                      l2638 0D1B                      l3198 03D0  
                    l2592 007E                      l2568 1587                      l2584 1798  
                    l2576 177B                      l2488 090F                      l2496 16C4  
                    l2760 0037                      l2752 0025                      l2744 0014  
                    l2736 0005                      l2808 0AA4                      l2912 0E8B  
                    l2920 0EA4                      l2904 0E70                      l2832 0BAD  
                    l2840 0BC7                      l2824 0B9E                      l2816 0B77  
                    l2728 0B68                      l2680 0DC2                      l2672 0DA6  
                    l2664 0D8C                      l2656 0D5B                      l2648 0D55  
                    l2594 009F                      l2586 006B                      l2578 1781  
                    l2498 16CA                      l2762 0048                      l2754 0028  
                    l2770 005C                      l2746 0019                      l2738 0009  
                    l2930 0ECC                      l2922 0EA9                      l2914 0E97  
                    l2906 0E78                      l2850 0BE3                      l2826 0B9F  
                    l2818 0B82                      l2690 0E06                      l2682 0DC7  
                    l2674 0DAB                      l2666 0D98                      l2596 00C0  
                    l2588 0070                      l2772 0061                      l2764 004E  
                    l2756 002F                      l2748 001D                      l2780 0A5B  
                    l2940 0EF5                      l2932 0ED4                      l2916 0E9B  
                    l2908 0E79                      l2828 0BA7                      l2860 0A20  
                    l2852 0A02                      l2692 0E0B                      l2684 0DCB  
                    l2676 0DAF                      l2668 0D9C                      l2598 00E1  
                    l2774 0066                      l2766 004F                      l2758 0033  
                    l2790 0A6F                      l2782 0A5F                      l2950 0F16  
                    l2942 0EF9                      l2934 0EDC                      l2926 0EB2  
                    l2846 0BCE                      l2838 0BB5                      l2862 0A32  
                    l2854 0A0C                      l2694 0E0F                      l2686 0DD7  
                    l2678 0DBC                      l2768 0056                      l2792 0A75  
                    l2784 0A64                      l2960 0F38                      l2952 0F24  
                    l2944 0EFA                      l2936 0EDE                      l2928 0EC4  
                    l2880 0E3B                      l2872 0E2D                      l2848 0BDE  
                    l2864 0A40                      l2856 0A0F                      l2688 0DDA  
                    l2696 0E18                      l2794 0A78                      l2786 0A66  
                    l2778 0A58                      l2962 0F41                      l2970 0F55  
                    l2938 0EE3                      l2946 0F03                      l2954 0F28  
                    l2882 0E40                      l2890 0E50                      l2874 0E32  
                    l2866 0A49                      l2858 0A1C                      l2698 0E28  
                    l2796 0A7F                      l2788 0A6A                      l2972 0F59  
                    l2964 0F45                      l2956 0F2E                      l2948 0F15  
                    l2892 0E58                      l2884 0E45                      l2876 0E36  
                    l2868 0A4F                      l2798 0A83                      l2990 0FAA  
                    l2982 0F7A                      l2974 0F5A                      l2966 0F46  
                    l2958 0F36                      l2894 0E5D                      l2886 0E4D  
                    l2878 0E3A                      l2984 0F7F                      l2992 0FB0  
                    l2976 0F5E                      l2968 0F4F                      l2896 0E61  
                    l2888 0E4E                      l2994 0FBD                      l2986 0F8D  
                    l2978 0F72                      l2898 0E65                      l2996 0FCB  
                    l2988 0F91                      l2998 0FDA                      STR_1 083F  
                    STR_2 083B                      STR_3 082C                      STR_4 081A  
                    u2000 1621                      u2001 1620                      u2010 1628  
                    u2011 1627                      u2020 1578                      u2100 155A  
                    u2021 1577                      u2101 1559                      u2030 1585  
                    u2110 1704                      u2031 1584                      u2111 1703  
                    u3000 0B82                      u2040 15FF                      u2200 093A  
                    u3001 0B81                      u2041 15FE                      u2201 0939  
                    u3010 0B99                      u2050 1607                      u2051 1606  
                    u3020 0BAD                      u3100 0A0C                      u2220 094C  
                    u2300 08D8                      u2140 171E                      u3021 0BAC  
                    u3101 0A0B                      u2221 094B                      u2301 08D7  
                    u2141 171D                      u2125 170B                      u2150 0982  
                    u2070 1566                      u3030 0BB4                      u2151 0981  
                    u2071 1565                      u3031 0BB3                      u3015 0B94  
                    u2215 093E                      u2135 1712                      u2400 0C3A  
                    u3200 0E6B                      u3120 0A20                      u2240 095D  
                    u2320 08EB                      u2161 098B                      u2401 0C39  
                    u2065 15A7                      u3201 0E6A                      u3121 0A1F  
                    u2241 095C                      u2321 08EA                      u2305 08D4  
                    u2162 0992                      u3210 0E70                      u2330 1731  
                    u3050 0BC6                      u3130 0A32                      u2090 1554  
                    u2163 0999                      u3211 0E6F                      u2331 1730  
                    u3051 0BC5                      u3131 0A31                      u3115 0A11  
                    u2235 094D                      u2315 08DF                      u2091 1553  
                    u2420 0C5C                      u2500 09C2                      u3300 0F2E  
                    u3220 0E8B                      u3060 0BCD                      u2260 0971  
                    u2421 0C5B                      u2501 09C1                      u2085 088E  
                    u3301 0F2D                      u3221 0E8A                      u3061 0BCC  
                    u3045 0BB6                      u2261 0970                      u2245 0959  
                    u2190 09B3                      u3310 0F36                      u3230 0EA9  
                    u2350 1745                      u3150 0A4F                      u2270 08BC  
                    u2191 09B2                      u2175 099B                      u2415 0C4E  
                    u3311 0F35                      u3231 0EA8                      u2351 1744  
                    u3151 0A4E                      u3135 0A2E                      u2255 0965  
                    u2271 08BB                      u2440 0C6C                      u2360 0BF7  
                    u2600 021A                      u2520 09E5                      u3400 0F91  
                    u3240 0EE3                      u3160 0E3A                      u3080 0BDE  
                    u2185 09A3                      u2441 0C6B                      u2361 0BF6  
                    u2601 021B                      u2521 09E4                      u3401 0F90  
                    u3241 0EE2                      u3161 0E39                      u2345 1738  
                    u3081 0BDD                      u3145 0A41                      u2450 0C72  
                    u2370 0BFB                      u2602 0220                      u3410 0FA0  
                    u3330 0F45                      u3170 0E40                      u3090 0BE3  
                    u2290 08CE                      u2610 0CB5                      u2451 0C71  
                    u2435 0C61                      u2371 0BFA                      u2603 0221  
                    u2515 09C8                      u3331 0F44                      u3171 0E3F  
                    u3091 0BE2                      u3075 0BD0                      u2291 08CD  
                    u2611 0CB4                      u2460 0C76                      u2380 0C1B  
                    u2540 08FD                      u3420 0FBD                      u3180 0E45  
                    u3500 04E8                      u2700 0DC2                      u2620 0CEB  
                    u2461 0C75                      u2381 0C1A                      u3421 0FBC  
                    u3325 0F3A                      u3181 0E44                      u3501 04E7  
                    u2285 08C0                      u2701 0DC1                      u2621 0CEA  
                    u2470 0C8B                      u2550 091F                      u3430 0FDA  
                    u3350 0F59                      u3270 0EF9                      u3190 0E65  
                    u3510 04FF                      u2710 0DD7                      u2630 0D2B  
                    u2535 09EB                      u3431 0FD9                      u3415 0F9B  
                    u3351 0F58                      u3271 0EF8                      u3255 0EE5  
                    u3191 0E64                      u3511 04FE                      u2711 0DD6  
                    u2631 0D2A                      u1920 1510                      u2480 0C9B  
                    u2560 0931                      u3440 0FEF                      u3360 0F5E  
                    u3520 0504                      u2800 0B6E                      u2720 0E18  
                    u2640 0D76                      u1921 150F                      u2481 0C9A  
                    u2561 0930                      u3441 0FEE                      u3425 0FB9  
                    u3361 0F5D                      u3345 0F48                      u3265 0EEE  
                    u3521 0503                      u2801 0B6D                      u2721 0E17  
                    u2641 0D75                      u1930 1547                      u2490 0C9F  
                    u2570 014B                      u2810 0009                      u3370 0F72  
                    u3290 0F15                      u3450 04B3                      u2730 0E28  
                    u2650 0D81                      u1931 1546                      u2491 0C9E  
                    u2475 0C86                      u2395 0C2C                      u2811 0008  
                    u3435 0FD6                      u3371 0F71                      u3291 0F14  
                    u3611 0646                      u3531 0551                      u3451 04B2  
                    u2731 0E27                      u2651 0D80                      u2580 0180  
                    u1940 1524                      u2900 0061                      u2820 0014  
                    u3380 0F79                      u3700 072A                      u3612 064D  
                    u3532 0558                      u3460 04B9                      u2740 0B21  
                    u2660 0D8C                      u1941 1523                      u2901 0060  
                    u2821 0013                      u3381 0F78                      u3285 0EFC  
                    u3701 0729                      u3621 0671                      u3613 0654  
                    u3605 0622                      u3541 056D                      u3533 055F  
                    u3461 04B8                      u2741 0B20                      u2661 0D8B  
                    u2645 0D72                      u1950 084A                      u2590 0201  
                    u2830 0025                      u2910 0A5F                      u3390 0F7F  
                    u3622 0678                      u3542 0574                      u3470 04BE  
                    u2670 0DA0                      u1951 0849                      u2575 0146  
                    u2831 0024                      u2911 0A5E                      u3391 0F7E  
                    u3295 0F11                      u3631 069C                      u3623 067F  
                    u3551 0597                      u3543 057B                      u3471 04BD  
                    u2671 0D9F                      u1960 152F                      u2920 0A6A  
                    u3800 07BC                      u3720 073E                      u3640 06C4  
                    u3632 06A3                      u3552 059E                      u3480 04DD  
                    u2760 0B35                      u2680 0DA6                      u1961 152E  
                    u2585 017B                      u2921 0A69                      u3801 07BB  
                    u3721 073D                      u3633 06AA                      u3561 05B3  
                    u3553 05A5                      u3481 04DC                      u2761 0B34  
                    u2681 0DA5                      u2665 0D88                      u1970 151A  
                    u2850 0037                      u2930 0A75                      u3810 07D8  
                    u3730 0743                      u3562 05BA                      u3490 04E3  
                    u2690 0DBB                      u1971 1519                      u2595 01FC  
                    u2851 0036                      u2931 0A74                      u3811 07D7  
                    u3731 0742                      u3715 072D                      u3651 06D0  
                    u3563 05C1                      u3491 04E2                      u2755 0B26  
                    u2691 0DBA                      u1980 160F                      u3740 0757  
                    u3660 06EC                      u3652 06D7                      u2780 0B50  
                    u1981 160E                      u2845 0029                      u3805 07B8  
                    u3741 0756                      u3653 06DE                      u3645 06BF  
                    u3581 05E7                      u2781 0B4F                      u1990 161A  
                    u2870 0048                      u2950 0A87                      u3750 075E  
                    u3582 05EE                      u1991 1619                      u2871 0047  
                    u2951 0A86                      u3751 075D                      u3671 06F8  
                    u3591 0612                      u3583 05F5                      u3575 05C3  
                    u2775 0B37                      u2960 0A91                      u3760 0764  
                    u3672 06FF                      u3592 0619                      u2865 0038  
                    u2961 0A90                      u2945 0A79                      u3761 0763  
                    u3673 0706                      u3665 06E7                      u3593 0620  
                    u2785 0B4C                      u2890 005C                      u3770 0776  
                    u3907 179C                      u3827 087C                      u2891 005B  
                    u2875 0044                      u3771 0775                      u2795 0B60  
                    u2980 0AA4                      u3780 0785                      u3917 1770  
                    u3837 089E                      u2885 0050                      u2981 0AA3  
                    u2965 0A8D                      u3685 0708                      u2990 0AA9  
                    u3790 07A2                      u3847 08AF                      u2991 0AA8  
                    u2975 0A98                      u3791 07A1                      u3695 071F  
                    u3857 0ABD                      u3785 0780                      u3867 0ACC  
                    u3795 079E                      u3877 0AD9                      u3887 0B0D  
                    u3897 15C7                      _Read 084D                      _dec2 00D0  
                    _deci 0065         ?_Lcd_Write_String 0075                      _cent 0064  
                    _hum1 00B9                      _hum2 00B5                      _cont 00C9  
                    _main 024C          __end_of_I2C_Nack 1531                      _uni2 00CF  
                    _tmp1 00C1                      _tmp2 00BD                      _tmp3 00AD  
                    _temp 00A0          __end_of_I2C_Read 084D                      btemp 007E  
        __end_of_I2C_Stop 151C                      start 0000        ??_Lcd_Write_String 0077  
        ?_I2C_Init_Master 0070           ___fldiv@new_exp 0047           __end_of_Lcd_Cmd 15D0  
              Read_Time@h 0079                Read_Time@m 0078                Read_Time@s 007A  
       ___bmul@multiplier 0073               Read@address 0072           __end_of_Set_day 164F  
         __end_of_Set_min 1695           __end_of_Set_sec 16DB                     ?_Read 0070  
           ___fltol@sign1 0057                     ?_main 0070           __end_of___fldiv 1000  
         __end_of___awdiv 006B           __end_of___awmod 0AB3           __end_of___flmul 07EB  
         __end_of___fltol 0BEF                     _ANSEL 0188           __end_of___lldiv 0B77  
         ___awdiv@divisor 0070           __end_of___llmod 0A58           __end_of___lwdiv 0976  
         __end_of___lwmod 08F0           ___awdiv@counter 0075                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088       ___lmul@multiplicand 0074  
                   _deci2 00CE                     _cent2 00CD           __end_of_dpowers 081A  
                   _contb 00CA                     _contg 00CB                     _contr 00CC  
                   _horas 006D           __end_of_isdigit 155E                     _setup 15D0  
             Read_Fecha@d 007A               Read_Fecha@y 0079         __end_of_I2C_Start 1512  
       __end_of_I2C_Write 154C                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0E2D          __end_of_Lcd_Init 0B11  
        __end_of_Lcd_Port 162C           __initialization 07EB              __end_of_Read 0881  
              _Read_Fecha 17A2              __end_of_main 04A6               ?_Bcd_to_Dec 0070  
           _AHT10_Trigger 1776                    ??_Read 0071                    ??_main 0059  
        __end_of_Set_hour 1672          __end_of_Set_year 16FE                Set_day@day 0072  
            ??_AHT10_Init 0071              ??_AHT10_Read 002E          _AHT10_Soft_Reset 1587  
             ?_Dec_to_Bcd 0070          ___llmod@dividend 0024                Set_min@min 0072  
        ___awdiv@dividend 0072                Set_sec@sec 0072                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _SSPADD 0093  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 0CA9  
               ??_Set_day 0072                 ??_Set_min 0072                 ??_Set_sec 0072  
                  ___bmul 1572                    ___lmul 0976                    ___wmul 16FE  
               ??___fldiv 003D                 ??___awdiv 0074                 ??___awmod 007D  
               ??___flmul 0079                 ??___fltol 0053                 ??___lldiv 0078  
      __end_of_AHT10_Init 1776        __end_of_AHT10_Read 024C                 ??___llmod 0028  
               ??___lwdiv 0074                 ??___lwmod 007C                    _buffer 00D1  
          ?_AHT10_Trigger 0070                    _estado 0069          ___awdiv@quotient 0077  
         ___awmod@divisor 0079           ___awmod@counter 0020              Read_Fecha@mo 0078  
    Dec_to_Bcd@bcd_number 0071                 ?_I2C_Nack 0070                 ??_isdigit 0070  
               ?_I2C_Read 0070                 ?_I2C_Stop 0070                 ??_sprintf 0027  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077              ___xxtofl@arg 002A              ___xxtofl@exp 0029  
            ___xxtofl@val 0020      Dec_to_Bcd@dec_number 0070   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 153E                ___fltol@f1 004F       ___bmul@multiplicand 0070  
             ?_Read_Fecha 0078            __pcstackCOMMON 0070             __end_of_setup 15EB  
       __end_of_Read_Time 1800            _Lcd_Set_Cursor 09BC                ??_I2C_Nack 0070  
              ??_I2C_Read 0070                ??_I2C_Stop 0070                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070              sprintf@width 0030                   ??_setup 0071  
              __pbssBANK0 005F                __pbssBANK1 00A0         __end_of_Set_month 16B8  
       __end_of__Umul8_16 174A                 ?_Set_hour 0070                __pmaintext 024C  
               ?_Set_year 0070                   ?___bmul 0070           ??_AHT10_Trigger 0071  
                 ?___lmul 0070                   ?___wmul 0070            ___lmul@product 0079  
  __end_of_Lcd_Set_Cursor 0A02             ??_I2C_Restart 0070                 ?___xxtofl 0020  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0800            _Lcd_Write_Char 0881  
                 _Lcd_Cmd 15B6                 _I2C_Start 1508                 _I2C_Write 153E  
                 _Set_day 162C                ??_Set_hour 0072                   _Set_min 1672  
                 _Set_sec 16B8                ??_Set_year 0072  __end_of_AHT10_Soft_Reset 159E  
                 ___fldiv 0E2D                   ___awdiv 0004                   ___awmod 0A58  
                 ___flmul 04A6                   ___fltol 0B77                   ___lldiv 0B11  
                 ___llmod 0A02                   ___lwdiv 0932                   ___lwmod 08B6  
            ??_Bcd_to_Dec 0074           ?_Lcd_Set_Cursor 0074                   __ptext1 0CA9  
                 __ptext2 154C                   __ptext3 16FE                   __ptext4 08B6  
                 __ptext5 0932                   __ptext6 15D0                   __ptext7 15EB  
                 __ptext8 0A02                   __ptext9 0B11                   _dpowers 0810  
                 _isdigit 154C                ??___xxtofl 0024                   _humedad 00A5  
        ___awmod@dividend 007B                   _minutos 006E              ??_Dec_to_Bcd 0070  
                 _sprintf 0CA9                   clrloop0 1501       __end_of_I2C_Restart 1526  
  __end_of_Lcd_Write_Char 08B6      end_of_initialization 07FC        __end_of_Bcd_to_Dec 15B6  
              ?_I2C_Start 0070                ?_I2C_Write 0070             Bcd_to_Dec@bcd 0077  
           Bcd_to_Dec@dec 0076           ___lldiv@divisor 0070           ___lldiv@counter 007D  
               Lcd_Port@a 0070        __end_of_Dec_to_Bcd 1572                 _PORTBbits 0006  
               _PORTDbits 0008             ___xxtofl@sign 0028                 _TRISCbits 0087  
             ___fldiv@grs 0049               ___fldiv@rem 0042           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A               ___flmul@grs 0029  
            ??_Read_Fecha 007A                 _Lcd_Clear 1531            __end_of___bmul 1587  
          __end_of___lmul 09BC            __end_of___wmul 1723          _Lcd_Write_String 08F0  
             _I2C_Restart 151C       start_initialization 07EB         ??_I2C_Init_Master 0070  
               _Read_Time 17D1     I2C_Init_Master@sp_i2c 0070        __end_of_Read_Fecha 17D1  
         ___llmod@divisor 0020               ??_I2C_Start 0070           ___llmod@counter 0029  
             ??_I2C_Write 0070                 _Set_month 1695                ?_Lcd_Clear 0070  
                ??___bmul 0071                  ??___lmul 0078                  ??___wmul 0074  
               __Umul8_16 1723           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___fldiv@a 0035                 ___fldiv@b 0039                 ___flmul@a 0024  
               ___flmul@b 0020                 ___latbits 0002             __pcstackBANK0 0020  
              ?_Read_Time 0078                  ?_Lcd_Cmd 0070               sprintf@flag 002B  
             sprintf@prec 002E          ___lwdiv@dividend 0072                  ?_Set_day 0070  
                ?_Set_min 0070                  ?_Set_sec 0070                ?_Set_month 0070  
        ??_Lcd_Set_Cursor 0075         ?_AHT10_Soft_Reset 0070                  ?___fldiv 0035  
                ?___awdiv 0070                  ?___awmod 0079                  ?___flmul 0020  
                ?___fltol 004F                  ?___lldiv 0070                  ?___llmod 0020  
              ?__Umul8_16 0070                  ?___lwdiv 0070                  ?___lwmod 0078  
   __end_of_AHT10_Trigger 17A2        ??_AHT10_Soft_Reset 0071                 __pstrings 0800  
               _distancia 0063                  _I2C_Nack 1526                  ?_isdigit 0070  
                _I2C_Read 0842                  _I2C_Stop 1512          ___lwdiv@quotient 0075  
                ?_sprintf 0020              Set_hour@hour 0072            ___wmul@product 0074  
               clear_ram0 1500                  Lcd_Cmd@a 0073                  _PIR1bits 000C  
             ??_Lcd_Clear 0074              Set_year@year 0072               __stringbase 080F  
       ___wmul@multiplier 0070                  Read@dato 0073          ??_Lcd_Write_Char 0071  
              _AHT10_Init 174A                _AHT10_Read 006B                  _Lcd_Init 0AB3  
             ??_Read_Time 007A                  _Lcd_Port 160A         ___lmul@multiplier 0070  
__end_of_Lcd_Write_String 0932               ??_Set_month 0072                  _Set_hour 164F  
                _Set_year 16DB           _I2C_Init_Master 15EB             I2C_Write@data 0070  
             ??__Umul8_16 0072        __end_of__stringtab 0810               _isdigit$944 0070  
            ?_I2C_Restart 0070                sprintf@val 002C                  ___xxtofl 0BEF  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0B77  
                __ptext11 04A6                  __ptext20 164F                  __ptext12 1723  
                __ptext21 162C                  __ptext13 0E2D                  __ptext30 0881  
                __ptext22 155E                  __ptext14 0A58                  __ptext31 09BC  
                __ptext23 17D1                  __ptext15 0004                  __ptext40 0976  
                __ptext32 0AB3                  __ptext24 17A2                  __ptext16 16DB  
                __ptext41 0842                  __ptext33 1531                  __ptext25 084D  
                __ptext17 16B8                  __ptext42 1526                  __ptext34 15B6  
                __ptext26 151C                  __ptext18 1695                  __ptext43 174A  
                __ptext35 160A                  __ptext27 159E                  __ptext19 1672  
                __ptext44 153E                  __ptext36 1776                  __ptext28 1572  
                __ptext45 1512                  __ptext37 1587                  __ptext29 08F0  
                __ptext46 1508                  __ptext38 006B                  __ptext39 0BEF  
                _segundos 006F                  _temporal 00C5               ?_AHT10_Init 0070  
             ?_AHT10_Read 0070                  isdigit@c 0071        Lcd_Write_Char@temp 0072  
            _temperatura1 005F                 sprintf@ap 002A                 sprintf@sp 002F  
        ___lwmod@dividend 007A          ___lldiv@dividend 0074   __end_of_I2C_Init_Master 160A  
          Set_month@month 0072                 stringcode 080A                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079    __Umul8_16@multiplicand 0070               _temperatura 00A9  
                sprintf@c 0032                  sprintf@f 0020          ___lldiv@quotient 0079  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 080A  
                stringtab 0800               _SSPCON2bits 0091      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
